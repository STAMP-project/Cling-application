import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest9 {

    public static boolean debug = false;

    @Test
    public void test01801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01801");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = enumType29.getOwnPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str36 = jSDocInfo35.getDescription();
        enumType29.setPropertyJSDocInfo("hi!", jSDocInfo35);
        boolean boolean38 = jSDocInfo35.isImplicitCast();
        boolean boolean39 = jSDocInfo35.isDeprecated();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSDocInfo33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test01802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01802");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) 'a', node5, node11, node19);
        boolean boolean21 = node20.isThis();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test01803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01803");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable11 = jSTypeRegistry9.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean12 = jSTypeRegistry9.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable17 = jSTypeRegistry15.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean18 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable23 = jSTypeRegistry21.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean24 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = jSTypeRegistry21.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList26 = com.google.common.collect.ImmutableList.of(jSTypeRegistry2, jSTypeRegistry9, jSTypeRegistry15, jSTypeRegistry21);
        jSTypeRegistry21.incrementGeneration();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable32 = jSTypeRegistry30.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean33 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        boolean boolean34 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node43 = node40.useSourceInfoIfMissingFromForTree(node42);
        boolean boolean44 = node42.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType51 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.jstype.FunctionType functionType55 = jSTypeRegistry47.createFunctionTypeWithVarArgs(jSType51, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        boolean boolean56 = functionType55.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType57 = jSTypeRegistry30.createEnumType("false", node42, (com.google.javascript.rhino.jstype.JSType) functionType55);
        java.util.Set<java.lang.String> strSet58 = functionType55.getOwnPropertyNames();
        boolean boolean59 = functionType55.isInterface();
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable64 = jSTypeRegistry62.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean65 = jSTypeRegistry62.shouldTolerateUndefinedValues();
        boolean boolean66 = jSTypeRegistry62.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node72 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node74 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node75 = node72.useSourceInfoIfMissingFromForTree(node74);
        boolean boolean76 = node74.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry79 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable81 = jSTypeRegistry79.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean82 = jSTypeRegistry79.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType83 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray84 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList85 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList85, jSTypeArray84);
        com.google.javascript.rhino.jstype.FunctionType functionType87 = jSTypeRegistry79.createFunctionTypeWithVarArgs(jSType83, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList85);
        boolean boolean88 = functionType87.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType89 = jSTypeRegistry62.createEnumType("false", node74, (com.google.javascript.rhino.jstype.JSType) functionType87);
        boolean boolean91 = enumType89.isPropertyTypeDeclared("");
        boolean boolean92 = enumType89.matchesStringContext();
        java.lang.String str93 = enumType89.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType94 = enumType89.getConstructor();
        boolean boolean95 = functionType55.isEquivalentTo((com.google.javascript.rhino.jstype.JSType) enumType89);
        boolean boolean96 = functionType55.isNativeObjectType();
        com.google.javascript.rhino.jstype.JSType jSType97 = jSTypeRegistry21.createOptionalType((com.google.javascript.rhino.jstype.JSType) functionType55);
        com.google.javascript.rhino.jstype.JSType jSType99 = jSTypeRegistry21.getType("{645414739}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(errorReporter25);
        org.junit.Assert.assertNotNull(jSTypeRegistryList26);
        org.junit.Assert.assertNotNull(jSTypeIterable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(functionType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(enumType57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(jSTypeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(functionType87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(enumType89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str93 + "' != '" + "{1264108397}" + "'", str93, "{1264108397}");
        org.junit.Assert.assertNull(functionType94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(jSType97);
        org.junit.Assert.assertNull(jSType99);
    }

    @Test
    public void test01804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01804");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean1 = jSDocInfo0.hasFileOverview();
        java.util.Collection<java.lang.String> strCollection2 = jSDocInfo0.getReferences();
        java.util.Collection<java.lang.String> strCollection3 = jSDocInfo0.getReferences();
        boolean boolean4 = jSDocInfo0.hasType();
        boolean boolean5 = jSDocInfo0.isConsistentIdGenerator();
        java.util.Collection<java.lang.String> strCollection6 = jSDocInfo0.getReferences();
        boolean boolean7 = jSDocInfo0.shouldPreserveTry();
        boolean boolean8 = jSDocInfo0.containsDeclaration();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(strCollection2);
        org.junit.Assert.assertNull(strCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test01805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01805");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType69 = parameterizedType67.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.TemplateType templateType70 = parameterizedType67.toMaybeTemplateType();
        boolean boolean72 = parameterizedType67.isPropertyTypeInferred("hi!");
        com.google.javascript.rhino.jstype.JSType jSType74 = parameterizedType67.findPropertyType("{1687381779}");
        com.google.javascript.rhino.JSDocInfo jSDocInfo75 = parameterizedType67.getJSDocInfo();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = parameterizedType67.getOwnerFunction();
        boolean boolean77 = parameterizedType67.isObject();
        boolean boolean78 = parameterizedType67.isResolved();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(enumElementType69);
        org.junit.Assert.assertNull(templateType70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(jSType74);
        org.junit.Assert.assertNull(jSDocInfo75);
        org.junit.Assert.assertNull(functionType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test01806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01806");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("Unknown class name", jSTypeNative1);
        com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean9 = node8.isDefaultCase();
        node8.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId12 = node8.getInputId();
        node8.detachChildren();
        boolean boolean14 = node8.isNull();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int20 = strComparableList17.size();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean26 = node25.isDefaultCase();
        node25.setVarArgs(true);
        node25.setVarArgs(false);
        boolean boolean31 = strComparableList17.contains((java.lang.Object) node25);
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int37 = node36.getType();
        node36.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node(54, node8, node25, node36);
        com.google.javascript.rhino.Node node41 = assertionFunctionSpec2.getAssertedParam(node25);
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable53 = jSTypeRegistry51.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean54 = jSTypeRegistry51.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable59 = jSTypeRegistry57.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean60 = jSTypeRegistry57.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry63 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable65 = jSTypeRegistry63.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean66 = jSTypeRegistry63.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter67 = jSTypeRegistry63.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList68 = com.google.common.collect.ImmutableList.of(jSTypeRegistry44, jSTypeRegistry51, jSTypeRegistry57, jSTypeRegistry63);
        com.google.javascript.rhino.ErrorReporter errorReporter69 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter69, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable73 = jSTypeRegistry71.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean74 = jSTypeRegistry71.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType75 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray76 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList77 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList77, jSTypeArray76);
        com.google.javascript.rhino.jstype.FunctionType functionType79 = jSTypeRegistry71.createFunctionTypeWithVarArgs(jSType75, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList77);
        com.google.javascript.rhino.Node node80 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList77);
        com.google.javascript.rhino.Node node81 = node80.getParent();
        boolean boolean82 = node80.isFalse();
        boolean boolean83 = node80.isGetProp();
        com.google.javascript.rhino.Node node88 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean89 = node88.isDefaultCase();
        node88.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId92 = node88.getInputId();
        node88.detachChildren();
        boolean boolean94 = node88.isNot();
        boolean boolean95 = node88.isSetterDef();
        com.google.javascript.rhino.Node node96 = node80.srcref(node88);
        boolean boolean97 = node41.isEquivalentTo(node80);
        boolean boolean98 = node41.isParamList();
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(inputId12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 45 + "'", int37 == 45);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(errorReporter67);
        org.junit.Assert.assertNotNull(jSTypeRegistryList68);
        org.junit.Assert.assertNotNull(jSTypeIterable73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(jSTypeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(functionType79);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(inputId92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(node96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test01807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01807");
        java.lang.String str1 = com.google.javascript.rhino.jstype.ObjectType.createDelegateSuffix("{1571838970}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "({1571838970})" + "'", str1, "({1571838970})");
    }

    @Test
    public void test01808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01808");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo69 = null;
        parameterizedType67.setJSDocInfo(jSDocInfo69);
        com.google.javascript.rhino.jstype.JSType jSType71 = parameterizedType67.getParameterType();
        boolean boolean72 = parameterizedType67.isNoResolvedType();
        com.google.javascript.rhino.Node node74 = parameterizedType67.getPropertyNode("{1290150195}");
        com.google.javascript.rhino.jstype.UnionType unionType75 = parameterizedType67.toMaybeUnionType();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = unionType75.isNumberValueType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(jSType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNull(unionType75);
    }

    @Test
    public void test01809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01809");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        boolean boolean6 = node4.isDebugger();
        boolean boolean7 = node4.isString();
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder14 = node13.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean20 = node19.isDefaultCase();
        node19.setVarArgs(true);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node28 = new com.google.javascript.rhino.Node((int) 'a', node13, node19, node27);
        com.google.javascript.rhino.InputId inputId29 = node13.getInputId();
        com.google.javascript.rhino.Node node30 = node4.useSourceInfoFrom(node13);
        node4.addSuppression("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node40 = node37.useSourceInfoIfMissingFromForTree(node39);
        boolean boolean41 = node39.isExprResult();
        com.google.javascript.rhino.Node node42 = node39.cloneTree();
        node39.setCharno(29);
        boolean boolean45 = node39.isDebugger();
        boolean boolean46 = node39.isCall();
        com.google.javascript.rhino.Node node47 = node4.useSourceInfoFrom(node39);
        boolean boolean48 = node39.isObjectLit();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNull(inputId29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test01810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01810");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        java.util.Set<java.lang.String> strSet42 = functionType39.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair43 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType10, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.Node node44 = functionType10.getSource();
        com.google.javascript.rhino.jstype.JSType jSType46 = functionType10.getPropertyType("hi!");
        boolean boolean48 = functionType10.isPropertyTypeDeclared("{1584882754}");
        com.google.javascript.rhino.jstype.ObjectType objectType49 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType10);
        boolean boolean50 = functionType10.isDateType();
        com.google.javascript.rhino.jstype.ObjectType objectType51 = functionType10.getPrototype();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(jSType46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objectType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objectType51);
    }

    @Test
    public void test01811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01811");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        boolean boolean6 = node4.isTry();
        com.google.javascript.rhino.Node node7 = node4.getLastSibling();
        boolean boolean8 = node4.isEmpty();
        boolean boolean9 = node4.isOptionalArg();
        boolean boolean10 = node4.isOptionalArg();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test01812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01812");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 49, 0, (int) (byte) 10);
        boolean boolean5 = node3.getBooleanProp(32);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean10 = node9.isGetProp();
        boolean boolean11 = node9.isNumber();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder17 = node16.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int23 = node22.getType();
        boolean boolean24 = node22.isBlock();
        com.google.javascript.rhino.Node node27 = new com.google.javascript.rhino.Node((int) (short) 10, node9, node16, node22, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node28 = node9.detachFromParent();
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node36 = node33.useSourceInfoIfMissingFromForTree(node35);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean42 = node41.isDefaultCase();
        node41.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId45 = node41.getInputId();
        node41.detachChildren();
        com.google.javascript.rhino.Node node47 = node35.copyInformationFrom(node41);
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node55 = node52.useSourceInfoIfMissingFromForTree(node54);
        node55.setLineno(10);
        com.google.javascript.rhino.Node node58 = node41.copyInformationFrom(node55);
        com.google.javascript.rhino.Node node61 = new com.google.javascript.rhino.Node((-1), node28, node41, (int) ' ', 1);
        boolean boolean62 = node28.isHook();
        java.lang.String str63 = com.google.javascript.jscomp.NodeUtil.getNearestFunctionName(node28);
        int int64 = node3.getIndexOfChild(node28);
        node3.setVarArgs(true);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 45 + "'", int23 == 45);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(inputId45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test01813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01813");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        node4.setVarArgs(true);
        node4.setVarArgs(false);
        boolean boolean10 = node4.isDebugger();
        boolean boolean11 = node4.isNoSideEffectsCall();
        com.google.javascript.rhino.InputId inputId13 = new com.google.javascript.rhino.InputId("hi!");
        java.lang.String str14 = inputId13.toString();
        node4.setInputId(inputId13);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean21 = node20.isDefaultCase();
        node20.setVarArgs(true);
        node20.setVarArgs(false);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable26 = node20.getAncestors();
        boolean boolean27 = inputId13.equals((java.lang.Object) node20);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        boolean boolean35 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node44 = node41.useSourceInfoIfMissingFromForTree(node43);
        boolean boolean45 = node43.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable50 = jSTypeRegistry48.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean51 = jSTypeRegistry48.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType52 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.jstype.FunctionType functionType56 = jSTypeRegistry48.createFunctionTypeWithVarArgs(jSType52, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = functionType56.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType58 = jSTypeRegistry31.createEnumType("false", node43, (com.google.javascript.rhino.jstype.JSType) functionType56);
        boolean boolean60 = enumType58.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo62 = null;
        enumType58.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo62);
        com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder71 = node70.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node76 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean77 = node76.isDefaultCase();
        node76.setVarArgs(true);
        com.google.javascript.rhino.Node node84 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node((int) 'a', node70, node76, node84);
        boolean boolean86 = enumType58.defineElement("{209777139}", node84);
        boolean boolean87 = enumType58.hasCachedValues();
        boolean boolean88 = enumType58.isNoType();
        boolean boolean89 = enumType58.isParameterizedType();
        boolean boolean90 = enumType58.isNumber();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType91 = enumType58.toMaybeEnumElementType();
        boolean boolean93 = enumType58.isPropertyInExterns("function (): {2086266244}");
        node20.putProp(5, (java.lang.Object) boolean93);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "InputId: hi!" + "'", str14, "InputId: hi!");
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(ancestorIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(functionType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(enumType58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder71);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(enumElementType91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test01814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01814");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo70 = parameterizedType67.getOwnPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean71 = parameterizedType67.matchesStringContext();
        com.google.javascript.rhino.jstype.JSType jSType72 = parameterizedType67.getIndexType();
        boolean boolean73 = parameterizedType67.isNumberValueType();
        boolean boolean74 = parameterizedType67.isInstanceType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(jSDocInfo70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(jSType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test01815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01815");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        boolean boolean35 = enumElementType34.hasReferenceName();
        com.google.javascript.rhino.jstype.ObjectType objectType36 = enumElementType34.getImplicitPrototype();
        boolean boolean37 = enumElementType34.canBeCalled();
        boolean boolean39 = enumElementType34.isPropertyTypeInferred("function (): {1698042926}");
        boolean boolean40 = enumElementType34.matchesObjectContext();
        com.google.javascript.rhino.jstype.JSType jSType41 = enumElementType34.getPrimitiveType();
        com.google.javascript.rhino.jstype.ObjectType.Property property43 = enumElementType34.getSlot("function (): {634829597}");
        java.lang.String str44 = enumElementType34.toDebugHashCodeString();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(objectType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(jSType41);
        org.junit.Assert.assertNull(property43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{97196323}" + "'", str44, "{97196323}");
    }

    @Test
    public void test01816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01816");
        com.google.javascript.rhino.JSDocInfo.TypePosition typePosition0 = new com.google.javascript.rhino.JSDocInfo.TypePosition();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean6 = node5.isDefaultCase();
        node5.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId9 = node5.getInputId();
        node5.detachChildren();
        boolean boolean11 = node5.isAssignAdd();
        typePosition0.setItem(node5);
        com.google.javascript.rhino.Node node13 = com.google.javascript.jscomp.NodeUtil.newExpr(node5);
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean17 = node16.isGetProp();
        boolean boolean18 = node16.isNumber();
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder24 = node23.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int30 = node29.getType();
        boolean boolean31 = node29.isBlock();
        com.google.javascript.rhino.Node node34 = new com.google.javascript.rhino.Node((int) (short) 10, node16, node23, node29, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node42 = node39.useSourceInfoIfMissingFromForTree(node41);
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean48 = node47.isDefaultCase();
        node47.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId51 = node47.getInputId();
        node47.detachChildren();
        com.google.javascript.rhino.Node node53 = node41.copyInformationFrom(node47);
        int int54 = node47.getType();
        com.google.javascript.rhino.Node node55 = node29.copyInformationFrom(node47);
        boolean boolean56 = node29.hasChildren();
        com.google.javascript.rhino.Node node57 = node29.cloneTree();
        com.google.javascript.rhino.Node node58 = node29.detachFromParent();
        // The following exception was thrown during execution in test generation
        try {
            node13.removeChild(node58);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inputId9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 45 + "'", int30 == 45);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(inputId51);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 45 + "'", int54 == 45);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
    }

    @Test
    public void test01817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01817");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        java.util.Set<java.lang.String> strSet42 = functionType39.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair43 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType10, (com.google.javascript.rhino.jstype.JSType) functionType39);
        boolean boolean44 = functionType39.isInstanceType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo46 = functionType39.getOwnPropertyJSDocInfo("{1803496761}");
        com.google.javascript.rhino.jstype.TemplateType templateType47 = functionType39.toMaybeTemplateType();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = templateType47.isObject();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(jSDocInfo46);
        org.junit.Assert.assertNull(templateType47);
    }

    @Test
    public void test01818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01818");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        boolean boolean19 = strComparableList18.isEmpty();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = strComparableList18.iterator();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node25 = jSTypeRegistry23.createParameters(jSTypeArray24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable30 = jSTypeRegistry28.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean31 = jSTypeRegistry28.shouldTolerateUndefinedValues();
        boolean boolean32 = jSTypeRegistry28.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node41 = node38.useSourceInfoIfMissingFromForTree(node40);
        boolean boolean42 = node40.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable47 = jSTypeRegistry45.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean48 = jSTypeRegistry45.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType49 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray50 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList51 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList51, jSTypeArray50);
        com.google.javascript.rhino.jstype.FunctionType functionType53 = jSTypeRegistry45.createFunctionTypeWithVarArgs(jSType49, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        boolean boolean54 = functionType53.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType55 = jSTypeRegistry28.createEnumType("false", node40, (com.google.javascript.rhino.jstype.JSType) functionType53);
        java.util.Set<java.lang.String> strSet56 = functionType53.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable61 = jSTypeRegistry59.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean62 = jSTypeRegistry59.shouldTolerateUndefinedValues();
        boolean boolean63 = jSTypeRegistry59.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node72 = node69.useSourceInfoIfMissingFromForTree(node71);
        boolean boolean73 = node71.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter74, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable78 = jSTypeRegistry76.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean79 = jSTypeRegistry76.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType80 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        com.google.javascript.rhino.jstype.FunctionType functionType84 = jSTypeRegistry76.createFunctionTypeWithVarArgs(jSType80, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        boolean boolean85 = functionType84.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType86 = jSTypeRegistry59.createEnumType("false", node71, (com.google.javascript.rhino.jstype.JSType) functionType84);
        com.google.javascript.rhino.jstype.FunctionType functionType87 = functionType84.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType88 = jSTypeRegistry23.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType53, (com.google.javascript.rhino.jstype.JSType) functionType87);
        boolean boolean89 = parameterizedType88.isNativeObjectType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType90 = parameterizedType88.toMaybeEnumElementType();
        int int91 = parameterizedType88.getPropertiesCount();
        com.google.javascript.rhino.jstype.ObjectType objectType92 = parameterizedType88.getTypeOfThis();
        com.google.javascript.rhino.jstype.ObjectType objectType93 = parameterizedType88.getTypeOfThis();
        com.google.javascript.rhino.jstype.TemplateType templateType94 = parameterizedType88.toMaybeTemplateType();
        int int95 = strComparableList18.indexOf((java.lang.Object) templateType94);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator96 = strComparableList18.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable98 = strComparableList18.remove(50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableItor20);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(jSTypeIterable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(jSTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(functionType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(enumType55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(jSTypeIterable61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(functionType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(enumType86);
        org.junit.Assert.assertNull(functionType87);
        org.junit.Assert.assertNotNull(parameterizedType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(enumElementType90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(objectType92);
        org.junit.Assert.assertNotNull(objectType93);
        org.junit.Assert.assertNull(templateType94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(strComparableSpliterator96);
    }

    @Test
    public void test01819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01819");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node8 = node5.useSourceInfoIfMissingFromForTree(node7);
        node8.setLineno(10);
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder17 = node16.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean23 = node22.isDefaultCase();
        node22.setVarArgs(true);
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = new com.google.javascript.rhino.Node((int) 'a', node16, node22, node30);
        boolean boolean32 = node31.isGetterDef();
        boolean boolean33 = node31.isQuotedString();
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int39 = node38.getType();
        node38.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int47 = node46.getType();
        node46.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node50 = new com.google.javascript.rhino.Node(40, node8, node31, node38, node46);
        java.lang.String str51 = com.google.javascript.jscomp.NodeUtil.getNearestFunctionName(node50);
        int int52 = node50.getLength();
        java.lang.String[] strArray54 = new java.lang.String[] { "Unknown class name" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        java.util.Iterator<java.lang.String> strItor57 = strSet55.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator58 = strSet55.spliterator();
        node50.setDirectives((java.util.Set<java.lang.String>) strSet55);
        boolean boolean61 = strSet55.add("Node tree inequality:\nTree1:\nSTRING {582282848}\n\n\nTree2:\nNUMBER 100.0\n\n\nSubtree1: STRING {582282848}\n\n\nSubtree2: NUMBER 100.0\n");
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 45 + "'", int39 == 45);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 45 + "'", int47 == 45);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNotNull(strSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test01820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01820");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        boolean boolean36 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node44 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node45 = node42.useSourceInfoIfMissingFromForTree(node44);
        boolean boolean46 = node44.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable51 = jSTypeRegistry49.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean52 = jSTypeRegistry49.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType53 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.jstype.FunctionType functionType57 = jSTypeRegistry49.createFunctionTypeWithVarArgs(jSType53, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = functionType57.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType59 = jSTypeRegistry32.createEnumType("false", node44, (com.google.javascript.rhino.jstype.JSType) functionType57);
        boolean boolean61 = enumType59.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo63 = null;
        enumType59.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo63);
        boolean boolean66 = enumType59.isPropertyInExterns("Unknown class name");
        com.google.javascript.rhino.jstype.JSType jSType67 = jSTypeRegistry2.createOptionalType((com.google.javascript.rhino.jstype.JSType) enumType59);
        java.lang.Iterable iterable68 = enumType59.getCtorImplementedInterfaces();
        com.google.javascript.rhino.jstype.ObjectType objectType69 = enumType59.getImplicitPrototype();
        java.util.Set<java.lang.String> strSet70 = enumType59.getElements();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(functionType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(enumType59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(jSType67);
        org.junit.Assert.assertNotNull(iterable68);
        org.junit.Assert.assertNotNull(objectType69);
        org.junit.Assert.assertNotNull(strSet70);
    }

    @Test
    public void test01821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01821");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.size();
        strComparableList2.clear();
        com.google.javascript.rhino.InputId inputId8 = new com.google.javascript.rhino.InputId("{proxy:function (): {882920012}}");
        boolean boolean9 = strComparableList2.remove((java.lang.Object) "{proxy:function (): {882920012}}");
        strComparableList2.clear();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList29 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray28);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator30 = strComparableList29.spliterator();
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node38 = node35.useSourceInfoIfMissingFromForTree(node37);
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean41 = node40.isFalse();
        boolean boolean42 = node37.hasChild(node40);
        boolean boolean43 = strComparableList29.contains((java.lang.Object) boolean42);
        boolean boolean44 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable46 = strComparableList29.remove(4);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strComparableList29);
        org.junit.Assert.assertNotNull(strComparableSpliterator30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test01822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01822");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType11 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.jstype.FunctionType functionType15 = jSTypeRegistry7.createFunctionTypeWithVarArgs(jSType11, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        boolean boolean16 = functionType15.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        boolean boolean23 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node32 = node29.useSourceInfoIfMissingFromForTree(node31);
        boolean boolean33 = node31.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable38 = jSTypeRegistry36.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean39 = jSTypeRegistry36.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType40 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.jstype.FunctionType functionType44 = jSTypeRegistry36.createFunctionTypeWithVarArgs(jSType40, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        boolean boolean45 = functionType44.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType46 = jSTypeRegistry19.createEnumType("false", node31, (com.google.javascript.rhino.jstype.JSType) functionType44);
        java.util.Set<java.lang.String> strSet47 = functionType44.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair48 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType15, (com.google.javascript.rhino.jstype.JSType) functionType44);
        com.google.javascript.rhino.Node node49 = functionType15.getSource();
        com.google.javascript.rhino.jstype.JSType jSType51 = functionType15.getPropertyType("hi!");
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node57 = jSTypeRegistry55.createParameters(jSTypeArray56);
        com.google.javascript.rhino.jstype.FunctionType functionType58 = jSTypeRegistry2.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType15, true, jSTypeArray56);
        boolean boolean60 = functionType58.hasOwnProperty("{1789792193}");
        com.google.javascript.rhino.jstype.FunctionType functionType61 = functionType58.cloneWithoutArrowType();
        boolean boolean62 = functionType58.isOrdinaryFunction();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable63 = functionType58.getOwnImplementedInterfaces();
        com.google.javascript.rhino.jstype.JSType jSType64 = functionType58.getReturnType();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node72 = node69.useSourceInfoIfMissingFromForTree(node71);
        boolean boolean73 = node71.isExprResult();
        com.google.javascript.rhino.Node node74 = node71.cloneTree();
        functionType58.setSource(node74);
        java.lang.String str76 = functionType58.getDisplayName();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(functionType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(functionType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(enumType46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(jSType51);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(functionType58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(functionType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable63);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test01823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01823");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType jSType3 = null;
        boolean boolean5 = jSTypeRegistry2.canPropertyBeDefined(jSType3, "Unknown class name");
        jSTypeRegistry2.clearNamedTypes();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = jSTypeRegistry2.getErrorReporter();
        jSTypeRegistry2.setLastGeneration(true);
        com.google.javascript.rhino.Node node11 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        boolean boolean43 = enumType41.isPropertyTypeDeclared("");
        boolean boolean44 = enumType41.matchesStringContext();
        java.lang.String str45 = enumType41.toDebugHashCodeString();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable46 = enumType41.getCtorExtendedInterfaces();
        boolean boolean48 = enumType41.hasOwnProperty("{1631953089}");
        com.google.javascript.rhino.jstype.EnumType enumType49 = jSTypeRegistry2.createEnumType("", node11, (com.google.javascript.rhino.jstype.JSType) enumType41);
        com.google.common.base.Predicate<com.google.javascript.rhino.jstype.JSType> jSTypePredicate50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = enumType41.setValidator(jSTypePredicate50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(errorReporter7);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{595148047}" + "'", str45, "{595148047}");
        org.junit.Assert.assertNotNull(objectTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(enumType49);
    }

    @Test
    public void test01824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01824");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        functionType10.clearCachedValues();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.FunctionType functionType12 = functionType10.getSuperClassConstructor();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
    }

    @Test
    public void test01825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01825");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("");
        com.google.javascript.rhino.jstype.FunctionType functionType73 = parameterizedType67.getConstructor();
        boolean boolean74 = parameterizedType67.isInstanceType();
        com.google.javascript.rhino.jstype.EnumType enumType75 = parameterizedType67.toMaybeEnumType();
        com.google.javascript.rhino.jstype.UnionType unionType76 = parameterizedType67.toMaybeUnionType();
        com.google.javascript.rhino.jstype.FunctionType functionType77 = parameterizedType67.getConstructor();
        boolean boolean78 = parameterizedType67.isNativeObjectType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(functionType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(enumType75);
        org.junit.Assert.assertNull(unionType76);
        org.junit.Assert.assertNull(functionType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test01826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01826");
        com.google.javascript.rhino.JSDocInfo.TypePosition typePosition0 = new com.google.javascript.rhino.JSDocInfo.TypePosition();
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean6 = node5.isDefaultCase();
        node5.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId9 = node5.getInputId();
        node5.detachChildren();
        boolean boolean11 = node5.isAssignAdd();
        typePosition0.setItem(node5);
        boolean boolean13 = typePosition0.hasBrackets();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(inputId9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test01827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01827");
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList1 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableList1.iterator();
        boolean boolean3 = strComparableItor2.hasNext();
        org.junit.Assert.assertNotNull(strComparableList1);
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test01828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01828");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.hasAnyTemplateInternal();
        int int13 = functionType10.getPropertiesCount();
        com.google.javascript.rhino.jstype.ObjectType objectType14 = functionType10.getParentScope();
        java.lang.String str15 = functionType10.getNormalizedReferenceName();
        boolean boolean17 = functionType10.isPropertyTypeInferred("{1560722860}");
        boolean boolean18 = functionType10.matchesStringContext();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test01829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01829");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable8 = node6.getAncestors();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newNumber(0.0d);
        boolean boolean11 = node10.isNot();
        node6.addChildrenToBack(node10);
        com.google.javascript.rhino.Node node13 = node6.cloneNode();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(ancestorIterable8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node13);
    }

    @Test
    public void test01830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01830");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType34 = enumType29.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = enumType29.getJSDocInfo();
        com.google.javascript.rhino.Node node36 = enumType29.getSource();
        boolean boolean37 = node36.isAssign();
        boolean boolean38 = node36.isAssign();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{921237080}" + "'", str33, "{921237080}");
        org.junit.Assert.assertNull(functionType34);
        org.junit.Assert.assertNull(jSDocInfo35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test01831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01831");
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder7 = node6.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node21 = new com.google.javascript.rhino.Node((int) 'a', node6, node12, node20);
        boolean boolean22 = node21.isGetterDef();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = new com.google.javascript.rhino.Node(45, node21, node24, 44, 16);
        boolean boolean28 = node21.isOptionalArg();
        com.google.javascript.rhino.Node node29 = node21.getNext();
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean33 = node32.isGetProp();
        boolean boolean34 = node32.isNumber();
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder40 = node39.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int46 = node45.getType();
        boolean boolean47 = node45.isBlock();
        com.google.javascript.rhino.Node node50 = new com.google.javascript.rhino.Node((int) (short) 10, node32, node39, node45, (int) (byte) 10, 44);
        boolean boolean51 = node45.isGetterDef();
        boolean boolean52 = node45.isDec();
        com.google.javascript.rhino.Node node53 = node21.useSourceInfoFromForTree(node45);
        boolean boolean54 = node45.hasMoreThanOneChild();
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder40);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 45 + "'", int46 == 45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test01832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01832");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        boolean boolean78 = strComparableList18.contains((java.lang.Object) (short) 10);
        boolean boolean79 = strComparableList18.isEmpty();
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry82 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray83 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node84 = jSTypeRegistry82.createParameters(jSTypeArray83);
        jSTypeRegistry82.incrementGeneration();
        boolean boolean86 = strComparableList18.contains((java.lang.Object) jSTypeRegistry82);
        boolean boolean87 = strComparableList18.isEmpty();
        boolean boolean88 = strComparableList18.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable90 = strComparableList18.remove(50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray83);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test01833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01833");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidSimpleName("{686590496}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test01834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01834");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        node4.setVarArgs(true);
        boolean boolean8 = node4.isThrow();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node17 = node14.useSourceInfoIfMissingFromForTree(node16);
        node17.setLineno(10);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder26 = node25.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean32 = node31.isDefaultCase();
        node31.setVarArgs(true);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int) 'a', node25, node31, node39);
        boolean boolean41 = node40.isGetterDef();
        boolean boolean42 = node40.isQuotedString();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int48 = node47.getType();
        node47.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int56 = node55.getType();
        node55.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node59 = new com.google.javascript.rhino.Node(40, node17, node40, node47, node55);
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node67 = node64.useSourceInfoIfMissingFromForTree(node66);
        node67.setIsSyntheticBlock(true);
        java.lang.String str70 = node67.getString();
        boolean boolean71 = node59.hasChild(node67);
        com.google.javascript.rhino.Node node76 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node78 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node79 = node76.useSourceInfoIfMissingFromForTree(node78);
        com.google.javascript.rhino.Node node80 = node59.useSourceInfoFrom(node78);
        boolean boolean81 = node78.isComma();
        node4.addChildrenToFront(node78);
        boolean boolean83 = node4.isFalse();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder26);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 45 + "'", int48 == 45);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 45 + "'", int56 == 45);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test01835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01835");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        boolean boolean78 = strComparableList18.contains((java.lang.Object) (short) 10);
        boolean boolean79 = strComparableList18.isEmpty();
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry82 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray83 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node84 = jSTypeRegistry82.createParameters(jSTypeArray83);
        jSTypeRegistry82.incrementGeneration();
        boolean boolean86 = strComparableList18.contains((java.lang.Object) jSTypeRegistry82);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable88 = jSTypeRegistry82.getEachReferenceTypeWithProperty("");
        jSTypeRegistry82.incrementGeneration();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray83);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable88);
    }

    @Test
    public void test01836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01836");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) 1L);
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable2 = node1.children();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeIterable2);
    }

    @Test
    public void test01837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01837");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        node15.setSourceEncodedPositionForTree(45);
        boolean boolean23 = node15.isSetterDef();
        com.google.javascript.rhino.JSDocInfo jSDocInfo24 = node15.getJSDocInfo();
        java.lang.String str25 = com.google.javascript.jscomp.NodeUtil.getSourceName(node15);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(jSDocInfo24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test01838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01838");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        node15.setSourceEncodedPositionForTree(45);
        boolean boolean23 = node15.isSetterDef();
        boolean boolean24 = node15.isNumber();
        int int26 = node15.getIntProp(53);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable32 = jSTypeRegistry30.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean33 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        boolean boolean34 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node43 = node40.useSourceInfoIfMissingFromForTree(node42);
        boolean boolean44 = node42.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType51 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.jstype.FunctionType functionType55 = jSTypeRegistry47.createFunctionTypeWithVarArgs(jSType51, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        boolean boolean56 = functionType55.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType57 = jSTypeRegistry30.createEnumType("false", node42, (com.google.javascript.rhino.jstype.JSType) functionType55);
        boolean boolean59 = enumType57.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo61 = null;
        enumType57.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo61);
        boolean boolean64 = enumType57.isPropertyInExterns("Unknown class name");
        boolean boolean65 = enumType57.isNoType();
        node15.putProp(10, (java.lang.Object) enumType57);
        boolean boolean67 = node15.isTry();
        boolean boolean68 = node15.isDo();
        boolean boolean69 = node15.isNoSideEffectsCall();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(jSTypeIterable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(functionType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(enumType57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test01839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01839");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        boolean boolean36 = enumType29.isPropertyInExterns("Unknown class name");
        com.google.javascript.rhino.Node node38 = enumType29.getPropertyNode("Not declared as a type name");
        boolean boolean40 = enumType29.isPropertyTypeInferred("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.jstype.JSType jSType42 = enumType29.getPropertyType("");
        boolean boolean43 = enumType29.isEmptyType();
        java.util.Set set44 = enumType29.getOwnPropertyNames();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable45 = enumType29.getCtorExtendedInterfaces();
        java.util.Set<java.lang.String> strSet46 = enumType29.getOwnPropertyNames();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(jSType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(set44);
        org.junit.Assert.assertNotNull(objectTypeIterable45);
        org.junit.Assert.assertNotNull(strSet46);
    }

    @Test
    public void test01840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01840");
        com.google.javascript.rhino.JSDocInfo.TypePosition typePosition0 = new com.google.javascript.rhino.JSDocInfo.TypePosition();
        boolean boolean1 = typePosition0.hasBrackets();
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean7 = node6.isDefaultCase();
        node6.setVarArgs(true);
        node6.setVarArgs(false);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable12 = node6.getAncestors();
        typePosition0.setItem(node6);
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node21 = node18.useSourceInfoIfMissingFromForTree(node20);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean27 = node26.isDefaultCase();
        node26.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId30 = node26.getInputId();
        node26.detachChildren();
        com.google.javascript.rhino.Node node32 = node20.copyInformationFrom(node26);
        int int33 = node26.getType();
        boolean boolean34 = node26.isFunction();
        typePosition0.setItem(node26);
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean41 = node40.isDefaultCase();
        node40.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId44 = node40.getInputId();
        boolean boolean45 = node40.isCase();
        boolean boolean46 = node40.isFalse();
        boolean boolean47 = node40.isAssign();
        typePosition0.setItem(node40);
        int int49 = typePosition0.getPositionOnStartLine();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(ancestorIterable12);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(inputId30);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 45 + "'", int33 == 45);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(inputId44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test01841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01841");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node8 = node5.useSourceInfoIfMissingFromForTree(node7);
        boolean boolean9 = node7.isExprResult();
        com.google.javascript.rhino.Node node10 = node7.cloneTree();
        int int11 = node10.getSourcePosition();
        boolean boolean12 = node10.isIn();
        com.google.javascript.rhino.Node node13 = node10.getFirstChild();
        boolean boolean14 = node10.isIn();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean19 = node18.isGetProp();
        boolean boolean20 = node18.isNumber();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder26 = node25.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int32 = node31.getType();
        boolean boolean33 = node31.isBlock();
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 10, node18, node25, node31, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node37 = node18.detachFromParent();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node44 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node45 = node42.useSourceInfoIfMissingFromForTree(node44);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean51 = node50.isDefaultCase();
        node50.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId54 = node50.getInputId();
        node50.detachChildren();
        com.google.javascript.rhino.Node node56 = node44.copyInformationFrom(node50);
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node64 = node61.useSourceInfoIfMissingFromForTree(node63);
        node64.setLineno(10);
        com.google.javascript.rhino.Node node67 = node50.copyInformationFrom(node64);
        com.google.javascript.rhino.Node node70 = new com.google.javascript.rhino.Node((-1), node37, node50, (int) ' ', 1);
        boolean boolean71 = node70.hasChildren();
        com.google.javascript.rhino.Node node73 = com.google.javascript.rhino.Node.newNumber((double) 29);
        boolean boolean74 = node73.isDebugger();
        boolean boolean75 = node73.isIn();
        com.google.javascript.rhino.Node node80 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node82 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node83 = node80.useSourceInfoIfMissingFromForTree(node82);
        node83.setLineno(10);
        boolean boolean86 = node83.isWith();
        boolean boolean87 = node83.isThrow();
        com.google.javascript.rhino.Node node90 = new com.google.javascript.rhino.Node(54, node10, node70, node73, node83, 39, (-1));
        com.google.javascript.rhino.Node node91 = node73.getParent();
        java.util.Set<java.lang.String> strSet92 = node73.getDirectives();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder26);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 45 + "'", int32 == 45);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(inputId54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertNull(strSet92);
    }

    @Test
    public void test01842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01842");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType69 = parameterizedType67.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.TemplateType templateType70 = parameterizedType67.toMaybeTemplateType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo71 = parameterizedType67.getJSDocInfo();
        java.util.Set set72 = parameterizedType67.getOwnPropertyNames();
        com.google.javascript.rhino.Node node73 = parameterizedType67.getRootNode();
        boolean boolean75 = parameterizedType67.isPropertyTypeDeclared("{585923242}");
        boolean boolean76 = parameterizedType67.isFunctionPrototypeType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(enumElementType69);
        org.junit.Assert.assertNull(templateType70);
        org.junit.Assert.assertNull(jSDocInfo71);
        org.junit.Assert.assertNotNull(set72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test01843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01843");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = strComparableList18.iterator();
        boolean boolean78 = strComparableList18.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable80 = strComparableList18.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertNotNull(strComparableItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test01844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01844");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection6 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node4);
        boolean boolean7 = node4.isLabel();
        boolean boolean8 = node4.isGetterDef();
        int int9 = node4.getSourceOffset();
        int int10 = node4.getLength();
        node4.setCharno(43);
        java.lang.String str13 = node4.getString();
        boolean boolean14 = node4.isDelProp();
        boolean boolean15 = node4.isTypeOf();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(nodeCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test01845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01845");
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList1 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "");
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableList1.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = strComparableList1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableList1.parallelStream();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder11 = node10.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean17 = node16.isDefaultCase();
        node16.setVarArgs(true);
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node25 = new com.google.javascript.rhino.Node((int) 'a', node10, node16, node24);
        boolean boolean26 = node10.isScript();
        boolean boolean27 = node10.isObjectLit();
        node10.setString("{12965601}");
        boolean boolean30 = node10.isOnlyModifiesThisCall();
        int int31 = strComparableList1.lastIndexOf((java.lang.Object) boolean30);
        java.lang.Object obj32 = null;
        boolean boolean33 = strComparableList1.equals(obj32);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "{953161982}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparableList1);
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertNotNull(strComparableItor3);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test01846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01846");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType jSType3 = null;
        boolean boolean5 = jSTypeRegistry2.canPropertyBeDefined(jSType3, "Unknown class name");
        jSTypeRegistry2.clearNamedTypes();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = jSTypeRegistry2.getErrorReporter();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.FunctionType functionType9 = jSTypeRegistry2.getNativeFunctionType(jSTypeNative8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(errorReporter7);
    }

    @Test
    public void test01847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01847");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType jSType13 = functionType10.unboxesTo();
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable18 = jSTypeRegistry16.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean19 = jSTypeRegistry16.shouldTolerateUndefinedValues();
        boolean boolean20 = jSTypeRegistry16.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node29 = node26.useSourceInfoIfMissingFromForTree(node28);
        boolean boolean30 = node28.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable35 = jSTypeRegistry33.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean36 = jSTypeRegistry33.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType37 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.jstype.FunctionType functionType41 = jSTypeRegistry33.createFunctionTypeWithVarArgs(jSType37, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        boolean boolean42 = functionType41.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType43 = jSTypeRegistry16.createEnumType("false", node28, (com.google.javascript.rhino.jstype.JSType) functionType41);
        boolean boolean45 = enumType43.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo47 = null;
        enumType43.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo47);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder56 = node55.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean62 = node61.isDefaultCase();
        node61.setVarArgs(true);
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node70 = new com.google.javascript.rhino.Node((int) 'a', node55, node61, node69);
        boolean boolean71 = enumType43.defineElement("{209777139}", node69);
        boolean boolean72 = enumType43.hasReferenceName();
        com.google.javascript.rhino.JSDocInfo jSDocInfo73 = null;
        enumType43.setJSDocInfo(jSDocInfo73);
        boolean boolean75 = functionType10.equals((java.lang.Object) enumType43);
        boolean boolean76 = enumType43.hasReferenceName();
        com.google.javascript.rhino.jstype.FunctionType functionType77 = enumType43.getConstructor();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(jSType13);
        org.junit.Assert.assertNotNull(jSTypeIterable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(functionType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(enumType43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder56);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(functionType77);
    }

    @Test
    public void test01848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01848");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        jSDocInfo0.setLicense("");
        boolean boolean4 = jSDocInfo0.isDeprecated();
        boolean boolean6 = jSDocInfo0.hasParameterType("InputId: hi!");
        int int7 = jSDocInfo0.getParameterCount();
        boolean boolean8 = jSDocInfo0.hasBaseType();
        com.google.common.collect.ImmutableList<java.lang.String> strList9 = jSDocInfo0.getTemplateTypeNames();
        boolean boolean10 = jSDocInfo0.hasThisType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test01849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01849");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        int int19 = node12.getType();
        java.lang.String[] strArray25 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        node12.setDirectives((java.util.Set<java.lang.String>) strSet26);
        boolean boolean30 = strSet26.add("enum{false}");
        int int31 = strSet26.size();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 45 + "'", int19 == 45);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
    }

    @Test
    public void test01850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01850");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("{846106335}", jSTypeNative1);
    }

    @Test
    public void test01851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01851");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        node15.setSourceEncodedPositionForTree(45);
        boolean boolean23 = node15.isQualifiedName();
        boolean boolean24 = node15.isDefaultCase();
        com.google.javascript.rhino.Node node25 = node15.getFirstChild();
        boolean boolean26 = node15.isLocalResultCall();
        int int27 = node15.getChildCount();
        boolean boolean28 = node15.isName();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test01852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01852");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        boolean boolean8 = node6.isExprResult();
        boolean boolean9 = node6.isWhile();
        boolean boolean10 = node6.isInc();
        boolean boolean11 = node6.isIn();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test01853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01853");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType35 = enumElementType34.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.ObjectType.Property property37 = enumElementType34.getSlot("{1669341918}");
        com.google.javascript.rhino.jstype.EnumElementType enumElementType38 = enumElementType34.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType39 = enumElementType38.toMaybeEnumElementType();
        boolean boolean41 = enumElementType38.hasProperty("{1604362429}");
        com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> jSTypeStaticScope42 = enumElementType38.getParentScope();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertNotNull(enumElementType35);
        org.junit.Assert.assertNull(property37);
        org.junit.Assert.assertNotNull(enumElementType38);
        org.junit.Assert.assertNotNull(enumElementType39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(jSTypeStaticScope42);
    }

    @Test
    public void test01854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01854");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot36 = enumType29.getSlot("{proxy:function (): {882920012}}");
        java.util.Set set37 = enumType29.getOwnPropertyNames();
        int int38 = set37.size();
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList40 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "");
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableList40.iterator();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        boolean boolean73 = enumType71.isPropertyTypeDeclared("");
        boolean boolean74 = enumType71.matchesStringContext();
        java.lang.String str75 = enumType71.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = enumType71.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo77 = enumType71.getJSDocInfo();
        enumType71.clearCachedValues();
        com.google.javascript.rhino.jstype.ObjectType objectType79 = enumType71.getTypeOfThis();
        java.lang.Iterable iterable80 = enumType71.getCtorExtendedInterfaces();
        java.util.Spliterator<com.google.javascript.rhino.Node> nodeSpliterator81 = iterable80.spliterator();
        boolean boolean82 = strComparableList40.equals((java.lang.Object) iterable80);
        boolean boolean83 = strComparableList40.isEmpty();
        boolean boolean84 = set37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSTypeStaticSlot36);
        org.junit.Assert.assertNotNull(set37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strComparableList40);
        org.junit.Assert.assertNotNull(strComparableItor41);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str75 + "' != '" + "{378012617}" + "'", str75, "{378012617}");
        org.junit.Assert.assertNull(functionType76);
        org.junit.Assert.assertNull(jSDocInfo77);
        org.junit.Assert.assertNull(objectType79);
        org.junit.Assert.assertNotNull(iterable80);
        org.junit.Assert.assertNotNull(nodeSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test01855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01855");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.hasAnyTemplateInternal();
        int int13 = functionType10.getPropertiesCount();
        com.google.javascript.rhino.jstype.ObjectType objectType14 = functionType10.getParentScope();
        java.lang.String str15 = functionType10.getNormalizedReferenceName();
        boolean boolean16 = functionType10.isNoType();
        boolean boolean17 = functionType10.hasImplementedInterfaces();
        boolean boolean18 = functionType10.isBooleanObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable23 = jSTypeRegistry21.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean24 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        boolean boolean25 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node34 = node31.useSourceInfoIfMissingFromForTree(node33);
        boolean boolean35 = node33.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType42 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.jstype.FunctionType functionType46 = jSTypeRegistry38.createFunctionTypeWithVarArgs(jSType42, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        boolean boolean47 = functionType46.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType48 = jSTypeRegistry21.createEnumType("false", node33, (com.google.javascript.rhino.jstype.JSType) functionType46);
        boolean boolean50 = enumType48.isPropertyTypeDeclared("");
        boolean boolean51 = enumType48.matchesStringContext();
        java.lang.String str52 = enumType48.toDebugHashCodeString();
        boolean boolean53 = enumType48.hasReferenceName();
        boolean boolean54 = enumType48.isGlobalThisType();
        com.google.javascript.rhino.jstype.JSType jSType56 = enumType48.getPropertyType("");
        com.google.javascript.rhino.jstype.JSType jSType57 = jSType56.unboxesTo();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node62 = jSTypeRegistry60.createParameters(jSTypeArray61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry65 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable67 = jSTypeRegistry65.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean68 = jSTypeRegistry65.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType69 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray70 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList71 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList71, jSTypeArray70);
        com.google.javascript.rhino.jstype.FunctionType functionType73 = jSTypeRegistry65.createFunctionTypeWithVarArgs(jSType69, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList71);
        com.google.javascript.rhino.Node node74 = jSTypeRegistry60.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList71);
        com.google.javascript.rhino.ErrorReporter errorReporter75 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry77 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter75, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable79 = jSTypeRegistry77.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean80 = jSTypeRegistry77.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType81 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray82 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList83 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList83, jSTypeArray82);
        com.google.javascript.rhino.jstype.FunctionType functionType85 = jSTypeRegistry77.createFunctionTypeWithVarArgs(jSType81, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList83);
        boolean boolean86 = functionType85.canBeCalled();
        boolean boolean87 = functionType85.hasAnyTemplateInternal();
        int int88 = functionType85.getPropertiesCount();
        com.google.javascript.rhino.jstype.ObjectType objectType89 = functionType85.getParentScope();
        com.google.javascript.rhino.Node node90 = functionType85.getSource();
        com.google.javascript.rhino.jstype.JSType jSType91 = jSTypeRegistry60.createDefaultObjectUnion((com.google.javascript.rhino.jstype.JSType) functionType85);
        boolean boolean92 = jSType91.isObject();
        boolean boolean93 = jSType56.canTestForShallowEqualityWith(jSType91);
        boolean boolean94 = functionType10.isSubtype(jSType56);
        com.google.javascript.rhino.jstype.EnumElementType enumElementType95 = jSType56.toMaybeEnumElementType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objectType14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(functionType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(enumType48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{1894765807}" + "'", str52, "{1894765807}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(jSType56);
        org.junit.Assert.assertNull(jSType57);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(jSTypeIterable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(jSTypeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(functionType73);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(jSTypeIterable79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(jSTypeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(objectType89);
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertNotNull(jSType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(enumElementType95);
    }

    @Test
    public void test01856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01856");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) 'a', node5, node11, node19);
        boolean boolean21 = node11.isRegExp();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test01857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01857");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        node18.setCharno(54);
        node18.setSourceFileForTesting("{proxy:function (): {1014762556}}");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
    }

    @Test
    public void test01858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01858");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable15 = jSTypeRegistry13.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean16 = jSTypeRegistry13.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        boolean boolean35 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node44 = node41.useSourceInfoIfMissingFromForTree(node43);
        boolean boolean45 = node43.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable50 = jSTypeRegistry48.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean51 = jSTypeRegistry48.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType52 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.jstype.FunctionType functionType56 = jSTypeRegistry48.createFunctionTypeWithVarArgs(jSType52, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = functionType56.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType58 = jSTypeRegistry31.createEnumType("false", node43, (com.google.javascript.rhino.jstype.JSType) functionType56);
        java.util.Set<java.lang.String> strSet59 = functionType56.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair60 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType27, (com.google.javascript.rhino.jstype.JSType) functionType56);
        com.google.javascript.rhino.jstype.JSType jSType61 = functionType56.autoboxesTo();
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable66 = jSTypeRegistry64.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean67 = jSTypeRegistry64.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType68 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry64.createFunctionTypeWithVarArgs(jSType68, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.jstype.FunctionType functionType73 = jSTypeRegistry13.createFunctionTypeWithVarArgs(jSType61, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.Node node74 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        node74.putIntProp((int) (short) 10, 53);
        int int79 = node74.getIntProp((int) (short) 1);
        com.google.javascript.rhino.Node node80 = node74.getNext();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = node80.isQuotedString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertNotNull(jSTypeIterable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(functionType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(enumType58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(jSType61);
        org.junit.Assert.assertNotNull(jSTypeIterable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertNotNull(functionType73);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test01859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01859");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType34 = enumType29.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = enumType29.getJSDocInfo();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder43 = node42.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean49 = node48.isDefaultCase();
        node48.setVarArgs(true);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node57 = new com.google.javascript.rhino.Node((int) 'a', node42, node48, node56);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile58 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node56);
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node65 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node66 = node63.useSourceInfoIfMissingFromForTree(node65);
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean69 = node68.isFalse();
        boolean boolean70 = node65.hasChild(node68);
        com.google.javascript.rhino.Node node71 = node56.useSourceInfoFromForTree(node65);
        boolean boolean72 = enumType29.defineElement("", node65);
        com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> jSTypeStaticScope73 = enumType29.getParentScope();
        com.google.javascript.rhino.jstype.ObjectType objectType74 = enumType29.dereference();
        com.google.javascript.rhino.jstype.JSType jSType75 = enumType29.unboxesTo();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{747530604}" + "'", str33, "{747530604}");
        org.junit.Assert.assertNull(functionType34);
        org.junit.Assert.assertNull(jSDocInfo35);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder43);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNull(staticSourceFile58);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(jSTypeStaticScope73);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNull(jSType75);
    }

    @Test
    public void test01860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01860");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean1 = jSDocInfo0.hasFileOverview();
        java.util.Collection<java.lang.String> strCollection2 = jSDocInfo0.getReferences();
        java.util.Collection<java.lang.String> strCollection3 = jSDocInfo0.getReferences();
        boolean boolean4 = jSDocInfo0.hasType();
        java.lang.String str6 = jSDocInfo0.getDescriptionForParameter("{60400957}");
        java.util.Set<java.lang.String> strSet7 = jSDocInfo0.getSuppressions();
        boolean boolean8 = jSDocInfo0.isNoCompile();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(strCollection2);
        org.junit.Assert.assertNull(strCollection3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test01861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01861");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative1);
        java.lang.String str3 = assertionFunctionSpec2.getFunctionName();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean16 = node15.isDefaultCase();
        node15.setVarArgs(true);
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int) 'a', node9, node15, node23);
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable29 = jSTypeRegistry27.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean30 = jSTypeRegistry27.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable35 = jSTypeRegistry33.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean36 = jSTypeRegistry33.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType37 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.jstype.FunctionType functionType41 = jSTypeRegistry33.createFunctionTypeWithVarArgs(jSType37, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        boolean boolean42 = functionType41.canBeCalled();
        boolean boolean43 = functionType41.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType45 = jSTypeRegistry27.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType41, jSTypeArray44);
        com.google.javascript.rhino.jstype.JSType jSType46 = assertionFunctionSpec2.getAssertedType(node9, jSTypeRegistry27);
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int52 = node51.getType();
        boolean boolean53 = node51.isBlock();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder54 = node51.getJsDocBuilderForNode();
        node51.setQuotedString();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile56 = null;
        node51.setStaticSourceFile(staticSourceFile56);
        com.google.javascript.rhino.Node node58 = assertionFunctionSpec2.getAssertedParam(node51);
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean65 = node64.isDefaultCase();
        node64.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId68 = node64.getInputId();
        node64.detachChildren();
        boolean boolean70 = node64.isNull();
        com.google.javascript.rhino.Node node71 = new com.google.javascript.rhino.Node((int) 'a', node64);
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable72 = node64.children();
        boolean boolean73 = node64.isIn();
        com.google.javascript.rhino.Node node74 = node64.detachFromParent();
        com.google.javascript.rhino.Node node75 = node58.srcrefTree(node64);
        com.google.javascript.rhino.Node node81 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean82 = node81.isDefaultCase();
        boolean boolean83 = node81.isTry();
        com.google.javascript.rhino.Node node84 = node81.getLastSibling();
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node(4095, node81);
        node64.addChildrenToBack(node85);
        java.lang.String str87 = com.google.javascript.jscomp.NodeUtil.getSourceName(node64);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node88 = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(node64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str3, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(jSTypeIterable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(functionType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertNotNull(functionType45);
        org.junit.Assert.assertNull(jSType46);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 45 + "'", int52 == 45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder54);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(inputId68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(nodeIterable72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test01862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01862");
        java.io.IOException iOException0 = new java.io.IOException();
        java.lang.Throwable[] throwableArray1 = iOException0.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray1);
    }

    @Test
    public void test01863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01863");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("");
        com.google.javascript.rhino.jstype.FunctionType functionType73 = parameterizedType67.getConstructor();
        boolean boolean74 = parameterizedType67.isInstanceType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo76 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str77 = jSDocInfo76.getDescription();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression78 = jSDocInfo76.getType();
        parameterizedType67.setPropertyJSDocInfo("NUMBER 100.0", jSDocInfo76);
        boolean boolean81 = parameterizedType67.removeProperty("{726289308}");
        boolean boolean82 = parameterizedType67.isOrdinaryFunction();
        boolean boolean83 = parameterizedType67.isInstanceType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(functionType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(jSTypeExpression78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test01864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01864");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags((int) (byte) 10);
        sideEffectFlags1.setMutatesThis();
        sideEffectFlags1.setMutatesThis();
    }

    @Test
    public void test01865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01865");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        boolean boolean69 = parameterizedType67.isAllType();
        boolean boolean70 = parameterizedType67.matchesStringContext();
        com.google.javascript.rhino.jstype.JSType jSType71 = parameterizedType67.collapseUnion();
        boolean boolean72 = parameterizedType67.isNumber();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = parameterizedType67.hasAnyTemplateInternal();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test01866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01866");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        functionType10.clearCachedValues();
        int int12 = functionType10.getExtendedInterfacesCount();
        java.lang.String str13 = functionType10.toString();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node21 = node18.useSourceInfoIfMissingFromForTree(node20);
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean24 = node23.isFalse();
        boolean boolean25 = node20.hasChild(node23);
        functionType10.setSource(node23);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder32 = node31.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder33 = node31.new FileLevelJsDocBuilder();
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node41 = node38.useSourceInfoIfMissingFromForTree(node40);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean47 = node46.isDefaultCase();
        node46.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId50 = node46.getInputId();
        node46.detachChildren();
        com.google.javascript.rhino.Node node52 = node40.copyInformationFrom(node46);
        java.lang.String str53 = node46.toStringTree();
        com.google.javascript.rhino.jstype.JSType jSType54 = null;
        node46.setJSType(jSType54);
        boolean boolean56 = node46.isObjectLit();
        boolean boolean57 = node31.isEquivalentTo(node46);
        com.google.javascript.rhino.Node node58 = node23.useSourceInfoIfMissingFrom(node46);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder59 = node23.new FileLevelJsDocBuilder();
        boolean boolean60 = node23.isGetElem();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "function (): ?" + "'", str13, "function (): ?");
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder32);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(inputId50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "SHEQ  1 [var_args_name: 1]\n" + "'", str53, "SHEQ  1 [var_args_name: 1]\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test01867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01867");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        boolean boolean19 = strComparableList18.isEmpty();
        boolean boolean20 = strComparableList18.isEmpty();
        java.lang.Object[] objArray21 = strComparableList18.toArray();
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList22 = strComparableList18.reverse();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable24 = strComparableList18.remove(104);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(strComparableList22);
    }

    @Test
    public void test01868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01868");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 49, 0, (int) (byte) 10);
        java.lang.String str4 = node3.getSourceFileName();
        boolean boolean5 = node3.isBreak();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test01869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01869");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        boolean boolean69 = parameterizedType67.isNominalType();
        java.lang.String str70 = parameterizedType67.toDebugHashCodeString();
        boolean boolean71 = parameterizedType67.isUnknownType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{proxy:function (): {1535570807}}" + "'", str70, "{proxy:function (): {1535570807}}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test01870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01870");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable4 = jSTypeRegistry2.getEachReferenceTypeWithProperty("{2044072356}");
        com.google.javascript.rhino.jstype.ObjectType objectType5 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable10 = jSTypeRegistry8.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean11 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        boolean boolean12 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node21 = node18.useSourceInfoIfMissingFromForTree(node20);
        boolean boolean22 = node20.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable27 = jSTypeRegistry25.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean28 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType29 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.jstype.FunctionType functionType33 = jSTypeRegistry25.createFunctionTypeWithVarArgs(jSType29, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = functionType33.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType35 = jSTypeRegistry8.createEnumType("false", node20, (com.google.javascript.rhino.jstype.JSType) functionType33);
        java.util.Set<java.lang.String> strSet36 = functionType33.getOwnPropertyNames();
        boolean boolean37 = functionType33.isInterface();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable42 = jSTypeRegistry40.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean43 = jSTypeRegistry40.shouldTolerateUndefinedValues();
        boolean boolean44 = jSTypeRegistry40.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node53 = node50.useSourceInfoIfMissingFromForTree(node52);
        boolean boolean54 = node52.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable59 = jSTypeRegistry57.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean60 = jSTypeRegistry57.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType61 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.jstype.FunctionType functionType65 = jSTypeRegistry57.createFunctionTypeWithVarArgs(jSType61, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = functionType65.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType67 = jSTypeRegistry40.createEnumType("false", node52, (com.google.javascript.rhino.jstype.JSType) functionType65);
        boolean boolean69 = enumType67.isPropertyTypeDeclared("");
        boolean boolean70 = enumType67.matchesStringContext();
        java.lang.String str71 = enumType67.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType72 = enumType67.getConstructor();
        boolean boolean73 = functionType33.isEquivalentTo((com.google.javascript.rhino.jstype.JSType) enumType67);
        com.google.javascript.rhino.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter74, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable78 = jSTypeRegistry76.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean79 = jSTypeRegistry76.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType80 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        com.google.javascript.rhino.jstype.FunctionType functionType84 = jSTypeRegistry76.createFunctionTypeWithVarArgs(jSType80, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        com.google.javascript.rhino.jstype.JSType jSType85 = jSTypeRegistry2.createFunctionTypeWithVarArgs(objectType5, (com.google.javascript.rhino.jstype.JSType) functionType33, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        boolean boolean86 = functionType33.hasAnyTemplate();
        boolean boolean87 = functionType33.canBeCalled();
        org.junit.Assert.assertNotNull(objectTypeIterable4);
        org.junit.Assert.assertNotNull(jSTypeIterable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(functionType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(enumType35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(functionType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(enumType67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{108407041}" + "'", str71, "{108407041}");
        org.junit.Assert.assertNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(functionType84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test01871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01871");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean30 = node14.isTry();
        node14.removeProp(45);
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test01872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01872");
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder7 = node6.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node21 = new com.google.javascript.rhino.Node((int) 'a', node6, node12, node20);
        boolean boolean22 = node21.isGetterDef();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = new com.google.javascript.rhino.Node(45, node21, node24, 44, 16);
        boolean boolean28 = node21.isOptionalArg();
        com.google.javascript.rhino.Node node29 = node21.getNext();
        boolean boolean30 = node21.isAssignAdd();
        node21.putIntProp(41, 51);
        boolean boolean34 = node21.wasEmptyNode();
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean40 = node39.isDefaultCase();
        node39.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId43 = node39.getInputId();
        boolean boolean44 = node39.isScript();
        boolean boolean45 = node39.isFalse();
        boolean boolean46 = node39.isVarArgs();
        node39.putIntProp((int) (byte) 100, 100);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node50 = node21.clonePropsFrom(node39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Node has existing properties.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(inputId43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test01873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01873");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        int int12 = functionType10.getMinArguments();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable17 = jSTypeRegistry15.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean18 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        boolean boolean19 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node28 = node25.useSourceInfoIfMissingFromForTree(node27);
        boolean boolean29 = node27.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType42 = jSTypeRegistry15.createEnumType("false", node27, (com.google.javascript.rhino.jstype.JSType) functionType40);
        boolean boolean44 = enumType42.isPropertyTypeDeclared("");
        boolean boolean45 = enumType42.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType46 = enumType42.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType47 = enumType42.getElementsType();
        boolean boolean48 = enumElementType47.matchesObjectContext();
        boolean boolean50 = enumElementType47.isPropertyTypeInferred("{1063101054}");
        com.google.javascript.rhino.jstype.FunctionType functionType51 = enumElementType47.getConstructor();
        boolean boolean52 = functionType10.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) enumElementType47);
        com.google.javascript.rhino.jstype.EnumElementType enumElementType53 = enumElementType47.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.ObjectType objectType54 = enumElementType53.getImplicitPrototype();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(jSTypeIterable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(enumType42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(unionType46);
        org.junit.Assert.assertNotNull(enumElementType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(functionType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(enumElementType53);
        org.junit.Assert.assertNull(objectType54);
    }

    @Test
    public void test01874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01874");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean1 = jSDocInfo0.isDefine();
        boolean boolean2 = jSDocInfo0.isConstructor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test01875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01875");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node11.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean18 = node17.isDefaultCase();
        node17.setVarArgs(true);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) 'a', node11, node17, node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile27 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node25);
        com.google.javascript.rhino.Node node28 = node4.useSourceInfoFromForTree(node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile29 = node25.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        java.util.Set<java.lang.String> strSet72 = functionType69.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair73 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType40, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.Node node74 = functionType40.getSource();
        node25.setJSType((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = functionType40.getPrototype();
        java.lang.String str77 = functionType40.toString();
        com.google.javascript.rhino.jstype.ObjectType objectType78 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType40);
        java.util.Set<java.lang.String> strSet79 = functionType40.getPropertyNames();
        com.google.javascript.rhino.jstype.JSType jSType81 = functionType40.findPropertyType("Unknown class name");
        boolean boolean82 = functionType40.isCheckedUnknownType();
        boolean boolean84 = functionType40.isPropertyInExterns("{309605780}");
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(staticSourceFile27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "function (): ?" + "'", str77, "function (): ?");
        org.junit.Assert.assertNotNull(objectType78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNull(jSType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test01876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01876");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        boolean boolean19 = node18.isGetterDef();
        com.google.javascript.rhino.Node node21 = node18.getAncestor(40960);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node22 = node21.cloneTree();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(node21);
    }

    @Test
    public void test01877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01877");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node21 = node2.getNext();
        int int22 = node2.getCharno();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node30 = node27.useSourceInfoIfMissingFromForTree(node29);
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean36 = node35.isDefaultCase();
        node35.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId39 = node35.getInputId();
        node35.detachChildren();
        com.google.javascript.rhino.Node node41 = node29.copyInformationFrom(node35);
        int int42 = node35.getType();
        java.lang.String[] strArray48 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        node35.setDirectives((java.util.Set<java.lang.String>) strSet49);
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean54 = strSet49.remove((java.lang.Object) node53);
        com.google.javascript.rhino.Node node56 = node53.getAncestor(53);
        boolean boolean57 = node53.isNumber();
        node53.setCharno(31);
        com.google.javascript.rhino.Node node60 = node2.srcrefTree(node53);
        com.google.javascript.rhino.Node node65 = com.google.javascript.rhino.Node.newString((int) ' ', "{proxy:function (): {882920012}}", 1, (int) '#');
        com.google.javascript.rhino.Node node66 = node53.copyInformationFrom(node65);
        boolean boolean67 = node66.isWith();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(inputId39);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 45 + "'", int42 == 45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test01878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01878");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        boolean boolean35 = enumElementType34.hasReferenceName();
        com.google.javascript.rhino.jstype.ObjectType objectType36 = enumElementType34.getImplicitPrototype();
        boolean boolean38 = enumElementType34.isPropertyTypeInferred("{475082631}");
        boolean boolean39 = enumElementType34.isResolved();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(objectType36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test01879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01879");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        jSDocInfo0.setLicense("");
        boolean boolean4 = jSDocInfo0.isDeprecated();
        boolean boolean6 = jSDocInfo0.hasParameterType("InputId: hi!");
        int int7 = jSDocInfo0.getParameterCount();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection8 = jSDocInfo0.getTypeNodes();
        int int9 = jSDocInfo0.getExtendedInterfacesCount();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(nodeCollection8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test01880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01880");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        boolean boolean2 = jSDocInfo0.hasTypedefType();
        java.lang.String str3 = jSDocInfo0.getReturnDescription();
        boolean boolean4 = jSDocInfo0.isExterns();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression5 = jSDocInfo0.getThisType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(jSTypeExpression5);
    }

    @Test
    public void test01881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01881");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        jSDocInfo0.setLicense("");
        boolean boolean4 = jSDocInfo0.isDeprecated();
        boolean boolean6 = jSDocInfo0.hasParameterType("InputId: hi!");
        boolean boolean7 = jSDocInfo0.isExterns();
        boolean boolean8 = jSDocInfo0.hasType();
        boolean boolean9 = jSDocInfo0.isNoTypeCheck();
        boolean boolean10 = jSDocInfo0.hasBaseType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test01882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01882");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        node4.setVarArgs(true);
        node4.setVarArgs(false);
        boolean boolean10 = node4.isDebugger();
        boolean boolean11 = node4.isNoSideEffectsCall();
        com.google.javascript.rhino.InputId inputId13 = new com.google.javascript.rhino.InputId("hi!");
        java.lang.String str14 = inputId13.toString();
        node4.setInputId(inputId13);
        java.lang.String str16 = inputId13.toString();
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean18 = jSDocInfo17.hasFileOverview();
        boolean boolean19 = jSDocInfo17.isImplicitCast();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression20 = jSDocInfo17.getEnumParameterType();
        boolean boolean21 = jSDocInfo17.hasBaseType();
        boolean boolean22 = jSDocInfo17.isInterface();
        boolean boolean23 = jSDocInfo17.hasReturnType();
        boolean boolean24 = inputId13.equals((java.lang.Object) boolean23);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "InputId: hi!" + "'", str14, "InputId: hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "InputId: hi!" + "'", str16, "InputId: hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jSTypeExpression20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test01883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01883");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(4);
    }

    @Test
    public void test01884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01884");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        boolean boolean33 = enumType29.isConstructor();
        com.google.javascript.rhino.jstype.EnumType enumType34 = enumType29.toMaybeEnumType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType35 = enumType29.toMaybeEnumElementType();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean42 = node41.isDefaultCase();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection43 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node41);
        boolean boolean44 = node41.isLabel();
        boolean boolean45 = node41.isGetterDef();
        boolean boolean46 = enumType29.defineElement("{proxy:function (): {125279184}}", node41);
        java.lang.String str50 = node41.toString(true, false, true);
        boolean boolean51 = node41.isDo();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNull(enumElementType35);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(nodeCollection43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "SHEQ  1" + "'", str50, "SHEQ  1");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test01885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01885");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType jSType13 = functionType10.unboxesTo();
        boolean boolean14 = functionType10.canBeCalled();
        boolean boolean15 = functionType10.isEnumType();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot17 = functionType10.getSlot("{proxy:function (): {1279320382}}");
        com.google.javascript.rhino.jstype.JSType jSType18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType.TypePair typePair19 = functionType10.getTypesUnderInequality(jSType18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(jSType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(staticSlot17);
    }

    @Test
    public void test01886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01886");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node5 = node4.getParent();
        int int6 = node4.getChildCount();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder13 = node12.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean19 = node18.isDefaultCase();
        node18.setVarArgs(true);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node27 = new com.google.javascript.rhino.Node((int) 'a', node12, node18, node26);
        boolean boolean28 = node27.isGetterDef();
        boolean boolean29 = node27.isQuotedString();
        node27.setSourceEncodedPosition(4);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression33 = new com.google.javascript.rhino.JSTypeExpression(node27, "Unknown class name");
        boolean boolean34 = jSTypeExpression33.isOptionalArg();
        com.google.javascript.rhino.Node node35 = jSTypeExpression33.getRoot();
        boolean boolean36 = node4.hasChild(node35);
        boolean boolean37 = node4.isName();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder13);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test01887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01887");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.Node node70 = parameterizedType67.getPropertyNode("");
        boolean boolean71 = parameterizedType67.isUnknownType();
        boolean boolean72 = parameterizedType67.isNativeObjectType();
        java.lang.Iterable iterable73 = parameterizedType67.getCtorImplementedInterfaces();
        boolean boolean74 = parameterizedType67.isObject();
        boolean boolean75 = parameterizedType67.isAllType();
        boolean boolean77 = parameterizedType67.isPropertyTypeDeclared("");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(iterable73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test01888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01888");
        com.google.javascript.rhino.InputId inputId1 = new com.google.javascript.rhino.InputId("{631370465}");
        java.lang.String str2 = inputId1.toString();
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry5 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable7 = jSTypeRegistry5.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean8 = jSTypeRegistry5.shouldTolerateUndefinedValues();
        boolean boolean9 = jSTypeRegistry5.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable14 = jSTypeRegistry12.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean15 = jSTypeRegistry12.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry18.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean21 = jSTypeRegistry18.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = jSTypeRegistry24.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList29 = com.google.common.collect.ImmutableList.of(jSTypeRegistry5, jSTypeRegistry12, jSTypeRegistry18, jSTypeRegistry24);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry5.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node42 = node41.getParent();
        boolean boolean43 = node41.isFalse();
        boolean boolean44 = node41.isIf();
        boolean boolean45 = inputId1.equals((java.lang.Object) node41);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "InputId: {631370465}" + "'", str2, "InputId: {631370465}");
        org.junit.Assert.assertNotNull(jSTypeIterable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(errorReporter28);
        org.junit.Assert.assertNotNull(jSTypeRegistryList29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test01889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01889");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        com.google.javascript.rhino.jstype.TemplateType templateType69 = parameterizedType67.toMaybeTemplateType();
        com.google.javascript.rhino.jstype.JSType jSType70 = parameterizedType67.collapseUnion();
        boolean boolean71 = parameterizedType67.isNoResolvedType();
        boolean boolean72 = parameterizedType67.canBeCalled();
        com.google.javascript.rhino.JSDocInfo jSDocInfo73 = null;
        parameterizedType67.setJSDocInfo(jSDocInfo73);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertNull(templateType69);
        org.junit.Assert.assertNotNull(jSType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test01890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01890");
        com.google.javascript.rhino.Node node4 = new com.google.javascript.rhino.Node(1, 35, 48);
        node4.putBooleanProp(50, true);
        com.google.javascript.rhino.Node node8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node11 = new com.google.javascript.rhino.Node(15, node4, node8, 8, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test01891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01891");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative1);
        java.lang.String str3 = assertionFunctionSpec2.getFunctionName();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder11 = node10.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean17 = node16.isDefaultCase();
        node16.setVarArgs(true);
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node25 = new com.google.javascript.rhino.Node((int) 'a', node10, node16, node24);
        boolean boolean26 = node25.isGetterDef();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node31 = new com.google.javascript.rhino.Node(45, node25, node28, 44, 16);
        boolean boolean32 = node25.isOptionalArg();
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node41 = node38.useSourceInfoIfMissingFromForTree(node40);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean47 = node46.isDefaultCase();
        node46.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId50 = node46.getInputId();
        node46.detachChildren();
        com.google.javascript.rhino.Node node52 = node40.copyInformationFrom(node46);
        int int53 = node46.getType();
        java.lang.String[] strArray59 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        node46.setDirectives((java.util.Set<java.lang.String>) strSet60);
        com.google.javascript.rhino.Node node67 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node70 = node67.useSourceInfoIfMissingFromForTree(node69);
        int int71 = node67.getSourceOffset();
        com.google.javascript.rhino.Node node72 = new com.google.javascript.rhino.Node(35, node46, node67);
        com.google.javascript.rhino.Node node73 = node25.useSourceInfoFrom(node46);
        boolean boolean74 = node25.isTrue();
        com.google.javascript.rhino.ErrorReporter errorReporter75 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry77 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter75, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable79 = jSTypeRegistry77.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean80 = jSTypeRegistry77.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType81 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray82 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList83 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList83, jSTypeArray82);
        com.google.javascript.rhino.jstype.FunctionType functionType85 = jSTypeRegistry77.createFunctionTypeWithVarArgs(jSType81, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList83);
        jSTypeRegistry77.forwardDeclareType("{1687381779}");
        com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode resolveMode88 = com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.IMMEDIATE;
        jSTypeRegistry77.setResolveMode(resolveMode88);
        com.google.javascript.rhino.jstype.JSType jSType90 = assertionFunctionSpec2.getAssertedType(node25, jSTypeRegistry77);
        boolean boolean91 = node25.isWith();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str3, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(inputId50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 45 + "'", int53 == 45);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(jSTypeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertTrue("'" + resolveMode88 + "' != '" + com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.IMMEDIATE + "'", resolveMode88.equals(com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.IMMEDIATE));
        org.junit.Assert.assertNull(jSType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test01892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01892");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.isStringValueType();
        boolean boolean13 = functionType10.isNoObjectType();
        boolean boolean14 = functionType10.isRecordType();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable19 = jSTypeRegistry17.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean20 = jSTypeRegistry17.shouldTolerateUndefinedValues();
        boolean boolean21 = jSTypeRegistry17.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node30 = node27.useSourceInfoIfMissingFromForTree(node29);
        boolean boolean31 = node29.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable36 = jSTypeRegistry34.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean37 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = jSTypeRegistry34.createFunctionTypeWithVarArgs(jSType38, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        boolean boolean43 = functionType42.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType44 = jSTypeRegistry17.createEnumType("false", node29, (com.google.javascript.rhino.jstype.JSType) functionType42);
        boolean boolean46 = enumType44.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo48 = null;
        enumType44.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo48);
        boolean boolean51 = enumType44.isPropertyInExterns("Unknown class name");
        com.google.javascript.rhino.Node node53 = enumType44.getPropertyNode("Not declared as a type name");
        boolean boolean55 = enumType44.isPropertyTypeInferred("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean56 = functionType10.isSubtype((com.google.javascript.rhino.jstype.JSType) enumType44);
        boolean boolean58 = functionType10.isPropertyInExterns("{142159271}");
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet59 = functionType10.getPossibleToBooleanOutcomes();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot61 = functionType10.getSlot("{proxy:function (): {2130596417}}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(functionType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(enumType44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet59 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet59.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
        org.junit.Assert.assertNull(staticSlot61);
    }

    @Test
    public void test01893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01893");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        boolean boolean2 = jSDocInfo0.isExpose();
        java.lang.String str3 = jSDocInfo0.getBlockDescription();
        boolean boolean5 = jSDocInfo0.hasParameterType("{475082631}");
        java.lang.String str6 = jSDocInfo0.getSourceName();
        boolean boolean7 = jSDocInfo0.hasType();
        boolean boolean8 = jSDocInfo0.shouldPreserveTry();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test01894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01894");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean71 = parameterizedType67.isStringObjectType();
        com.google.javascript.rhino.jstype.TemplateType templateType72 = parameterizedType67.toMaybeTemplateType();
        boolean boolean73 = parameterizedType67.matchesUint32Context();
        com.google.javascript.rhino.jstype.ObjectType objectType74 = parameterizedType67.getTypeOfThis();
        com.google.javascript.rhino.JSDocInfo jSDocInfo76 = parameterizedType67.getOwnPropertyJSDocInfo("SHEQ  [var_args_name: 1]");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(templateType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objectType74);
        org.junit.Assert.assertNull(jSDocInfo76);
    }

    @Test
    public void test01895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01895");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean6 = node4.getBooleanProp(37);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test01896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01896");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        boolean boolean21 = node2.isFor();
        boolean boolean22 = node2.isFunction();
        boolean boolean23 = node2.isDefaultCase();
        com.google.javascript.rhino.Node node24 = node2.getNext();
        // The following exception was thrown during execution in test generation
        try {
            node2.setString("{918579084}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: NUMBER 100.0 is not a string node");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
    }

    @Test
    public void test01897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01897");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        jSDocInfo0.setLicense("");
        boolean boolean4 = jSDocInfo0.isDeprecated();
        boolean boolean6 = jSDocInfo0.hasParameterType("InputId: hi!");
        boolean boolean7 = jSDocInfo0.isExterns();
        boolean boolean8 = jSDocInfo0.hasType();
        java.util.Set<java.lang.String> strSet9 = jSDocInfo0.getSuppressions();
        java.lang.String str10 = jSDocInfo0.getDeprecationReason();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList11 = jSDocInfo0.getThrownTypes();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(jSTypeExpressionList11);
    }

    @Test
    public void test01898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01898");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        boolean boolean33 = enumType29.isConstructor();
        com.google.javascript.rhino.jstype.JSType jSType34 = enumType29.getIndexType();
        com.google.javascript.rhino.jstype.JSType jSType36 = enumType29.getRestrictedTypeGivenToBooleanOutcome(false);
        com.google.javascript.rhino.jstype.UnionType unionType37 = jSType36.toMaybeUnionType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(jSType34);
        org.junit.Assert.assertNotNull(jSType36);
        org.junit.Assert.assertNull(unionType37);
    }

    @Test
    public void test01899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01899");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean1 = jSDocInfo0.hasFileOverview();
        java.util.Collection<java.lang.String> strCollection2 = jSDocInfo0.getReferences();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression3 = jSDocInfo0.getEnumParameterType();
        com.google.common.collect.ImmutableList<java.lang.String> strList4 = jSDocInfo0.getTemplateTypeNames();
        boolean boolean5 = jSDocInfo0.hasBaseType();
        boolean boolean6 = jSDocInfo0.isNoSideEffects();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(strCollection2);
        org.junit.Assert.assertNull(jSTypeExpression3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test01900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01900");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int8 = node7.getType();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder15 = node14.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean21 = node20.isDefaultCase();
        node20.setVarArgs(true);
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = new com.google.javascript.rhino.Node((int) 'a', node14, node20, node28);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile30 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node28);
        com.google.javascript.rhino.Node node31 = node7.useSourceInfoFromForTree(node28);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile32 = node28.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable37 = jSTypeRegistry35.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean38 = jSTypeRegistry35.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType39 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry35.createFunctionTypeWithVarArgs(jSType39, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = functionType43.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        boolean boolean51 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node60 = node57.useSourceInfoIfMissingFromForTree(node59);
        boolean boolean61 = node59.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable66 = jSTypeRegistry64.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean67 = jSTypeRegistry64.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType68 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry64.createFunctionTypeWithVarArgs(jSType68, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        boolean boolean73 = functionType72.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType74 = jSTypeRegistry47.createEnumType("false", node59, (com.google.javascript.rhino.jstype.JSType) functionType72);
        java.util.Set<java.lang.String> strSet75 = functionType72.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair76 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType43, (com.google.javascript.rhino.jstype.JSType) functionType72);
        com.google.javascript.rhino.Node node77 = functionType43.getSource();
        node28.setJSType((com.google.javascript.rhino.jstype.JSType) functionType43);
        com.google.javascript.rhino.ErrorReporter errorReporter79 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter79, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable83 = jSTypeRegistry81.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean84 = jSTypeRegistry81.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType85 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray86 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList87 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList87, jSTypeArray86);
        com.google.javascript.rhino.jstype.FunctionType functionType89 = jSTypeRegistry81.createFunctionTypeWithVarArgs(jSType85, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        com.google.javascript.rhino.jstype.FunctionType functionType90 = jSTypeRegistry2.createFunctionType((com.google.javascript.rhino.jstype.JSType) functionType43, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        boolean boolean91 = functionType43.hasReferenceName();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.FunctionType functionType92 = functionType43.cloneWithoutArrowType();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 45 + "'", int8 == 45);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder15);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(staticSourceFile32);
        org.junit.Assert.assertNotNull(jSTypeIterable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(enumType74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(jSTypeIterable83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(jSTypeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(functionType89);
        org.junit.Assert.assertNotNull(functionType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test01901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01901");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node26 = node23.useSourceInfoIfMissingFromForTree(node25);
        node26.setLineno(10);
        com.google.javascript.rhino.Node node29 = node12.copyInformationFrom(node26);
        boolean boolean30 = node29.isVarArgs();
        com.google.javascript.rhino.Node node31 = com.google.javascript.jscomp.NodeUtil.newExpr(node29);
        boolean boolean32 = node31.isTypeOf();
        boolean boolean33 = node31.isInc();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test01902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01902");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        boolean boolean21 = node20.isObjectLit();
        int int22 = node20.getType();
        boolean boolean23 = node20.isGetterDef();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test01903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01903");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        boolean boolean35 = enumElementType34.hasReferenceName();
        boolean boolean36 = enumElementType34.matchesStringContext();
        com.google.javascript.rhino.jstype.JSType jSType38 = enumElementType34.findPropertyType("{815546278}");
        boolean boolean39 = enumElementType34.hasReferenceName();
        boolean boolean40 = enumElementType34.matchesStringContext();
        boolean boolean41 = enumElementType34.isObject();
        com.google.javascript.rhino.jstype.JSType jSType42 = enumElementType34.getPrimitiveType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(jSType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSType42);
    }

    @Test
    public void test01904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01904");
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet1 = com.google.javascript.rhino.jstype.BooleanLiteralSet.get(false);
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet3 = com.google.javascript.rhino.jstype.BooleanLiteralSet.get(false);
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet4 = booleanLiteralSet1.intersection(booleanLiteralSet3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        boolean boolean36 = functionType32.isInterface();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet37 = functionType32.getPossibleToBooleanOutcomes();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet38 = booleanLiteralSet4.intersection(booleanLiteralSet37);
        boolean boolean40 = booleanLiteralSet38.contains(true);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet1 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.FALSE + "'", booleanLiteralSet1.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.FALSE));
        org.junit.Assert.assertTrue("'" + booleanLiteralSet3 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.FALSE + "'", booleanLiteralSet3.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.FALSE));
        org.junit.Assert.assertTrue("'" + booleanLiteralSet4 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.FALSE + "'", booleanLiteralSet4.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.FALSE));
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + booleanLiteralSet37 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet37.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
        org.junit.Assert.assertTrue("'" + booleanLiteralSet38 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.EMPTY + "'", booleanLiteralSet38.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.EMPTY));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test01905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01905");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("false");
        java.lang.Iterable iterable73 = parameterizedType67.getCtorImplementedInterfaces();
        boolean boolean74 = parameterizedType67.matchesObjectContext();
        boolean boolean76 = parameterizedType67.isPropertyTypeDeclared("{142159271}");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(iterable73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test01906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01906");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        boolean boolean7 = node5.isCase();
        com.google.javascript.rhino.jstype.JSType jSType8 = node5.getJSType();
        com.google.javascript.rhino.Node node10 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean11 = node10.isFalse();
        boolean boolean12 = node10.isQualifiedName();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newNumber((double) 2, 54, (int) (short) 100);
        com.google.javascript.rhino.Node node17 = node10.srcref(node16);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node(16, node5, node16, (int) (byte) -1, 4095);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = node16.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: NUMBER 2.0 54 is not a string node");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(jSType8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(node17);
    }

    @Test
    public void test01907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01907");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) 12);
        com.google.javascript.rhino.Node node2 = com.google.javascript.jscomp.NodeUtil.newExpr(node1);
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags4 = new com.google.javascript.rhino.Node.SideEffectFlags(100);
        sideEffectFlags4.setAllFlags();
        boolean boolean6 = sideEffectFlags4.areAllFlagsSet();
        boolean boolean7 = sideEffectFlags4.areAllFlagsSet();
        sideEffectFlags4.setMutatesArguments();
        // The following exception was thrown during execution in test generation
        try {
            node2.setSideEffectFlags(sideEffectFlags4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got EXPR_RESULT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test01908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01908");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        node15.setSourceEncodedPositionForTree(45);
        boolean boolean23 = node15.isQualifiedName();
        boolean boolean24 = node15.isIn();
        java.lang.Object obj26 = node15.getProp((int) 'a');
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test01909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01909");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        node4.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId8 = node4.getInputId();
        node4.detachChildren();
        boolean boolean10 = node4.isNot();
        boolean boolean11 = node4.isVoid();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable12 = node4.children();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inputId8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(nodeIterable12);
    }

    @Test
    public void test01910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01910");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        boolean boolean35 = enumElementType34.matchesObjectContext();
        boolean boolean37 = enumElementType34.isPropertyTypeInferred("{1063101054}");
        com.google.javascript.rhino.jstype.FunctionType functionType38 = enumElementType34.getConstructor();
        boolean boolean39 = enumElementType34.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType41 = enumElementType34.getPropertyType("{734238324}");
        int int42 = enumElementType34.getPropertiesCount();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(functionType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test01911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01911");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        java.util.Set<java.lang.String> strSet42 = functionType39.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair43 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType10, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean49 = node48.isDefaultCase();
        node48.setVarArgs(true);
        node48.setVarArgs(false);
        boolean boolean54 = node48.isDebugger();
        boolean boolean55 = node48.isNoSideEffectsCall();
        com.google.javascript.rhino.InputId inputId57 = new com.google.javascript.rhino.InputId("hi!");
        java.lang.String str58 = inputId57.toString();
        node48.setInputId(inputId57);
        functionType39.setSource(node48);
        com.google.javascript.rhino.InputId inputId61 = node48.getInputId();
        boolean boolean62 = node48.isSwitch();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.JSDocInfo jSDocInfo63 = com.google.javascript.jscomp.NodeUtil.getFunctionJSDocInfo(node48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "InputId: hi!" + "'", str58, "InputId: hi!");
        org.junit.Assert.assertNotNull(inputId61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test01912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01912");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType35 = enumElementType34.toMaybeEnumElementType();
        boolean boolean36 = enumElementType35.matchesNumberContext();
        boolean boolean37 = enumElementType35.isOrdinaryFunction();
        boolean boolean38 = enumElementType35.isEnumElementType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertNotNull(enumElementType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test01913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01913");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType jSType3 = null;
        boolean boolean5 = jSTypeRegistry2.canPropertyBeDefined(jSType3, "Unknown class name");
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node14 = node11.useSourceInfoIfMissingFromForTree(node13);
        boolean boolean15 = node13.isExprResult();
        com.google.javascript.rhino.Node node16 = node13.cloneTree();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        boolean boolean23 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node32 = node29.useSourceInfoIfMissingFromForTree(node31);
        boolean boolean33 = node31.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable38 = jSTypeRegistry36.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean39 = jSTypeRegistry36.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType40 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.jstype.FunctionType functionType44 = jSTypeRegistry36.createFunctionTypeWithVarArgs(jSType40, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        boolean boolean45 = functionType44.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType46 = jSTypeRegistry19.createEnumType("false", node31, (com.google.javascript.rhino.jstype.JSType) functionType44);
        boolean boolean48 = enumType46.isPropertyTypeDeclared("");
        boolean boolean49 = enumType46.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType50 = enumType46.toMaybeUnionType();
        com.google.javascript.rhino.jstype.ObjectType objectType51 = jSTypeRegistry2.createObjectType("{581538441}", node13, (com.google.javascript.rhino.jstype.ObjectType) enumType46);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry2.getType("{928842531}");
        boolean boolean55 = jSTypeRegistry2.isForwardDeclaredType("{proxy:function (): {392807422}}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(functionType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(enumType46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(unionType50);
        org.junit.Assert.assertNotNull(objectType51);
        org.junit.Assert.assertNull(jSType53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test01914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01914");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder42 = node41.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean48 = node47.isDefaultCase();
        node47.setVarArgs(true);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = new com.google.javascript.rhino.Node((int) 'a', node41, node47, node55);
        boolean boolean57 = enumType29.defineElement("{209777139}", node55);
        boolean boolean58 = enumType29.hasReferenceName();
        com.google.javascript.rhino.jstype.JSType jSType60 = enumType29.getPropertyType("{796389407}");
        com.google.javascript.rhino.jstype.JSType jSType62 = enumType29.getPropertyType("{1551784408}");
        boolean boolean63 = enumType29.isTemplateType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo65 = enumType29.getOwnPropertyJSDocInfo("{656021098}");
        boolean boolean66 = enumType29.isObject();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSType60);
        org.junit.Assert.assertNotNull(jSType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(jSDocInfo65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test01915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01915");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        node12.setType(37);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder27 = node26.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean33 = node32.isDefaultCase();
        node32.setVarArgs(true);
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node41 = new com.google.javascript.rhino.Node((int) 'a', node26, node32, node40);
        com.google.javascript.rhino.InputId inputId42 = node26.getInputId();
        boolean boolean43 = node26.isEmpty();
        com.google.javascript.rhino.Node node44 = node12.srcrefTree(node26);
        boolean boolean45 = node44.isStringKey();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder27);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(inputId42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test01916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01916");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator19 = strComparableList18.spliterator();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean30 = node29.isFalse();
        boolean boolean31 = node26.hasChild(node29);
        boolean boolean32 = strComparableList18.contains((java.lang.Object) boolean31);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = strComparableList18.iterator();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList18.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strComparableSpliterator19);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableItor33);
    }

    @Test
    public void test01917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01917");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("");
        com.google.javascript.rhino.jstype.FunctionType functionType73 = parameterizedType67.getConstructor();
        boolean boolean74 = parameterizedType67.isInstanceType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo76 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str77 = jSDocInfo76.getDescription();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression78 = jSDocInfo76.getType();
        parameterizedType67.setPropertyJSDocInfo("NUMBER 100.0", jSDocInfo76);
        boolean boolean80 = jSDocInfo76.isInterface();
        boolean boolean81 = jSDocInfo76.isIdGenerator();
        boolean boolean83 = jSDocInfo76.hasDescriptionForParameter("{378012617}");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(functionType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(jSTypeExpression78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test01918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01918");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable4 = jSTypeRegistry2.getEachReferenceTypeWithProperty("{2044072356}");
        com.google.javascript.rhino.jstype.ObjectType objectType5 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable10 = jSTypeRegistry8.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean11 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        boolean boolean12 = jSTypeRegistry8.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node21 = node18.useSourceInfoIfMissingFromForTree(node20);
        boolean boolean22 = node20.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable27 = jSTypeRegistry25.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean28 = jSTypeRegistry25.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType29 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.jstype.FunctionType functionType33 = jSTypeRegistry25.createFunctionTypeWithVarArgs(jSType29, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = functionType33.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType35 = jSTypeRegistry8.createEnumType("false", node20, (com.google.javascript.rhino.jstype.JSType) functionType33);
        java.util.Set<java.lang.String> strSet36 = functionType33.getOwnPropertyNames();
        boolean boolean37 = functionType33.isInterface();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable42 = jSTypeRegistry40.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean43 = jSTypeRegistry40.shouldTolerateUndefinedValues();
        boolean boolean44 = jSTypeRegistry40.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node53 = node50.useSourceInfoIfMissingFromForTree(node52);
        boolean boolean54 = node52.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable59 = jSTypeRegistry57.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean60 = jSTypeRegistry57.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType61 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.jstype.FunctionType functionType65 = jSTypeRegistry57.createFunctionTypeWithVarArgs(jSType61, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = functionType65.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType67 = jSTypeRegistry40.createEnumType("false", node52, (com.google.javascript.rhino.jstype.JSType) functionType65);
        boolean boolean69 = enumType67.isPropertyTypeDeclared("");
        boolean boolean70 = enumType67.matchesStringContext();
        java.lang.String str71 = enumType67.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType72 = enumType67.getConstructor();
        boolean boolean73 = functionType33.isEquivalentTo((com.google.javascript.rhino.jstype.JSType) enumType67);
        com.google.javascript.rhino.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter74, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable78 = jSTypeRegistry76.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean79 = jSTypeRegistry76.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType80 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        com.google.javascript.rhino.jstype.FunctionType functionType84 = jSTypeRegistry76.createFunctionTypeWithVarArgs(jSType80, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        com.google.javascript.rhino.jstype.JSType jSType85 = jSTypeRegistry2.createFunctionTypeWithVarArgs(objectType5, (com.google.javascript.rhino.jstype.JSType) functionType33, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        boolean boolean87 = jSTypeRegistry2.hasNamespace("false");
        com.google.javascript.rhino.jstype.JSType jSType92 = jSTypeRegistry2.createNamedType("{1412226743}", "{1544533104}", 97, 38);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable94 = jSTypeRegistry2.getTypesWithProperty("{365933884}");
        org.junit.Assert.assertNotNull(objectTypeIterable4);
        org.junit.Assert.assertNotNull(jSTypeIterable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(functionType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(enumType35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(functionType65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(enumType67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{391032216}" + "'", str71, "{391032216}");
        org.junit.Assert.assertNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(functionType84);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(jSType92);
        org.junit.Assert.assertNotNull(jSTypeIterable94);
    }

    @Test
    public void test01919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01919");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        node4.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId8 = node4.getInputId();
        boolean boolean9 = node4.isScript();
        boolean boolean10 = node4.isFalse();
        boolean boolean11 = node4.isCatch();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inputId8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test01920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01920");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        node4.setSourceEncodedPosition(31);
        node4.removeProp(1);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node16 = node13.useSourceInfoIfMissingFromForTree(node15);
        node16.setLineno(10);
        int int19 = node16.getType();
        java.util.Set<java.lang.String> strSet20 = node16.getDirectives();
        com.google.javascript.rhino.JSDocInfo jSDocInfo21 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean22 = jSDocInfo21.isDefine();
        boolean boolean24 = jSDocInfo21.hasParameter("{796389407}");
        java.util.Set<java.lang.String> strSet25 = jSDocInfo21.getModifies();
        node16.setJSDocInfo(jSDocInfo21);
        boolean boolean27 = node16.isBreak();
        boolean boolean28 = node16.isParamList();
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node36 = node33.useSourceInfoIfMissingFromForTree(node35);
        boolean boolean37 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node33);
        boolean boolean38 = node33.isReturn();
        boolean boolean39 = node16.isEquivalentToTyped(node33);
        node4.addChildrenToBack(node33);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 45 + "'", int19 == 45);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test01921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01921");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType34 = enumType29.getConstructor();
        java.lang.String str35 = enumType29.getReferenceName();
        boolean boolean36 = enumType29.hasCachedValues();
        boolean boolean37 = enumType29.isStringValueType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{1306186839}" + "'", str33, "{1306186839}");
        org.junit.Assert.assertNull(functionType34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "enum{false}" + "'", str35, "enum{false}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test01922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01922");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry5 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable7 = jSTypeRegistry5.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean8 = jSTypeRegistry5.shouldTolerateUndefinedValues();
        boolean boolean9 = jSTypeRegistry5.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable14 = jSTypeRegistry12.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean15 = jSTypeRegistry12.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry18.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean21 = jSTypeRegistry18.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = jSTypeRegistry24.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList29 = com.google.common.collect.ImmutableList.of(jSTypeRegistry5, jSTypeRegistry12, jSTypeRegistry18, jSTypeRegistry24);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry5.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean43 = node42.isGetElem();
        boolean boolean44 = node42.isExprResult();
        org.junit.Assert.assertNotNull(jSTypeIterable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(errorReporter28);
        org.junit.Assert.assertNotNull(jSTypeRegistryList29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test01923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01923");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        boolean boolean69 = parameterizedType67.isAllType();
        com.google.javascript.rhino.jstype.FunctionType functionType70 = parameterizedType67.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.JSType jSType71 = parameterizedType67.collapseUnion();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType72 = parameterizedType67.toMaybeEnumElementType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(functionType70);
        org.junit.Assert.assertNotNull(jSType71);
        org.junit.Assert.assertNull(enumElementType72);
    }

    @Test
    public void test01924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01924");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot13 = functionType10.getOwnSlot("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        boolean boolean14 = functionType10.isUnionType();
        java.lang.String str15 = functionType10.toString();
        com.google.javascript.rhino.jstype.BooleanLiteralSet booleanLiteralSet16 = functionType10.getPossibleToBooleanOutcomes();
        boolean boolean17 = functionType10.hasInstanceType();
        boolean boolean18 = functionType10.isNullType();
        com.google.javascript.rhino.jstype.ObjectType objectType19 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType10);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable24 = jSTypeRegistry22.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean25 = jSTypeRegistry22.shouldTolerateUndefinedValues();
        boolean boolean26 = jSTypeRegistry22.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node35 = node32.useSourceInfoIfMissingFromForTree(node34);
        boolean boolean36 = node34.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable41 = jSTypeRegistry39.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean42 = jSTypeRegistry39.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType43 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.jstype.FunctionType functionType47 = jSTypeRegistry39.createFunctionTypeWithVarArgs(jSType43, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        boolean boolean48 = functionType47.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType49 = jSTypeRegistry22.createEnumType("false", node34, (com.google.javascript.rhino.jstype.JSType) functionType47);
        boolean boolean51 = enumType49.isPropertyTypeDeclared("");
        boolean boolean52 = enumType49.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType53 = enumType49.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType54 = enumType49.getElementsType();
        boolean boolean55 = enumElementType54.hasReferenceName();
        boolean boolean56 = enumElementType54.canBeCalled();
        com.google.javascript.rhino.jstype.JSType jSType57 = enumElementType54.autoboxesTo();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = functionType10.canTestForEqualityWith(jSType57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(jSTypeStaticSlot13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "function (): ?" + "'", str15, "function (): ?");
        org.junit.Assert.assertTrue("'" + booleanLiteralSet16 + "' != '" + com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE + "'", booleanLiteralSet16.equals(com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objectType19);
        org.junit.Assert.assertNotNull(jSTypeIterable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(functionType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(enumType49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(unionType53);
        org.junit.Assert.assertNotNull(enumElementType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(jSType57);
    }

    @Test
    public void test01925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01925");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        java.util.Set<java.lang.String> strSet30 = functionType27.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        boolean boolean33 = strSet30.equals((java.lang.Object) jSTypeRegistry32);
        com.google.javascript.rhino.jstype.JSType jSType35 = jSTypeRegistry32.getType("{78920138}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(jSType35);
    }

    @Test
    public void test01926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01926");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        jSDocInfo0.setLicense("");
        boolean boolean4 = jSDocInfo0.isDeprecated();
        boolean boolean5 = jSDocInfo0.hasReturnType();
        boolean boolean6 = jSDocInfo0.isNoCompile();
        boolean boolean7 = jSDocInfo0.containsDeclaration();
        int int8 = jSDocInfo0.getExtendedInterfacesCount();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test01927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01927");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType69 = parameterizedType67.autobox();
        com.google.javascript.rhino.JSDocInfo jSDocInfo70 = null;
        parameterizedType67.setJSDocInfo(jSDocInfo70);
        boolean boolean72 = parameterizedType67.isRegexpType();
        int int73 = parameterizedType67.getPropertiesCount();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test01928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01928");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        boolean boolean2 = jSDocInfo0.hasFileOverview();
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList3 = jSDocInfo0.getImplementedInterfaces();
        boolean boolean4 = jSDocInfo0.isExport();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeExpressionList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test01929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01929");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        boolean boolean78 = strComparableList18.contains((java.lang.Object) (short) 10);
        boolean boolean79 = strComparableList18.isEmpty();
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry82 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray83 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node84 = jSTypeRegistry82.createParameters(jSTypeArray83);
        jSTypeRegistry82.incrementGeneration();
        boolean boolean86 = strComparableList18.contains((java.lang.Object) jSTypeRegistry82);
        boolean boolean87 = strComparableList18.isEmpty();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator88 = strComparableList18.spliterator();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = strComparableList18.containsAll(strComparableCollection89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray83);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator88);
    }

    @Test
    public void test01930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01930");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder5 = node4.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node6 = node4.getLastSibling();
        boolean boolean8 = node4.getBooleanProp(17);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node16 = node13.useSourceInfoIfMissingFromForTree(node15);
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean22 = node21.isDefaultCase();
        node21.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId25 = node21.getInputId();
        node21.detachChildren();
        com.google.javascript.rhino.Node node27 = node15.copyInformationFrom(node21);
        int int28 = node21.getType();
        java.lang.String[] strArray34 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        node21.setDirectives((java.util.Set<java.lang.String>) strSet35);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean40 = strSet35.remove((java.lang.Object) node39);
        boolean boolean41 = node39.isString();
        com.google.javascript.rhino.Node node42 = node4.useSourceInfoFromForTree(node39);
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder49 = node48.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean55 = node54.isDefaultCase();
        node54.setVarArgs(true);
        com.google.javascript.rhino.Node node62 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node63 = new com.google.javascript.rhino.Node((int) 'a', node48, node54, node62);
        com.google.javascript.rhino.Node node64 = node4.useSourceInfoIfMissingFromForTree(node63);
        node4.setLength((int) (byte) 0);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder5);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(inputId25);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 45 + "'", int28 == 45);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder49);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(node64);
    }

    @Test
    public void test01931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01931");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType34 = enumType29.getConstructor();
        java.lang.Iterable iterable35 = enumType29.getCtorExtendedInterfaces();
        java.util.Spliterator<com.google.javascript.rhino.Node> nodeSpliterator36 = iterable35.spliterator();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{931524500}" + "'", str33, "{931524500}");
        org.junit.Assert.assertNull(functionType34);
        org.junit.Assert.assertNotNull(iterable35);
        org.junit.Assert.assertNotNull(nodeSpliterator36);
    }

    @Test
    public void test01932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01932");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int6 = node5.getType();
        boolean boolean7 = node5.isDebugger();
        boolean boolean8 = node5.isString();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder15 = node14.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean21 = node20.isDefaultCase();
        node20.setVarArgs(true);
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = new com.google.javascript.rhino.Node((int) 'a', node14, node20, node28);
        com.google.javascript.rhino.InputId inputId30 = node14.getInputId();
        com.google.javascript.rhino.Node node31 = node5.useSourceInfoFrom(node14);
        com.google.javascript.rhino.Node node32 = node5.cloneTree();
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node40 = node37.useSourceInfoIfMissingFromForTree(node39);
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean46 = node45.isDefaultCase();
        node45.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId49 = node45.getInputId();
        node45.detachChildren();
        com.google.javascript.rhino.Node node51 = node39.copyInformationFrom(node45);
        java.lang.String str52 = node45.toStringTree();
        com.google.javascript.rhino.jstype.JSType jSType53 = null;
        node45.setJSType(jSType53);
        boolean boolean55 = node45.isObjectLit();
        node32.addChildToBack(node45);
        boolean boolean57 = node32.isInc();
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable58 = node32.getAncestors();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node65 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node66 = node63.useSourceInfoIfMissingFromForTree(node65);
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean72 = node71.isDefaultCase();
        node71.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId75 = node71.getInputId();
        node71.detachChildren();
        com.google.javascript.rhino.Node node77 = node65.copyInformationFrom(node71);
        com.google.javascript.rhino.Node node78 = node32.copyInformationFrom(node71);
        boolean boolean79 = node32.isUnscopedQualifiedName();
        com.google.javascript.rhino.Node node84 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder85 = node84.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node86 = node84.getLastSibling();
        boolean boolean87 = node84.isOptionalArg();
        com.google.javascript.rhino.Node node88 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node89 = new com.google.javascript.rhino.Node(31, node32, node84, node88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 45 + "'", int6 == 45);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder15);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(inputId30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(inputId49);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "SHEQ  1 [var_args_name: 1]\n" + "'", str52, "SHEQ  1 [var_args_name: 1]\n");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(ancestorIterable58);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(inputId75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder85);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test01933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01933");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        boolean boolean36 = enumType34.isPropertyTypeDeclared("");
        boolean boolean37 = enumType34.matchesStringContext();
        java.lang.String str38 = enumType34.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType39 = enumType34.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo40 = enumType34.getJSDocInfo();
        enumType34.clearCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType46 = jSTypeRegistry2.getType((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) enumType34, "", "Not declared as a type name", 36, (int) '#');
        com.google.javascript.rhino.JSDocInfo jSDocInfo48 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str49 = jSDocInfo48.getDescription();
        java.lang.String str50 = jSDocInfo48.getLicense();
        jSDocInfo48.setLicense("{142159271}");
        enumType34.setPropertyJSDocInfo("{1551784408}", jSDocInfo48);
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression54 = jSDocInfo48.getEnumParameterType();
        boolean boolean55 = jSDocInfo48.shouldPreserveTry();
        java.util.Set<java.lang.String> strSet56 = jSDocInfo48.getSuppressions();
        java.lang.String str57 = jSDocInfo48.getFileOverview();
        boolean boolean58 = jSDocInfo48.hasBaseType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{1492508907}" + "'", str38, "{1492508907}");
        org.junit.Assert.assertNull(functionType39);
        org.junit.Assert.assertNull(jSDocInfo40);
        org.junit.Assert.assertNotNull(jSType46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(jSTypeExpression54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test01934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01934");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType11 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.jstype.FunctionType functionType15 = jSTypeRegistry7.createFunctionTypeWithVarArgs(jSType11, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        boolean boolean16 = functionType15.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        boolean boolean23 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node32 = node29.useSourceInfoIfMissingFromForTree(node31);
        boolean boolean33 = node31.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable38 = jSTypeRegistry36.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean39 = jSTypeRegistry36.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType40 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.jstype.FunctionType functionType44 = jSTypeRegistry36.createFunctionTypeWithVarArgs(jSType40, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        boolean boolean45 = functionType44.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType46 = jSTypeRegistry19.createEnumType("false", node31, (com.google.javascript.rhino.jstype.JSType) functionType44);
        java.util.Set<java.lang.String> strSet47 = functionType44.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair48 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType15, (com.google.javascript.rhino.jstype.JSType) functionType44);
        com.google.javascript.rhino.Node node49 = functionType15.getSource();
        com.google.javascript.rhino.jstype.JSType jSType51 = functionType15.getPropertyType("hi!");
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node57 = jSTypeRegistry55.createParameters(jSTypeArray56);
        com.google.javascript.rhino.jstype.FunctionType functionType58 = jSTypeRegistry2.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType15, true, jSTypeArray56);
        boolean boolean60 = functionType58.hasOwnProperty("{1789792193}");
        com.google.javascript.rhino.jstype.FunctionType functionType61 = functionType58.cloneWithoutArrowType();
        boolean boolean62 = functionType58.isOrdinaryFunction();
        com.google.javascript.rhino.jstype.ObjectType objectType63 = functionType58.getImplicitPrototype();
        boolean boolean64 = objectType63.isNumberValueType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(functionType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(functionType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(enumType46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(jSType51);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(functionType58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(functionType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objectType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test01935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01935");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType69 = parameterizedType67.autobox();
        java.util.Set set70 = parameterizedType67.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.UnionType unionType71 = parameterizedType67.toMaybeUnionType();
        boolean boolean72 = parameterizedType67.canBeCalled();
        boolean boolean73 = parameterizedType67.isOrdinaryFunction();
        com.google.javascript.rhino.jstype.ObjectType.Property property75 = parameterizedType67.getSlot("{1815275602}");
        boolean boolean76 = parameterizedType67.isStringValueType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertNotNull(set70);
        org.junit.Assert.assertNull(unionType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(property75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test01936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01936");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS;
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean7 = node6.isDefaultCase();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection8 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node6);
        boolean boolean9 = node6.isLabel();
        boolean boolean10 = node6.isHook();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean16 = node15.isDefaultCase();
        node15.setVarArgs(true);
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean24 = node23.isDefaultCase();
        node23.setVarArgs(true);
        com.google.javascript.rhino.Node node27 = new com.google.javascript.rhino.Node(29, node6, node15, node23);
        boolean boolean28 = node27.isRegExp();
        com.google.javascript.rhino.Node node29 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship30 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node27, node29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(nodeCollection8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test01937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01937");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator19 = strComparableList18.spliterator();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative21 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec22 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative21);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean28 = node27.isDefaultCase();
        node27.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId31 = node27.getInputId();
        node27.detachChildren();
        boolean boolean33 = node27.isNot();
        boolean boolean34 = node27.isSetterDef();
        com.google.javascript.rhino.Node node35 = assertionFunctionSpec22.getAssertedParam(node27);
        int int36 = strComparableList18.indexOf((java.lang.Object) assertionFunctionSpec22);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList55 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray54);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableList55.spliterator();
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node64 = node61.useSourceInfoIfMissingFromForTree(node63);
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean67 = node66.isFalse();
        boolean boolean68 = node63.hasChild(node66);
        boolean boolean69 = strComparableList55.contains((java.lang.Object) boolean68);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = strComparableList55.iterator();
        boolean boolean71 = strComparableList18.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList55);
        com.google.javascript.rhino.JSDocInfo.TypePosition typePosition72 = new com.google.javascript.rhino.JSDocInfo.TypePosition();
        com.google.javascript.rhino.Node node77 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean78 = node77.isDefaultCase();
        node77.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId81 = node77.getInputId();
        node77.detachChildren();
        boolean boolean83 = node77.isAssignAdd();
        typePosition72.setItem(node77);
        com.google.javascript.rhino.Node node89 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node90 = node89.getParent();
        int int91 = node89.getChildCount();
        int int93 = node89.getIntProp(0);
        boolean boolean94 = node77.isEquivalentToTyped(node89);
        int int95 = strComparableList55.lastIndexOf((java.lang.Object) node89);
        boolean boolean96 = com.google.javascript.jscomp.NodeUtil.isRelationalOperation(node89);
        boolean boolean97 = node89.isIf();
        com.google.javascript.rhino.InputId inputId98 = null;
        node89.setInputId(inputId98);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strComparableSpliterator19);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(inputId31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strComparableList55);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(inputId81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test01938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01938");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node8 = node5.useSourceInfoIfMissingFromForTree(node7);
        boolean boolean9 = node7.isExprResult();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node17 = node14.useSourceInfoIfMissingFromForTree(node16);
        boolean boolean18 = node16.isExprResult();
        boolean boolean19 = node16.isDelProp();
        com.google.javascript.rhino.InputId inputId20 = node16.getInputId();
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node29 = node26.useSourceInfoIfMissingFromForTree(node28);
        node29.setLineno(10);
        com.google.javascript.rhino.Node node37 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder38 = node37.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean44 = node43.isDefaultCase();
        node43.setVarArgs(true);
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node52 = new com.google.javascript.rhino.Node((int) 'a', node37, node43, node51);
        boolean boolean53 = node52.isGetterDef();
        boolean boolean54 = node52.isQuotedString();
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int60 = node59.getType();
        node59.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node67 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int68 = node67.getType();
        node67.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node71 = new com.google.javascript.rhino.Node(40, node29, node52, node59, node67);
        boolean boolean72 = node52.isArrayLit();
        com.google.javascript.rhino.Node node73 = node16.useSourceInfoIfMissingFromForTree(node52);
        int int75 = node16.getIntProp((int) (byte) -1);
        node16.detachChildren();
        com.google.javascript.rhino.Node node79 = new com.google.javascript.rhino.Node(51, node7, node16, 52, (int) (short) 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(inputId20);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder38);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 45 + "'", int60 == 45);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 45 + "'", int68 == 45);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test01939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01939");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        java.util.Set<java.lang.String> strSet30 = functionType27.getOwnPropertyNames();
        boolean boolean31 = functionType27.isInterface();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable36 = jSTypeRegistry34.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean37 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        boolean boolean38 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node44 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node47 = node44.useSourceInfoIfMissingFromForTree(node46);
        boolean boolean48 = node46.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable53 = jSTypeRegistry51.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean54 = jSTypeRegistry51.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType55 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.jstype.FunctionType functionType59 = jSTypeRegistry51.createFunctionTypeWithVarArgs(jSType55, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        boolean boolean60 = functionType59.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType61 = jSTypeRegistry34.createEnumType("false", node46, (com.google.javascript.rhino.jstype.JSType) functionType59);
        boolean boolean63 = enumType61.isPropertyTypeDeclared("");
        boolean boolean64 = enumType61.matchesStringContext();
        java.lang.String str65 = enumType61.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType66 = enumType61.getConstructor();
        boolean boolean67 = functionType27.isEquivalentTo((com.google.javascript.rhino.jstype.JSType) enumType61);
        boolean boolean69 = functionType27.isPropertyTypeInferred("{95881195}");
        com.google.javascript.rhino.jstype.ObjectType.Property property71 = functionType27.getSlot("{142159271}");
        functionType27.clearCachedValues();
        java.util.Set<java.lang.String> strSet73 = functionType27.getOwnPropertyNames();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(functionType59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(enumType61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{2018151118}" + "'", str65, "{2018151118}");
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(property71);
        org.junit.Assert.assertNotNull(strSet73);
    }

    @Test
    public void test01940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01940");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType34 = enumType29.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo35 = enumType29.getJSDocInfo();
        com.google.javascript.rhino.Node node36 = enumType29.getSource();
        java.lang.String str37 = node36.getQualifiedName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = node36.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: NUMBER 100.0 is not a string node");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{772283105}" + "'", str33, "{772283105}");
        org.junit.Assert.assertNull(functionType34);
        org.junit.Assert.assertNull(jSDocInfo35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test01941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01941");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        boolean boolean69 = parameterizedType67.hasReferenceName();
        boolean boolean70 = parameterizedType67.isUnknownType();
        com.google.common.base.Predicate<com.google.javascript.rhino.jstype.JSType> jSTypePredicate71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = parameterizedType67.setValidator(jSTypePredicate71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test01942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01942");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        boolean boolean8 = node6.isExprResult();
        boolean boolean9 = node6.isDelProp();
        com.google.javascript.rhino.InputId inputId10 = node6.getInputId();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node19 = node16.useSourceInfoIfMissingFromForTree(node18);
        node19.setLineno(10);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder28 = node27.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean34 = node33.isDefaultCase();
        node33.setVarArgs(true);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node42 = new com.google.javascript.rhino.Node((int) 'a', node27, node33, node41);
        boolean boolean43 = node42.isGetterDef();
        boolean boolean44 = node42.isQuotedString();
        com.google.javascript.rhino.Node node49 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int50 = node49.getType();
        node49.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int58 = node57.getType();
        node57.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node61 = new com.google.javascript.rhino.Node(40, node19, node42, node49, node57);
        boolean boolean62 = node42.isArrayLit();
        com.google.javascript.rhino.Node node63 = node6.useSourceInfoIfMissingFromForTree(node42);
        boolean boolean64 = node63.isParamList();
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node72 = node69.useSourceInfoIfMissingFromForTree(node71);
        boolean boolean73 = node71.isExprResult();
        com.google.javascript.rhino.Node node74 = node63.useSourceInfoFrom(node71);
        java.lang.String str75 = com.google.javascript.jscomp.NodeUtil.getNearestFunctionName(node71);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(inputId10);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder28);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 45 + "'", int50 == 45);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 45 + "'", int58 == 45);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test01943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01943");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable34 = enumType29.getCtorExtendedInterfaces();
        boolean boolean36 = enumType29.hasOwnProperty("{1631953089}");
        com.google.javascript.rhino.Node node37 = enumType29.getSource();
        java.lang.Iterable iterable38 = enumType29.getCtorImplementedInterfaces();
        com.google.javascript.rhino.jstype.FunctionType functionType39 = enumType29.getConstructor();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType40 = enumType29.getElementsType();
        boolean boolean41 = enumElementType40.isStringValueType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{491830915}" + "'", str33, "{491830915}");
        org.junit.Assert.assertNotNull(objectTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(iterable38);
        org.junit.Assert.assertNull(functionType39);
        org.junit.Assert.assertNotNull(enumElementType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test01944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01944");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        boolean boolean69 = parameterizedType67.isAllType();
        boolean boolean71 = parameterizedType67.hasProperty("{1130809964}");
        com.google.javascript.rhino.jstype.FunctionType functionType72 = parameterizedType67.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.ObjectType objectType73 = parameterizedType67.toObjectType();
        boolean boolean74 = parameterizedType67.isNoResolvedType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertNotNull(objectType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test01945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01945");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        boolean boolean69 = parameterizedType67.isAllType();
        com.google.javascript.rhino.jstype.FunctionType functionType70 = parameterizedType67.toMaybeFunctionType();
        com.google.javascript.rhino.jstype.JSType jSType71 = parameterizedType67.collapseUnion();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType72 = parameterizedType67.toMaybeParameterizedType();
        com.google.javascript.rhino.jstype.ObjectType objectType73 = parameterizedType72.toObjectType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(functionType70);
        org.junit.Assert.assertNotNull(jSType71);
        org.junit.Assert.assertNotNull(parameterizedType72);
        org.junit.Assert.assertNotNull(objectType73);
    }

    @Test
    public void test01946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01946");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable11 = jSTypeRegistry9.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean12 = jSTypeRegistry9.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable17 = jSTypeRegistry15.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean18 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable23 = jSTypeRegistry21.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean24 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = jSTypeRegistry21.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList26 = com.google.common.collect.ImmutableList.of(jSTypeRegistry2, jSTypeRegistry9, jSTypeRegistry15, jSTypeRegistry21);
        jSTypeRegistry21.clearNamedTypes();
        jSTypeRegistry21.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative29 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.FunctionType functionType30 = jSTypeRegistry21.getNativeFunctionType(jSTypeNative29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(errorReporter25);
        org.junit.Assert.assertNotNull(jSTypeRegistryList26);
    }

    @Test
    public void test01947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01947");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.matchesObjectContext();
        int int12 = functionType10.getMinArguments();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable17 = jSTypeRegistry15.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean18 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        boolean boolean19 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node28 = node25.useSourceInfoIfMissingFromForTree(node27);
        boolean boolean29 = node27.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType42 = jSTypeRegistry15.createEnumType("false", node27, (com.google.javascript.rhino.jstype.JSType) functionType40);
        boolean boolean44 = enumType42.isPropertyTypeDeclared("");
        boolean boolean45 = enumType42.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType46 = enumType42.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType47 = enumType42.getElementsType();
        boolean boolean48 = enumElementType47.matchesObjectContext();
        boolean boolean50 = enumElementType47.isPropertyTypeInferred("{1063101054}");
        com.google.javascript.rhino.jstype.FunctionType functionType51 = enumElementType47.getConstructor();
        boolean boolean52 = functionType10.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) enumElementType47);
        com.google.javascript.rhino.jstype.JSType jSType53 = enumElementType47.getTypeOfThis();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = jSType53.getDisplayName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(jSTypeIterable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(enumType42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(unionType46);
        org.junit.Assert.assertNotNull(enumElementType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(functionType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(jSType53);
    }

    @Test
    public void test01948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01948");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        boolean boolean6 = node4.isDebugger();
        boolean boolean7 = node4.isString();
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder14 = node13.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean20 = node19.isDefaultCase();
        node19.setVarArgs(true);
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node28 = new com.google.javascript.rhino.Node((int) 'a', node13, node19, node27);
        com.google.javascript.rhino.InputId inputId29 = node13.getInputId();
        com.google.javascript.rhino.Node node30 = node4.useSourceInfoFrom(node13);
        boolean boolean31 = node30.isHook();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNull(inputId29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test01949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01949");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.isStringValueType();
        boolean boolean13 = functionType10.isNoObjectType();
        boolean boolean14 = functionType10.isRecordType();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable19 = jSTypeRegistry17.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean20 = jSTypeRegistry17.shouldTolerateUndefinedValues();
        boolean boolean21 = jSTypeRegistry17.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node30 = node27.useSourceInfoIfMissingFromForTree(node29);
        boolean boolean31 = node29.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable36 = jSTypeRegistry34.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean37 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = jSTypeRegistry34.createFunctionTypeWithVarArgs(jSType38, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        boolean boolean43 = functionType42.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType44 = jSTypeRegistry17.createEnumType("false", node29, (com.google.javascript.rhino.jstype.JSType) functionType42);
        boolean boolean46 = enumType44.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo48 = null;
        enumType44.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo48);
        boolean boolean51 = enumType44.isPropertyInExterns("Unknown class name");
        com.google.javascript.rhino.Node node53 = enumType44.getPropertyNode("Not declared as a type name");
        boolean boolean55 = enumType44.isPropertyTypeInferred("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean56 = functionType10.isSubtype((com.google.javascript.rhino.jstype.JSType) enumType44);
        java.util.List<com.google.javascript.rhino.jstype.FunctionType> functionTypeList57 = functionType10.getSubTypes();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(functionType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(enumType44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(functionTypeList57);
    }

    @Test
    public void test01950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01950");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) 'a', node5, node11, node19);
        boolean boolean21 = node5.isScript();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder22 = node5.new FileLevelJsDocBuilder();
        boolean boolean23 = node5.isQuotedString();
        boolean boolean25 = node5.getBooleanProp(0);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable31 = jSTypeRegistry29.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean32 = jSTypeRegistry29.shouldTolerateUndefinedValues();
        boolean boolean33 = jSTypeRegistry29.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node42 = node39.useSourceInfoIfMissingFromForTree(node41);
        boolean boolean43 = node41.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable48 = jSTypeRegistry46.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean49 = jSTypeRegistry46.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType50 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.jstype.FunctionType functionType54 = jSTypeRegistry46.createFunctionTypeWithVarArgs(jSType50, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        boolean boolean55 = functionType54.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType56 = jSTypeRegistry29.createEnumType("false", node41, (com.google.javascript.rhino.jstype.JSType) functionType54);
        boolean boolean57 = functionType54.isConstructor();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable58 = functionType54.getImplementedInterfaces();
        node5.putProp(4, (java.lang.Object) objectTypeIterable58);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node60 = com.google.javascript.jscomp.NodeUtil.getFunctionParameters(node5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(functionType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(enumType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable58);
    }

    @Test
    public void test01951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01951");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node15 = jSTypeRegistry13.createParameters(jSTypeArray14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry18.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean21 = jSTypeRegistry18.shouldTolerateUndefinedValues();
        boolean boolean22 = jSTypeRegistry18.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node28 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node31 = node28.useSourceInfoIfMissingFromForTree(node30);
        boolean boolean32 = node30.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable37 = jSTypeRegistry35.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean38 = jSTypeRegistry35.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType39 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry35.createFunctionTypeWithVarArgs(jSType39, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = functionType43.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType45 = jSTypeRegistry18.createEnumType("false", node30, (com.google.javascript.rhino.jstype.JSType) functionType43);
        java.util.Set<java.lang.String> strSet46 = functionType43.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable51 = jSTypeRegistry49.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean52 = jSTypeRegistry49.shouldTolerateUndefinedValues();
        boolean boolean53 = jSTypeRegistry49.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node61 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node62 = node59.useSourceInfoIfMissingFromForTree(node61);
        boolean boolean63 = node61.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable68 = jSTypeRegistry66.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean69 = jSTypeRegistry66.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType70 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        com.google.javascript.rhino.jstype.FunctionType functionType74 = jSTypeRegistry66.createFunctionTypeWithVarArgs(jSType70, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        boolean boolean75 = functionType74.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType76 = jSTypeRegistry49.createEnumType("false", node61, (com.google.javascript.rhino.jstype.JSType) functionType74);
        com.google.javascript.rhino.jstype.FunctionType functionType77 = functionType74.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType78 = jSTypeRegistry13.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType43, (com.google.javascript.rhino.jstype.JSType) functionType77);
        boolean boolean79 = parameterizedType78.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType80 = parameterizedType78.autobox();
        com.google.javascript.rhino.ErrorReporter errorReporter81 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry83 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter81, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable85 = jSTypeRegistry83.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean86 = jSTypeRegistry83.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType87 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray88 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList89 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList89, jSTypeArray88);
        com.google.javascript.rhino.jstype.FunctionType functionType91 = jSTypeRegistry83.createFunctionTypeWithVarArgs(jSType87, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList89);
        boolean boolean92 = jSType80.canTestForEqualityWith((com.google.javascript.rhino.jstype.JSType) functionType91);
        com.google.javascript.rhino.Node node93 = functionType91.getSource();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair94 = new com.google.javascript.rhino.jstype.JSType.TypePair(jSType6, (com.google.javascript.rhino.jstype.JSType) functionType91);
        boolean boolean95 = functionType91.matchesStringContext();
        boolean boolean96 = functionType91.matchesNumberContext();
        com.google.javascript.rhino.jstype.StaticSlot staticSlot98 = functionType91.getSlot("{633999597}");
        boolean boolean99 = functionType91.isFunctionPrototypeType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(enumType45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(jSTypeIterable51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(functionType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(enumType76);
        org.junit.Assert.assertNull(functionType77);
        org.junit.Assert.assertNotNull(parameterizedType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSType80);
        org.junit.Assert.assertNotNull(jSTypeIterable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(jSTypeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(node93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(staticSlot98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test01952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01952");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableList37.stream();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList37.clear();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertNotNull(strComparableStream77);
    }

    @Test
    public void test01953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01953");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo69 = null;
        parameterizedType67.setJSDocInfo(jSDocInfo69);
        com.google.javascript.rhino.jstype.JSType jSType71 = parameterizedType67.collapseUnion();
        com.google.javascript.rhino.JSDocInfo jSDocInfo73 = parameterizedType67.getOwnPropertyJSDocInfo("{1789057375}");
        com.google.javascript.rhino.jstype.EnumElementType enumElementType74 = parameterizedType67.toMaybeEnumElementType();
        com.google.javascript.rhino.jstype.FunctionType functionType75 = parameterizedType67.toMaybeFunctionType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSType71);
        org.junit.Assert.assertNull(jSDocInfo73);
        org.junit.Assert.assertNull(enumElementType74);
        org.junit.Assert.assertNotNull(functionType75);
    }

    @Test
    public void test01954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01954");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "false", "ASSIGN_MOD", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "{2044072356}" };
        java.util.LinkedHashSet<java.lang.String> strSet6 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet6, strArray5);
        java.util.Iterator<java.lang.String> strItor8 = strSet6.iterator();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList27 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray26);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList46 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray45);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList65 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray64);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList84 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray83);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList85 = com.google.common.collect.ImmutableList.of(strComparableList27, strComparableList46, strComparableList65, strComparableList84);
        java.lang.String str86 = strComparableList46.toString();
        boolean boolean87 = strSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable89 = strComparableList46.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strItor8);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strComparableList27);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strComparableList46);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strComparableList65);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strComparableList84);
        org.junit.Assert.assertNotNull(strComparableListList85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str86, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test01955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01955");
        com.google.javascript.rhino.Node[] nodeArray4 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node5 = new com.google.javascript.rhino.Node(4095, nodeArray4);
        com.google.javascript.rhino.Node node6 = new com.google.javascript.rhino.Node(52, nodeArray4);
        com.google.javascript.rhino.Node node7 = new com.google.javascript.rhino.Node((int) ' ', nodeArray4);
        com.google.javascript.rhino.Node node10 = new com.google.javascript.rhino.Node(53, nodeArray4, 2, (int) '4');
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isDebugger();
        boolean boolean18 = node15.isString();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder25 = node24.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean31 = node30.isDefaultCase();
        node30.setVarArgs(true);
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node39 = new com.google.javascript.rhino.Node((int) 'a', node24, node30, node38);
        com.google.javascript.rhino.InputId inputId40 = node24.getInputId();
        com.google.javascript.rhino.Node node41 = node15.useSourceInfoFrom(node24);
        com.google.javascript.rhino.Node node42 = node15.cloneTree();
        boolean boolean43 = node15.isUnscopedQualifiedName();
        node15.setSourceEncodedPosition(51);
        int int46 = node15.getSourcePosition();
        com.google.javascript.rhino.Node node47 = node10.srcrefTree(node15);
        boolean boolean48 = node47.isUnscopedQualifiedName();
        org.junit.Assert.assertNotNull(nodeArray4);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder25);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNull(inputId40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 51 + "'", int46 == 51);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test01956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01956");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("TRUE {681803408}", jSTypeNative1);
        java.lang.String str3 = assertionFunctionSpec2.getFunctionName();
        com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean9 = node8.isDefaultCase();
        node8.setVarArgs(true);
        node8.setWasEmptyNode(true);
        boolean boolean14 = node8.isReturn();
        com.google.javascript.rhino.Node node15 = assertionFunctionSpec2.getAssertedParam(node8);
        com.google.javascript.rhino.Node node21 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder22 = node21.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean28 = node27.isDefaultCase();
        node27.setVarArgs(true);
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) 'a', node21, node27, node35);
        boolean boolean37 = node21.isScript();
        int int38 = node21.getLineno();
        boolean boolean39 = node21.isQualifiedName();
        boolean boolean40 = node21.isArrayLit();
        boolean boolean41 = node21.isLabelName();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable53 = jSTypeRegistry51.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean54 = jSTypeRegistry51.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable59 = jSTypeRegistry57.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean60 = jSTypeRegistry57.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry63 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable65 = jSTypeRegistry63.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean66 = jSTypeRegistry63.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter67 = jSTypeRegistry63.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList68 = com.google.common.collect.ImmutableList.of(jSTypeRegistry44, jSTypeRegistry51, jSTypeRegistry57, jSTypeRegistry63);
        jSTypeRegistry51.forwardDeclareType("function (): {985971941}");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable72 = jSTypeRegistry51.getEachReferenceTypeWithProperty("{1584882754}");
        com.google.javascript.rhino.jstype.JSType jSType73 = assertionFunctionSpec2.getAssertedType(node21, jSTypeRegistry51);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TRUE {681803408}" + "'", str3, "TRUE {681803408}");
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(errorReporter67);
        org.junit.Assert.assertNotNull(jSTypeRegistryList68);
        org.junit.Assert.assertNotNull(objectTypeIterable72);
        org.junit.Assert.assertNull(jSType73);
    }

    @Test
    public void test01957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01957");
        com.google.javascript.rhino.JSDocInfo jSDocInfo0 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str1 = jSDocInfo0.getDescription();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression2 = jSDocInfo0.getType();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression3 = jSDocInfo0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(jSTypeExpression2);
        org.junit.Assert.assertNull(jSTypeExpression3);
    }

    @Test
    public void test01958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01958");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        node4.setVarArgs(true);
        node4.setVarArgs(false);
        node4.setLength((int) (byte) 0);
        node4.removeProp((int) 'a');
        node4.setIsSyntheticBlock(true);
        boolean boolean17 = node4.getBooleanProp((-1));
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable22 = jSTypeRegistry20.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean23 = jSTypeRegistry20.shouldTolerateUndefinedValues();
        boolean boolean24 = jSTypeRegistry20.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable29 = jSTypeRegistry27.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean30 = jSTypeRegistry27.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable35 = jSTypeRegistry33.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean36 = jSTypeRegistry33.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable41 = jSTypeRegistry39.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean42 = jSTypeRegistry39.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = jSTypeRegistry39.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList44 = com.google.common.collect.ImmutableList.of(jSTypeRegistry20, jSTypeRegistry27, jSTypeRegistry33, jSTypeRegistry39);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType51 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.jstype.FunctionType functionType55 = jSTypeRegistry47.createFunctionTypeWithVarArgs(jSType51, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        java.lang.String str57 = node56.toStringTree();
        boolean boolean58 = node56.isReturn();
        boolean boolean59 = node56.isOptionalArg();
        node4.addChildToFront(node56);
        boolean boolean61 = node56.isIf();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(errorReporter43);
        org.junit.Assert.assertNotNull(jSTypeRegistryList44);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(functionType55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PARAM_LIST\n" + "'", str57, "PARAM_LIST\n");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test01959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01959");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        com.google.javascript.rhino.jstype.JSType jSType36 = enumElementType34.findPropertyType("{1571838970}");
        boolean boolean37 = enumElementType34.matchesNumberContext();
        boolean boolean38 = enumElementType34.matchesNumberContext();
        com.google.javascript.rhino.jstype.JSType jSType39 = enumElementType34.restrictByNotNullOrUndefined();
        com.google.javascript.rhino.jstype.ObjectType objectType40 = jSType39.dereference();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertNull(jSType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(jSType39);
        org.junit.Assert.assertNotNull(objectType40);
    }

    @Test
    public void test01960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01960");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node8 = node5.useSourceInfoIfMissingFromForTree(node7);
        node8.setLineno(10);
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder17 = node16.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node22 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean23 = node22.isDefaultCase();
        node22.setVarArgs(true);
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node31 = new com.google.javascript.rhino.Node((int) 'a', node16, node22, node30);
        boolean boolean32 = node31.isGetterDef();
        boolean boolean33 = node31.isQuotedString();
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int39 = node38.getType();
        node38.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int47 = node46.getType();
        node46.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node50 = new com.google.javascript.rhino.Node(40, node8, node31, node38, node46);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node57 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node58 = node55.useSourceInfoIfMissingFromForTree(node57);
        node58.setIsSyntheticBlock(true);
        java.lang.String str61 = node58.getString();
        boolean boolean62 = node50.hasChild(node58);
        com.google.javascript.rhino.Node node67 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node69 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node70 = node67.useSourceInfoIfMissingFromForTree(node69);
        com.google.javascript.rhino.Node node71 = node50.useSourceInfoFrom(node69);
        com.google.javascript.rhino.Node node76 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node78 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node79 = node76.useSourceInfoIfMissingFromForTree(node78);
        boolean boolean80 = node78.isExprResult();
        com.google.javascript.rhino.Node node81 = node78.cloneTree();
        int int82 = node81.getSourcePosition();
        boolean boolean83 = node81.isIn();
        com.google.javascript.rhino.Node node84 = node81.getFirstChild();
        com.google.javascript.rhino.JSDocInfo jSDocInfo85 = node81.getJSDocInfo();
        boolean boolean86 = node71.isEquivalentTo(node81);
        com.google.javascript.rhino.jstype.JSType jSType87 = node81.getJSType();
        // The following exception was thrown during execution in test generation
        try {
            node81.setSideEffectFlags(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 45 + "'", int39 == 45);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 45 + "'", int47 == 45);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertNull(jSDocInfo85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(jSType87);
    }

    @Test
    public void test01961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01961");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative1);
        java.lang.String str3 = assertionFunctionSpec2.getFunctionName();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean16 = node15.isDefaultCase();
        node15.setVarArgs(true);
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node24 = new com.google.javascript.rhino.Node((int) 'a', node9, node15, node23);
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable29 = jSTypeRegistry27.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean30 = jSTypeRegistry27.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable35 = jSTypeRegistry33.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean36 = jSTypeRegistry33.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType37 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.jstype.FunctionType functionType41 = jSTypeRegistry33.createFunctionTypeWithVarArgs(jSType37, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        boolean boolean42 = functionType41.canBeCalled();
        boolean boolean43 = functionType41.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType45 = jSTypeRegistry27.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType41, jSTypeArray44);
        com.google.javascript.rhino.jstype.JSType jSType46 = assertionFunctionSpec2.getAssertedType(node9, jSTypeRegistry27);
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int52 = node51.getType();
        boolean boolean53 = node51.isBlock();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder54 = node51.getJsDocBuilderForNode();
        node51.setQuotedString();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile56 = null;
        node51.setStaticSourceFile(staticSourceFile56);
        com.google.javascript.rhino.Node node58 = assertionFunctionSpec2.getAssertedParam(node51);
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean65 = node64.isDefaultCase();
        node64.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId68 = node64.getInputId();
        node64.detachChildren();
        boolean boolean70 = node64.isNull();
        com.google.javascript.rhino.Node node71 = new com.google.javascript.rhino.Node((int) 'a', node64);
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable72 = node64.children();
        boolean boolean73 = node64.isIn();
        com.google.javascript.rhino.Node node74 = node64.detachFromParent();
        com.google.javascript.rhino.Node node75 = node58.srcrefTree(node64);
        com.google.javascript.rhino.Node node81 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean82 = node81.isDefaultCase();
        boolean boolean83 = node81.isTry();
        com.google.javascript.rhino.Node node84 = node81.getLastSibling();
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node(4095, node81);
        node64.addChildrenToBack(node85);
        node85.setSourceFileForTesting("{proxy:function (): {1036688371}}");
        com.google.javascript.rhino.Node node93 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node95 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node96 = node93.useSourceInfoIfMissingFromForTree(node95);
        boolean boolean97 = node95.isExprResult();
        int int98 = node95.getLineno();
        int int99 = node85.getIndexOfChild(node95);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str3, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(jSTypeIterable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(functionType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertNotNull(functionType45);
        org.junit.Assert.assertNull(jSType46);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 45 + "'", int52 == 45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder54);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(inputId68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(nodeIterable72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(node93);
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertNotNull(node96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test01962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01962");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node10 = jSTypeRegistry8.createParameters(jSTypeArray9);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable15 = jSTypeRegistry13.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean16 = jSTypeRegistry13.shouldTolerateUndefinedValues();
        boolean boolean17 = jSTypeRegistry13.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node26 = node23.useSourceInfoIfMissingFromForTree(node25);
        boolean boolean27 = node25.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable32 = jSTypeRegistry30.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean33 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType34 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.jstype.FunctionType functionType38 = jSTypeRegistry30.createFunctionTypeWithVarArgs(jSType34, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = functionType38.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType40 = jSTypeRegistry13.createEnumType("false", node25, (com.google.javascript.rhino.jstype.JSType) functionType38);
        java.util.Set<java.lang.String> strSet41 = functionType38.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.jstype.FunctionType functionType72 = functionType69.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType73 = jSTypeRegistry8.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType38, (com.google.javascript.rhino.jstype.JSType) functionType72);
        com.google.javascript.rhino.jstype.FunctionType functionType74 = parameterizedType73.getConstructor();
        com.google.javascript.rhino.jstype.TemplateType templateType75 = parameterizedType73.toMaybeTemplateType();
        com.google.javascript.rhino.jstype.JSType jSType76 = parameterizedType73.collapseUnion();
        boolean boolean77 = parameterizedType73.isNoResolvedType();
        jSTypeRegistry2.registerPropertyOnType("{1789057375}", (com.google.javascript.rhino.jstype.JSType) parameterizedType73);
        jSTypeRegistry2.clearTemplateTypeNames();
        jSTypeRegistry2.incrementGeneration();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(jSTypeIterable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(functionType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(enumType40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNull(functionType72);
        org.junit.Assert.assertNotNull(parameterizedType73);
        org.junit.Assert.assertNull(functionType74);
        org.junit.Assert.assertNull(templateType75);
        org.junit.Assert.assertNotNull(jSType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test01963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01963");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable11 = jSTypeRegistry9.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean12 = jSTypeRegistry9.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable17 = jSTypeRegistry15.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean18 = jSTypeRegistry15.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable23 = jSTypeRegistry21.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean24 = jSTypeRegistry21.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = jSTypeRegistry21.getErrorReporter();
        com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSTypeRegistry> jSTypeRegistryList26 = com.google.common.collect.ImmutableList.of(jSTypeRegistry2, jSTypeRegistry9, jSTypeRegistry15, jSTypeRegistry21);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable32 = jSTypeRegistry30.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean33 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        boolean boolean34 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node43 = node40.useSourceInfoIfMissingFromForTree(node42);
        boolean boolean44 = node42.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType51 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.jstype.FunctionType functionType55 = jSTypeRegistry47.createFunctionTypeWithVarArgs(jSType51, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        boolean boolean56 = functionType55.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType57 = jSTypeRegistry30.createEnumType("false", node42, (com.google.javascript.rhino.jstype.JSType) functionType55);
        boolean boolean59 = enumType57.isPropertyTypeDeclared("");
        boolean boolean60 = enumType57.matchesStringContext();
        java.lang.String str61 = enumType57.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType62 = enumType57.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo63 = enumType57.getJSDocInfo();
        enumType57.clearCachedValues();
        com.google.javascript.rhino.JSDocInfo jSDocInfo66 = enumType57.getOwnPropertyJSDocInfo("{1677117386}");
        boolean boolean67 = enumType57.hasCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType68 = enumType57.unboxesTo();
        boolean boolean70 = enumType57.hasProperty("{240058623}");
        jSTypeRegistry15.registerPropertyOnType("{491830915}", (com.google.javascript.rhino.jstype.JSType) enumType57);
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(errorReporter25);
        org.junit.Assert.assertNotNull(jSTypeRegistryList26);
        org.junit.Assert.assertNotNull(jSTypeIterable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(functionType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(enumType57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{1069691401}" + "'", str61, "{1069691401}");
        org.junit.Assert.assertNull(functionType62);
        org.junit.Assert.assertNull(jSDocInfo63);
        org.junit.Assert.assertNull(jSDocInfo66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(jSType68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test01964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01964");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot13 = functionType10.getOwnSlot("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        boolean boolean14 = functionType10.isUnionType();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node19 = jSTypeRegistry17.createParameters(jSTypeArray18);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable24 = jSTypeRegistry22.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean25 = jSTypeRegistry22.shouldTolerateUndefinedValues();
        boolean boolean26 = jSTypeRegistry22.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node32 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node35 = node32.useSourceInfoIfMissingFromForTree(node34);
        boolean boolean36 = node34.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable41 = jSTypeRegistry39.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean42 = jSTypeRegistry39.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType43 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.jstype.FunctionType functionType47 = jSTypeRegistry39.createFunctionTypeWithVarArgs(jSType43, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        boolean boolean48 = functionType47.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType49 = jSTypeRegistry22.createEnumType("false", node34, (com.google.javascript.rhino.jstype.JSType) functionType47);
        java.util.Set<java.lang.String> strSet50 = functionType47.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable55 = jSTypeRegistry53.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean56 = jSTypeRegistry53.shouldTolerateUndefinedValues();
        boolean boolean57 = jSTypeRegistry53.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node65 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node66 = node63.useSourceInfoIfMissingFromForTree(node65);
        boolean boolean67 = node65.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry70 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable72 = jSTypeRegistry70.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean73 = jSTypeRegistry70.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType74 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray75 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList76 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList76, jSTypeArray75);
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry70.createFunctionTypeWithVarArgs(jSType74, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList76);
        boolean boolean79 = functionType78.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType80 = jSTypeRegistry53.createEnumType("false", node65, (com.google.javascript.rhino.jstype.JSType) functionType78);
        com.google.javascript.rhino.jstype.FunctionType functionType81 = functionType78.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType82 = jSTypeRegistry17.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType47, (com.google.javascript.rhino.jstype.JSType) functionType81);
        boolean boolean83 = parameterizedType82.isNativeObjectType();
        boolean boolean84 = parameterizedType82.isConstructor();
        com.google.javascript.rhino.jstype.EnumType enumType85 = parameterizedType82.toMaybeEnumType();
        java.lang.String str86 = parameterizedType82.toDebugHashCodeString();
        boolean boolean87 = parameterizedType82.matchesNumberContext();
        parameterizedType82.clearResolved();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair89 = functionType10.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) parameterizedType82);
        com.google.javascript.rhino.jstype.JSType jSType91 = parameterizedType82.findPropertyType("{992998909}");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(jSTypeStaticSlot13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeIterable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(functionType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(enumType49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(jSTypeIterable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(jSTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(enumType80);
        org.junit.Assert.assertNull(functionType81);
        org.junit.Assert.assertNotNull(parameterizedType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(enumType85);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{proxy:function (): {286249747}}" + "'", str86, "{proxy:function (): {286249747}}");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typePair89);
        org.junit.Assert.assertNull(jSType91);
    }

    @Test
    public void test01965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01965");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("ASSIGN_MOD");
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node9 = node6.useSourceInfoIfMissingFromForTree(node8);
        boolean boolean10 = node8.isExprResult();
        boolean boolean11 = node8.isDelProp();
        com.google.javascript.rhino.InputId inputId12 = node8.getInputId();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node21 = node18.useSourceInfoIfMissingFromForTree(node20);
        node21.setLineno(10);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder30 = node29.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node35 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean36 = node35.isDefaultCase();
        node35.setVarArgs(true);
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node44 = new com.google.javascript.rhino.Node((int) 'a', node29, node35, node43);
        boolean boolean45 = node44.isGetterDef();
        boolean boolean46 = node44.isQuotedString();
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int52 = node51.getType();
        node51.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int60 = node59.getType();
        node59.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node63 = new com.google.javascript.rhino.Node(40, node21, node44, node51, node59);
        boolean boolean64 = node44.isArrayLit();
        com.google.javascript.rhino.Node node65 = node8.useSourceInfoIfMissingFromForTree(node44);
        int int66 = node44.getChildCount();
        boolean boolean67 = node44.isVar();
        com.google.javascript.rhino.Node node68 = assertionFunctionSpec1.getAssertedParam(node44);
        com.google.javascript.rhino.Node node69 = node44.cloneTree();
        com.google.javascript.rhino.Node node72 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean73 = node72.isGetProp();
        boolean boolean74 = node72.isNumber();
        com.google.javascript.rhino.Node node79 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder80 = node79.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node85 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int86 = node85.getType();
        boolean boolean87 = node85.isBlock();
        com.google.javascript.rhino.Node node90 = new com.google.javascript.rhino.Node((int) (short) 10, node72, node79, node85, (int) (byte) 10, 44);
        com.google.javascript.rhino.Node node95 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder96 = node95.getJsDocBuilderForNode();
        node90.addChildrenToFront(node95);
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection98 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node90);
        boolean boolean99 = node44.hasChild(node90);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputId12);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 45 + "'", int52 == 45);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 45 + "'", int60 == 45);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder80);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 45 + "'", int86 == 45);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder96);
        org.junit.Assert.assertNotNull(nodeCollection98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test01966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01966");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        node15.setSourceEncodedPositionForTree(45);
        boolean boolean23 = node15.isSetterDef();
        boolean boolean24 = node15.isNumber();
        int int26 = node15.getIntProp(53);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable32 = jSTypeRegistry30.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean33 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        boolean boolean34 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node43 = node40.useSourceInfoIfMissingFromForTree(node42);
        boolean boolean44 = node42.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType51 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.jstype.FunctionType functionType55 = jSTypeRegistry47.createFunctionTypeWithVarArgs(jSType51, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        boolean boolean56 = functionType55.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType57 = jSTypeRegistry30.createEnumType("false", node42, (com.google.javascript.rhino.jstype.JSType) functionType55);
        boolean boolean59 = enumType57.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo61 = null;
        enumType57.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo61);
        boolean boolean64 = enumType57.isPropertyInExterns("Unknown class name");
        boolean boolean65 = enumType57.isNoType();
        node15.putProp(10, (java.lang.Object) enumType57);
        com.google.javascript.rhino.Node node68 = enumType57.getPropertyNode("BITXOR 10");
        java.util.Set<java.lang.String> strSet69 = enumType57.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable74 = jSTypeRegistry72.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean75 = jSTypeRegistry72.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType76 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.FunctionType functionType80 = jSTypeRegistry72.createFunctionTypeWithVarArgs(jSType76, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        com.google.javascript.rhino.jstype.JSType jSType85 = jSTypeRegistry72.createNamedType("{proxy:function (): {758384265}}", "", 38, 16);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = strSet69.remove((java.lang.Object) jSTypeRegistry72);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.jstype.JSTypeRegistry cannot be cast to java.lang.Comparable");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(jSTypeIterable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(functionType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(enumType57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(jSTypeIterable74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(functionType80);
        org.junit.Assert.assertNotNull(jSType85);
    }

    @Test
    public void test01967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01967");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) 29);
        boolean boolean2 = node1.isSetterDef();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test01968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01968");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        java.lang.String str33 = enumType29.toDebugHashCodeString();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable34 = enumType29.getCtorExtendedInterfaces();
        boolean boolean36 = enumType29.hasOwnProperty("{1631953089}");
        com.google.javascript.rhino.Node node37 = enumType29.getSource();
        java.lang.Iterable iterable38 = enumType29.getCtorImplementedInterfaces();
        com.google.javascript.rhino.jstype.FunctionType functionType39 = enumType29.getConstructor();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType40 = enumType29.getElementsType();
        boolean boolean41 = enumElementType40.isDateType();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{737838363}" + "'", str33, "{737838363}");
        org.junit.Assert.assertNotNull(objectTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(iterable38);
        org.junit.Assert.assertNull(functionType39);
        org.junit.Assert.assertNotNull(enumElementType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test01969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01969");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        com.google.javascript.rhino.jstype.TemplateType templateType69 = parameterizedType67.toMaybeTemplateType();
        com.google.javascript.rhino.jstype.JSType jSType70 = parameterizedType67.collapseUnion();
        com.google.javascript.rhino.jstype.JSType jSType71 = parameterizedType67.getParameterType();
        boolean boolean72 = parameterizedType67.isNoObjectType();
        boolean boolean73 = parameterizedType67.matchesStringContext();
        com.google.javascript.rhino.jstype.JSType jSType75 = parameterizedType67.findPropertyType("{2131030330}");
        boolean boolean76 = parameterizedType67.matchesNumberContext();
        boolean boolean77 = parameterizedType67.isNullable();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertNull(templateType69);
        org.junit.Assert.assertNotNull(jSType70);
        org.junit.Assert.assertNull(jSType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(jSType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test01970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01970");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean71 = parameterizedType67.isStringObjectType();
        boolean boolean72 = parameterizedType67.isNoType();
        boolean boolean73 = parameterizedType67.hasDisplayName();
        boolean boolean74 = parameterizedType67.isInterface();
        boolean boolean75 = parameterizedType67.isNativeObjectType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test01971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01971");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 2, 54, (int) (short) 100);
        java.lang.String str4 = com.google.javascript.jscomp.NodeUtil.getNearestFunctionName(node3);
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags6 = new com.google.javascript.rhino.Node.SideEffectFlags(100);
        sideEffectFlags6.setAllFlags();
        boolean boolean8 = sideEffectFlags6.areAllFlagsSet();
        sideEffectFlags6.setMutatesArguments();
        sideEffectFlags6.setMutatesGlobalState();
        // The following exception was thrown during execution in test generation
        try {
            node3.setSideEffectFlags(sideEffectFlags6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test01972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01972");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        com.google.javascript.rhino.jstype.FunctionType functionType68 = parameterizedType67.getConstructor();
        com.google.javascript.rhino.jstype.TemplateType templateType69 = parameterizedType67.toMaybeTemplateType();
        com.google.javascript.rhino.jstype.JSType jSType70 = parameterizedType67.collapseUnion();
        com.google.javascript.rhino.jstype.JSType jSType71 = parameterizedType67.getParameterType();
        boolean boolean72 = parameterizedType67.isNoObjectType();
        boolean boolean73 = parameterizedType67.matchesStringContext();
        com.google.javascript.rhino.jstype.JSType jSType75 = parameterizedType67.findPropertyType("{2131030330}");
        boolean boolean76 = parameterizedType67.matchesNumberContext();
        boolean boolean78 = parameterizedType67.isPropertyInExterns("{proxy:function (): {1014762556}}");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertNull(functionType68);
        org.junit.Assert.assertNull(templateType69);
        org.junit.Assert.assertNotNull(jSType70);
        org.junit.Assert.assertNull(jSType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(jSType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test01973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01973");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        jSTypeRegistry1.incrementGeneration();
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry5 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable7 = jSTypeRegistry5.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean8 = jSTypeRegistry5.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry11.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean14 = jSTypeRegistry11.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType15 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.jstype.FunctionType functionType19 = jSTypeRegistry11.createFunctionTypeWithVarArgs(jSType15, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = functionType19.canBeCalled();
        boolean boolean21 = functionType19.hasAnyTemplateInternal();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray22 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.FunctionType functionType23 = jSTypeRegistry5.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType19, jSTypeArray22);
        com.google.javascript.rhino.jstype.JSType jSType24 = jSTypeRegistry1.createDefaultObjectUnion((com.google.javascript.rhino.jstype.JSType) functionType23);
        com.google.javascript.rhino.jstype.FunctionType functionType26 = functionType23.getBindReturnType((int) (short) 10);
        boolean boolean27 = functionType23.isInterface();
        org.junit.Assert.assertNotNull(jSTypeIterable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(functionType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray22);
        org.junit.Assert.assertNotNull(functionType23);
        org.junit.Assert.assertNotNull(jSType24);
        org.junit.Assert.assertNotNull(functionType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test01974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01974");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 100, 17, 51);
        org.junit.Assert.assertNotNull(node3);
    }

    @Test
    public void test01975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01975");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        com.google.javascript.rhino.jstype.FunctionType functionType30 = enumType29.getConstructor();
        java.lang.Iterable iterable31 = enumType29.getCtorImplementedInterfaces();
        boolean boolean33 = enumType29.isPropertyInExterns("NUMBER 100.0");
        boolean boolean35 = enumType29.isPropertyTypeDeclared("{240058623}");
        int int36 = enumType29.getPropertiesCount();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNull(functionType30);
        org.junit.Assert.assertNotNull(iterable31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test01976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01976");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) 'a', node5, node11, node19);
        boolean boolean21 = node5.isScript();
        boolean boolean22 = node5.isObjectLit();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node27 = jSTypeRegistry25.createParameters(jSTypeArray26);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable32 = jSTypeRegistry30.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean33 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        boolean boolean34 = jSTypeRegistry30.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node40 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node43 = node40.useSourceInfoIfMissingFromForTree(node42);
        boolean boolean44 = node42.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable49 = jSTypeRegistry47.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean50 = jSTypeRegistry47.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType51 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.jstype.FunctionType functionType55 = jSTypeRegistry47.createFunctionTypeWithVarArgs(jSType51, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        boolean boolean56 = functionType55.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType57 = jSTypeRegistry30.createEnumType("false", node42, (com.google.javascript.rhino.jstype.JSType) functionType55);
        java.util.Set<java.lang.String> strSet58 = functionType55.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        boolean boolean65 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node71 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node73 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node74 = node71.useSourceInfoIfMissingFromForTree(node73);
        boolean boolean75 = node73.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter76 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter76, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable80 = jSTypeRegistry78.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean81 = jSTypeRegistry78.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType82 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray83 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList84 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList84, jSTypeArray83);
        com.google.javascript.rhino.jstype.FunctionType functionType86 = jSTypeRegistry78.createFunctionTypeWithVarArgs(jSType82, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList84);
        boolean boolean87 = functionType86.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType88 = jSTypeRegistry61.createEnumType("false", node73, (com.google.javascript.rhino.jstype.JSType) functionType86);
        com.google.javascript.rhino.jstype.FunctionType functionType89 = functionType86.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType90 = jSTypeRegistry25.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType55, (com.google.javascript.rhino.jstype.JSType) functionType89);
        boolean boolean91 = parameterizedType90.isBooleanObjectType();
        com.google.javascript.rhino.jstype.JSType jSType92 = parameterizedType90.autobox();
        java.util.Set set93 = parameterizedType90.getOwnPropertyNames();
        boolean boolean94 = set93.isEmpty();
        node5.setDirectives((java.util.Set<java.lang.String>) set93);
        boolean boolean96 = node5.hasChildren();
        boolean boolean97 = com.google.javascript.jscomp.NodeUtil.isSymmetricOperation(node5);
        int int98 = node5.getCharno();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(jSTypeIterable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(functionType55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(enumType57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(jSTypeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(functionType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(enumType88);
        org.junit.Assert.assertNull(functionType89);
        org.junit.Assert.assertNotNull(parameterizedType90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(jSType92);
        org.junit.Assert.assertNotNull(set93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test01977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01977");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        boolean boolean36 = enumType34.isPropertyTypeDeclared("");
        boolean boolean37 = enumType34.matchesStringContext();
        java.lang.String str38 = enumType34.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType39 = enumType34.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo40 = enumType34.getJSDocInfo();
        enumType34.clearCachedValues();
        com.google.javascript.rhino.jstype.JSType jSType46 = jSTypeRegistry2.getType((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) enumType34, "", "Not declared as a type name", 36, (int) '#');
        com.google.javascript.rhino.JSDocInfo jSDocInfo48 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str49 = jSDocInfo48.getDescription();
        java.lang.String str50 = jSDocInfo48.getLicense();
        jSDocInfo48.setLicense("{142159271}");
        enumType34.setPropertyJSDocInfo("{1551784408}", jSDocInfo48);
        boolean boolean54 = jSDocInfo48.hasBaseType();
        boolean boolean55 = jSDocInfo48.isConstructor();
        boolean boolean56 = jSDocInfo48.isNoAlias();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{415592786}" + "'", str38, "{415592786}");
        org.junit.Assert.assertNull(functionType39);
        org.junit.Assert.assertNull(jSDocInfo40);
        org.junit.Assert.assertNotNull(jSType46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test01978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01978");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS;
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node8 = node5.useSourceInfoIfMissingFromForTree(node7);
        node8.setLineno(10);
        int int11 = node8.getType();
        boolean boolean12 = node8.isNew();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int18 = node17.getType();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder25 = node24.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node30 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean31 = node30.isDefaultCase();
        node30.setVarArgs(true);
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node39 = new com.google.javascript.rhino.Node((int) 'a', node24, node30, node38);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile40 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node38);
        com.google.javascript.rhino.Node node41 = node17.useSourceInfoFromForTree(node38);
        int int42 = node17.getSourcePosition();
        boolean boolean43 = node8.isEquivalentToTyped(node17);
        com.google.javascript.rhino.Node node49 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean50 = node49.isDefaultCase();
        node49.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId53 = node49.getInputId();
        node49.detachChildren();
        boolean boolean55 = node49.isNull();
        com.google.javascript.rhino.Node node56 = new com.google.javascript.rhino.Node((int) 'a', node49);
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable57 = node49.children();
        boolean boolean58 = node49.isIn();
        com.google.javascript.rhino.Node node59 = node49.detachFromParent();
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship60 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node8, node49);
        com.google.javascript.rhino.Node node65 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean66 = node65.isDefaultCase();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection67 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node65);
        boolean boolean68 = node65.isLabel();
        boolean boolean69 = node65.isHook();
        com.google.javascript.rhino.Node node72 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean73 = node72.isGetProp();
        boolean boolean74 = node72.isNumber();
        com.google.javascript.rhino.Node node79 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder80 = node79.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node85 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int86 = node85.getType();
        boolean boolean87 = node85.isBlock();
        com.google.javascript.rhino.Node node90 = new com.google.javascript.rhino.Node((int) (short) 10, node72, node79, node85, (int) (byte) 10, 44);
        node85.setSourceEncodedPositionForTree(45);
        boolean boolean93 = node85.isSetterDef();
        com.google.javascript.rhino.Node node94 = node65.useSourceInfoIfMissingFromForTree(node85);
        boolean boolean95 = node65.isInstanceOf();
        com.google.javascript.rhino.Node node96 = node8.srcref(node65);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile97 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node96);
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.INHERITS));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 45 + "'", int11 == 45);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 45 + "'", int18 == 45);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder25);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNull(staticSourceFile40);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4097 + "'", int42 == 4097);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(inputId53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(nodeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(nodeCollection67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder80);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 45 + "'", int86 == 45);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(node96);
        org.junit.Assert.assertNull(staticSourceFile97);
    }

    @Test
    public void test01979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01979");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder6 = node5.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) 'a', node5, node11, node19);
        boolean boolean21 = node5.isScript();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder22 = node5.new FileLevelJsDocBuilder();
        boolean boolean23 = node5.isQuotedString();
        boolean boolean24 = node5.isAnd();
        // The following exception was thrown during execution in test generation
        try {
            node5.setSideEffectFlags((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got SHEQ");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder6);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test01980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01980");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int5 = node4.getType();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node11.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean18 = node17.isDefaultCase();
        node17.setVarArgs(true);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((int) 'a', node11, node17, node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile27 = com.google.javascript.jscomp.NodeUtil.getSourceFile(node25);
        com.google.javascript.rhino.Node node28 = node4.useSourceInfoFromForTree(node25);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile29 = node25.getStaticSourceFile();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable34 = jSTypeRegistry32.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean35 = jSTypeRegistry32.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType36 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry32.createFunctionTypeWithVarArgs(jSType36, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = functionType40.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable46 = jSTypeRegistry44.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean47 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        boolean boolean48 = jSTypeRegistry44.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node57 = node54.useSourceInfoIfMissingFromForTree(node56);
        boolean boolean58 = node56.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry61.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean64 = jSTypeRegistry61.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType65 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.FunctionType functionType69 = jSTypeRegistry61.createFunctionTypeWithVarArgs(jSType65, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = functionType69.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType71 = jSTypeRegistry44.createEnumType("false", node56, (com.google.javascript.rhino.jstype.JSType) functionType69);
        java.util.Set<java.lang.String> strSet72 = functionType69.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair73 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType40, (com.google.javascript.rhino.jstype.JSType) functionType69);
        com.google.javascript.rhino.Node node74 = functionType40.getSource();
        node25.setJSType((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = functionType40.getPrototype();
        com.google.javascript.rhino.jstype.ObjectType objectType77 = com.google.javascript.rhino.jstype.ObjectType.cast((com.google.javascript.rhino.jstype.JSType) functionType40);
        com.google.javascript.rhino.JSDocInfo jSDocInfo79 = new com.google.javascript.rhino.JSDocInfo();
        boolean boolean80 = jSDocInfo79.hasFileOverview();
        java.util.Collection<java.lang.String> strCollection81 = jSDocInfo79.getReferences();
        java.util.Collection<java.lang.String> strCollection82 = jSDocInfo79.getReferences();
        functionType40.setPropertyJSDocInfo("{1551784408}", jSDocInfo79);
        java.util.List<com.google.javascript.rhino.JSTypeExpression> jSTypeExpressionList84 = jSDocInfo79.getExtendedInterfaces();
        boolean boolean85 = jSDocInfo79.hasModifies();
        java.util.Set<java.lang.String> strSet86 = jSDocInfo79.getSuppressions();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList88 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableList88.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean91 = strComparableList88.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = strComparableList88.iterator();
        int int93 = strComparableList88.size();
        boolean boolean94 = strSet86.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList88);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 45 + "'", int5 == 45);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(staticSourceFile27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(staticSourceFile29);
        org.junit.Assert.assertNotNull(jSTypeIterable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(functionType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(enumType71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertNotNull(objectType77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(strCollection81);
        org.junit.Assert.assertNull(strCollection82);
        org.junit.Assert.assertNotNull(jSTypeExpressionList84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strComparableItor92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 2 + "'", int93 == 2);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test01981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01981");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean5 = node4.isDefaultCase();
        node4.setVarArgs(true);
        boolean boolean8 = node4.isThrow();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node17 = node14.useSourceInfoIfMissingFromForTree(node16);
        node17.setLineno(10);
        com.google.javascript.rhino.Node node25 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder26 = node25.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node31 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean32 = node31.isDefaultCase();
        node31.setVarArgs(true);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int) 'a', node25, node31, node39);
        boolean boolean41 = node40.isGetterDef();
        boolean boolean42 = node40.isQuotedString();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int48 = node47.getType();
        node47.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int56 = node55.getType();
        node55.setSourceEncodedPosition((int) (byte) 0);
        com.google.javascript.rhino.Node node59 = new com.google.javascript.rhino.Node(40, node17, node40, node47, node55);
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node67 = node64.useSourceInfoIfMissingFromForTree(node66);
        node67.setIsSyntheticBlock(true);
        java.lang.String str70 = node67.getString();
        boolean boolean71 = node59.hasChild(node67);
        com.google.javascript.rhino.Node node76 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node78 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node79 = node76.useSourceInfoIfMissingFromForTree(node78);
        com.google.javascript.rhino.Node node80 = node59.useSourceInfoFrom(node78);
        boolean boolean81 = node78.isComma();
        node4.addChildrenToFront(node78);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable83 = node78.getAncestors();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder26);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 45 + "'", int48 == 45);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 45 + "'", int56 == 45);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(ancestorIterable83);
    }

    @Test
    public void test01982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01982");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        boolean boolean69 = parameterizedType67.isConstructor();
        boolean boolean70 = parameterizedType67.isEmptyType();
        boolean boolean72 = parameterizedType67.isPropertyTypeDeclared("");
        com.google.javascript.rhino.jstype.FunctionType functionType73 = parameterizedType67.getConstructor();
        boolean boolean74 = parameterizedType67.isInstanceType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo76 = new com.google.javascript.rhino.JSDocInfo();
        java.lang.String str77 = jSDocInfo76.getDescription();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression78 = jSDocInfo76.getType();
        parameterizedType67.setPropertyJSDocInfo("NUMBER 100.0", jSDocInfo76);
        boolean boolean80 = parameterizedType67.isOrdinaryFunction();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType81 = parameterizedType67.toMaybeParameterizedType();
        boolean boolean83 = parameterizedType67.isPropertyTypeInferred("{proxy:function (): {558100726}}");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(functionType73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(jSTypeExpression78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(parameterizedType81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test01983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01983");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean8 = node7.isDefaultCase();
        node7.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId11 = node7.getInputId();
        node7.detachChildren();
        boolean boolean13 = node7.isNot();
        boolean boolean14 = node7.isSetterDef();
        com.google.javascript.rhino.Node node15 = assertionFunctionSpec2.getAssertedParam(node7);
        node15.setLineno((int) (short) 10);
        com.google.javascript.rhino.Node node18 = node15.removeChildren();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression20 = new com.google.javascript.rhino.JSTypeExpression(node15, "{207539787}");
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21, true);
        com.google.javascript.rhino.jstype.JSType jSType24 = null;
        boolean boolean26 = jSTypeRegistry23.canPropertyBeDefined(jSType24, "Unknown class name");
        com.google.javascript.rhino.ErrorReporter errorReporter27 = jSTypeRegistry23.getErrorReporter();
        com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> jSTypeStaticScope28 = null;
        jSTypeRegistry23.resolveTypesInScope(jSTypeStaticScope28);
        boolean boolean30 = jSTypeExpression20.equals((java.lang.Object) jSTypeRegistry23);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable35 = jSTypeRegistry33.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean36 = jSTypeRegistry33.shouldTolerateUndefinedValues();
        boolean boolean37 = jSTypeRegistry33.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node46 = node43.useSourceInfoIfMissingFromForTree(node45);
        boolean boolean47 = node45.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable52 = jSTypeRegistry50.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean53 = jSTypeRegistry50.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType54 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.jstype.FunctionType functionType58 = jSTypeRegistry50.createFunctionTypeWithVarArgs(jSType54, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        boolean boolean59 = functionType58.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType60 = jSTypeRegistry33.createEnumType("false", node45, (com.google.javascript.rhino.jstype.JSType) functionType58);
        boolean boolean62 = enumType60.isPropertyTypeDeclared("");
        boolean boolean63 = enumType60.matchesStringContext();
        java.lang.String str64 = enumType60.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType65 = enumType60.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo66 = enumType60.getJSDocInfo();
        boolean boolean67 = enumType60.hasReferenceName();
        boolean boolean68 = enumType60.isUnknownType();
        int int69 = enumType60.getPropertiesCount();
        com.google.javascript.rhino.jstype.JSType jSType71 = jSTypeRegistry23.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) enumType60, "{1235378915}");
        com.google.javascript.rhino.Node node72 = enumType60.getSource();
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(inputId11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(errorReporter27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(functionType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(enumType60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{347177086}" + "'", str64, "{347177086}");
        org.junit.Assert.assertNull(functionType65);
        org.junit.Assert.assertNull(jSDocInfo66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(jSType71);
        org.junit.Assert.assertNotNull(node72);
    }

    @Test
    public void test01984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01984");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.matchesStringContext();
        boolean boolean33 = enumType29.isConstructor();
        com.google.javascript.rhino.jstype.EnumType enumType34 = enumType29.toMaybeEnumType();
        boolean boolean35 = enumType34.isDateType();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType42 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.jstype.FunctionType functionType46 = jSTypeRegistry38.createFunctionTypeWithVarArgs(jSType42, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        boolean boolean47 = functionType46.canBeCalled();
        boolean boolean48 = functionType46.hasAnyTemplateInternal();
        int int49 = functionType46.getPropertiesCount();
        java.lang.Iterable iterable50 = functionType46.getCtorImplementedInterfaces();
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue51 = enumType34.testForEquality((com.google.javascript.rhino.jstype.JSType) functionType46);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue53 = com.google.javascript.rhino.jstype.TernaryValue.forBoolean(false);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue54 = com.google.javascript.rhino.jstype.TernaryValue.TRUE;
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue55 = ternaryValue53.xor(ternaryValue54);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue56 = ternaryValue54.not();
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue58 = com.google.javascript.rhino.jstype.TernaryValue.forBoolean(false);
        boolean boolean60 = ternaryValue58.toBoolean(true);
        boolean boolean62 = ternaryValue58.toBoolean(false);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue63 = null;
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue64 = ternaryValue58.and(ternaryValue63);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue66 = com.google.javascript.rhino.jstype.TernaryValue.forBoolean(false);
        java.lang.String str67 = ternaryValue66.toString();
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue68 = com.google.javascript.rhino.jstype.TernaryValue.TRUE;
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue69 = ternaryValue66.or(ternaryValue68);
        boolean boolean71 = ternaryValue69.toBoolean(false);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue72 = ternaryValue64.or(ternaryValue69);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue73 = ternaryValue54.xor(ternaryValue72);
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue74 = ternaryValue51.or(ternaryValue72);
        boolean boolean76 = ternaryValue72.toBoolean(false);
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(functionType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(iterable50);
        org.junit.Assert.assertNotNull(ternaryValue51);
        org.junit.Assert.assertNotNull(ternaryValue53);
        org.junit.Assert.assertNotNull(ternaryValue54);
        org.junit.Assert.assertNotNull(ternaryValue55);
        org.junit.Assert.assertNotNull(ternaryValue56);
        org.junit.Assert.assertNotNull(ternaryValue58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(ternaryValue64);
        org.junit.Assert.assertNotNull(ternaryValue66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "false" + "'", str67, "false");
        org.junit.Assert.assertNotNull(ternaryValue68);
        org.junit.Assert.assertNotNull(ternaryValue69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(ternaryValue72);
        org.junit.Assert.assertNotNull(ternaryValue73);
        org.junit.Assert.assertNotNull(ternaryValue74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test01985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01985");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node7 = node4.useSourceInfoIfMissingFromForTree(node6);
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean13 = node12.isDefaultCase();
        node12.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId16 = node12.getInputId();
        node12.detachChildren();
        com.google.javascript.rhino.Node node18 = node6.copyInformationFrom(node12);
        int int19 = node12.getType();
        java.lang.String[] strArray25 = new java.lang.String[] { "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "Unknown class name", "Unknown class name", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        node12.setDirectives((java.util.Set<java.lang.String>) strSet26);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList47 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray46);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableList47.spliterator();
        boolean boolean49 = strSet26.equals((java.lang.Object) strComparableList47);
        int int50 = strComparableList47.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable53 = strComparableList47.set(5, (java.lang.Comparable<java.lang.String>) "{724681269}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputId16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 45 + "'", int19 == 45);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strComparableList47);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 17 + "'", int50 == 17);
    }

    @Test
    public void test01986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01986");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean2 = node1.isFalse();
        boolean boolean3 = node1.isGetterDef();
        boolean boolean4 = node1.isBlock();
        boolean boolean5 = node1.isWith();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test01987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01987");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidQualifiedName("function (): {985971941}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test01988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01988");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        int int22 = node2.getIntProp(15);
        int int23 = node2.getCharno();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test01989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01989");
        boolean boolean1 = com.google.javascript.jscomp.NodeUtil.isValidQualifiedName("{proxy:function (): {1378685673}}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test01990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01990");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        com.google.javascript.rhino.jstype.FunctionType functionType30 = enumType29.getConstructor();
        java.lang.Iterable iterable31 = enumType29.getCtorImplementedInterfaces();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = enumType29.dereference();
        com.google.javascript.rhino.jstype.ObjectType objectType33 = enumType29.getImplicitPrototype();
        boolean boolean34 = enumType29.matchesNumberContext();
        java.lang.String str35 = enumType29.getReferenceName();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertNull(functionType30);
        org.junit.Assert.assertNotNull(iterable31);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(objectType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "enum{false}" + "'", str35, "enum{false}");
    }

    @Test
    public void test01991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01991");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType6 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.jstype.FunctionType functionType10 = jSTypeRegistry2.createFunctionTypeWithVarArgs(jSType6, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        boolean boolean11 = functionType10.canBeCalled();
        boolean boolean12 = functionType10.isStringValueType();
        boolean boolean13 = functionType10.isNoObjectType();
        boolean boolean14 = functionType10.isRecordType();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable19 = jSTypeRegistry17.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean20 = jSTypeRegistry17.shouldTolerateUndefinedValues();
        boolean boolean21 = jSTypeRegistry17.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node30 = node27.useSourceInfoIfMissingFromForTree(node29);
        boolean boolean31 = node29.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable36 = jSTypeRegistry34.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean37 = jSTypeRegistry34.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType38 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = jSTypeRegistry34.createFunctionTypeWithVarArgs(jSType38, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        boolean boolean43 = functionType42.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType44 = jSTypeRegistry17.createEnumType("false", node29, (com.google.javascript.rhino.jstype.JSType) functionType42);
        boolean boolean46 = enumType44.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo48 = null;
        enumType44.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo48);
        boolean boolean51 = enumType44.isPropertyInExterns("Unknown class name");
        com.google.javascript.rhino.Node node53 = enumType44.getPropertyNode("Not declared as a type name");
        boolean boolean55 = enumType44.isPropertyTypeInferred("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean56 = functionType10.isSubtype((com.google.javascript.rhino.jstype.JSType) enumType44);
        boolean boolean58 = functionType10.isPropertyInExterns("{142159271}");
        boolean boolean59 = functionType10.isNativeObjectType();
        java.lang.Class<?> wildcardClass60 = functionType10.getClass();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(functionType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(functionType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(enumType44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test01992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01992");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        jSTypeRegistry1.incrementGeneration();
        com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean9 = node8.isDefaultCase();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection10 = com.google.javascript.jscomp.NodeUtil.getVarsDeclaredInBranch(node8);
        boolean boolean11 = node8.isLabel();
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry14.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean17 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        boolean boolean18 = jSTypeRegistry14.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node26 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node27 = node24.useSourceInfoIfMissingFromForTree(node26);
        boolean boolean28 = node26.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable33 = jSTypeRegistry31.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean34 = jSTypeRegistry31.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType35 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.FunctionType functionType39 = jSTypeRegistry31.createFunctionTypeWithVarArgs(jSType35, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = functionType39.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType41 = jSTypeRegistry14.createEnumType("false", node26, (com.google.javascript.rhino.jstype.JSType) functionType39);
        com.google.javascript.rhino.jstype.FunctionType functionType42 = functionType39.getConstructor();
        com.google.javascript.rhino.jstype.EnumType enumType43 = jSTypeRegistry1.createEnumType("SHEQ  1 [var_args_name: 1]\n", node8, (com.google.javascript.rhino.jstype.JSType) functionType39);
        boolean boolean45 = functionType39.hasOwnProperty("{33678463}");
        com.google.javascript.rhino.jstype.FunctionType functionType46 = functionType39.toMaybeFunctionType();
        boolean boolean47 = functionType46.isInterface();
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(nodeCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(functionType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(enumType41);
        org.junit.Assert.assertNull(functionType42);
        org.junit.Assert.assertNotNull(enumType43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(functionType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test01993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01993");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isNativeObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType69 = parameterizedType67.getTypeOfThis();
        boolean boolean70 = objectType69.isNativeObjectType();
        com.google.javascript.rhino.jstype.UnionType unionType71 = objectType69.toMaybeUnionType();
        java.util.Set<java.lang.String> strSet72 = objectType69.getPropertyNames();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objectType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(unionType71);
        org.junit.Assert.assertNotNull(strSet72);
    }

    @Test
    public void test01994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01994");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node4 = jSTypeRegistry2.createParameters(jSTypeArray3);
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable9 = jSTypeRegistry7.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean10 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        boolean boolean11 = jSTypeRegistry7.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node19 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node20 = node17.useSourceInfoIfMissingFromForTree(node19);
        boolean boolean21 = node19.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable26 = jSTypeRegistry24.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean27 = jSTypeRegistry24.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry24.createFunctionTypeWithVarArgs(jSType28, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = functionType32.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType34 = jSTypeRegistry7.createEnumType("false", node19, (com.google.javascript.rhino.jstype.JSType) functionType32);
        java.util.Set<java.lang.String> strSet35 = functionType32.getOwnPropertyNames();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable40 = jSTypeRegistry38.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean41 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        boolean boolean42 = jSTypeRegistry38.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node48 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node51 = node48.useSourceInfoIfMissingFromForTree(node50);
        boolean boolean52 = node50.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry55.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean58 = jSTypeRegistry55.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry55.createFunctionTypeWithVarArgs(jSType59, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = functionType63.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType65 = jSTypeRegistry38.createEnumType("false", node50, (com.google.javascript.rhino.jstype.JSType) functionType63);
        com.google.javascript.rhino.jstype.FunctionType functionType66 = functionType63.getConstructor();
        com.google.javascript.rhino.jstype.ParameterizedType parameterizedType67 = jSTypeRegistry2.createParameterizedType((com.google.javascript.rhino.jstype.ObjectType) functionType32, (com.google.javascript.rhino.jstype.JSType) functionType66);
        boolean boolean68 = parameterizedType67.isBooleanObjectType();
        boolean boolean69 = parameterizedType67.hasReferenceName();
        com.google.javascript.rhino.jstype.FunctionType functionType70 = parameterizedType67.toMaybeFunctionType();
        boolean boolean71 = parameterizedType67.matchesStringContext();
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry74 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable76 = jSTypeRegistry74.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean77 = jSTypeRegistry74.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType78 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray79 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList80 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList80, jSTypeArray79);
        com.google.javascript.rhino.jstype.FunctionType functionType82 = jSTypeRegistry74.createFunctionTypeWithVarArgs(jSType78, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        boolean boolean83 = functionType82.canBeCalled();
        boolean boolean84 = functionType82.isStringValueType();
        com.google.javascript.rhino.Node node85 = functionType82.getParametersNode();
        boolean boolean87 = functionType82.hasProperty("{1599841362}");
        com.google.javascript.rhino.jstype.JSType.TypePair typePair88 = parameterizedType67.getTypesUnderInequality((com.google.javascript.rhino.jstype.JSType) functionType82);
        boolean boolean89 = parameterizedType67.isRegexpType();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeIterable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(enumType34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(jSTypeIterable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(enumType65);
        org.junit.Assert.assertNull(functionType66);
        org.junit.Assert.assertNotNull(parameterizedType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(functionType70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(jSTypeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(functionType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typePair88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test01995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01995");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        boolean boolean32 = enumType29.canBeCalled();
        com.google.javascript.rhino.jstype.UnionType unionType33 = enumType29.toMaybeUnionType();
        com.google.javascript.rhino.jstype.EnumElementType enumElementType34 = enumType29.getElementsType();
        boolean boolean35 = enumElementType34.hasReferenceName();
        boolean boolean36 = enumElementType34.matchesStringContext();
        com.google.javascript.rhino.jstype.FunctionType functionType37 = enumElementType34.getConstructor();
        boolean boolean38 = enumElementType34.isObject();
        com.google.javascript.rhino.jstype.TemplateType templateType39 = enumElementType34.toMaybeTemplateType();
        boolean boolean40 = enumElementType34.isNullable();
        boolean boolean42 = enumElementType34.isPropertyTypeInferred("SHEQ ");
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(unionType33);
        org.junit.Assert.assertNotNull(enumElementType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(functionType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(templateType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test01996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01996");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder42 = node41.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean48 = node47.isDefaultCase();
        node47.setVarArgs(true);
        com.google.javascript.rhino.Node node55 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node56 = new com.google.javascript.rhino.Node((int) 'a', node41, node47, node55);
        boolean boolean57 = enumType29.defineElement("{209777139}", node55);
        boolean boolean58 = enumType29.isFunctionPrototypeType();
        boolean boolean60 = enumType29.isPropertyTypeDeclared("{proxy:function (): {693061641}}");
        java.lang.String str61 = enumType29.getReferenceName();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "enum{false}" + "'", str61, "enum{false}");
    }

    @Test
    public void test01997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01997");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 29);
        boolean boolean3 = node2.isDebugger();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative5 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec6 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]", jSTypeNative5);
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        boolean boolean12 = node11.isDefaultCase();
        node11.setVarArgs(true);
        com.google.javascript.rhino.InputId inputId15 = node11.getInputId();
        node11.detachChildren();
        boolean boolean17 = node11.isNot();
        boolean boolean18 = node11.isSetterDef();
        com.google.javascript.rhino.Node node19 = assertionFunctionSpec6.getAssertedParam(node11);
        node19.setLineno((int) (short) 10);
        com.google.javascript.rhino.Node node22 = node19.removeChildren();
        com.google.javascript.rhino.JSTypeExpression jSTypeExpression24 = new com.google.javascript.rhino.JSTypeExpression(node19, "{207539787}");
        com.google.javascript.rhino.Node node25 = null;
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean28 = node27.isGetProp();
        boolean boolean29 = node27.isNumber();
        com.google.javascript.rhino.jstype.JSType jSType30 = node27.getJSType();
        boolean boolean31 = node27.isTypeOf();
        node27.addSuppression("");
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable38 = jSTypeRegistry36.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable43 = jSTypeRegistry41.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean44 = jSTypeRegistry41.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType45 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.jstype.FunctionType functionType49 = jSTypeRegistry41.createFunctionTypeWithVarArgs(jSType45, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        boolean boolean50 = functionType49.matchesObjectContext();
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable55 = jSTypeRegistry53.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean56 = jSTypeRegistry53.shouldTolerateUndefinedValues();
        boolean boolean57 = jSTypeRegistry53.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node63 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node65 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node66 = node63.useSourceInfoIfMissingFromForTree(node65);
        boolean boolean67 = node65.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry70 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable72 = jSTypeRegistry70.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean73 = jSTypeRegistry70.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType74 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray75 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList76 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList76, jSTypeArray75);
        com.google.javascript.rhino.jstype.FunctionType functionType78 = jSTypeRegistry70.createFunctionTypeWithVarArgs(jSType74, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList76);
        boolean boolean79 = functionType78.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType80 = jSTypeRegistry53.createEnumType("false", node65, (com.google.javascript.rhino.jstype.JSType) functionType78);
        java.util.Set<java.lang.String> strSet81 = functionType78.getOwnPropertyNames();
        com.google.javascript.rhino.jstype.JSType.TypePair typePair82 = new com.google.javascript.rhino.jstype.JSType.TypePair((com.google.javascript.rhino.jstype.JSType) functionType49, (com.google.javascript.rhino.jstype.JSType) functionType78);
        com.google.javascript.rhino.Node node83 = functionType49.getSource();
        com.google.javascript.rhino.jstype.JSType jSType85 = functionType49.getPropertyType("hi!");
        com.google.javascript.rhino.ErrorReporter errorReporter87 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry89 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter87, true);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray90 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.Node node91 = jSTypeRegistry89.createParameters(jSTypeArray90);
        com.google.javascript.rhino.jstype.FunctionType functionType92 = jSTypeRegistry36.createConstructorType((com.google.javascript.rhino.jstype.JSType) functionType49, true, jSTypeArray90);
        com.google.javascript.rhino.Node node93 = functionType92.getParametersNode();
        node27.addChildrenToBack(node93);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node95 = new com.google.javascript.rhino.Node(47, node2, node19, node25, node27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(inputId15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(jSType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable38);
        org.junit.Assert.assertNotNull(jSTypeIterable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(functionType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(jSTypeIterable55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(jSTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(functionType78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(enumType80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertNotNull(jSType85);
        org.junit.Assert.assertNotNull(jSTypeArray90);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertNotNull(functionType92);
        org.junit.Assert.assertNotNull(node93);
    }

    @Test
    public void test01998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01998");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newNumber((double) 100);
        boolean boolean3 = node2.isGetProp();
        boolean boolean4 = node2.isNumber();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder10 = node9.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node15 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        int int16 = node15.getType();
        boolean boolean17 = node15.isBlock();
        com.google.javascript.rhino.Node node20 = new com.google.javascript.rhino.Node((int) (short) 10, node2, node9, node15, (int) (byte) 10, 44);
        node15.setSourceEncodedPositionForTree(45);
        boolean boolean23 = node15.wasEmptyNode();
        boolean boolean24 = node15.isReturn();
        java.lang.String str25 = com.google.javascript.jscomp.NodeUtil.getSourceName(node15);
        boolean boolean26 = node15.isAssign();
        java.lang.Appendable appendable27 = null;
        // The following exception was thrown during execution in test generation
        try {
            node15.appendStringTree(appendable27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder10);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 45 + "'", int16 == 45);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test01999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test01999");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable4 = jSTypeRegistry2.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean5 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        boolean boolean6 = jSTypeRegistry2.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node15 = node12.useSourceInfoIfMissingFromForTree(node14);
        boolean boolean16 = node14.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry19.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean22 = jSTypeRegistry19.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType23 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.FunctionType functionType27 = jSTypeRegistry19.createFunctionTypeWithVarArgs(jSType23, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = functionType27.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType29 = jSTypeRegistry2.createEnumType("false", node14, (com.google.javascript.rhino.jstype.JSType) functionType27);
        boolean boolean31 = enumType29.isPropertyTypeDeclared("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo33 = null;
        enumType29.setPropertyJSDocInfo("SHEQ  1 [var_args_name: 1]\n", jSDocInfo33);
        com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> jSTypeStaticSlot36 = enumType29.getSlot("{proxy:function (): {882920012}}");
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable41 = jSTypeRegistry39.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean42 = jSTypeRegistry39.shouldTolerateUndefinedValues();
        boolean boolean43 = jSTypeRegistry39.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.Node node49 = com.google.javascript.rhino.Node.newString(45, "", 1, (int) (short) 1);
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newNumber((double) 100);
        com.google.javascript.rhino.Node node52 = node49.useSourceInfoIfMissingFromForTree(node51);
        boolean boolean53 = node51.isExprResult();
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54, true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable58 = jSTypeRegistry56.getTypesWithProperty("SHEQ  1 [var_args_name: 1]\n");
        boolean boolean59 = jSTypeRegistry56.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType60 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.jstype.FunctionType functionType64 = jSTypeRegistry56.createFunctionTypeWithVarArgs(jSType60, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = functionType64.canBeCalled();
        com.google.javascript.rhino.jstype.EnumType enumType66 = jSTypeRegistry39.createEnumType("false", node51, (com.google.javascript.rhino.jstype.JSType) functionType64);
        boolean boolean68 = enumType66.isPropertyTypeDeclared("");
        boolean boolean69 = enumType66.matchesStringContext();
        java.lang.String str70 = enumType66.toDebugHashCodeString();
        com.google.javascript.rhino.jstype.FunctionType functionType71 = enumType66.getConstructor();
        com.google.javascript.rhino.JSDocInfo jSDocInfo72 = enumType66.getJSDocInfo();
        com.google.javascript.rhino.JSDocInfo jSDocInfo74 = null;
        enumType66.setPropertyJSDocInfo("{1631953089}", jSDocInfo74);
        com.google.javascript.rhino.jstype.ObjectType objectType76 = enumType66.getImplicitPrototype();
        com.google.javascript.rhino.jstype.TernaryValue ternaryValue77 = enumType29.testForEquality((com.google.javascript.rhino.jstype.JSType) objectType76);
        java.lang.String str78 = enumType29.getReferenceName();
        org.junit.Assert.assertNotNull(jSTypeIterable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(functionType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(enumType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jSTypeStaticSlot36);
        org.junit.Assert.assertNotNull(jSTypeIterable41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(jSTypeIterable58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(functionType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(enumType66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{1600562370}" + "'", str70, "{1600562370}");
        org.junit.Assert.assertNull(functionType71);
        org.junit.Assert.assertNull(jSDocInfo72);
        org.junit.Assert.assertNotNull(objectType76);
        org.junit.Assert.assertNotNull(ternaryValue77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "enum{false}" + "'", str78, "enum{false}");
    }

    @Test
    public void test02000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest9.test02000");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList18 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray17);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList37 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray36);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList56 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray55);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "hi!", "", "hi!" };
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList75 = com.google.common.collect.ImmutableList.of((java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "hi!", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>) "", (java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.common.collect.ImmutableList<com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>>> strComparableListList76 = com.google.common.collect.ImmutableList.of(strComparableList18, strComparableList37, strComparableList56, strComparableList75);
        com.google.common.collect.UnmodifiableIterator<java.lang.Comparable<java.lang.String>> strComparableItor77 = strComparableList18.iterator();
        com.google.common.collect.ImmutableList<java.lang.Comparable<java.lang.String>> strComparableList78 = strComparableList18.reverse();
        java.lang.String str79 = strComparableList18.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream80 = strComparableList18.parallelStream();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strComparableList18);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableList37);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strComparableList56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableList75);
        org.junit.Assert.assertNotNull(strComparableListList76);
        org.junit.Assert.assertNotNull(strComparableItor77);
        org.junit.Assert.assertNotNull(strComparableList78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]" + "'", str79, "[, hi!, hi!, hi!, , , hi!, hi!, hi!, , , , hi!, hi!, hi!, , hi!]");
        org.junit.Assert.assertNotNull(strComparableStream80);
    }
}
