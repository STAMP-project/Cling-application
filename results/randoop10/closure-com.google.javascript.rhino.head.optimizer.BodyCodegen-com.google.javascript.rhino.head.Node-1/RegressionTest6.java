import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(100, 15);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope2.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = scope3.getProp(53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node11 = scriptNode0.target;
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        scriptNode13.setEncodedSourceEnd(18);
        java.lang.String str18 = scriptNode13.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        scriptNode13.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = scriptNode0.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                                                                      " + "'", str18, "                                                                      ");
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str4 = scope3.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getEncodedSource();
        scriptNode11.setEncodedSourceEnd(18);
        java.lang.String str15 = comment10.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.Node node17 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode11, node17);
        scriptNode11.setSourceName("hi!");
        scope3.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scope3);
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope3);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope24 = com.google.javascript.rhino.head.ast.Scope.splitScope(scope3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Scope" + "'", str4, "Scope");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(node17);
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        int int11 = scriptNode0.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setString("                                                                                                                                                                                                  {\n}\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        scope24.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        int int41 = scriptNode39.getBaseLineno();
        java.lang.Object obj42 = scriptNode39.getCompilerData();
        scriptNode39.setEncodedSourceBounds((int) '4', 0);
        scope24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        scope24.setPosition(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode49.getTop();
        scriptNode58.setPosition(6);
        scope24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        scriptNode58.flattenSymbolTable(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = scriptNode58.getRegexpFlags(1583199871);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(scriptNode58);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        scriptNode16.setLength(19);
        boolean boolean65 = scriptNode16.hasConsistentReturnUsage();
        scriptNode16.clearParentScope();
        scriptNode16.setEndLineno(19);
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment(6, 53, commentType71, "                                  Scope");
        java.lang.String str74 = comment73.getValue();
        scriptNode16.addChildToBack((com.google.javascript.rhino.head.Node) comment73);
        java.lang.String str76 = comment73.debugPrint();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor77 = comment73.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment73.visit(nodeVisitor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                                  Scope" + "'", str74, "                                  Scope");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "6\tCOMMENT 6 53\n" + "'", str76, "6\tCOMMENT 6 53\n");
        org.junit.Assert.assertNotNull(nodeItor77);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = scriptNode0.iterator();
        java.lang.String str11 = scriptNode0.debugPrint();
        java.lang.String str12 = scriptNode0.getSourceName();
        boolean boolean13 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode0.getSymbol("                                    {\n                                    }\n");
        // The following exception was thrown during execution in test generation
        try {
            int int17 = scriptNode0.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str11, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(symbol16);
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node4 = scope3.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        scriptNode5.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode5.setLineno((int) '#');
        int int22 = scriptNode5.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = scriptNode5.getEnclosingFunction();
        int int24 = scriptNode5.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope29 = scriptNode26.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode26.setSourceName("");
        com.google.javascript.rhino.head.ast.AstNode astNode32 = scriptNode26.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode26.getChildScopes();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(98666588, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scriptNode26, (-243114478));
        int int36 = scriptNode26.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node37 = scriptNode26.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 35 + "'", int22 == 35);
        org.junit.Assert.assertNull(functionNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(astNode32);
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        java.lang.String str23 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.ast.Symbol symbol25 = scriptNode16.getSymbol("  ");
        int int28 = scriptNode16.getIntProp((int) (byte) 10, 161);
        int int29 = scriptNode16.getRegexpCount();
        scriptNode16.setLength(16);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(symbol25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 161 + "'", int28 == 161);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList3 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = scriptNode1.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            astRoot4.removeProp(51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertNotNull(symbolList3);
        org.junit.Assert.assertNull(astRoot4);
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope6 = scope4.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node7 = scope4.target;
        scope4.setPosition(2);
        java.lang.String str10 = scope4.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = scope4.getSymbolTable();
        boolean boolean12 = scope4.hasChildren();
        com.google.javascript.rhino.head.Node node13 = scope4.getNext();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        java.lang.String str28 = comment24.toSource((int) (short) 10);
        scope4.setJsDocNode(comment24);
        scriptNode1.replaceWith(scope4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = scope4.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\n}\n" + "'", str10, "{\n}\n");
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                    Scope" + "'", str28, "                    Scope");
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        int int9 = scriptNode0.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode0.getFunctions();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor11 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList10);
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.String str41 = scriptNode26.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        int int54 = scriptNode43.getIntProp(6, 2);
        int int55 = scriptNode43.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope59 = scope57.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node60 = scope57.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scope57.setJsDocNode(comment66);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList76 = scriptNode69.getSymbols();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scope57, (com.google.javascript.rhino.head.Node) scriptNode69);
        boolean boolean78 = scriptNode43.hasChildren();
        java.lang.String str79 = scriptNode26.toStringTree(scriptNode43);
        com.google.javascript.rhino.head.ast.AstNode astNode80 = scriptNode43.getParent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = scriptNode43.getParamOrVarName(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str41, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(symbolList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(astNode80);
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scriptNode37.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) comment53);
        int int55 = scriptNode37.depth();
        int int56 = scriptNode37.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor57 = scriptNode37.iterator();
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope59 = scriptNode37.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray60 = scriptNode37.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeItor57);
        org.junit.Assert.assertNull(scope59);
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        java.lang.String str62 = scriptNode61.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = scriptNode63.getTop();
        java.lang.String str73 = scriptNode72.shortName();
        scriptNode61.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        java.lang.String str75 = scope1.toStringTree(scriptNode61);
        // The following exception was thrown during execution in test generation
        try {
            double double76 = scriptNode61.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ScriptNode" + "'", str62, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ScriptNode" + "'", str73, "ScriptNode");
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode10.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int29 = scriptNode10.addFunction(functionNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(symbolList27);
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.Node node10 = scope1.getNext();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        java.lang.String str25 = comment21.toSource((int) (short) 10);
        scope1.setJsDocNode(comment21);
        comment21.setRelative(4);
        java.lang.String str30 = comment21.toSource((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        scope32.setPosition(2);
        scope32.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node40 = scope32.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str46 = scriptNode41.makeIndent((int) '#');
        scope32.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope51 = scope49.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node52 = scope49.target;
        scope49.setPosition(2);
        scope49.putIntProp(17, 25);
        scope49.setLength((int) ' ');
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        int int61 = scriptNode41.getLength();
        int int62 = scriptNode41.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = null;
        java.lang.String str64 = scriptNode41.toStringTree(scriptNode63);
        scriptNode41.setPosition(0);
        // The following exception was thrown during execution in test generation
        try {
            comment21.removeChild((com.google.javascript.rhino.head.Node) scriptNode41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    Scope" + "'", str25, "                    Scope");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                                                                                                                                                  Scope" + "'", str30, "                                                                                                                                                                                                  Scope");
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                      " + "'", str46, "                                                                      ");
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 35 + "'", int61 == 35);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        node4.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = node4.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = null;
        scriptNode23.setSymbols(symbolList29);
        node4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        boolean boolean32 = scriptNode23.hasChildren();
        com.google.javascript.rhino.head.Node node33 = scriptNode23.getLastSibling();
        int int34 = scriptNode23.getBaseLineno();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        boolean boolean19 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node20 = nodeIterator17.next();
        nodeIterator17.remove();
        nodeIterator17.remove();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node23 = nodeIterator17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(node20);
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int4 = scope3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        java.lang.Object obj23 = comment16.getProp((int) (short) -1);
        java.lang.String str25 = comment16.makeIndent((int) (short) -1);
        scope3.setJsDocNode(comment16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode28.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope33.setPosition(100);
        com.google.javascript.rhino.head.Node node36 = scope33.getLastSibling();
        node36.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = node36.spliterator();
        scriptNode28.setCompilerData((java.lang.Object) node36);
        java.lang.String str40 = scriptNode28.getSourceName();
        int int41 = scriptNode28.getEncodedSourceStart();
        scriptNode28.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        java.lang.String str54 = comment49.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode50, node56);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode28.setSourceName("          {\n}\n");
        com.google.javascript.rhino.head.ast.Scope scope61 = scriptNode28.getParentScope();
        scriptNode28.setEncodedSource("*");
        com.google.javascript.rhino.head.ast.Symbol symbol64 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.putSymbol(symbol64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNull(scope61);
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode52.setPosition((int) (byte) 0);
        scriptNode52.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        java.lang.String str78 = scriptNode65.debugPrint();
        int int81 = scriptNode65.getIntProp(17, 10);
        scriptNode52.setTop(scriptNode65);
        scriptNode52.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node85 = scriptNode52.getLastChild();
        scriptNode9.setTop(scriptNode52);
        int int87 = scriptNode52.getLength();
        int int88 = scriptNode52.getType();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode52.setString("                  {\n}\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str78, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 136 + "'", int88 == 136);
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.String str29 = scriptNode26.getNextTempName();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        int int31 = scriptNode26.getType();
        java.lang.String str32 = scriptNode26.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode26.getSymbols();
        java.lang.String str34 = scriptNode0.toStringTree(scriptNode26);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDouble((double) 24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 136 + "'", int31 == 136);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str32, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope1.getSymbol("{\n{\n}\n}\n");
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = null;
        scope1.setSymbolTable(strMap12);
        int int14 = scope1.depth();
        scope1.clearParentScope();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(symbol11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str5 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope34.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node37 = scope34.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scope34.setJsDocNode(comment43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode46.getSymbols();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) scriptNode46);
        com.google.javascript.rhino.head.Node node56 = scriptNode20.setType((int) (short) 100);
        scriptNode7.target = scriptNode20;
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.labelId((-389829193));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertNotNull(node56);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.lang.String str10 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = scope1.getEnclosingFunction();
        java.lang.String str12 = scope1.debugPrint();
        java.lang.String str13 = scope1.shortName();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(functionNode11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "2\tBLOCK 2 1\n" + "'", str12, "2\tBLOCK 2 1\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Scope" + "'", str13, "Scope");
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node16 = scriptNode6.getLastChild();
        int int17 = scriptNode6.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int22 = scope21.getLength();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        java.lang.String str38 = comment34.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment34);
        java.lang.Object obj41 = comment34.getProp((int) (short) -1);
        java.lang.String str43 = comment34.makeIndent((int) (short) -1);
        scope21.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode46.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope51.setPosition(100);
        com.google.javascript.rhino.head.Node node54 = scope51.getLastSibling();
        node54.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = node54.spliterator();
        scriptNode46.setCompilerData((java.lang.Object) node54);
        java.lang.String str58 = scriptNode46.getSourceName();
        int int59 = scriptNode46.getEncodedSourceStart();
        scriptNode46.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        scriptNode68.setEncodedSourceEnd(18);
        java.lang.String str72 = comment67.toStringTree(scriptNode68);
        com.google.javascript.rhino.head.Node node74 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode68, node74);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scriptNode68);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator77 = scriptNode46.new NodeIterator();
        java.lang.String str78 = scriptNode6.toStringTree(scriptNode46);
        java.lang.String str79 = scriptNode46.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = scriptNode46.getTop();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                    Scope" + "'", str38, "                    Scope");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "$0" + "'", str79, "$0");
        org.junit.Assert.assertNotNull(scriptNode80);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        scriptNode51.setEndLineno(18);
        scriptNode38.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode0.setLineno(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode(21);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode70);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor72 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = node0.new NodeIterator();
        boolean boolean2 = nodeIterator1.hasNext();
        boolean boolean3 = nodeIterator1.hasNext();
        boolean boolean4 = nodeIterator1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        boolean boolean41 = scriptNode26.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            int int42 = scriptNode26.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        scriptNode1.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode34.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str38 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scope40.iterator();
        boolean boolean53 = scope40.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope40, 8);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scriptNode34.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getEncodedSource();
        int int59 = scriptNode57.getBaseLineno();
        java.lang.Object obj60 = scriptNode57.getCompilerData();
        scriptNode57.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode57.getSymbols();
        scriptNode34.setSymbols(symbolList64);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ScriptNode" + "'", str38, "ScriptNode");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(symbolList64);
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        int int10 = comment4.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int13 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        scriptNode14.setEncodedSourceEnd(18);
        scriptNode12.target = scriptNode14;
        int int19 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.String str36 = scriptNode33.getNextTempName();
        scriptNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        int int38 = scriptNode33.getType();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode33.getChildScopes();
        comment4.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode33);
        comment4.putIntProp(23, 17);
        com.google.javascript.rhino.head.Node node44 = comment4.getNext();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 161 + "'", int10 == 161);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 136 + "'", int38 == 136);
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertNull(node44);
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode26.getTop();
        scriptNode26.putIntProp((int) (byte) -1, 53);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node62 = scriptNode26.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertNotNull(scriptNode58);
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        scriptNode14.setEncodedSourceEnd(18);
        java.lang.String str19 = scriptNode14.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) comment47);
        int int49 = scriptNode31.depth();
        int int50 = scriptNode31.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor51 = scriptNode31.iterator();
        scriptNode14.setTop(scriptNode31);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.Node node66 = comment63.getFirstChild();
        scriptNode31.setJsDocNode(comment63);
        scriptNode31.setEncodedSourceBounds((int) ' ', 0);
        int int71 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator72 = scriptNode31.new NodeIterator();
        scriptNode0.setTop(scriptNode31);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int75 = scriptNode0.addFunction(functionNode74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                      " + "'", str19, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(nodeItor51);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        int int5 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        int int21 = scriptNode19.getBaseLineno();
        java.lang.String str22 = scriptNode19.getNextTempName();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        scriptNode19.setEncodedSourceBounds(9, 2);
        java.lang.String str29 = scriptNode19.toString();
        java.lang.String str30 = scriptNode19.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = scriptNode19.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            int int32 = astRoot31.getEndLineno();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 129 + "'", int5 == 129);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str24, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "136" + "'", str29, "136");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{\n}\n" + "'", str30, "{\n}\n");
        org.junit.Assert.assertNull(astRoot31);
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = scriptNode18.getTop();
        scriptNode27.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        scriptNode33.setEncodedSourceEnd(18);
        scriptNode31.target = scriptNode33;
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node76 = scriptNode40.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode40);
        java.lang.String str78 = scriptNode7.toSource();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node79 = scriptNode7.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{\n}\n" + "'", str78, "{\n}\n");
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        comment10.setPosition(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode16.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode16.getChildScopes();
        scriptNode16.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        int int40 = scriptNode29.getIntProp(6, 2);
        int int41 = scriptNode29.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.String str45 = scriptNode42.getNextTempName();
        scriptNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        java.lang.String str47 = scriptNode42.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int52 = scriptNode49.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope54.setPosition(100);
        com.google.javascript.rhino.head.Node node57 = scope54.getLastSibling();
        node57.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator59 = node57.spliterator();
        scriptNode49.setCompilerData((java.lang.Object) node57);
        java.lang.String str61 = scriptNode49.getSourceName();
        int int62 = scriptNode49.getEncodedSourceStart();
        scriptNode49.setEncodedSourceStart((int) (byte) 0);
        scriptNode42.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        java.lang.Object obj67 = scriptNode42.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scriptNode42, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope70 = scriptNode42.getEnclosingScope();
        java.lang.String str72 = scriptNode42.makeIndent(1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str82 = scriptNode73.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor83 = scriptNode73.iterator();
        int int84 = scriptNode73.getParamCount();
        scriptNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        scriptNode73.clearParentScope();
        int int87 = scriptNode73.getPosition();
        comment10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        com.google.javascript.rhino.head.ast.AstRoot astRoot89 = comment10.getAstRoot();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor90 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment10.visit(nodeVisitor90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str47, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(nodeSpliterator59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(scope70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "  " + "'", str72, "  ");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(nodeItor83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-53) + "'", int87 == (-53));
        org.junit.Assert.assertNull(astRoot89);
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        boolean boolean12 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.Node node16 = com.google.javascript.rhino.head.Node.newString(161, "!=");
        scriptNode0.putProp(23, (java.lang.Object) 161);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        int int42 = scriptNode31.getIntProp(6, 2);
        int int43 = scriptNode31.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        int int46 = scriptNode44.getBaseLineno();
        java.lang.String str47 = scriptNode44.getNextTempName();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        int int49 = scriptNode44.getType();
        java.lang.String str50 = scriptNode44.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        java.lang.String str52 = scriptNode18.toStringTree(scriptNode44);
        scriptNode0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = scriptNode44.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "$0" + "'", str47, "$0");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 136 + "'", int49 == 136);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str50, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.lang.String str10 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope11 = scriptNode0.getParentScope();
        scriptNode0.setEndLineno(19);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        int int21 = scope15.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scope15.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode50.setPosition((int) (byte) 0);
        scriptNode50.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str64 = scriptNode50.makeIndent(0);
        boolean boolean65 = scriptNode50.hasSideEffects();
        scope15.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode50);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray68 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        java.lang.String str15 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode16.getIntProp(6, 2);
        int int28 = scriptNode16.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        int int31 = scriptNode29.getBaseLineno();
        java.lang.String str32 = scriptNode29.getNextTempName();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.lang.String str34 = scriptNode29.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode35.getSymbols();
        scriptNode29.setSymbols(symbolList42);
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        java.lang.Object obj46 = scriptNode29.getProp(845940331);
        int int47 = scriptNode29.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = scriptNode29.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0\tBLOCK 0 1\n" + "'", str15, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str34, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        scriptNode37.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str51 = scriptNode37.makeIndent(0);
        java.lang.String str52 = scriptNode0.toStringTree(scriptNode37);
        java.lang.String str54 = scriptNode37.makeIndent(12);
        java.lang.String str55 = scriptNode37.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode56.toSource(18);
        int int59 = scriptNode56.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment60 = scriptNode56.getJsDocNode();
        int int61 = scriptNode56.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList62 = scriptNode56.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol67 = scope65.getSymbol("$0");
        boolean boolean68 = scope65.hasSideEffects();
        boolean boolean69 = scope65.hasChildren();
        scriptNode56.addChildToFront((com.google.javascript.rhino.head.Node) scope65);
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node72 = scriptNode37.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                        " + "'", str54, "                        ");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                    {\n                                    }\n" + "'", str58, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(comment60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(scopeList62);
        org.junit.Assert.assertNull(symbol67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(18);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap2 = null;
        scriptNode1.setSymbolTable(strMap2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getEncodedSource();
        scriptNode4.setEncodedSourceEnd(18);
        java.lang.String str9 = scriptNode4.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scriptNode4.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = scriptNode4.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getEncodedSource();
        scriptNode12.setEncodedSourceEnd(18);
        java.lang.String str17 = scriptNode12.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scriptNode12.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope19 = scriptNode12.getParentScope();
        scriptNode12.clearParentScope();
        scriptNode4.target = scriptNode12;
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = null;
        scriptNode12.setSymbols(symbolList23);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                                                      " + "'", str9, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                                      " + "'", str17, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertNull(scope19);
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                                                                                                                                                                                  ");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        boolean boolean44 = scriptNode31.hasSideEffects();
        int int45 = scriptNode31.getAbsolutePosition();
        boolean boolean46 = scriptNode31.hasSideEffects();
        int int47 = scriptNode31.getEndLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = scriptNode31.getEnclosingFunction();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(functionNode48);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-2), "                                          {\n                                          }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        java.lang.Object obj4 = scriptNode1.getProp(136);
        com.google.javascript.rhino.head.ast.Comment comment5 = scriptNode1.getJsDocNode();
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(comment5);
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = scriptNode1.setType(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        java.lang.String str29 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType33, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        java.lang.String str41 = scriptNode36.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment35, (com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        comment35.setCommentType(commentType43);
        scriptNode23.target = comment35;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = scriptNode48.getTop();
        scriptNode57.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode61.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getEncodedSource();
        scriptNode63.setEncodedSourceEnd(18);
        scriptNode61.target = scriptNode63;
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) comment73);
        scriptNode23.addChildToBack(node74);
        // The following exception was thrown during execution in test generation
        try {
            node6.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                                                      " + "'", str41, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getPosition();
        int int23 = scriptNode10.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        scriptNode37.setEncodedSource("                        ");
        int int44 = scriptNode37.getLineno();
        java.lang.String str45 = scriptNode10.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 0, 21, commentType48, "");
        comment50.setRelative(3);
        scriptNode10.setCompilerData((java.lang.Object) comment50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = scriptNode10.getEnclosingFunction();
        int int55 = scriptNode10.getEncodedSourceStart();
        java.lang.String str56 = scriptNode10.getJsDoc();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-53) + "'", int22 == (-53));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(functionNode54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        int int10 = comment4.getType();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        comment4.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        int int90 = scriptNode51.getEncodedSourceEnd();
        int int91 = scriptNode51.getPosition();
        java.lang.String str92 = scriptNode51.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node93 = scriptNode51.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 161 + "'", int10 == 161);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-53) + "'", int91 == (-53));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "$0" + "'", str92, "$0");
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(220850805);
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.lang.String str22 = node21.getJsDoc();
        java.lang.String str23 = node21.getJsDoc();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceStart((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node24 = scriptNode16.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        com.google.javascript.rhino.head.ast.Comment comment5 = scope2.getJsDocNode();
        scope2.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope7 = scope2.getParentScope();
        scope2.setLength((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node10 = scope2.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertNull(comment5);
        org.junit.Assert.assertNull(scope7);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceStart((int) ' ');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode16.getChildScopes();
        int int25 = scriptNode16.getPosition();
        scriptNode16.setEncodedSourceBounds((int) (short) -1, 26);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode16.labelId(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 100, 10, commentType2, "{\n{\n}\n}\n");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        comment4.setCommentType(commentType5);
        java.lang.String str8 = comment4.toSource(5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "          {\n{\n}\n}\n" + "'", str8, "          {\n{\n}\n}\n");
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int22 = scope21.depth();
        scriptNode1.replaceWith(scope21);
        com.google.javascript.rhino.head.ast.Symbol symbol25 = scriptNode1.getSymbol("                                      Scope");
        int int26 = scriptNode1.getLineno();
        int int27 = scriptNode1.getLength();
        scriptNode1.setEncodedSourceEnd((int) ' ');
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scope33.setJsDocNode(comment42);
        java.lang.String str46 = comment42.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment42);
        java.lang.Object obj49 = comment42.getProp((int) (short) -1);
        java.lang.String str51 = comment42.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        scriptNode61.setPosition(6);
        comment42.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode61);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        int int77 = scriptNode66.getIntProp(6, 2);
        int int78 = scriptNode66.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str80 = scriptNode79.getEncodedSource();
        int int81 = scriptNode79.getBaseLineno();
        java.lang.String str82 = scriptNode79.getNextTempName();
        scriptNode66.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        java.lang.String str84 = scriptNode79.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType88 = null;
        com.google.javascript.rhino.head.ast.Comment comment90 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType88, "Scope");
        scriptNode85.setParent((com.google.javascript.rhino.head.ast.AstNode) comment90);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList92 = scriptNode85.getSymbols();
        scriptNode79.setSymbols(symbolList92);
        comment42.putProp(23, (java.lang.Object) symbolList92);
        com.google.javascript.rhino.head.Token.CommentType commentType95 = comment42.getCommentType();
        scriptNode1.setJsDocNode(comment42);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor97 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment42.visit(nodeVisitor97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(symbol25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 53 + "'", int27 == 53);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                    Scope" + "'", str46, "                    Scope");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "$0" + "'", str82, "$0");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str84, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList92);
        org.junit.Assert.assertNull(commentType95);
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(52, (com.google.javascript.rhino.head.Node) scriptNode1, 4);
        java.lang.Object obj32 = scriptNode1.getCompilerData();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode13.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope30 = scriptNode13.getDefiningScope("                    Scope");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.setString("                                  41");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(scope30);
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        scriptNode16.setLength(19);
        boolean boolean65 = scriptNode16.hasConsistentReturnUsage();
        scriptNode16.clearParentScope();
        scriptNode16.setEndLineno(19);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor69 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode16.visit(nodeVisitor69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("%");
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = node1.iterator();
        boolean boolean3 = nodeItor2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(nodeItor2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = scriptNode31.new NodeIterator();
        boolean boolean46 = nodeIterator45.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node47 = nodeIterator45.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        scriptNode1.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode34.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str38 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scope40.iterator();
        boolean boolean53 = scope40.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope40, 8);
        int int56 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor57 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.visit(nodeVisitor57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ScriptNode" + "'", str38, "ScriptNode");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope6 = scope4.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node7 = scope4.target;
        scope4.setPosition(2);
        java.lang.String str10 = scope4.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = scope4.getSymbolTable();
        boolean boolean12 = scope4.hasChildren();
        com.google.javascript.rhino.head.Node node13 = scope4.getNext();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        java.lang.String str28 = comment24.toSource((int) (short) 10);
        scope4.setJsDocNode(comment24);
        scriptNode1.replaceWith(scope4);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node31 = scriptNode1.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\n}\n" + "'", str10, "{\n}\n");
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                    Scope" + "'", str28, "                    Scope");
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        scriptNode9.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        com.google.javascript.rhino.head.Node node28 = scriptNode9.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        java.lang.String str37 = scriptNode29.debugPrint();
        java.lang.String str38 = scriptNode29.getEncodedSource();
        scriptNode9.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode9.setString("                                  ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str37, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int60 = scriptNode45.getEncodedSourceStart();
        java.lang.String str62 = scriptNode45.makeIndent((-547629399));
        scriptNode45.setBaseLineno(908331048);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral65 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode45.addRegExp(regExpLiteral65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode6.getTop();
        scriptNode15.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int20 = scriptNode19.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        scriptNode21.setEncodedSourceEnd(18);
        scriptNode19.target = scriptNode21;
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        int int39 = scriptNode28.getIntProp(6, 2);
        int int40 = scriptNode28.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope44 = scope42.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node45 = scope42.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scope42.setJsDocNode(comment51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode54.getSymbols();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scope42, (com.google.javascript.rhino.head.Node) scriptNode54);
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode64.getSymbols();
        scriptNode28.setSymbols(symbolList71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode28.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList74 = scriptNode28.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList75 = scriptNode28.getChildScopes();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        scriptNode28.clearParentScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = scriptNode28.getEnclosingFunction();
        scriptNode28.clearParentScope();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap80 = null;
        scriptNode28.setSymbolTable(strMap80);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(symbolList61);
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(functionNodeList74);
        org.junit.Assert.assertNull(scopeList75);
        org.junit.Assert.assertNull(functionNode78);
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = scriptNode45.getTop();
        com.google.javascript.rhino.head.Node node61 = scriptNode45.getNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node63 = node61.setType(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertNull(node61);
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment9 = scriptNode0.getJsDocNode();
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode0.getParentScope();
        java.lang.String str11 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode13.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode13.getParentScope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        java.lang.String str25 = scope19.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = scope19.getSymbolTable();
        boolean boolean27 = scope19.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scope19.target = scriptNode28;
        com.google.javascript.rhino.head.Node node39 = scriptNode28.target;
        int int40 = scriptNode28.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        int int56 = scriptNode54.getBaseLineno();
        java.lang.String str57 = scriptNode54.getNextTempName();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        java.lang.String str59 = scriptNode54.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str65 = scope63.toSource(12);
        scope63.setRelative(1);
        scriptNode54.putProp(17, (java.lang.Object) 1);
        scriptNode28.target = scriptNode54;
        int int70 = scriptNode28.getEncodedSourceEnd();
        java.lang.Object obj71 = scriptNode28.getCompilerData();
        int int72 = scriptNode28.getEndLineno();
        scriptNode13.setTop(scriptNode28);
        scriptNode0.setTop(scriptNode28);
        scriptNode28.setEncodedSource("129");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(comment9);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str59, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                        {\n                        }\n" + "'", str65, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(22);
        com.google.javascript.rhino.head.ast.Scope scope2 = null;
        // The following exception was thrown during execution in test generation
        try {
            node1.setScope(scope2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        java.lang.Object obj10 = scope1.getProp((int) 'a');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = scope1.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getParamCount();
        scriptNode12.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode12.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList40 = scriptNode12.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment41 = scriptNode12.getJsDocNode();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node43 = scriptNode12.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertNotNull(astNodeList40);
        org.junit.Assert.assertNull(comment41);
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        boolean boolean5 = scriptNode1.hasSideEffects();
        int int6 = scriptNode1.depth();
        int int7 = scriptNode1.getFunctionCount();
        int int8 = scriptNode1.getEncodedSourceEnd();
        int int9 = scriptNode1.getParamCount();
        int int10 = scriptNode1.getEncodedSourceEnd();
        java.lang.Object obj11 = scriptNode1.getCompilerData();
        boolean boolean12 = scriptNode1.hasChildren();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.labelId(19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.String str41 = scriptNode26.debugPrint();
        scriptNode26.setBounds((int) (byte) 1, 3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int46 = scriptNode26.addFunction(functionNode45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str41, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getLineno();
        java.lang.String str11 = scriptNode0.getSourceName();
        int int12 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = scriptNode0.new NodeIterator();
        int int14 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral15 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.addRegExp(regExpLiteral15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        int int14 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode0.getParentScope();
        boolean boolean16 = scriptNode0.hasConsistentReturnUsage();
        java.lang.String str17 = scriptNode0.getJsDoc();
        java.lang.String str19 = scriptNode0.toSource(11);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray20 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                      {\n                      }\n" + "'", str19, "                      {\n                      }\n");
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment4 = scriptNode0.getJsDocNode();
        com.google.javascript.rhino.head.ast.Jump jump5 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setLoop(jump5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(comment4);
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType3, "41");
        comment5.putProp((int) (byte) -1, (java.lang.Object) 100.0d);
        com.google.javascript.rhino.head.Token.CommentType commentType9 = comment5.getCommentType();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(26, (int) (byte) 100);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (byte) 0, node14);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.setPosition(100);
        com.google.javascript.rhino.head.Node node21 = scope18.getLastSibling();
        node21.removeChildren();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(12, node21);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope25.setPosition(100);
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) '#', node14, node23, (com.google.javascript.rhino.head.Node) scope25);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope33 = scope31.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node34 = scope31.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scope31.setJsDocNode(comment40);
        comment40.setPosition(0);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        comment40.setCommentType(commentType45);
        com.google.javascript.rhino.head.Token.CommentType commentType47 = comment40.getCommentType();
        com.google.javascript.rhino.head.Node node48 = comment40.getLastChild();
        com.google.javascript.rhino.head.Node node49 = comment40.getLastSibling();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((-53), (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) comment40);
        // The following exception was thrown during execution in test generation
        try {
            comment5.labelId(19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentType9);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(commentType47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(node49);
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int4 = scope3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        java.lang.Object obj23 = comment16.getProp((int) (short) -1);
        java.lang.String str25 = comment16.makeIndent((int) (short) -1);
        scope3.setJsDocNode(comment16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode28.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope33.setPosition(100);
        com.google.javascript.rhino.head.Node node36 = scope33.getLastSibling();
        node36.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = node36.spliterator();
        scriptNode28.setCompilerData((java.lang.Object) node36);
        java.lang.String str40 = scriptNode28.getSourceName();
        int int41 = scriptNode28.getEncodedSourceStart();
        scriptNode28.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        java.lang.String str54 = comment49.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode50, node56);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode28.clearParentScope();
        scriptNode28.setEndLineno((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(node56);
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        int int28 = scriptNode0.getParamCount();
        scriptNode0.setEncodedSource("                                              Scope");
        boolean boolean31 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode33.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope38.setPosition(100);
        com.google.javascript.rhino.head.Node node41 = scope38.getLastSibling();
        node41.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator43 = node41.spliterator();
        scriptNode33.setCompilerData((java.lang.Object) node41);
        java.lang.String str46 = scriptNode33.toSource(21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        scriptNode47.setEndLineno(5);
        java.lang.Object obj59 = scriptNode47.getProp((int) (short) 10);
        int int60 = scriptNode47.getParamCount();
        scriptNode33.setTop(scriptNode47);
        scriptNode33.setBounds(17, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = scriptNode33.getTop();
        scriptNode65.setLength(51);
        scriptNode0.setTop(scriptNode65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = scriptNode65.getRegexpFlags((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(nodeSpliterator43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                          {\n                                          }\n" + "'", str46, "                                          {\n                                          }\n");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(scriptNode65);
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode2.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode39.getSymbols();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope27, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setPosition((int) (byte) 0);
        scriptNode39.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str53 = scriptNode39.makeIndent(0);
        java.lang.String str54 = scriptNode2.toStringTree(scriptNode39);
        java.lang.String str56 = scriptNode39.makeIndent(12);
        java.lang.String str57 = scriptNode39.getSourceName();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        int int59 = scriptNode1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Scope scope60 = scriptNode1.getParentScope();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                        " + "'", str56, "                        ");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(scope60);
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        java.lang.String str14 = node12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        int int49 = scriptNode38.getIntProp(6, 2);
        int int50 = scriptNode38.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope54 = scope52.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node55 = scope52.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scope52.setJsDocNode(comment61);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode64.getSymbols();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope52, (com.google.javascript.rhino.head.Node) scriptNode64);
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        scriptNode74.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = scriptNode74.getTop();
        scriptNode31.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode83);
        java.lang.String str85 = node12.toStringTree(scriptNode31);
        java.lang.Object obj87 = node12.getProp((int) (byte) 0);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator88 = node12.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator88.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "41" + "'", str14, "41");
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node16 = scriptNode6.getLastChild();
        int int17 = scriptNode6.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope19.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode49.setPosition((int) (byte) 0);
        scope19.setTop(scriptNode49);
        int int61 = scriptNode49.getParamCount();
        boolean boolean62 = scriptNode49.hasConsistentReturnUsage();
        java.lang.String str63 = scriptNode49.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode49.getSymbols();
        scriptNode6.setSymbols(symbolList64);
        scriptNode6.clearParentScope();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(symbolList64);
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        java.lang.String str8 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode11);
        scriptNode11.setEndLineno(20);
        scriptNode11.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scope18.setJsDocNode(comment27);
        comment27.setPosition(0);
        com.google.javascript.rhino.head.Token.CommentType commentType32 = comment27.getCommentType();
        java.lang.String str34 = comment27.toSource(9);
        com.google.javascript.rhino.head.Token.CommentType commentType35 = comment27.getCommentType();
        scriptNode11.addChildrenToFront((com.google.javascript.rhino.head.Node) comment27);
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode11);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node38 = scriptNode11.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(commentType32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                  Scope" + "'", str34, "                  Scope");
        org.junit.Assert.assertNull(commentType35);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode4.getEncodedSourceStart();
        int int14 = scriptNode4.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        int int26 = scriptNode15.getIntProp(6, 2);
        int int27 = scriptNode15.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        int int30 = scriptNode28.getBaseLineno();
        java.lang.String str31 = scriptNode28.getNextTempName();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str68 = scriptNode59.getSourceName();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode59, 26);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node55, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scriptNode59);
        node71.setLineno(5);
        scriptNode15.setCompilerData((java.lang.Object) node71);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode4, node71);
        scriptNode4.setEncodedSource("                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope82 = scope80.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node83 = scope80.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType87 = null;
        com.google.javascript.rhino.head.ast.Comment comment89 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType87, "Scope");
        scriptNode84.setParent((com.google.javascript.rhino.head.ast.AstNode) comment89);
        scope80.setJsDocNode(comment89);
        java.lang.String str93 = comment89.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment89);
        java.lang.String str96 = comment89.toSource(100);
        com.google.javascript.rhino.head.Node node98 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode4, (com.google.javascript.rhino.head.Node) comment89, (int) (short) 100);
        boolean boolean99 = scriptNode4.hasChildren();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(scope82);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "                    Scope" + "'", str93, "                    Scope");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str96, "                                                                                                                                                                                                        Scope");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode10.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope29 = scriptNode10.getDefiningScope("                        ");
        java.lang.String str30 = scriptNode10.getJsDoc();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("                                                    {\n                                                    }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        int int38 = scriptNode27.getIntProp(6, 2);
        int int39 = scriptNode27.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode53.getSymbols();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) scriptNode53);
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode63.getSymbols();
        scriptNode27.setSymbols(symbolList70);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode27.getSymbols();
        scriptNode27.setPosition(18);
        int int77 = scriptNode27.getIntProp(129, (int) (short) 100);
        scriptNode27.setBaseLineno((int) (byte) 10);
        java.lang.String str80 = scriptNode27.getNextTempName();
        java.lang.String str82 = scriptNode27.toSource(0);
        // The following exception was thrown during execution in test generation
        try {
            scope3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{\n}\n" + "'", str82, "{\n}\n");
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.lang.String str22 = node21.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope23 = node21.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode1.getChildScopes();
        scriptNode1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        java.lang.String str32 = scriptNode27.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode34.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope39.setPosition(100);
        com.google.javascript.rhino.head.Node node42 = scope39.getLastSibling();
        node42.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = node42.spliterator();
        scriptNode34.setCompilerData((java.lang.Object) node42);
        java.lang.String str46 = scriptNode34.getSourceName();
        int int47 = scriptNode34.getEncodedSourceStart();
        scriptNode34.setEncodedSourceStart((int) (byte) 0);
        scriptNode27.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        java.lang.Object obj52 = scriptNode27.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode27, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node55 = scriptNode27.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str32, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        java.lang.String str40 = comment35.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode36, node42);
        scriptNode36.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str55 = scriptNode46.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope57.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope57, (int) (byte) 10);
        java.lang.String str63 = scriptNode36.getNextTempName();
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        int int65 = scriptNode0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 136 + "'", int65 == 136);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scriptNode37.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) comment53);
        int int55 = scriptNode37.depth();
        int int56 = scriptNode37.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor57 = scriptNode37.iterator();
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Node node60 = scriptNode37.setType((int) (short) 1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator61 = node60.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node62 = nodeIterator61.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeItor57);
        org.junit.Assert.assertNotNull(node60);
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        scriptNode23.setPosition(18);
        int int73 = scriptNode23.getIntProp(129, (int) (short) 100);
        scriptNode23.setBaseLineno((int) (byte) 10);
        java.lang.String str76 = scriptNode23.getNextTempName();
        boolean boolean77 = scriptNode23.hasSideEffects();
        int int78 = scriptNode23.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList79 = scriptNode23.getStatements();
        com.google.javascript.rhino.head.Node node80 = scriptNode23.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope81 = node80.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "$0" + "'", str76, "$0");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(astNodeList79);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.Node node24 = scriptNode0.setType(0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope25 = node24.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(node24);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        int int17 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode0.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment22 = scriptNode21.getJsDocNode();
        scriptNode21.flattenSymbolTable(true);
        scriptNode21.setEncodedSourceStart(100);
        scriptNode21.clearParentScope();
        scriptNode0.putProp((-389829193), (java.lang.Object) scriptNode21);
        int int29 = scriptNode21.getParamCount();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(functionNode18);
        org.junit.Assert.assertNull(comment22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        boolean boolean10 = scope2.hasSideEffects();
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("$0");
        node13.putIntProp(25, 1);
        com.google.javascript.rhino.head.Node node17 = node13.getFirstChild();
        scope2.putProp((int) (short) 100, (java.lang.Object) node13);
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType22, "{\n}\n");
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment24, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType27 = comment24.getCommentType();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(9, node13, (com.google.javascript.rhino.head.Node) comment24, 17);
        com.google.javascript.rhino.head.Token.CommentType commentType30 = comment24.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        comment24.setCommentType(commentType31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        scriptNode33.setEncodedSourceEnd(18);
        java.lang.String str38 = scriptNode33.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = scriptNode41.getTop();
        scriptNode50.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int55 = scriptNode54.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        scriptNode56.setEncodedSourceEnd(18);
        scriptNode54.target = scriptNode56;
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scriptNode56);
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) comment66);
        int int68 = scriptNode50.depth();
        int int69 = scriptNode50.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor70 = scriptNode50.iterator();
        scriptNode33.setTop(scriptNode50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        scriptNode72.setEncodedSourceStart((int) (byte) 100);
        int int83 = scriptNode72.getIntProp(6, 2);
        int int84 = scriptNode72.getParamCount();
        java.lang.String str85 = scriptNode72.debugPrint();
        scriptNode72.setPosition(8);
        int int88 = scriptNode72.getParamCount();
        scriptNode72.setPosition((int) (byte) 10);
        scriptNode50.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        java.lang.Object obj92 = scriptNode50.getCompilerData();
        comment24.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode50);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(commentType27);
        org.junit.Assert.assertNull(commentType30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                                                      " + "'", str38, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(nodeItor70);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str85, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.lang.String str10 = scope1.makeIndent(0);
        int int11 = scope1.getLength();
        com.google.javascript.rhino.head.Node node13 = scope1.setType(3);
        com.google.javascript.rhino.head.Node node16 = com.google.javascript.rhino.head.Node.newString((int) (byte) 10, "");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = node16.toStringTree(scriptNode28);
        scope1.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        scriptNode28.putIntProp(18, 10);
        com.google.javascript.rhino.head.ast.Symbol symbol52 = scriptNode28.getSymbol("{\n}\n");
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(symbol52);
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode11.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope33.setPosition(100);
        com.google.javascript.rhino.head.Node node36 = scope33.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = scope33.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node39 = scope33.setType(6);
        java.lang.Object obj41 = scope33.getProp(35);
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) scope33);
        java.lang.String str43 = scriptNode11.toString();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = scriptNode11.spliterator();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNull(functionNode37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertNotNull(nodeSpliterator44);
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.lang.String str22 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType26, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        java.lang.String str34 = scriptNode29.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment28, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        comment28.setCommentType(commentType36);
        scriptNode16.target = comment28;
        scriptNode16.flattenSymbolTable(false);
        java.lang.String str41 = scriptNode16.debugPrint();
        int int42 = scriptNode16.getEncodedSourceStart();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                      " + "'", str34, "                                                                      ");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str26 = scriptNode17.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scope28, (int) (byte) 10);
        int int34 = scriptNode17.getRegexpCount();
        java.lang.String str35 = scriptNode17.getJsDoc();
        com.google.javascript.rhino.head.Node node37 = com.google.javascript.rhino.head.Node.newString("129");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node38 = scriptNode17.getChildBefore(node37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node37);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString("      Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.String str19 = scriptNode16.getNextTempName();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        scriptNode16.setEncodedSource("                        ");
        int int23 = scriptNode16.getLineno();
        java.lang.String str24 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node2, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int26 = scriptNode16.getLineno();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        java.lang.String str5 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node6 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node12 = scope9.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scope9.setJsDocNode(comment18);
        com.google.javascript.rhino.head.Node node21 = scope9.target;
        java.lang.String str22 = scope9.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        int int51 = scriptNode49.getBaseLineno();
        java.lang.String str52 = scriptNode49.getNextTempName();
        scriptNode36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        int int54 = scriptNode49.getType();
        java.lang.String str55 = scriptNode49.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        java.lang.String str57 = scriptNode23.toStringTree(scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList58 = scriptNode23.getStatements();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(371991955);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(754207379, (com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode23, node60, (-243114478));
        // The following exception was thrown during execution in test generation
        try {
            node6.removeChild((com.google.javascript.rhino.head.Node) scriptNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Scope" + "'", str5, "Scope");
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "0\tBLOCK 0 1\n" + "'", str22, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 136 + "'", int54 == 136);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str55, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(astNodeList58);
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        scope3.setPosition(2);
        scope3.setLength((int) (byte) 1);
        java.lang.Object obj12 = scope3.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope3);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        java.lang.String str21 = scope15.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = scope15.getSymbolTable();
        boolean boolean23 = scope15.hasChildren();
        com.google.javascript.rhino.head.Node node24 = scope15.getNext();
        scope3.addChildrenToFront((com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType40, "{\n}\n");
        java.lang.String str43 = comment42.getValue();
        comment42.setLength(129);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) comment42);
        boolean boolean47 = node46.hasSideEffects();
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n}\n" + "'", str21, "{\n}\n");
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = scope1.getEnclosingFunction();
        org.junit.Assert.assertNull(functionNode2);
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        java.lang.String str11 = scriptNode3.toSource(26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = null;
        scriptNode3.setSymbolTable(strMap12);
        int int14 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        int int15 = scriptNode0.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = scriptNode0.getFunctionNode(1404628457);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                    {\n                                                    }\n" + "'", str11, "                                                    {\n                                                    }\n");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1116270208) + "'", int14 == (-1116270208));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = scriptNode0.getSymbolTable();
        int int29 = scriptNode0.getEndLineno();
        scriptNode0.setEndLineno((int) (byte) 10);
        int int32 = scriptNode0.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode34 = scriptNode0.getFunctionNode(34756133);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.lang.String str23 = scriptNode16.makeIndent(1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = scriptNode16.getRegexpString(1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "  " + "'", str23, "  ");
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-366869103), 754207379);
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int4 = scope3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        java.lang.Object obj23 = comment16.getProp((int) (short) -1);
        java.lang.String str25 = comment16.makeIndent((int) (short) -1);
        scope3.setJsDocNode(comment16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode28.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope33.setPosition(100);
        com.google.javascript.rhino.head.Node node36 = scope33.getLastSibling();
        node36.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = node36.spliterator();
        scriptNode28.setCompilerData((java.lang.Object) node36);
        java.lang.String str40 = scriptNode28.getSourceName();
        int int41 = scriptNode28.getEncodedSourceStart();
        scriptNode28.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        java.lang.String str54 = comment49.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode50, node56);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode28.setSourceName("          {\n}\n");
        com.google.javascript.rhino.head.ast.Scope scope61 = scriptNode28.getParentScope();
        scriptNode28.setEncodedSource("*");
        java.lang.String str64 = scriptNode28.debugPrint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNull(scope61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "11\tSCRIPT 11 1\n" + "'", str64, "11\tSCRIPT 11 1\n");
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node12 = scope9.target;
        scope9.setPosition(2);
        java.lang.String str15 = scope9.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = scope9.getSymbolTable();
        boolean boolean17 = scope9.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = scriptNode18.getTop();
        scope9.target = scriptNode18;
        com.google.javascript.rhino.head.Node node29 = scriptNode18.target;
        scriptNode18.setBaseLineno(10);
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str36 = scope34.makeIndent(0);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        scope34.addChildrenToFront((com.google.javascript.rhino.head.Node) scope38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode78.getSymbols();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope66, (com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scope34, node86);
        java.lang.String str88 = node87.getJsDoc();
        int int89 = node87.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            double double90 = node87.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{\n}\n" + "'", str15, "{\n}\n");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode42.setEndLineno(18);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode42, (int) (byte) -1);
        scriptNode16.target = scriptNode42;
        scriptNode42.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = scriptNode42.getAstRoot();
        java.lang.String str61 = scriptNode42.toSource();
        int int62 = scriptNode42.getAbsolutePosition();
        java.lang.String str63 = scriptNode42.getJsDoc();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral64 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode42.addRegExp(regExpLiteral64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(astRoot60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        int int3 = scriptNode1.getBaseLineno();
        java.lang.Object obj4 = scriptNode1.getCompilerData();
        scriptNode1.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = null;
        scriptNode1.setSymbolTable(strMap7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = scriptNode12.getTop();
        scriptNode21.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int26 = scriptNode25.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        scriptNode27.setEncodedSourceEnd(18);
        scriptNode25.target = scriptNode27;
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scriptNode27);
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) comment37);
        java.lang.String str40 = comment37.toSource(17);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope45 = scope43.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node46 = scope43.target;
        scope43.setPosition(2);
        int int49 = scope43.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        scope51.setPosition(2);
        scope51.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scope60.setJsDocNode(comment69);
        java.lang.String str73 = comment69.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = comment69.getAstRoot();
        scope51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType79, "Scope");
        scriptNode76.setParent((com.google.javascript.rhino.head.ast.AstNode) comment81);
        scriptNode76.setEncodedSourceStart((int) (byte) 100);
        int int87 = scriptNode76.getIntProp(6, 2);
        int int88 = scriptNode76.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode89 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str90 = scriptNode89.getEncodedSource();
        int int91 = scriptNode89.getBaseLineno();
        java.lang.String str92 = scriptNode89.getNextTempName();
        scriptNode76.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode89);
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scope43, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scriptNode89, 136);
        comment37.addChildrenToFront((com.google.javascript.rhino.head.Node) scope43);
        scriptNode9.setCompilerData((java.lang.Object) comment37);
        com.google.javascript.rhino.head.Node node99 = new com.google.javascript.rhino.head.Node(213295120, (com.google.javascript.rhino.head.Node) scriptNode9, 21);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                  Scope" + "'", str40, "                                  Scope");
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                    Scope" + "'", str73, "                    Scope");
        org.junit.Assert.assertNull(astRoot74);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "$0" + "'", str92, "$0");
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        int int3 = scriptNode1.getFunctionCount();
        int int4 = scriptNode1.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("-1\t  SCRIPT -53 1\n");
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        java.lang.String str19 = comment15.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment15);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator21 = node20.new NodeIterator();
        com.google.javascript.rhino.head.Node node22 = nodeIterator21.next();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        java.lang.String str36 = scriptNode23.getSourceName();
        java.lang.String str37 = node22.toStringTree(scriptNode23);
        scriptNode23.setBounds((-1), 26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        int int56 = scriptNode54.getBaseLineno();
        java.lang.String str57 = scriptNode54.getNextTempName();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        java.lang.String str59 = scriptNode54.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode60.getSymbols();
        scriptNode54.setSymbols(symbolList67);
        int int69 = scriptNode54.getRegexpCount();
        int int70 = scriptNode54.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scriptNode71.setEncodedSourceStart((int) (byte) 100);
        int int82 = scriptNode71.getIntProp(6, 2);
        int int83 = scriptNode71.getRegexpCount();
        scriptNode71.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode71.setLineno((int) '#');
        int int88 = scriptNode71.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = scriptNode71.getEnclosingFunction();
        int int90 = scriptNode71.getFunctionCount();
        scriptNode54.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode71);
        scriptNode23.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode54);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot94 = scriptNode23.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList95 = astRoot94.getStatements();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                    Scope" + "'", str19, "                    Scope");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str59, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 35 + "'", int88 == 35);
        org.junit.Assert.assertNull(functionNode89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNull(astRoot94);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (short) -1);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        scriptNode39.setEndLineno(18);
        scriptNode26.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode26.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = scriptNode26.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode26.putSymbol(symbol57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(scriptNode56);
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getLineno();
        java.lang.String str11 = scriptNode0.getSourceName();
        int int12 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = scriptNode0.new NodeIterator();
        com.google.javascript.rhino.head.ast.Jump jump14 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setLoop(jump14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        boolean boolean26 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode27.toSource(18);
        java.lang.Object obj30 = scriptNode27.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        scope33.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope44 = scope42.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node45 = scope42.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scope42.setJsDocNode(comment51);
        java.lang.String str55 = comment51.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = comment51.getAstRoot();
        scope33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = scriptNode60.getTop();
        scriptNode69.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int74 = scriptNode73.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode75.getEncodedSource();
        scriptNode75.setEncodedSourceEnd(18);
        scriptNode73.target = scriptNode75;
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode69, (com.google.javascript.rhino.head.Node) scriptNode75);
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType83, "Scope");
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode69, (com.google.javascript.rhino.head.Node) comment85);
        int int87 = scriptNode69.depth();
        int int88 = scriptNode69.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor89 = scriptNode69.iterator();
        scope33.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        scriptNode27.putProp(0, (java.lang.Object) scriptNode69);
        java.lang.String str92 = scope1.toStringTree(scriptNode69);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor93 = scope1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor93.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                    {\n                                    }\n" + "'", str29, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "                    Scope" + "'", str55, "                    Scope");
        org.junit.Assert.assertNull(astRoot56);
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(nodeItor89);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(nodeItor93);
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList7 = scriptNode0.getStatements();
        scriptNode0.removeProp(100);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = scriptNode0.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(astNodeList7);
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 'a');
        node1.putIntProp(15, (-389829193));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode5.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope10.setPosition(100);
        com.google.javascript.rhino.head.Node node13 = scope10.getLastSibling();
        node13.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = node13.spliterator();
        scriptNode5.setCompilerData((java.lang.Object) node13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = scriptNode5.toStringTree(scriptNode28);
        java.lang.String str47 = scriptNode28.toString();
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newString(19, "                    Scope");
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, node50, 12);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor53 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.visit(nodeVisitor53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(node50);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode5.setDouble((double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        java.lang.Object obj2 = scriptNode1.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setBaseLineno((-53));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = scope1.getTop();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = scriptNode7.getExistingIntProp(371991955);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scriptNode7);
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode0.setParentScope(scope17);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scriptNode0.spliterator();
        java.lang.Object obj20 = scriptNode0.getCompilerData();
        java.lang.String str21 = scriptNode0.shortName();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-389829193));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope2 = node1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.NumberLiteral cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getFunctionCount();
        int int11 = scriptNode0.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList12 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        java.lang.String str23 = comment18.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.Node node25 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode19, node25);
        scriptNode19.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node29 = scriptNode19.getLastChild();
        int int30 = scriptNode19.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope32.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode62.setPosition((int) (byte) 0);
        scope32.setTop(scriptNode62);
        int int74 = scriptNode62.getParamCount();
        boolean boolean75 = scriptNode62.hasConsistentReturnUsage();
        java.lang.String str76 = scriptNode62.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode62.getSymbols();
        scriptNode19.setSymbols(symbolList77);
        scriptNode0.setSymbols(symbolList77);
        com.google.javascript.rhino.head.ast.Symbol symbol80 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.putSymbol(symbol80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(astNodeList12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(symbolList77);
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(15, (-1), commentType2, "$0");
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        java.lang.String str8 = scriptNode0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getEncodedSource();
        int int24 = scriptNode22.getBaseLineno();
        java.lang.String str25 = scriptNode22.getNextTempName();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        java.lang.String str27 = scriptNode22.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str33 = scope31.toSource(12);
        scope31.setRelative(1);
        scriptNode22.putProp(17, (java.lang.Object) 1);
        java.lang.String str38 = scriptNode22.toSource(13);
        scriptNode0.target = scriptNode22;
        java.lang.String str41 = scriptNode0.toSource(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 10);
        scriptNode43.setSourceName("                                              Scope");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str27, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                        {\n                        }\n" + "'", str33, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                          {\n                          }\n" + "'", str38, "                          {\n                          }\n");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                {\n                                }\n" + "'", str41, "                                {\n                                }\n");
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        int int38 = scriptNode36.getBaseLineno();
        java.lang.String str39 = scriptNode36.getNextTempName();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str47 = scope45.toSource(12);
        scope45.setRelative(1);
        scriptNode36.putProp(17, (java.lang.Object) 1);
        scriptNode10.target = scriptNode36;
        int int52 = scriptNode10.getEncodedSourceEnd();
        java.lang.Object obj53 = scriptNode10.getCompilerData();
        java.lang.String str54 = scriptNode10.shortName();
        java.lang.Object obj55 = scriptNode10.getCompilerData();
        int int56 = scriptNode10.getEncodedSourceStart();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str41, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                        {\n                        }\n" + "'", str47, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ScriptNode" + "'", str54, "ScriptNode");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        scriptNode4.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        node36.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope40.setPosition(100);
        com.google.javascript.rhino.head.Node node43 = scope40.getLastSibling();
        node43.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator45 = node43.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = scriptNode47.getTop();
        scriptNode56.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int61 = scriptNode60.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getEncodedSource();
        scriptNode62.setEncodedSourceEnd(18);
        scriptNode60.target = scriptNode62;
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scriptNode62);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = null;
        scriptNode62.setSymbols(symbolList68);
        node43.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope74 = scope72.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node75 = scope72.target;
        scope72.setPosition(2);
        scope72.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node80 = scope72.getFirstChild();
        node36.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode62, (com.google.javascript.rhino.head.Node) scope72);
        scriptNode4.target = scriptNode62;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode62.flattenSymbolTable(true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(scope74);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int60 = scriptNode45.getEncodedSourceStart();
        java.lang.String str62 = scriptNode45.makeIndent((-547629399));
        scriptNode45.setBaseLineno(908331048);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode45.labelId((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        int int43 = scriptNode2.getLineno();
        java.lang.String str44 = scriptNode2.getEncodedSource();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = scriptNode2.new NodeIterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral46 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode2.addRegExp(regExpLiteral46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str36 = scriptNode27.getSourceName();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode27, 26);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node23, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode27);
        com.google.javascript.rhino.head.Node node40 = scriptNode27.getLastSibling();
        boolean boolean41 = scriptNode27.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        int int54 = scriptNode43.getIntProp(6, 2);
        scriptNode27.putProp((int) (byte) 0, (java.lang.Object) int54);
        com.google.javascript.rhino.head.ast.AstNode astNode56 = scriptNode27.getParent();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) scope57);
        boolean boolean59 = scriptNode27.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scriptNode27);
        int int61 = scriptNode27.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        int int74 = scriptNode63.getIntProp(6, 2);
        int int75 = scriptNode63.getParamCount();
        java.lang.String str76 = scriptNode63.debugPrint();
        scriptNode63.setRelative((int) '4');
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) scriptNode63);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.setFinally((com.google.javascript.rhino.head.Node) scriptNode63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(astNode56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str76, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str30 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node31 = scriptNode0.getNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope32 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(node31);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        int int22 = scope1.getType();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 129 + "'", int22 == 129);
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        scriptNode0.setBaseLineno((int) (byte) 10);
        java.lang.String str11 = scriptNode0.getSourceName();
        java.lang.String str12 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceBounds(20, 15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = scriptNode0.getRegexpFlags(1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode52.setPosition((int) (byte) 0);
        scriptNode52.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        java.lang.String str78 = scriptNode65.debugPrint();
        int int81 = scriptNode65.getIntProp(17, 10);
        scriptNode52.setTop(scriptNode65);
        scriptNode52.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node85 = scriptNode52.getLastChild();
        scriptNode9.setTop(scriptNode52);
        int int87 = scriptNode52.getLength();
        int int88 = scriptNode52.getType();
        com.google.javascript.rhino.head.Token.CommentType commentType91 = null;
        com.google.javascript.rhino.head.ast.Comment comment93 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 100, 10, commentType91, "{\n{\n}\n}\n");
        com.google.javascript.rhino.head.Token.CommentType commentType94 = null;
        comment93.setCommentType(commentType94);
        boolean boolean96 = comment93.hasConsistentReturnUsage();
        scriptNode52.setJsDocNode(comment93);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str78, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 136 + "'", int88 == 136);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = null;
        scriptNode0.setSymbolTable(strMap17);
        java.lang.String str19 = scriptNode0.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump20 = scriptNode0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scope1.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Symbol symbol15 = scriptNode13.getSymbol("$0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scriptNode13);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getEndLineno();
        scriptNode0.setSourceName("                                    ");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump21 = scriptNode0.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node5 = scriptNode1.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setRelative((int) '4');
        java.lang.String str16 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        java.lang.String str24 = scope18.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode26.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope31.setPosition(100);
        com.google.javascript.rhino.head.Node node34 = scope31.getLastSibling();
        node34.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = node34.spliterator();
        scriptNode26.setCompilerData((java.lang.Object) node34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = scriptNode40.getTop();
        scriptNode49.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int54 = scriptNode53.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        scriptNode55.setEncodedSourceEnd(18);
        scriptNode53.target = scriptNode55;
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode49, (com.google.javascript.rhino.head.Node) scriptNode55);
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode49, (com.google.javascript.rhino.head.Node) comment65);
        java.lang.String str67 = scriptNode26.toStringTree(scriptNode49);
        scope18.setTop(scriptNode49);
        int int69 = scriptNode49.getEncodedSourceEnd();
        java.lang.String str70 = scriptNode0.toStringTree(scriptNode49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = scriptNode0.getRegexpString(1278533831);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{\n}\n" + "'", str24, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        java.lang.String str7 = scope1.debugPrint();
        int int8 = scope1.depth();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0\tBLOCK 0 1\n" + "'", str7, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope5 = scope1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNotNull(node4);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        java.lang.String str8 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode13.getTop();
        scriptNode22.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        scriptNode26.target = scriptNode28;
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str34 = node33.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope38 = scope36.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node39 = scope36.getLastSibling();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(23, node33, (com.google.javascript.rhino.head.Node) scope36, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode42.getSymbols();
        java.lang.String str50 = scriptNode42.debugPrint();
        scriptNode42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        scope54.setPosition(2);
        scope54.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap63 = null;
        scope54.setSymbolTable(strMap63);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scope54);
        int int66 = scriptNode42.getLineno();
        scriptNode42.setEncodedSourceStart(19);
        com.google.javascript.rhino.head.ast.Scope scope70 = scriptNode42.getDefiningScope("/");
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode42, 11);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        int int74 = scriptNode0.getBaseLineno();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str50, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scope70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str26 = scriptNode17.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scope28, (int) (byte) 10);
        int int34 = scriptNode17.getRegexpCount();
        int int35 = scriptNode17.getEndLineno();
        scriptNode17.setBaseLineno(98666588);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope55 = scope53.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node56 = scope53.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scope53.setJsDocNode(comment62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode65.getSymbols();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scope53, (com.google.javascript.rhino.head.Node) scriptNode65);
        scriptNode65.setPosition((int) (byte) 0);
        scriptNode65.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray78 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList79 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList79, symbolArray78);
        scriptNode65.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList79);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList82 = scriptNode65.getFunctions();
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope86 = scope84.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node87 = scope84.target;
        scope84.setPosition(2);
        java.lang.String str90 = scope84.toSource();
        com.google.javascript.rhino.head.Node node91 = scope84.getLastChild();
        int int92 = scope84.depth();
        scriptNode65.setParentScope(scope84);
        int int96 = scriptNode65.getIntProp(371991955, 58);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node97 = scriptNode17.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(scope55);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertNotNull(symbolArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(functionNodeList82);
        org.junit.Assert.assertNull(scope86);
        org.junit.Assert.assertNull(node87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "{\n}\n" + "'", str90, "{\n}\n");
        org.junit.Assert.assertNull(node91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 58 + "'", int96 == 58);
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        java.lang.Object obj11 = scope2.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope2);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        java.lang.String str20 = scope14.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = scope14.getSymbolTable();
        boolean boolean22 = scope14.hasChildren();
        com.google.javascript.rhino.head.Node node23 = scope14.getNext();
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope14);
        com.google.javascript.rhino.head.Node node25 = scope2.getNext();
        java.lang.String str26 = scope2.shortName();
        int int27 = scope2.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        int int39 = scriptNode28.getIntProp(6, 2);
        int int40 = scriptNode28.getParamCount();
        java.lang.String str41 = scriptNode28.debugPrint();
        scriptNode28.setRelative((int) '4');
        java.lang.String str44 = scriptNode28.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        java.lang.String str52 = scope46.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int57 = scriptNode54.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope59.setPosition(100);
        com.google.javascript.rhino.head.Node node62 = scope59.getLastSibling();
        node62.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator64 = node62.spliterator();
        scriptNode54.setCompilerData((java.lang.Object) node62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scriptNode68.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = scriptNode68.getTop();
        scriptNode77.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int82 = scriptNode81.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str84 = scriptNode83.getEncodedSource();
        scriptNode83.setEncodedSourceEnd(18);
        scriptNode81.target = scriptNode83;
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode77, (com.google.javascript.rhino.head.Node) scriptNode83);
        com.google.javascript.rhino.head.Token.CommentType commentType91 = null;
        com.google.javascript.rhino.head.ast.Comment comment93 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType91, "Scope");
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode77, (com.google.javascript.rhino.head.Node) comment93);
        java.lang.String str95 = scriptNode54.toStringTree(scriptNode77);
        scope46.setTop(scriptNode77);
        int int97 = scriptNode77.getEncodedSourceEnd();
        java.lang.String str98 = scriptNode28.toStringTree(scriptNode77);
        scope2.target = scriptNode77;
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Scope" + "'", str26, "Scope");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str41, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(nodeSpliterator64);
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        scriptNode0.setLineno(1);
        int int12 = scriptNode0.getRegexpCount();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scriptNode0.iterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node14 = nodeItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(nodeItor13);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment9 = scriptNode0.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = comment9.hasConsistentReturnUsage();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(comment9);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        node4.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = node4.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = null;
        scriptNode23.setSymbols(symbolList29);
        node4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        scriptNode23.putIntProp(136, 35);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump35 = scriptNode23.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100);
        scope1.setPosition(16);
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType2, "41");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        int int13 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope7.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope7.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        int int23 = scope17.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope24 = scope17.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope17.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.Object obj29 = scriptNode26.getCompilerData();
        scriptNode26.flattenSymbolTable(false);
        scope7.addChildAfter((com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int33 = scriptNode26.getLength();
        scriptNode26.setEncodedSourceEnd((int) (byte) 0);
        comment4.putProp(9, (java.lang.Object) scriptNode26);
        scriptNode26.removeProp((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = scriptNode26.getExistingIntProp(58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newNumber((double) 12);
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node(6, node3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource(18);
        java.lang.Object obj21 = scriptNode18.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode49.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node60 = scriptNode49.target;
        scriptNode18.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        int int62 = scriptNode49.getLineno();
        scriptNode5.setCompilerData((java.lang.Object) scriptNode49);
        scriptNode5.setRelative((int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap66 = scriptNode5.getSymbolTable();
        com.google.javascript.rhino.head.Node node67 = scriptNode5.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        int int70 = scriptNode69.getAbsolutePosition();
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(100, node3, (com.google.javascript.rhino.head.Node) scriptNode69);
        java.lang.Object obj74 = scriptNode69.getProp(1);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                    {\n                                    }\n" + "'", str20, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 6 + "'", int70 == 6);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 1, (int) (byte) 100);
        com.google.javascript.rhino.head.Node node3 = node2.getFirstChild();
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str14 = scriptNode1.toSource(21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        scriptNode15.setEndLineno(5);
        java.lang.Object obj27 = scriptNode15.getProp((int) (short) 10);
        int int28 = scriptNode15.getParamCount();
        scriptNode1.setTop(scriptNode15);
        scriptNode1.setBounds(17, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.Scope scope35 = scriptNode1.getDefiningScope("-1\t  SCRIPT -53 1\n");
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode1.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                          {\n                                          }\n" + "'", str14, "                                          {\n                                          }\n");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNotNull(functionNodeList36);
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode3.getEncodedSourceStart();
        int int13 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode58, 26);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node54, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode58);
        node70.setLineno(5);
        scriptNode14.setCompilerData((java.lang.Object) node70);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode3, node70);
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope78 = scope76.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node79 = scope76.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType83, "Scope");
        scriptNode80.setParent((com.google.javascript.rhino.head.ast.AstNode) comment85);
        scope76.setJsDocNode(comment85);
        com.google.javascript.rhino.head.Token.CommentType commentType88 = null;
        comment85.setCommentType(commentType88);
        com.google.javascript.rhino.head.ast.AstRoot astRoot90 = comment85.getAstRoot();
        scope2.setJsDocNode(comment85);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor92 = scope2.iterator();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(scope78);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNull(astRoot90);
        org.junit.Assert.assertNotNull(nodeItor92);
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = scriptNode0.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            astRoot4.setPosition(754207379);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(astRoot4);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getEndLineno();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.Node node20 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scope23.setJsDocNode(comment32);
        java.lang.String str36 = comment32.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment32);
        comment32.setLength(0);
        java.lang.String str40 = comment32.getValue();
        scriptNode0.addChildrenToFront((com.google.javascript.rhino.head.Node) comment32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int46 = scriptNode43.getIntProp(23, (int) (short) 1);
        boolean boolean47 = scriptNode43.hasSideEffects();
        int int48 = scriptNode43.depth();
        java.lang.String str49 = scriptNode0.toStringTree(scriptNode43);
        // The following exception was thrown during execution in test generation
        try {
            double double50 = scriptNode43.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "                    Scope" + "'", str36, "                    Scope");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Scope" + "'", str40, "Scope");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope2.shortName();
        com.google.javascript.rhino.head.Node node4 = scope2.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        comment16.setCommentType(commentType19);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment16, 14);
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) comment16);
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) comment16);
        java.lang.String str25 = node24.getJsDoc();
        java.lang.String str26 = node24.toString();
        java.lang.Class<?> wildcardClass27 = node24.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Scope" + "'", str3, "Scope");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0" + "'", str26, "0");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope30 = scope28.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node31 = scope28.target;
        scope28.setPosition(2);
        scope28.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node36 = scope28.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        java.lang.String str42 = scriptNode37.makeIndent((int) '#');
        scope28.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope47 = scope45.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node48 = scope45.target;
        scope45.setPosition(2);
        scope45.putIntProp(17, 25);
        scope45.setLength((int) ' ');
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scope45);
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray58 = scriptNode0.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                      " + "'", str42, "                                                                      ");
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertNull(node48);
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        scriptNode10.setLineno((-1));
        com.google.javascript.rhino.head.ast.Comment comment84 = scriptNode10.getJsDocNode();
        scriptNode10.setEncodedSourceEnd(35);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNull(comment84);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode5.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope10.setPosition(100);
        com.google.javascript.rhino.head.Node node13 = scope10.getLastSibling();
        node13.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = node13.spliterator();
        scriptNode5.setCompilerData((java.lang.Object) node13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = scriptNode5.toStringTree(scriptNode28);
        java.lang.String str47 = scriptNode28.toString();
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newString(19, "                    Scope");
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, node50, 12);
        com.google.javascript.rhino.head.Node node53 = scriptNode28.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        int int70 = scriptNode68.getBaseLineno();
        java.lang.String str71 = scriptNode68.getNextTempName();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        int int84 = scriptNode73.getIntProp(6, 2);
        scriptNode73.setEndLineno(18);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) scriptNode73, (int) (byte) -1);
        scriptNode73.flattenSymbolTable(true);
        int int91 = scriptNode73.getEncodedSourceStart();
        java.lang.String str93 = scriptNode73.makeIndent((-51));
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        com.google.javascript.rhino.head.Node node95 = scriptNode73.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            node95.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertNotNull(node95);
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode11.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scope33.setJsDocNode(comment42);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        comment42.setCommentType(commentType45);
        scriptNode11.setJsDocNode(comment42);
        java.lang.Object obj49 = comment42.getProp((int) ' ');
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        comment42.setCommentType(commentType50);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor52 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment42.visit(nodeVisitor52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        int int16 = scope1.getLength();
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        scope25.setPosition(2);
        java.lang.String str31 = scope25.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap32 = scope25.getSymbolTable();
        boolean boolean33 = scope25.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scope25.target = scriptNode34;
        com.google.javascript.rhino.head.Node node45 = scriptNode34.target;
        scriptNode34.setBaseLineno(10);
        scope18.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Node node49 = scriptNode34.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope(3);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap52 = scope51.getSymbolTable();
        scope51.removeChildren();
        java.lang.String str54 = scope51.shortName();
        com.google.javascript.rhino.head.ast.Scope scope55 = scope51.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            scope1.replaceChildAfter(node49, (com.google.javascript.rhino.head.Node) scope51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{\n}\n" + "'", str31, "{\n}\n");
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Scope" + "'", str54, "Scope");
        org.junit.Assert.assertNull(scope55);
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        scriptNode39.setEndLineno(18);
        scriptNode26.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode39);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray54 = scriptNode39.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode11.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scope33.setJsDocNode(comment42);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        comment42.setCommentType(commentType45);
        scriptNode11.setJsDocNode(comment42);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope50.setPosition(100);
        com.google.javascript.rhino.head.Node node53 = scope50.getLastSibling();
        node53.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator55 = node53.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = scriptNode57.getTop();
        scriptNode66.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int71 = scriptNode70.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str73 = scriptNode72.getEncodedSource();
        scriptNode72.setEncodedSourceEnd(18);
        scriptNode70.target = scriptNode72;
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode66, (com.google.javascript.rhino.head.Node) scriptNode72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = null;
        scriptNode72.setSymbols(symbolList78);
        node53.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        boolean boolean81 = scriptNode72.hasChildren();
        comment42.putProp(25, (java.lang.Object) boolean81);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor83 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment42.visit(nodeVisitor83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(nodeSpliterator55);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(21);
        // The following exception was thrown during execution in test generation
        try {
            scope1.labelId(53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.lang.String str10 = scope1.makeIndent(0);
        int int11 = scope1.getLength();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scope1.getParent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = astNode12.getProp((-547629399));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(astNode12);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.Object obj72 = scriptNode23.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator73 = scriptNode23.new NodeIterator();
        boolean boolean74 = scriptNode23.hasChildren();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType2, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        comment4.addChildToBack(node21);
        java.lang.String str23 = comment4.getValue();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = comment4.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            comment4.setDouble((double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Comment cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(functionNode24);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("                                                    {\n                                                    }\n");
        // The following exception was thrown during execution in test generation
        try {
            int int4 = scriptNode1.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        java.lang.String str14 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        int int22 = scope16.getLineno();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-51), (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope16);
        int int24 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getParamCount();
        java.lang.String str38 = scriptNode25.debugPrint();
        int int41 = scriptNode25.getIntProp(17, 10);
        scriptNode25.setEncodedSource("51\t    SCRIPT 52 1\n");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setDefault((com.google.javascript.rhino.head.Node) scriptNode25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str14, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str38, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scriptNode4.getTop();
        scriptNode13.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int18 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        scriptNode17.target = scriptNode19;
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str37 = scriptNode28.getSourceName();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode28, 26);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node24, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap41 = null;
        scriptNode28.setSymbolTable(strMap41);
        java.lang.Object obj44 = scriptNode28.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList45 = scriptNode28.getChildScopes();
        int int46 = scriptNode28.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        int int50 = scope49.depth();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scope49, 8);
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment(8, 0, commentType55, "                        {\n                        }\n");
        scope49.setJsDocNode(comment57);
        java.lang.Object obj60 = comment57.getProp((-51));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int63 = scriptNode62.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode64.getEncodedSource();
        scriptNode64.setEncodedSourceEnd(18);
        scriptNode62.target = scriptNode64;
        int int69 = scriptNode64.getParamCount();
        java.lang.String str70 = comment57.toStringTree(scriptNode64);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((-2), (com.google.javascript.rhino.head.Node) scriptNode64, 21);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(scopeList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        scriptNode2.setEncodedSource("0\tBLOCK 0 1\n");
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(908331048, (com.google.javascript.rhino.head.Node) scriptNode2, (int) '#');
        com.google.javascript.rhino.head.Node node19 = null;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.String str36 = scriptNode33.getNextTempName();
        scriptNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        java.lang.String str38 = scriptNode33.debugPrint();
        java.lang.String str40 = scriptNode33.toSource((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode41.getEncodedSourceStart();
        scriptNode41.setLineno(1);
        scriptNode33.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode41);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode2, node19, (com.google.javascript.rhino.head.Node) scriptNode33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str38, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "  {\n  }\n" + "'", str40, "  {\n  }\n");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        java.lang.String str24 = scope18.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap25 = scope18.getSymbolTable();
        boolean boolean26 = scope18.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = scriptNode27.getTop();
        scope18.target = scriptNode27;
        com.google.javascript.rhino.head.Node node38 = scriptNode27.target;
        scriptNode27.setBaseLineno(10);
        scriptNode27.setEncodedSourceEnd((int) (short) -1);
        int int43 = scriptNode27.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str54 = scriptNode45.getSourceName();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode45, 26);
        scriptNode27.setCompilerData((java.lang.Object) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            node16.removeChild((com.google.javascript.rhino.head.Node) scriptNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{\n}\n" + "'", str24, "{\n}\n");
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node5 = scope1.setType(0);
        // The following exception was thrown during execution in test generation
        try {
            double double6 = node5.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        scope1.setPosition(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode40.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope45.setPosition(100);
        com.google.javascript.rhino.head.Node node48 = scope45.getLastSibling();
        node48.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator50 = node48.spliterator();
        scriptNode40.setCompilerData((java.lang.Object) node48);
        java.lang.String str52 = scriptNode40.getSourceName();
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        scriptNode35.setBaseLineno((int) (byte) 0);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(nodeSpliterator50);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node11 = scriptNode0.getNext();
        scriptNode0.setSourceName("-1\t  SCRIPT -53 1\n");
        int int14 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral15 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.addRegExp(regExpLiteral15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        boolean boolean45 = scriptNode31.hasChildren();
        int int46 = scriptNode31.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = scriptNode31.getTop();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap48 = null;
        scriptNode47.setSymbolTable(strMap48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode50.toSource(18);
        java.lang.Object obj53 = scriptNode50.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope71 = scope69.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node72 = scope69.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scope69.setJsDocNode(comment78);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        com.google.javascript.rhino.head.ast.Comment comment86 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType84, "Scope");
        scriptNode81.setParent((com.google.javascript.rhino.head.ast.AstNode) comment86);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList88 = scriptNode81.getSymbols();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scope69, (com.google.javascript.rhino.head.Node) scriptNode81);
        scriptNode81.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node92 = scriptNode81.target;
        scriptNode50.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode81);
        int int94 = scriptNode81.getLineno();
        int int95 = scriptNode81.getEncodedSourceEnd();
        scriptNode47.setTop(scriptNode81);
        scriptNode47.setPosition(1278533831);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray99 = scriptNode47.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                    {\n                                    }\n" + "'", str52, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(scope71);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(symbolList88);
        org.junit.Assert.assertNull(node92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(3);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = scope1.new NodeIterator();
        boolean boolean3 = nodeIterator2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node4 = nodeIterator2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        scriptNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode0.getEnclosingScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor6 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(scope5);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        scriptNode51.setEndLineno(18);
        scriptNode38.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int67 = scriptNode0.getEncodedSourceEnd();
        int int68 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Symbol symbol70 = scriptNode0.getSymbol("Comment");
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(symbol70);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope4.setPosition(100);
        com.google.javascript.rhino.head.Node node7 = scope4.getLastSibling();
        node7.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = node7.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scriptNode20.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int25 = scriptNode24.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        scriptNode26.setEncodedSourceEnd(18);
        scriptNode24.target = scriptNode26;
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = null;
        scriptNode26.setSymbols(symbolList32);
        node7.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode26);
        java.lang.String str35 = scriptNode2.toStringTree(scriptNode26);
        int int36 = scriptNode2.getFunctionCount();
        scriptNode2.setPosition(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str49 = scriptNode40.getSourceName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode40, 26);
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getEncodedSource();
        scriptNode57.setEncodedSourceEnd(18);
        java.lang.String str61 = comment56.toStringTree(scriptNode57);
        int int62 = comment56.getType();
        java.lang.String str63 = comment56.getValue();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) comment56);
        boolean boolean65 = node64.hasChildren();
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 161 + "'", int62 == 161);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Scope" + "'", str63, "Scope");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode5.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope10.setPosition(100);
        com.google.javascript.rhino.head.Node node13 = scope10.getLastSibling();
        node13.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = node13.spliterator();
        scriptNode5.setCompilerData((java.lang.Object) node13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = scriptNode5.toStringTree(scriptNode28);
        java.lang.String str47 = scriptNode28.toString();
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newString(19, "                    Scope");
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, node50, 12);
        com.google.javascript.rhino.head.Node node53 = scriptNode28.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        int int70 = scriptNode68.getBaseLineno();
        java.lang.String str71 = scriptNode68.getNextTempName();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        int int84 = scriptNode73.getIntProp(6, 2);
        scriptNode73.setEndLineno(18);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) scriptNode73, (int) (byte) -1);
        scriptNode73.flattenSymbolTable(true);
        int int91 = scriptNode73.getEncodedSourceStart();
        java.lang.String str93 = scriptNode73.makeIndent((-51));
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        com.google.javascript.rhino.head.Node node95 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.removeChild(node95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node11 = scriptNode0.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getEncodedSource();
        scriptNode12.setEncodedSourceEnd(18);
        java.lang.String str17 = scriptNode12.makeIndent((int) '#');
        int int20 = scriptNode12.getIntProp((int) '4', 4);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scriptNode12.spliterator();
        int int22 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int23 = scriptNode0.getPosition();
        scriptNode0.setEncodedSource("                                      Scope");
        java.lang.Object obj26 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        int int38 = scriptNode27.getIntProp(6, 2);
        int int39 = scriptNode27.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getEncodedSource();
        int int42 = scriptNode40.getBaseLineno();
        java.lang.String str43 = scriptNode40.getNextTempName();
        scriptNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.lang.String str45 = scriptNode40.debugPrint();
        int int46 = scriptNode40.getEndLineno();
        int int47 = scriptNode40.getType();
        int int48 = scriptNode40.getFunctionCount();
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope50 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                                      " + "'", str17, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(nodeSpliterator21);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1171207454 + "'", int22 == 1171207454);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-53) + "'", int23 == (-53));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str45, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 136 + "'", int47 == 136);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode3, 26);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode3);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node16 = scriptNode3.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 100, 10, commentType2, "{\n{\n}\n}\n");
        java.lang.String str5 = comment4.getValue();
        java.lang.String str6 = comment4.getValue();
        comment4.setLength((-547629399));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{\n{\n}\n}\n" + "'", str5, "{\n{\n}\n}\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{\n{\n}\n}\n" + "'", str6, "{\n{\n}\n}\n");
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.Node node60 = scriptNode25.target;
        java.lang.String str61 = scriptNode25.toSource();
        com.google.javascript.rhino.head.ast.Scope scope63 = scriptNode25.getDefiningScope("!=");
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType67, "{\n}\n");
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment69, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType72 = comment69.getCommentType();
        int int73 = comment69.getPosition();
        scriptNode25.addChildToBack((com.google.javascript.rhino.head.Node) comment69);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor75 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment69.visit(nodeVisitor75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(commentType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 9 + "'", int73 == 9);
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType2, "{\n}\n");
        java.lang.String str5 = comment4.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = comment4.getCommentType();
        java.lang.String str8 = comment4.toSource(12);
        java.lang.String str10 = comment4.toSource(9);
        comment4.setBounds((int) (short) 0, (int) (byte) -1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{\n}\n" + "'", str5, "{\n}\n");
        org.junit.Assert.assertNull(commentType6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                        {\n}\n" + "'", str8, "                        {\n}\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                  {\n}\n" + "'", str10, "                  {\n}\n");
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-547629399), 6, commentType2, "69\t  SCRIPT 17 1\n");
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str10 = scriptNode1.getSourceName();
        int int11 = scriptNode1.getFunctionCount();
        java.lang.String str12 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode1, 0);
        // The following exception was thrown during execution in test generation
        try {
            node14.labelId((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str12, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode58.setPosition((int) (byte) 0);
        scope28.setTop(scriptNode58);
        scriptNode13.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode58.setPosition(21);
        boolean boolean73 = scriptNode58.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope74 = scriptNode58.getParentScope();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(scope74);
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        scope1.setPosition(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope39 = com.google.javascript.rhino.head.ast.Scope.splitScope(scope1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(scriptNode35);
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(7, 12);
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        int int10 = comment4.getType();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        comment4.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        int int90 = scriptNode51.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral91 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode51.addRegExp(regExpLiteral91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 161 + "'", int10 == 161);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(0, 21);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.clearParentScope();
        scriptNode28.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        scriptNode66.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList77 = scriptNode66.getFunctions();
        int int78 = scriptNode66.getLength();
        boolean boolean79 = scriptNode66.hasSideEffects();
        scriptNode30.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        scriptNode30.clearParentScope();
        com.google.javascript.rhino.head.Node node82 = scriptNode30.target;
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(functionNodeList77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(node82);
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        scope18.putIntProp(17, 25);
        scope18.setLength((int) ' ');
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        java.lang.String str30 = scriptNode10.getEncodedSource();
        java.lang.String str31 = scriptNode10.getEncodedSource();
        scriptNode10.flattenSymbolTable(false);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode17.setEncodedSourceEnd(11);
        java.lang.String str25 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str29 = scriptNode17.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        java.lang.String str35 = scriptNode30.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        scriptNode30.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        int int46 = scriptNode30.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        int int59 = scriptNode48.getIntProp(6, 2);
        int int60 = scriptNode48.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope64 = scope62.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node65 = scope62.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scope62.setJsDocNode(comment71);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList81 = scriptNode74.getSymbols();
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode48, (com.google.javascript.rhino.head.Node) scope62, (com.google.javascript.rhino.head.Node) scriptNode74);
        scriptNode74.setPosition((int) (byte) 0);
        scriptNode74.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray87 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList88 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList88, symbolArray87);
        scriptNode74.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList88);
        scriptNode30.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList88);
        scriptNode17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList88);
        com.google.javascript.rhino.head.ast.Symbol symbol94 = scriptNode17.getSymbol("0\tBLOCK 0 1\n");
        java.lang.String str96 = scriptNode17.makeIndent((int) ' ');
        int int99 = scriptNode17.getIntProp(754207379, 35);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str29, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                      " + "'", str35, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(scope64);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNotNull(symbolList81);
        org.junit.Assert.assertNotNull(symbolArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(symbol94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "                                                                " + "'", str96, "                                                                ");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 35 + "'", int99 == 35);
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        java.lang.String str13 = comment8.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode9, node15);
        scriptNode9.setSourceName("hi!");
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.Object obj20 = scriptNode9.getCompilerData();
        int int21 = scriptNode9.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getEncodedSource();
        com.google.javascript.rhino.head.Node node24 = scriptNode22.getLastSibling();
        scriptNode22.setEncodedSourceEnd(136);
        boolean boolean27 = scriptNode22.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode29.getIntProp(23, (int) (short) 1);
        boolean boolean33 = scriptNode29.hasSideEffects();
        int int34 = scriptNode29.depth();
        int int35 = scriptNode29.getFunctionCount();
        int int36 = scriptNode29.getEncodedSourceEnd();
        java.lang.String str38 = scriptNode29.toSource((-547629399));
        scriptNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        int int40 = scriptNode9.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        com.google.javascript.rhino.head.ast.Symbol symbol41 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode9.putSymbol(symbol41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.Node node2 = null;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int7 = scriptNode4.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope9.setPosition(100);
        com.google.javascript.rhino.head.Node node12 = scope9.getLastSibling();
        node12.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = node12.spliterator();
        scriptNode4.setCompilerData((java.lang.Object) node12);
        java.lang.String str16 = scriptNode4.getSourceName();
        int int17 = scriptNode4.getEncodedSourceStart();
        scriptNode4.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode20.getSymbols();
        java.lang.String str28 = scriptNode20.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        com.google.javascript.rhino.head.Node node31 = scriptNode29.getLastSibling();
        scriptNode29.setEncodedSource("Scope");
        scriptNode29.setEndLineno(100);
        scriptNode20.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope38.putProp(25, (java.lang.Object) 100L);
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) scope38);
        com.google.javascript.rhino.head.Node node43 = scriptNode20.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        int int55 = scriptNode44.getIntProp(6, 2);
        int int56 = scriptNode44.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getEncodedSource();
        int int59 = scriptNode57.getBaseLineno();
        java.lang.String str60 = scriptNode57.getNextTempName();
        scriptNode44.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        scriptNode57.setEncodedSource("                        ");
        int int64 = scriptNode57.getLineno();
        scriptNode20.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode57);
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList67 = scriptNode4.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) '#', node1, node2, (com.google.javascript.rhino.head.Node) scriptNode4, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str28, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "$0" + "'", str60, "$0");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(astNodeList67);
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode0.setParentScope(scope17);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        scope21.setPosition(2);
        java.lang.String str27 = scope21.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = scope21.getSymbolTable();
        boolean boolean29 = scope21.hasChildren();
        com.google.javascript.rhino.head.Node node30 = scope21.getNext();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        java.lang.String str45 = comment41.toSource((int) (short) 10);
        scope21.setJsDocNode(comment41);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = comment41.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        comment41.setCommentType(commentType48);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode78.getSymbols();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope66, (com.google.javascript.rhino.head.Node) scriptNode78);
        scriptNode78.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList89 = scriptNode78.getFunctions();
        int int90 = scriptNode78.getLength();
        boolean boolean91 = scriptNode78.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope92 = scriptNode78.getParentScope();
        scope17.addChildBefore(node50, (com.google.javascript.rhino.head.Node) scope92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator94 = scope92.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{\n}\n" + "'", str27, "{\n}\n");
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                    Scope" + "'", str45, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertNotNull(functionNodeList89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(scope92);
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str30 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node31 = scriptNode0.getNext();
        java.lang.Class<?> wildcardClass32 = scriptNode0.getClass();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        com.google.javascript.rhino.head.Node node60 = scriptNode0.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        int int72 = scriptNode61.getIntProp(6, 2);
        int int73 = scriptNode61.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = null;
        scriptNode61.setSymbols(symbolList74);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode61.setParentScope(scope78);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope78);
        scope78.removeProp(24);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node38 = scriptNode27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        java.lang.String str75 = scriptNode66.getEncodedSource();
        int int76 = scriptNode66.getAbsolutePosition();
        int int77 = scriptNode66.getLineno();
        java.lang.String str78 = scriptNode66.getEncodedSource();
        int int79 = scriptNode27.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        int int80 = scriptNode66.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor81 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode66.visit(nodeVisitor81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode0.setParentScope(scope17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode21.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope26.setPosition(100);
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        node29.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = node29.spliterator();
        scriptNode21.setCompilerData((java.lang.Object) node29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) comment60);
        java.lang.String str62 = scriptNode21.toStringTree(scriptNode44);
        int int63 = scriptNode44.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode64.setEndLineno(18);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode64);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        int int80 = scriptNode0.getFunctionCount();
        int int83 = scriptNode0.getIntProp(3, (int) (short) 100);
        scriptNode0.setEndLineno(24);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setString("0\tBLOCK 0 1\n-1\tSCRIPT -1 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        int int43 = scriptNode2.getLineno();
        java.lang.String str44 = scriptNode2.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        int int57 = scriptNode45.getRegexpCount();
        scriptNode45.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode45.setLineno((int) '#');
        int int62 = scriptNode45.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = scriptNode45.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList64 = scriptNode45.getStatements();
        java.lang.String str65 = scriptNode45.shortName();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope69 = scope67.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node70 = scope67.target;
        scope67.setPosition(2);
        java.lang.String str73 = scope67.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap74 = scope67.getSymbolTable();
        boolean boolean75 = scope67.hasChildren();
        com.google.javascript.rhino.head.Node node76 = scope67.getNext();
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        com.google.javascript.rhino.head.ast.Comment comment87 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType85, "Scope");
        scriptNode82.setParent((com.google.javascript.rhino.head.ast.AstNode) comment87);
        scope78.setJsDocNode(comment87);
        java.lang.String str91 = comment87.toSource((int) (short) 10);
        scope67.setJsDocNode(comment87);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator93 = comment87.spliterator();
        java.lang.String str94 = comment87.getValue();
        scriptNode45.setCompilerData((java.lang.Object) comment87);
        int int96 = scriptNode2.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode98 = scriptNode45.getFunctionNode(52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\t  ASSIGN_DIV -53 1\n" + "'", str44, "-1\t  ASSIGN_DIV -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 35 + "'", int62 == 35);
        org.junit.Assert.assertNull(functionNode63);
        org.junit.Assert.assertNotNull(astNodeList64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ScriptNode" + "'", str65, "ScriptNode");
        org.junit.Assert.assertNull(scope69);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{\n}\n" + "'", str73, "{\n}\n");
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "                    Scope" + "'", str91, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Scope" + "'", str94, "Scope");
// flaky:         org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1749075209) + "'", int96 == (-1749075209));
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 17);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        boolean boolean36 = scriptNode1.hasChildren();
        scriptNode1.setEncodedSourceEnd((int) (byte) 100);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = scriptNode1.getSymbolTable();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        scope23.setPosition(2);
        int int29 = scope23.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope30 = scope23.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope23.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        int int39 = scope33.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope40 = scope33.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scope33.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        scriptNode42.flattenSymbolTable(false);
        scope23.addChildAfter((com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str50 = scriptNode42.makeIndent((-1));
        scope1.target = scriptNode42;
        scriptNode42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scriptNode56.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = scriptNode56.getTop();
        scriptNode65.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int70 = scriptNode69.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getEncodedSource();
        scriptNode71.setEncodedSourceEnd(18);
        scriptNode69.target = scriptNode71;
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode65, (com.google.javascript.rhino.head.Node) scriptNode71);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode77.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType83, "Scope");
        scriptNode80.setParent((com.google.javascript.rhino.head.ast.AstNode) comment85);
        scriptNode80.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str89 = scriptNode80.getSourceName();
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode80, 26);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node76, (com.google.javascript.rhino.head.Node) scriptNode77, (com.google.javascript.rhino.head.Node) scriptNode80);
        com.google.javascript.rhino.head.ast.Scope scope94 = scriptNode80.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode96 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode80.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode96);
        scriptNode42.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode80);
        com.google.javascript.rhino.head.Node node99 = scriptNode42.getFirstChild();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(scope94);
        org.junit.Assert.assertNull(node99);
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        int int4 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("Scope");
        // The following exception was thrown during execution in test generation
        try {
            double double7 = scriptNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scriptNode37.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) comment53);
        int int55 = scriptNode37.depth();
        int int56 = scriptNode37.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor57 = scriptNode37.iterator();
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setEncodedSource("                              {\n                              }\n");
        int int61 = scriptNode37.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope65 = scope63.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node66 = scope63.target;
        scope63.setPosition(2);
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope72 = scope70.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node73 = scope70.target;
        scope70.setPosition(2);
        java.lang.String str76 = scope70.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap77 = scope70.getSymbolTable();
        boolean boolean78 = scope70.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        scriptNode79.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = scriptNode79.getTop();
        scope70.target = scriptNode79;
        com.google.javascript.rhino.head.Node node90 = scriptNode79.target;
        scriptNode79.setBaseLineno(10);
        scope63.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode79);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode37, scope63);
        // The following exception was thrown during execution in test generation
        try {
            scope63.labelId((-51));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeItor57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(scope65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(scope72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{\n}\n" + "'", str76, "{\n}\n");
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertNull(node90);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        boolean boolean45 = scriptNode31.hasChildren();
        int int46 = scriptNode31.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = scriptNode31.getTop();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap48 = null;
        scriptNode47.setSymbolTable(strMap48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode50.toSource(18);
        java.lang.Object obj53 = scriptNode50.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope71 = scope69.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node72 = scope69.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scope69.setJsDocNode(comment78);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        com.google.javascript.rhino.head.ast.Comment comment86 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType84, "Scope");
        scriptNode81.setParent((com.google.javascript.rhino.head.ast.AstNode) comment86);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList88 = scriptNode81.getSymbols();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scope69, (com.google.javascript.rhino.head.Node) scriptNode81);
        scriptNode81.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node92 = scriptNode81.target;
        scriptNode50.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode81);
        int int94 = scriptNode81.getLineno();
        int int95 = scriptNode81.getEncodedSourceEnd();
        scriptNode47.setTop(scriptNode81);
        scriptNode81.setEncodedSourceStart(8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                    {\n                                    }\n" + "'", str52, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(scope71);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(symbolList88);
        org.junit.Assert.assertNull(node92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope33 = scope31.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node34 = scope31.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scope31.setJsDocNode(comment40);
        java.lang.String str44 = comment40.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment40);
        java.lang.Object obj47 = comment40.getProp((int) (short) -1);
        java.lang.String str49 = comment40.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scriptNode50.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = scriptNode50.getTop();
        scriptNode59.setPosition(6);
        comment40.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode59);
        com.google.javascript.rhino.head.ast.Comment comment63 = comment40.getJsDocNode();
        comment40.removeProp(13);
        scriptNode0.setJsDocNode(comment40);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.labelId((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                    Scope" + "'", str44, "                    Scope");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(scriptNode59);
        org.junit.Assert.assertNull(comment63);
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        java.lang.String str44 = scriptNode31.makeIndent((int) (short) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str54 = scriptNode45.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = scriptNode45.new NodeIterator();
        java.lang.String str56 = scriptNode45.shortName();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray57 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList58, symbolArray57);
        scriptNode45.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        scriptNode45.flattenSymbolTable(false);
        scriptNode45.putIntProp(4, 97);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str68 = scope67.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode75.getEncodedSource();
        scriptNode75.setEncodedSourceEnd(18);
        java.lang.String str79 = comment74.toStringTree(scriptNode75);
        com.google.javascript.rhino.head.Node node81 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode75, node81);
        scriptNode75.setSourceName("hi!");
        scope67.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode75);
        java.lang.Object obj86 = scriptNode75.getCompilerData();
        int int87 = scriptNode75.getEndLineno();
        java.lang.Object obj89 = scriptNode75.getProp(15);
        int int92 = scriptNode75.getIntProp(6, 18);
        int int95 = scriptNode75.getIntProp(22, 24);
        int int96 = scriptNode45.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        scriptNode31.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode75);
        com.google.javascript.rhino.head.ast.Comment comment98 = scriptNode75.getJsDocNode();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                                                                                                                                                                                                        " + "'", str44, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ScriptNode" + "'", str56, "ScriptNode");
        org.junit.Assert.assertNotNull(symbolArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Scope" + "'", str68, "Scope");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 18 + "'", int92 == 18);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 24 + "'", int95 == 24);
// flaky:         org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-824625719) + "'", int96 == (-824625719));
        org.junit.Assert.assertNull(comment98);
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType2, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        comment4.addChildToBack(node21);
        java.lang.String str23 = comment4.getValue();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = comment4.getEnclosingFunction();
        java.lang.String str26 = comment4.toSource(23);
        java.lang.String str27 = comment4.getValue();
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(functionNode24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                              hi!" + "'", str26, "                                              hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(6);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        scriptNode1.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode34.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str38 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scope40.iterator();
        boolean boolean53 = scope40.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope40, 8);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = scriptNode34.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int68 = scriptNode57.getIntProp(6, 2);
        int int69 = scriptNode57.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scriptNode70.setEncodedSourceStart((int) (byte) 100);
        int int81 = scriptNode70.getIntProp(6, 2);
        int int82 = scriptNode70.getParamCount();
        scriptNode57.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode70.setEncodedSourceStart((int) (byte) 1);
        scriptNode70.setEncodedSource("                                                                                                                                                                                                        Scope");
        int int88 = scriptNode70.getPosition();
        scriptNode34.setTop(scriptNode70);
        boolean boolean90 = scriptNode70.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ScriptNode" + "'", str38, "ScriptNode");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-53) + "'", int88 == (-53));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode24.getTop();
        scriptNode33.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int38 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        scriptNode39.setEncodedSourceEnd(18);
        scriptNode37.target = scriptNode39;
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str57 = scriptNode48.getSourceName();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode48, 26);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node44, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Node node61 = scriptNode48.getLastSibling();
        boolean boolean62 = scriptNode48.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode48.putProp((int) (byte) 0, (java.lang.Object) int75);
        com.google.javascript.rhino.head.Node node77 = scriptNode48.target;
        scriptNode48.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node80 = scriptNode48.getLastSibling();
        scriptNode10.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        com.google.javascript.rhino.head.ast.Comment comment86 = new com.google.javascript.rhino.head.ast.Comment(17, 3, commentType84, "                                  Scope");
        scriptNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) comment86);
        comment86.setLength(1487440633);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(node80);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        scope18.putIntProp(17, 25);
        scope18.setLength((int) ' ');
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.Object obj33 = scriptNode30.getCompilerData();
        scriptNode30.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode30.getSymbols();
        scope18.setTop(scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode39.toSource(18);
        scope18.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scriptNode50.clearParentScope();
        scriptNode50.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node61 = scriptNode50.target;
        scriptNode50.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getEncodedSource();
        scriptNode63.setEncodedSourceEnd(18);
        java.lang.String str68 = scriptNode63.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scriptNode69.setEncodedSourceStart((int) (byte) 100);
        scriptNode63.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode50, (com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap80 = scriptNode63.getSymbolTable();
        scope49.setSymbolTable(strMap80);
        scriptNode43.setSymbolTable(strMap80);
        scope18.setSymbolTable(strMap80);
        // The following exception was thrown during execution in test generation
        try {
            double double84 = scope18.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                    {\n                                    }\n" + "'", str41, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                                                                      " + "'", str68, "                                                                      ");
        org.junit.Assert.assertNotNull(strMap80);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode31.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment47 = scriptNode46.getJsDocNode();
        scriptNode46.flattenSymbolTable(true);
        int int50 = scriptNode46.getLength();
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral52 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode44.addRegExp(regExpLiteral52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNull(comment47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getEndLineno();
        int int19 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str21 = scriptNode0.toSource((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int26 = scriptNode23.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.setPosition(100);
        com.google.javascript.rhino.head.Node node31 = scope28.getLastSibling();
        node31.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = node31.spliterator();
        scriptNode23.setCompilerData((java.lang.Object) node31);
        java.lang.String str36 = scriptNode23.toSource(21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        scriptNode37.setEndLineno(5);
        java.lang.Object obj49 = scriptNode37.getProp((int) (short) 10);
        int int50 = scriptNode37.getParamCount();
        scriptNode23.setTop(scriptNode37);
        com.google.javascript.rhino.head.Node node52 = scriptNode23.getNext();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n{\n}\n}\n" + "'", str21, "{\n{\n}\n}\n");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "                                          {\n                                          }\n" + "'", str36, "                                          {\n                                          }\n");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(node52);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        com.google.javascript.rhino.head.Node node8 = scope1.getLastChild();
        int int9 = scope1.depth();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope1.visit(nodeVisitor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode1.setSourceName("");
        int int7 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node12 = scope9.target;
        scope9.setPosition(2);
        int int15 = scope9.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope16 = scope9.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator17 = scope9.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        int int25 = scope19.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope26 = scope19.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope19.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        int int30 = scriptNode28.getBaseLineno();
        java.lang.Object obj31 = scriptNode28.getCompilerData();
        scriptNode28.flattenSymbolTable(false);
        scope9.addChildAfter((com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int35 = scriptNode28.getLength();
        scriptNode1.setTop(scriptNode28);
        int int37 = scriptNode1.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(18);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        java.lang.String str42 = scriptNode1.getSourceName();
        java.lang.String str43 = scriptNode1.shortName();
        java.lang.Object obj45 = scriptNode1.getProp(2);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNotNull(nodeSpliterator17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                    {\n                                    }\n" + "'", str40, "                                    {\n                                    }\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ScriptNode" + "'", str43, "ScriptNode");
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode59.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope64.setPosition(100);
        com.google.javascript.rhino.head.Node node67 = scope64.getLastSibling();
        node67.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator69 = node67.spliterator();
        scriptNode59.setCompilerData((java.lang.Object) node67);
        java.lang.String str71 = scriptNode59.getSourceName();
        int int72 = scriptNode59.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope75 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str77 = scope75.toSource(12);
        scope75.setRelative(1);
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scope75);
        scriptNode26.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node83 = scriptNode26.target;
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(nodeSpliterator69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "                        {\n                        }\n" + "'", str77, "                        {\n                        }\n");
        org.junit.Assert.assertNull(node83);
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        int int3 = node0.getIntProp(24, 23);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode8.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode8.getChildScopes();
        scriptNode8.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        int int32 = scriptNode21.getIntProp(6, 2);
        int int33 = scriptNode21.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        int int36 = scriptNode34.getBaseLineno();
        java.lang.String str37 = scriptNode34.getNextTempName();
        scriptNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.lang.String str39 = scriptNode34.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int44 = scriptNode41.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope46.setPosition(100);
        com.google.javascript.rhino.head.Node node49 = scope46.getLastSibling();
        node49.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator51 = node49.spliterator();
        scriptNode41.setCompilerData((java.lang.Object) node49);
        java.lang.String str53 = scriptNode41.getSourceName();
        int int54 = scriptNode41.getEncodedSourceStart();
        scriptNode41.setEncodedSourceStart((int) (byte) 0);
        scriptNode34.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        java.lang.Object obj59 = scriptNode34.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode34, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope65 = scope63.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node66 = scope63.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        scope63.setJsDocNode(comment72);
        boolean boolean75 = scope63.hasChildren();
        boolean boolean76 = scope63.hasChildren();
        scriptNode34.replaceWith(scope63);
        // The following exception was thrown during execution in test generation
        try {
            node0.replaceChild((com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scope63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 23 + "'", int3 == 23);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str39, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(nodeSpliterator51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(scope65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode13.getType();
        java.lang.String str19 = scriptNode13.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode13.getSymbols();
        scriptNode13.flattenSymbolTable(true);
        java.lang.String str23 = scriptNode13.getSourceName();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str19, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        java.lang.String str23 = scope17.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = scope17.getSymbolTable();
        boolean boolean25 = scope17.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scope17.target = scriptNode26;
        com.google.javascript.rhino.head.Node node37 = scriptNode26.target;
        int int38 = scriptNode26.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        int int54 = scriptNode52.getBaseLineno();
        java.lang.String str55 = scriptNode52.getNextTempName();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.lang.String str57 = scriptNode52.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str63 = scope61.toSource(12);
        scope61.setRelative(1);
        scriptNode52.putProp(17, (java.lang.Object) 1);
        scriptNode26.target = scriptNode52;
        int int68 = scriptNode26.getEncodedSourceEnd();
        java.lang.Object obj69 = scriptNode26.getCompilerData();
        java.lang.String str70 = scriptNode26.shortName();
        scriptNode0.setTop(scriptNode26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray72 = scriptNode26.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str57, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                        {\n                        }\n" + "'", str63, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ScriptNode" + "'", str70, "ScriptNode");
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("                                                                                                                                                                                                  Scope");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump5 = scope2.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 0, 14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        int int15 = scriptNode4.getIntProp(6, 2);
        int int16 = scriptNode4.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        int int19 = scriptNode17.getBaseLineno();
        java.lang.String str20 = scriptNode17.getNextTempName();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        int int22 = scriptNode17.getType();
        java.lang.String str23 = scriptNode17.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode17.getSymbols();
        int int25 = scriptNode17.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        int int41 = scriptNode39.getBaseLineno();
        java.lang.String str42 = scriptNode39.getNextTempName();
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        java.lang.String str44 = scriptNode39.debugPrint();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode39);
        int int46 = scriptNode17.getType();
        scope2.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        java.lang.String str48 = scope2.shortName();
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 136 + "'", int22 == 136);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str23, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str44, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 136 + "'", int46 == 136);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Scope" + "'", str48, "Scope");
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode0.shortName();
        int int15 = scriptNode0.getLength();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = scriptNode0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ScriptNode" + "'", str14, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-51) + "'", int15 == (-51));
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("6\tSCRIPT 6 1\n");
        com.google.javascript.rhino.head.Node node2 = node1.getFirstChild();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setPosition(2);
        java.lang.String str18 = scope12.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = scope12.getSymbolTable();
        boolean boolean20 = scope12.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scope12.target = scriptNode21;
        com.google.javascript.rhino.head.Node node32 = scriptNode21.target;
        scriptNode21.setBounds((int) (byte) 1, 845940331);
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        java.lang.String str37 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope38 = scriptNode21.getParentScope();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "53\t  SCRIPT 1 845940330\n" + "'", str37, "53\t  SCRIPT 1 845940330\n");
        org.junit.Assert.assertNull(scope38);
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = null;
        scope1.setTop(scriptNode5);
        scope1.setBounds(7, 17);
        int int10 = scope1.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = scope1.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        scriptNode1.setEndLineno(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode5.getEncodedSourceStart();
        scriptNode5.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode5.getSymbols();
        scriptNode1.setSymbols(symbolList18);
        com.google.javascript.rhino.head.Node node20 = scriptNode1.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = node20.hasSideEffects();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNull(node20);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        int int82 = scriptNode29.getEncodedSourceStart();
        java.lang.String str84 = scriptNode29.toSource(26);
        java.lang.String str86 = scriptNode29.toSource(26);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList87 = scriptNode29.getSymbols();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "                                                    {\n                                                    }\n" + "'", str84, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                                                    {\n                                                    }\n" + "'", str86, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(symbolList87);
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope2.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scope20.setJsDocNode(comment29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode32);
        scriptNode32.setPosition((int) (byte) 0);
        scope2.setTop(scriptNode32);
        int int44 = scriptNode32.getParamCount();
        boolean boolean45 = scriptNode32.hasConsistentReturnUsage();
        java.lang.String str46 = scriptNode32.getEncodedSource();
        boolean boolean47 = scriptNode32.hasConsistentReturnUsage();
        java.lang.String str48 = scriptNode32.debugPrint();
        int int49 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        java.lang.String str58 = scriptNode50.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode59.getEncodedSource();
        com.google.javascript.rhino.head.Node node61 = scriptNode59.getLastSibling();
        scriptNode59.setEncodedSource("Scope");
        scriptNode59.setEndLineno(100);
        scriptNode50.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope68.putProp(25, (java.lang.Object) 100L);
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) scope68);
        com.google.javascript.rhino.head.Node node75 = com.google.javascript.rhino.head.Node.newString((int) (short) 1, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        com.google.javascript.rhino.head.ast.Comment comment87 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType85, "Scope");
        scriptNode82.setParent((com.google.javascript.rhino.head.ast.AstNode) comment87);
        scope78.setJsDocNode(comment87);
        com.google.javascript.rhino.head.Token.CommentType commentType90 = null;
        comment87.setCommentType(commentType90);
        com.google.javascript.rhino.head.Node node93 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment87, 14);
        node75.addChildToBack((com.google.javascript.rhino.head.Node) comment87);
        com.google.javascript.rhino.head.Node node96 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode50, node75, 3);
        com.google.javascript.rhino.head.Node node97 = scriptNode50.target;
        com.google.javascript.rhino.head.ast.Scope scope98 = scriptNode50.getParentScope();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "52\t  SCRIPT 0 1\n" + "'", str48, "52\t  SCRIPT 0 1\n");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str58, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertNull(node97);
        org.junit.Assert.assertNull(scope98);
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = scriptNode1.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = functionNode2.getFunctions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(functionNode2);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-53), 8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.String str19 = scriptNode16.getNextTempName();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        int int21 = scriptNode16.getType();
        int int22 = scriptNode16.getParamCount();
        com.google.javascript.rhino.head.Node node24 = scriptNode16.setType((int) '#');
        scope2.addChildrenToBack(node24);
        com.google.javascript.rhino.head.ast.Symbol symbol26 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope2.putSymbol(symbol26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 136 + "'", int21 == 136);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(node24);
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(4);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scope3.setJsDocNode(comment12);
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        comment12.setCommentType(commentType15);
        java.lang.String str17 = comment12.getValue();
        java.lang.String str18 = comment12.toSource();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) comment12);
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Scope" + "'", str17, "Scope");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Scope" + "'", str18, "Scope");
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode60.getSymbols();
        scriptNode24.setSymbols(symbolList67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode24.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList70 = scriptNode24.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList71 = scriptNode24.getChildScopes();
        java.lang.Object obj73 = scriptNode24.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scriptNode24);
        scriptNode24.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.Node node78 = scriptNode24.setType(10);
        node78.removeChildren();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNotNull(functionNodeList70);
        org.junit.Assert.assertNull(scopeList71);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(node78);
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        int int44 = scriptNode31.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope46 = scriptNode31.getDefiningScope("0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(scope46);
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = null;
        scope15.setTop(scriptNode19);
        scriptNode13.target = scope15;
        int int22 = scriptNode13.getEncodedSourceStart();
        scope1.setTop(scriptNode13);
        java.lang.String str25 = scope1.toSource(15);
        int int26 = scope1.getLineno();
        com.google.javascript.rhino.head.Node node27 = scope1.target;
        int int28 = scope1.depth();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                              {\n                              }\n" + "'", str25, "                              {\n                              }\n");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = null;
        scriptNode0.setSymbolTable(strMap6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode8.toSource(18);
        int int11 = scriptNode8.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment12 = scriptNode8.getJsDocNode();
        int int13 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode8.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol19 = scope17.getSymbol("$0");
        boolean boolean20 = scope17.hasSideEffects();
        boolean boolean21 = scope17.hasChildren();
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) scope17);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = scriptNode25.getTop();
        scriptNode34.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int39 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getEncodedSource();
        scriptNode40.setEncodedSourceEnd(18);
        scriptNode38.target = scriptNode40;
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        int int59 = scriptNode47.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope63 = scope61.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node64 = scope61.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scope61.setJsDocNode(comment70);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList80 = scriptNode73.getSymbols();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope61, (com.google.javascript.rhino.head.Node) scriptNode73);
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType86 = null;
        com.google.javascript.rhino.head.ast.Comment comment88 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType86, "Scope");
        scriptNode83.setParent((com.google.javascript.rhino.head.ast.AstNode) comment88);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList90 = scriptNode83.getSymbols();
        scriptNode47.setSymbols(symbolList90);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList92 = scriptNode47.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList93 = scriptNode47.getFunctions();
        com.google.javascript.rhino.head.Node node94 = scriptNode47.getLastSibling();
        scriptNode0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.ast.Symbol symbol97 = scriptNode0.getSymbol("52\t  SCRIPT 0 1\n");
        com.google.javascript.rhino.head.ast.Scope scope99 = scriptNode0.getDefiningScope("                  {\n}\n");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                    {\n                                    }\n" + "'", str10, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(comment12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNull(symbol19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(symbolList80);
        org.junit.Assert.assertNotNull(symbolList90);
        org.junit.Assert.assertNotNull(symbolList92);
        org.junit.Assert.assertNotNull(functionNodeList93);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertNull(symbol97);
        org.junit.Assert.assertNull(scope99);
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean22 = scriptNode5.hasChildren();
        scriptNode5.setBaseLineno(4);
        java.lang.String str25 = scriptNode5.getNextTempName();
        java.lang.String str26 = scriptNode5.debugPrint();
        int int27 = scriptNode5.getAbsolutePosition();
        int int28 = scriptNode5.getParamCount();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$1" + "'", str25, "$1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "6\tSCRIPT 6 1\n" + "'", str26, "6\tSCRIPT 6 1\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 6 + "'", int27 == 6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode58.setPosition((int) (byte) 0);
        scope28.setTop(scriptNode58);
        scriptNode13.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        java.lang.Object obj71 = scriptNode13.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = scriptNode13.getFunctionNode((-366869103));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node3 = scope2.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = scope2.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = scriptNode9.getTop();
        scriptNode18.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int23 = scriptNode22.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        scriptNode24.setEncodedSourceEnd(18);
        scriptNode22.target = scriptNode24;
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str42 = scriptNode33.getSourceName();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode33, 26);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node29, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scriptNode33);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap46 = null;
        scriptNode33.setSymbolTable(strMap46);
        java.lang.Object obj49 = scriptNode33.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode33.getChildScopes();
        int int51 = scriptNode33.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        int int55 = scope54.depth();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scope54, 8);
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment(8, 0, commentType60, "                        {\n                        }\n");
        scope54.setJsDocNode(comment62);
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        comment62.setCommentType(commentType64);
        scope2.addChild((com.google.javascript.rhino.head.ast.AstNode) comment62);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = scope2.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        int int9 = scriptNode0.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode0.getFunctions();
        int int11 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scriptNode0.getParent();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(astNode12);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode26.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        int int55 = scriptNode44.getIntProp(6, 2);
        int int56 = scriptNode44.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int68 = scriptNode57.getIntProp(6, 2);
        int int69 = scriptNode57.getParamCount();
        scriptNode44.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode44.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        scriptNode74.clearParentScope();
        scriptNode72.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode74);
        scriptNode42.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump84 = scriptNode42.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        boolean boolean43 = scriptNode1.hasChildren();
        com.google.javascript.rhino.head.Node node44 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.removeChild(node44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = scope1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node7 = scope1.setType(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.clearParentScope();
        java.lang.String str16 = scriptNode8.toString();
        scope1.target = scriptNode8;
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        java.lang.String str25 = scope19.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = scope19.getSymbolTable();
        boolean boolean27 = scope19.hasChildren();
        com.google.javascript.rhino.head.Node node28 = scope19.getNext();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope32 = scope30.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node33 = scope30.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scope30.setJsDocNode(comment39);
        java.lang.String str43 = comment39.toSource((int) (short) 10);
        scope19.setJsDocNode(comment39);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator45 = comment39.spliterator();
        java.lang.String str46 = comment39.getValue();
        boolean boolean47 = comment39.hasChildren();
        int int48 = scope1.compareTo((com.google.javascript.rhino.head.ast.AstNode) comment39);
        com.google.javascript.rhino.head.Token.CommentType commentType49 = comment39.getCommentType();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(functionNode5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                    Scope" + "'", str43, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Scope" + "'", str46, "Scope");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNull(commentType49);
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.lang.String str10 = scriptNode0.getSourceName();
        java.lang.String str11 = scriptNode0.getJsDoc();
        java.lang.Object obj12 = scriptNode0.getCompilerData();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        java.lang.Object obj59 = scriptNode40.getProp(17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = scriptNode61.getTop();
        scriptNode70.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int75 = scriptNode74.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str77 = scriptNode76.getEncodedSource();
        scriptNode76.setEncodedSourceEnd(18);
        scriptNode74.target = scriptNode76;
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) scriptNode76);
        scriptNode76.setEncodedSourceStart((int) ' ');
        int int84 = scriptNode76.getPosition();
        scriptNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = scriptNode40.getRegexpString((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.Symbol symbol31 = scriptNode0.getSymbol("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = scriptNode0.getAstRoot();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(symbol31);
        org.junit.Assert.assertNull(astRoot32);
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode13.getTop();
        scriptNode22.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        scriptNode26.target = scriptNode28;
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str46 = scriptNode37.getSourceName();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode37, 26);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node33, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope51 = scriptNode37.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode37.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scriptNode68.setEncodedSourceStart((int) (byte) 100);
        int int79 = scriptNode68.getIntProp(6, 2);
        int int80 = scriptNode68.getParamCount();
        scriptNode55.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode55.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode83);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType88 = null;
        com.google.javascript.rhino.head.ast.Comment comment90 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType88, "Scope");
        scriptNode85.setParent((com.google.javascript.rhino.head.ast.AstNode) comment90);
        scriptNode85.clearParentScope();
        scriptNode83.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode85);
        scriptNode53.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode83);
        com.google.javascript.rhino.head.Node node96 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) scriptNode53, 15);
        java.lang.String str97 = comment5.getValue();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor98 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment5.visit(nodeVisitor98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Scope" + "'", str97, "Scope");
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope10 = scope1.getDefiningScope("                                                                                                                                                                                                        ");
        scope1.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope12 = scope1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(scope10);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        boolean boolean19 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node20 = nodeIterator17.next();
        nodeIterator17.remove();
        nodeIterator17.remove();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node23 = nodeIterator17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(node20);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        boolean boolean22 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node24 = nodeIterator17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(4, 18);
        scope2.removeChildren();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor4 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope2.visit(nodeVisitor4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        java.lang.String str52 = scriptNode39.debugPrint();
        scriptNode39.setPosition(8);
        int int55 = scriptNode39.getParamCount();
        scriptNode39.setPosition((int) (byte) 10);
        scriptNode17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node59 = scriptNode39.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str52, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node12 = scriptNode5.setType(16);
        int int13 = scriptNode5.getLength();
        com.google.javascript.rhino.head.ast.Symbol symbol15 = scriptNode5.getSymbol("0");
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode5.getSymbols();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNull(symbol15);
        org.junit.Assert.assertNotNull(symbolList16);
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        java.lang.String str40 = comment35.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode36, node42);
        scriptNode36.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str55 = scriptNode46.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope57.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope57, (int) (byte) 10);
        java.lang.String str63 = scriptNode36.getNextTempName();
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        boolean boolean65 = scriptNode36.hasSideEffects();
        int int66 = scriptNode36.getEncodedSourceStart();
        java.lang.String str67 = scriptNode36.toSource();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 25 + "'", int66 == 25);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{\n}\n" + "'", str67, "{\n}\n");
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = scriptNode13.getSymbolTable();
        java.lang.String str28 = scriptNode13.getSourceName();
        int int29 = scriptNode13.getBaseLineno();
        scriptNode13.setEncodedSourceBounds(18, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope33 = scriptNode13.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        scriptNode18.setEncodedSourceStart((int) ' ');
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, (int) (byte) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.Object obj33 = scriptNode30.getCompilerData();
        scriptNode30.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap36 = null;
        scriptNode30.setSymbolTable(strMap36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode30.getTop();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, 14);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) scriptNode38, node41, 15);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node41);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(2);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(845940331, (com.google.javascript.rhino.head.Node) scriptNode18, node44, node46);
        java.lang.String str48 = scriptNode18.debugPrint();
        scriptNode18.clearParentScope();
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str48, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = scriptNode13.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor28 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.visit(nodeVisitor28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(functionNode27);
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        scriptNode0.removeChildren();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.Node node60 = scriptNode25.target;
        java.lang.String str61 = scriptNode25.toSource();
        com.google.javascript.rhino.head.ast.Scope scope63 = scriptNode25.getDefiningScope("!=");
        scriptNode25.setEncodedSource("69\t  SCRIPT 17 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = scriptNode66.getTop();
        int int76 = scriptNode25.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        com.google.javascript.rhino.head.ast.AstRoot astRoot77 = scriptNode25.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump78 = astRoot77.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNull(astRoot77);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = null;
        scriptNode16.setSymbols(symbolList22);
        java.lang.String str24 = scriptNode16.getJsDoc();
        java.lang.String str25 = scriptNode16.getEncodedSource();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scriptNode16.spliterator();
        scriptNode16.setEncodedSource("                                  {\n                                  }\n");
        int int29 = scriptNode16.getRegexpCount();
        scriptNode16.clearParentScope();
        java.lang.String str31 = scriptNode16.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int35 = scope34.depth();
        scope34.setPosition(21);
        scope34.setLineno(8);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        comment50.setPosition(0);
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        comment50.setCommentType(commentType55);
        scriptNode16.addChildAfter((com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) comment50);
        java.lang.Class<?> wildcardClass58 = scope34.getClass();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                  {\n                                  }\n" + "'", str31, "                                  {\n                                  }\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        scriptNode0.putIntProp(26, 4);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = null;
        scriptNode0.setSymbolTable(strMap6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = scriptNode0.getTop();
        com.google.javascript.rhino.head.Node node9 = scriptNode8.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode8.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(node9);
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str24 = node23.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(23, node23, (com.google.javascript.rhino.head.Node) scope26, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        java.lang.String str40 = scriptNode32.debugPrint();
        scriptNode32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = null;
        scope44.setSymbolTable(strMap53);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope44);
        int int56 = scriptNode32.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int68 = scriptNode57.getIntProp(6, 2);
        int int69 = scriptNode57.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        int int72 = scriptNode70.getBaseLineno();
        java.lang.String str73 = scriptNode70.getNextTempName();
        scriptNode57.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode70);
        java.lang.String str75 = scriptNode70.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType79, "Scope");
        scriptNode76.setParent((com.google.javascript.rhino.head.ast.AstNode) comment81);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList83 = scriptNode76.getSymbols();
        scriptNode70.setSymbols(symbolList83);
        scriptNode32.setSymbols(symbolList83);
        int int86 = scriptNode32.getType();
        scriptNode32.setEncodedSource("                        {\n                        }\n");
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str40, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str75, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 136 + "'", int86 == 136);
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.Node node10 = scope1.getNext();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        java.lang.String str25 = comment21.toSource((int) (short) 10);
        scope1.setJsDocNode(comment21);
        java.lang.String str27 = comment21.getValue();
        boolean boolean28 = comment21.hasSideEffects();
        java.lang.String str29 = comment21.getValue();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    Scope" + "'", str25, "                    Scope");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Scope" + "'", str27, "Scope");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Scope" + "'", str29, "Scope");
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment8 = scriptNode0.getJsDocNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        java.lang.String str17 = scriptNode9.toSource(26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        int int33 = scriptNode31.getBaseLineno();
        java.lang.String str34 = scriptNode31.getNextTempName();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = scriptNode38.getTop();
        scriptNode47.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int52 = scriptNode51.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        scriptNode53.setEncodedSourceEnd(18);
        scriptNode51.target = scriptNode53;
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode59.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scriptNode62.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str71 = scriptNode62.getSourceName();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode62, 26);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node58, (com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scriptNode62);
        node74.setLineno(5);
        scriptNode18.setCompilerData((java.lang.Object) node74);
        scriptNode9.target = scriptNode18;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = scriptNode9.getTop();
        // The following exception was thrown during execution in test generation
        try {
            comment8.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(comment8);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                    {\n                                                    }\n" + "'", str17, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(scriptNode79);
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("161");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(7);
        // The following exception was thrown during execution in test generation
        try {
            node1.setString("11\tSCRIPT 11 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        boolean boolean19 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node20 = nodeIterator17.next();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node21 = nodeIterator17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(node20);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(16);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + ">" + "'", str1, ">");
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.getNext();
        com.google.javascript.rhino.head.ast.Scope scope5 = scope1.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            scope5.putIntProp((-1072816741), (-547629399));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope5);
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scope17.setJsDocNode(comment26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode29.setPosition((int) (byte) 0);
        scriptNode29.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getParamCount();
        java.lang.String str55 = scriptNode42.debugPrint();
        int int58 = scriptNode42.getIntProp(17, 10);
        scriptNode29.setTop(scriptNode42);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode29.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        int int72 = scriptNode63.getEncodedSourceStart();
        scriptNode63.setLineno(1);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode63, (int) '#');
        java.lang.String str78 = scriptNode29.makeIndent(52);
        int int79 = scriptNode29.getRegexpCount();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator80 = scriptNode29.new NodeIterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int82 = scriptNode29.addFunction(functionNode81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str55, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "                                                                                                        " + "'", str78, "                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        java.lang.String str30 = comment27.toSource(26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = comment27.getAstRoot();
        java.lang.String str33 = comment27.toSource(3);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                    Scope" + "'", str30, "                                                    Scope");
        org.junit.Assert.assertNull(astRoot31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "      Scope" + "'", str33, "      Scope");
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        scriptNode17.putIntProp((-1), 13);
        int int63 = scriptNode17.getEncodedSourceEnd();
        scriptNode17.setLength(19);
        boolean boolean66 = scriptNode17.hasConsistentReturnUsage();
        scriptNode17.clearParentScope();
        scriptNode17.setEndLineno(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scriptNode71.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = scriptNode71.getTop();
        scriptNode80.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int85 = scriptNode84.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode86.getEncodedSource();
        scriptNode86.setEncodedSourceEnd(18);
        scriptNode84.target = scriptNode86;
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode80, (com.google.javascript.rhino.head.Node) scriptNode86);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList92 = null;
        scriptNode86.setSymbols(symbolList92);
        java.lang.String str94 = scriptNode86.getJsDoc();
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode86);
        int int96 = scriptNode17.getEncodedSourceStart();
        scriptNode17.flattenSymbolTable(false);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node99 = scriptNode17.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 18 + "'", int63 == 18);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        scope73.setLineno(26);
        java.lang.String str84 = scope73.shortName();
        scope73.setLength(24);
        java.lang.Object obj88 = scope73.getProp(0);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Scope" + "'", str84, "Scope");
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode3.getEncodedSourceStart();
        int int13 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode58, 26);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node54, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode58);
        node70.setLineno(5);
        scriptNode14.setCompilerData((java.lang.Object) node70);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode3, node70);
        int int75 = scriptNode3.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scope1.iterator();
        boolean boolean14 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode15.toSource(18);
        java.lang.Object obj18 = scriptNode15.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope34.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node37 = scope34.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scope34.setJsDocNode(comment43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode46.getSymbols();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) scriptNode46);
        scriptNode46.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node57 = scriptNode46.target;
        scriptNode15.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        int int60 = scope1.getLineno();
        java.lang.Object obj62 = scope1.getProp(5);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node63 = scope1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                    {\n                                    }\n" + "'", str17, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.lang.String str19 = scriptNode14.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) comment47);
        int int49 = scriptNode31.depth();
        int int50 = scriptNode31.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor51 = scriptNode31.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int61 = scriptNode52.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode52, 23);
        int int64 = scriptNode14.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode14.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(nodeItor51);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setRelative(8);
        scriptNode1.setBaseLineno(6);
        boolean boolean7 = scriptNode1.hasChildren();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scriptNode0.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = scriptNode12.getTop();
        java.lang.String str22 = scriptNode21.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        java.lang.String str33 = scriptNode32.shortName();
        scriptNode21.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.Comment comment35 = null;
        scriptNode32.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope38, 10);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (short) -1);
        scriptNode0.replaceChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope43);
        com.google.javascript.rhino.head.Node node45 = scope43.getLastSibling();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ScriptNode" + "'", str22, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ScriptNode" + "'", str33, "ScriptNode");
        org.junit.Assert.assertNotNull(node45);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(24, 5, commentType3, "==");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        scope7.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap16 = null;
        scope7.setSymbolTable(strMap16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode18.getEncodedSourceStart();
        int int28 = scriptNode18.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node29 = scriptNode18.getNext();
        com.google.javascript.rhino.head.Node node30 = scope7.getChildBefore(node29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode32.toSource(18);
        int int35 = scriptNode32.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment36 = scriptNode32.getJsDocNode();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode32, 2);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(213295120, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) scope7, node38);
        com.google.javascript.rhino.head.ast.Symbol symbol41 = scope7.getSymbol("136");
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                    {\n                                    }\n" + "'", str34, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(comment36);
        org.junit.Assert.assertNull(symbol41);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        int int4 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scope21.setJsDocNode(comment30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode33);
        scriptNode33.setPosition((int) (byte) 0);
        scriptNode33.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getParamCount();
        java.lang.String str59 = scriptNode46.debugPrint();
        int int62 = scriptNode46.getIntProp(17, 10);
        scriptNode33.setTop(scriptNode46);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode33);
        scriptNode33.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList68 = scriptNode33.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = scriptNode33.getParamOrVarName(874571570);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str59, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNotNull(astNodeList68);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = scriptNode0.getFunctionNode(9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-53) + "'", int12 == (-53));
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        java.lang.Object obj60 = scriptNode41.getProp(17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scriptNode62.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = scriptNode62.getTop();
        scriptNode71.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int76 = scriptNode75.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode77.getEncodedSource();
        scriptNode77.setEncodedSourceEnd(18);
        scriptNode75.target = scriptNode77;
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode71, (com.google.javascript.rhino.head.Node) scriptNode77);
        scriptNode77.setEncodedSourceStart((int) ' ');
        int int85 = scriptNode77.getPosition();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode77);
        int int87 = scriptNode41.depth();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scriptNode41, 14);
        java.lang.Object obj90 = scriptNode41.getCompilerData();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        scriptNode6.setSourceName("0\tSCRIPT 0 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode6.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = functionNode18.getFunctionCount();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(functionNode18);
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node5 = scope1.setType((int) (byte) 0);
        java.lang.String str6 = scope1.shortName();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Scope" + "'", str6, "Scope");
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(35, 2);
        java.lang.Class<?> wildcardClass3 = scope2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = node0.new NodeIterator();
        boolean boolean2 = nodeIterator1.hasNext();
        boolean boolean3 = nodeIterator1.hasNext();
        boolean boolean4 = nodeIterator1.hasNext();
        boolean boolean5 = nodeIterator1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode19.toSource(18);
        java.lang.Object obj22 = scriptNode19.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode50.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node61 = scriptNode50.target;
        scriptNode19.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        boolean boolean63 = scriptNode50.hasSideEffects();
        int int64 = scriptNode50.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(908331048, (com.google.javascript.rhino.head.Node) scriptNode50, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node67 = scriptNode50.getNext();
        int int68 = scriptNode50.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDefault((com.google.javascript.rhino.head.Node) scriptNode50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                    {\n                                    }\n" + "'", str21, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        scriptNode24.flattenSymbolTable(true);
        java.lang.String str45 = scriptNode24.shortName();
        java.lang.Object obj47 = scriptNode24.getProp(53);
        java.lang.String str48 = scriptNode24.toSource();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        scope50.setPosition(2);
        int int56 = scope50.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope57 = scope50.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator58 = scope50.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        scope60.setPosition(2);
        int int66 = scope60.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope67 = scope60.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator68 = scope60.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getEncodedSource();
        int int71 = scriptNode69.getBaseLineno();
        java.lang.Object obj72 = scriptNode69.getCompilerData();
        scriptNode69.flattenSymbolTable(false);
        scope50.addChildAfter((com.google.javascript.rhino.head.Node) scope60, (com.google.javascript.rhino.head.Node) scriptNode69);
        int int76 = scriptNode69.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode77.getEncodedSource();
        scriptNode77.setEncodedSourceEnd(18);
        java.lang.String str82 = scriptNode77.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType86 = null;
        com.google.javascript.rhino.head.ast.Comment comment88 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType86, "Scope");
        scriptNode83.setParent((com.google.javascript.rhino.head.ast.AstNode) comment88);
        scriptNode83.setEncodedSourceStart((int) (byte) 100);
        scriptNode77.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode83);
        boolean boolean93 = scriptNode77.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap94 = scriptNode77.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode69, (com.google.javascript.rhino.head.ast.Scope) scriptNode77);
        int int96 = scriptNode69.getParamAndVarCount();
        int int97 = scriptNode69.getLineno();
        scriptNode24.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode69);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope99 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode69);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ScriptNode" + "'", str45, "ScriptNode");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{\n}\n" + "'", str48, "{\n}\n");
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNotNull(nodeSpliterator58);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNotNull(nodeSpliterator68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "                                                                      " + "'", str82, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.removeProp(6);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(13, 8);
        scriptNode20.addChildToBack(node32);
        int int34 = scriptNode20.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope37.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode67.setPosition((int) (byte) 0);
        scope37.setTop(scriptNode67);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode20.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode67);
        int int81 = scriptNode67.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            int int82 = scriptNode67.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        // The following exception was thrown during execution in test generation
        try {
            int int4 = scriptNode0.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(17, 7);
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        java.lang.Object obj59 = scriptNode40.getProp(17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = scriptNode61.getTop();
        scriptNode70.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int75 = scriptNode74.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str77 = scriptNode76.getEncodedSource();
        scriptNode76.setEncodedSourceEnd(18);
        scriptNode74.target = scriptNode76;
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) scriptNode76);
        scriptNode76.setEncodedSourceStart((int) ' ');
        int int84 = scriptNode76.getPosition();
        scriptNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        java.lang.Object obj86 = scriptNode76.getCompilerData();
        scriptNode76.setEndLineno((int) '#');
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode0.setParentScope(scope17);
        int int19 = scriptNode0.getType();
        int int20 = scriptNode0.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray21 = scriptNode0.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 136 + "'", int19 == 136);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.Node node52 = comment49.getFirstChild();
        scriptNode17.setJsDocNode(comment49);
        scriptNode17.setEncodedSourceBounds((int) ' ', 0);
        java.lang.Object obj58 = scriptNode17.getProp(22);
        scriptNode17.setBounds((int) 'a', (-51));
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str68 = scriptNode67.getEncodedSource();
        scriptNode67.setEncodedSourceEnd(18);
        java.lang.String str71 = comment66.toStringTree(scriptNode67);
        boolean boolean72 = scriptNode67.hasSideEffects();
        com.google.javascript.rhino.head.Node node74 = scriptNode67.setType(16);
        scriptNode67.setBaseLineno(97);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList77 = scriptNode67.getStatements();
        scriptNode17.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode67);
        scriptNode17.setLength(0);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = scriptNode17.getExistingIntProp(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(astNodeList77);
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        scriptNode17.putIntProp((-1), 13);
        int int63 = scriptNode17.getEncodedSourceEnd();
        scriptNode17.setLength(19);
        boolean boolean66 = scriptNode17.hasConsistentReturnUsage();
        scriptNode17.clearParentScope();
        scriptNode17.setEndLineno(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scriptNode71.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = scriptNode71.getTop();
        scriptNode80.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int85 = scriptNode84.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode86.getEncodedSource();
        scriptNode86.setEncodedSourceEnd(18);
        scriptNode84.target = scriptNode86;
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode80, (com.google.javascript.rhino.head.Node) scriptNode86);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList92 = null;
        scriptNode86.setSymbols(symbolList92);
        java.lang.String str94 = scriptNode86.getJsDoc();
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode86);
        scriptNode17.setLength(34756133);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 18 + "'", int63 == 18);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope3.setPosition(100);
        com.google.javascript.rhino.head.Node node6 = scope3.getLastSibling();
        node6.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = node6.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = null;
        scriptNode25.setSymbols(symbolList31);
        node6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str34 = scriptNode1.toStringTree(scriptNode25);
        int int35 = scriptNode1.getBaseLineno();
        scriptNode1.setSourceName("161");
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment(22, (int) (short) 10, commentType40, "10\tSCRIPT 10 1\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node43 = scriptNode1.getChildBefore((com.google.javascript.rhino.head.Node) comment42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        java.lang.String str33 = scriptNode28.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        scriptNode28.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        boolean boolean44 = scriptNode28.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap45 = scriptNode28.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode20, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        int int47 = scriptNode20.getParamAndVarCount();
        com.google.javascript.rhino.head.Node node48 = scriptNode20.target;
        // The following exception was thrown during execution in test generation
        try {
            node48.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                      " + "'", str33, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node48);
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceEnd(11);
        java.lang.String str24 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceBounds(6, 24);
        int int28 = scriptNode16.getBaseLineno();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(19);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode58.setPosition((int) (byte) 0);
        scope28.setTop(scriptNode58);
        java.lang.String str71 = scriptNode58.makeIndent((int) (short) 100);
        node26.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList74 = scriptNode58.getStatements();
        int int75 = scriptNode58.getParamCount();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "                                                                                                                                                                                                        " + "'", str71, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(astNodeList74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceEnd(11);
        java.lang.String str24 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceBounds(6, 24);
        int int28 = scriptNode16.getFunctionCount();
        int int29 = scriptNode16.getRegexpCount();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        scriptNode20.putIntProp(12, (int) (byte) 0);
        java.lang.String str30 = scriptNode20.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope31 = scriptNode20.getEnclosingScope();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(scope31);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode26.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = scriptNode61.getTop();
        scriptNode70.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int75 = scriptNode74.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str77 = scriptNode76.getEncodedSource();
        scriptNode76.setEncodedSourceEnd(18);
        scriptNode74.target = scriptNode76;
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) scriptNode76);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = null;
        scriptNode76.setSymbols(symbolList82);
        java.lang.String str84 = scriptNode76.getJsDoc();
        java.lang.String str85 = scriptNode76.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode86.getEncodedSource();
        int int88 = scriptNode86.getBaseLineno();
        java.lang.Object obj89 = scriptNode86.getCompilerData();
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode76, (com.google.javascript.rhino.head.Node) scriptNode86, (-51));
        int int92 = scriptNode76.getBaseLineno();
        scriptNode26.setTop(scriptNode76);
        scriptNode26.clearParentScope();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(25, 24, commentType2, "13");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode6.getTop();
        scriptNode15.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int20 = scriptNode19.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        scriptNode21.setEncodedSourceEnd(18);
        scriptNode19.target = scriptNode21;
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.Node node27 = scriptNode15.getLastSibling();
        java.lang.String str28 = comment4.toStringTree(scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        int int40 = scriptNode29.getIntProp(6, 2);
        int int41 = scriptNode29.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = null;
        scriptNode29.setSymbols(symbolList42);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int47 = scope46.depth();
        scriptNode29.target = scope46;
        scriptNode15.target = scope46;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = scriptNode15.getRegexpFlags(15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getEndLineno();
        int int19 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str21 = scriptNode0.toSource((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode23);
        scriptNode23.setRelative(8);
        int int27 = scriptNode23.getBaseLineno();
        scriptNode0.setTop(scriptNode23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = scriptNode0.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            functionNode29.setBaseLineno(226035720);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n{\n}\n}\n" + "'", str21, "{\n{\n}\n}\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(functionNode29);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int31 = scriptNode0.getIntProp((int) '4', (int) (short) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        boolean boolean5 = scriptNode1.hasChildren();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode6 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int7 = scriptNode1.addFunction(functionNode6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 1, 34756133);
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 7");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        boolean boolean5 = scriptNode1.hasSideEffects();
        int int6 = scriptNode1.depth();
        int int7 = scriptNode1.getFunctionCount();
        int int8 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        scope10.setPosition(2);
        java.lang.String str16 = scope10.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = scope10.getSymbolTable();
        boolean boolean18 = scope10.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scope10.target = scriptNode19;
        com.google.javascript.rhino.head.Node node30 = scriptNode19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode33.getTop();
        scriptNode42.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int47 = scriptNode46.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        scriptNode48.setEncodedSourceEnd(18);
        scriptNode46.target = scriptNode48;
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str66 = scriptNode57.getSourceName();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode57, 26);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node53, (com.google.javascript.rhino.head.Node) scriptNode54, (com.google.javascript.rhino.head.Node) scriptNode57);
        com.google.javascript.rhino.head.Node node70 = scriptNode57.getLastSibling();
        boolean boolean71 = scriptNode57.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        int int84 = scriptNode73.getIntProp(6, 2);
        scriptNode57.putProp((int) (byte) 0, (java.lang.Object) int84);
        com.google.javascript.rhino.head.Node node86 = scriptNode57.target;
        scriptNode57.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node89 = scriptNode57.getLastSibling();
        scriptNode19.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        java.lang.String str91 = scriptNode57.toString();
        scriptNode1.target = scriptNode57;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNull(node86);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "136" + "'", str91, "136");
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(18);
        java.lang.Object obj16 = scriptNode13.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node55 = scriptNode44.target;
        scriptNode13.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        int int57 = scriptNode44.getLineno();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode44);
        scriptNode0.setRelative((int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode0.getSymbolTable();
        com.google.javascript.rhino.head.Node node62 = scriptNode0.getLastSibling();
        int int63 = scriptNode0.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                    {\n                                    }\n" + "'", str15, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str36 = scriptNode27.getSourceName();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode27, 26);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node23, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode27);
        com.google.javascript.rhino.head.Node node40 = scriptNode27.getLastSibling();
        int int41 = node40.getType();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(6, node40);
        node40.setLineno(0);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 136 + "'", int41 == 136);
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        int int17 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode0.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = scriptNode0.getStatements();
        scriptNode0.removeProp(1);
        java.lang.String str22 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        int int38 = scriptNode36.getBaseLineno();
        java.lang.String str39 = scriptNode36.getNextTempName();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int46 = scriptNode43.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope48.setPosition(100);
        com.google.javascript.rhino.head.Node node51 = scope48.getLastSibling();
        node51.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator53 = node51.spliterator();
        scriptNode43.setCompilerData((java.lang.Object) node51);
        java.lang.String str55 = scriptNode43.getSourceName();
        int int56 = scriptNode43.getEncodedSourceStart();
        scriptNode43.setEncodedSourceStart((int) (byte) 0);
        scriptNode36.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        java.lang.String str60 = scriptNode43.toString();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        int int62 = scriptNode0.getBaseLineno();
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.AstNode astNode64 = null;
        scriptNode0.setParent(astNode64);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(functionNode18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str41, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(nodeSpliterator53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "136" + "'", str60, "136");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 35 + "'", int62 == 35);
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        java.lang.String str59 = scriptNode41.shortName();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode41);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode41.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump62 = scriptNode41.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ScriptNode" + "'", str59, "ScriptNode");
        org.junit.Assert.assertNotNull(functionNodeList61);
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        int int68 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol symbol69 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode23.putSymbol(symbol69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.Node node52 = comment49.getFirstChild();
        scriptNode17.setJsDocNode(comment49);
        scriptNode17.setEncodedSourceBounds((int) ' ', 0);
        java.lang.Object obj58 = scriptNode17.getProp(22);
        com.google.javascript.rhino.head.Node node59 = scriptNode17.getFirstChild();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(node59);
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.Node node10 = scope1.getNext();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        java.lang.String str25 = comment21.toSource((int) (short) 10);
        scope1.setJsDocNode(comment21);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = comment21.spliterator();
        java.lang.String str28 = comment21.getValue();
        java.lang.String str29 = comment21.toString();
        int int30 = comment21.getLineno();
        com.google.javascript.rhino.head.Node node31 = comment21.getFirstChild();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = comment21.getCommentType();
        java.lang.String str34 = comment21.makeIndent(3);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    Scope" + "'", str25, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Scope" + "'", str28, "Scope");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "161" + "'", str29, "161");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(commentType32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "      " + "'", str34, "      ");
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode0.toString();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap15 = scriptNode0.getSymbolTable();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setString("10\tSCRIPT 10 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        scope23.setPosition(2);
        int int29 = scope23.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope30 = scope23.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope23.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        int int39 = scope33.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope40 = scope33.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scope33.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        scriptNode42.flattenSymbolTable(false);
        scope23.addChildAfter((com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str50 = scriptNode42.makeIndent((-1));
        scope1.target = scriptNode42;
        com.google.javascript.rhino.head.Node node52 = scriptNode42.getNext();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        java.lang.String str68 = comment64.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment64);
        java.lang.Object obj71 = comment64.getProp((int) (short) -1);
        java.lang.String str73 = comment64.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        scriptNode74.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = scriptNode74.getTop();
        scriptNode83.setPosition(6);
        comment64.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode83);
        com.google.javascript.rhino.head.ast.Comment comment87 = comment64.getJsDocNode();
        comment64.removeProp(13);
        int int90 = scriptNode42.compareTo((com.google.javascript.rhino.head.ast.AstNode) comment64);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor91 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment64.visit(nodeVisitor91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                    Scope" + "'", str68, "                    Scope");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertNull(comment87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode23.getSymbols();
        java.lang.String str70 = scriptNode23.debugPrint();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str70, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(874571570, (-42), commentType2, "                                {\n                                }\n");
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str24 = node23.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(23, node23, (com.google.javascript.rhino.head.Node) scope26, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        java.lang.String str40 = scriptNode32.debugPrint();
        scriptNode32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = null;
        scope44.setSymbolTable(strMap53);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope44);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = scope44.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        scope44.setParentScope(scope59);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor61 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope59.visit(nodeVisitor61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str40, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(strMap56);
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope1.getSymbol("{\n{\n}\n}\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump12 = scope1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(symbol11);
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        int int39 = scriptNode0.getParamCount();
        java.lang.String str40 = scriptNode0.getSourceName();
        boolean boolean41 = scriptNode0.hasConsistentReturnUsage();
        scriptNode0.flattenSymbolTable(true);
        scriptNode0.setEncodedSourceEnd((-2));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList28 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment29 = scriptNode0.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            comment29.putIntProp(6, 23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(astNodeList28);
        org.junit.Assert.assertNull(comment29);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.Scope scope16 = scriptNode6.getParentScope();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = scriptNode6.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        scriptNode77.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = scriptNode77.getTop();
        scriptNode34.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode86);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode6.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNotNull(scriptNode86);
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(6, (int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scriptNode4.getTop();
        scriptNode13.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int18 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        scriptNode17.target = scriptNode19;
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        scriptNode26.setSymbols(symbolList69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode26.getSymbols();
        scriptNode26.setPosition(18);
        scriptNode26.setSourceName("161");
        scriptNode26.setLength(14);
        java.lang.String str78 = scriptNode26.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            scope2.setFinally((com.google.javascript.rhino.head.Node) scriptNode26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "161" + "'", str78, "161");
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode7.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        scriptNode7.target = scriptNode9;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        scriptNode15.setLineno((int) (byte) 1);
        scriptNode7.setCompilerData((java.lang.Object) (byte) 1);
        scriptNode0.setCompilerData((java.lang.Object) (byte) 1);
        java.lang.Object obj20 = scriptNode0.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray21 = scriptNode0.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 1 + "'", obj20, (byte) 1);
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.String str72 = scriptNode23.toSource((-53));
        int int73 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = scriptNode23.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope76 = astRoot74.getDefiningScope("                                                    Scope");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{\n}\n" + "'", str72, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(astRoot74);
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getFunctionCount();
        int int11 = scriptNode0.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = scriptNode0.getFunctionNode(371991955);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) '4');
        boolean boolean2 = scriptNode1.hasChildren();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType3, "{\n}\n");
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment5, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType8 = comment5.getCommentType();
        boolean boolean9 = comment5.hasConsistentReturnUsage();
        org.junit.Assert.assertNull(commentType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getEndLineno();
        int int19 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str21 = scriptNode0.toSource((int) (byte) -1);
        com.google.javascript.rhino.head.Node node22 = scriptNode0.getNext();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scriptNode0.iterator();
        boolean boolean24 = nodeItor23.hasNext();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n{\n}\n}\n" + "'", str21, "{\n{\n}\n}\n");
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Node node3 = scope1.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        comment15.setCommentType(commentType18);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment15, 14);
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) comment15);
        com.google.javascript.rhino.head.Node node24 = comment15.setType((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        int int41 = scriptNode39.getBaseLineno();
        java.lang.String str42 = scriptNode39.getNextTempName();
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        int int44 = scriptNode26.getEndLineno();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator45 = scriptNode26.spliterator();
        comment15.putProp(129, (java.lang.Object) nodeSpliterator45);
        java.lang.String str47 = comment15.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = comment15.getCommentType();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Scope" + "'", str47, "Scope");
        org.junit.Assert.assertNull(commentType48);
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node11 = scriptNode0.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getEncodedSource();
        scriptNode12.setEncodedSourceEnd(18);
        java.lang.String str17 = scriptNode12.makeIndent((int) '#');
        int int20 = scriptNode12.getIntProp((int) '4', 4);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scriptNode12.spliterator();
        int int22 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int23 = scriptNode0.getPosition();
        scriptNode0.setEncodedSource("                                      Scope");
        java.lang.Object obj26 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        int int38 = scriptNode27.getIntProp(6, 2);
        int int39 = scriptNode27.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getEncodedSource();
        int int42 = scriptNode40.getBaseLineno();
        java.lang.String str43 = scriptNode40.getNextTempName();
        scriptNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.lang.String str45 = scriptNode40.debugPrint();
        int int46 = scriptNode40.getEndLineno();
        int int47 = scriptNode40.getType();
        int int48 = scriptNode40.getFunctionCount();
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray50 = scriptNode40.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                                      " + "'", str17, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(nodeSpliterator21);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1009981659 + "'", int22 == 1009981659);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-53) + "'", int23 == (-53));
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str45, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 136 + "'", int47 == 136);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = scriptNode13.getSymbolTable();
        int int28 = scriptNode13.depth();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope(21);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.setContinue((com.google.javascript.rhino.head.Node) scope30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getLineno();
        java.lang.String str11 = scriptNode0.getSourceName();
        int int12 = scriptNode0.getEncodedSourceEnd();
        int int13 = scriptNode0.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            double double14 = scriptNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = scriptNode0.getSymbolTable();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor29 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int4 = scope3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        java.lang.Object obj23 = comment16.getProp((int) (short) -1);
        java.lang.String str25 = comment16.makeIndent((int) (short) -1);
        scope3.setJsDocNode(comment16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode28.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope33.setPosition(100);
        com.google.javascript.rhino.head.Node node36 = scope33.getLastSibling();
        node36.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = node36.spliterator();
        scriptNode28.setCompilerData((java.lang.Object) node36);
        java.lang.String str40 = scriptNode28.getSourceName();
        int int41 = scriptNode28.getEncodedSourceStart();
        scriptNode28.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        java.lang.String str54 = comment49.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode50, node56);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator59 = scriptNode28.new NodeIterator();
        com.google.javascript.rhino.head.ast.Symbol symbol61 = scriptNode28.getSymbol("53\tCOMMENT 53 53\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = scriptNode28.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int64 = functionNode62.addFunction(functionNode63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNull(symbol61);
        org.junit.Assert.assertNull(functionNode62);
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(2, 7, commentType2, "                  Scope");
        // The following exception was thrown during execution in test generation
        try {
            int int6 = comment4.getExistingIntProp(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        boolean boolean11 = scriptNode6.hasSideEffects();
        java.lang.String str12 = scriptNode6.getEncodedSource();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int14 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = scriptNode17.getTop();
        scriptNode26.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode30.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        scriptNode32.setEncodedSourceEnd(18);
        scriptNode30.target = scriptNode32;
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str50 = scriptNode41.getSourceName();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode41, 26);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node37, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        int int65 = scriptNode54.getIntProp(6, 2);
        scriptNode54.setEndLineno(18);
        scriptNode41.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode54);
        scriptNode41.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = scriptNode41.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode41.getSymbols();
        scriptNode6.setSymbols(symbolList72);
        int int74 = scriptNode6.getEndLineno();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode1.setSourceName("");
        int int7 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node12 = scope9.target;
        scope9.setPosition(2);
        int int15 = scope9.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope16 = scope9.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator17 = scope9.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        int int25 = scope19.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope26 = scope19.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope19.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        int int30 = scriptNode28.getBaseLineno();
        java.lang.Object obj31 = scriptNode28.getCompilerData();
        scriptNode28.flattenSymbolTable(false);
        scope9.addChildAfter((com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int35 = scriptNode28.getLength();
        scriptNode1.setTop(scriptNode28);
        int int37 = scriptNode1.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(18);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        java.lang.String str42 = scriptNode1.getSourceName();
        java.lang.String str43 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor44 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.visit(nodeVisitor44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNotNull(nodeSpliterator17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                    {\n                                    }\n" + "'", str40, "                                    {\n                                    }\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ScriptNode" + "'", str43, "ScriptNode");
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode2.getSymbols();
        java.lang.String str10 = scriptNode2.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getEncodedSource();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.getLastSibling();
        scriptNode11.setEncodedSource("Scope");
        scriptNode11.setEndLineno(100);
        scriptNode2.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope20.putProp(25, (java.lang.Object) 100L);
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.Node node25 = scriptNode2.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        int int41 = scriptNode39.getBaseLineno();
        java.lang.String str42 = scriptNode39.getNextTempName();
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        scriptNode39.setEncodedSource("                        ");
        int int46 = scriptNode39.getLineno();
        scriptNode2.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode39);
        int int48 = scriptNode2.getLineno();
        int int49 = scriptNode2.getRegexpCount();
        scriptNode2.setEncodedSourceStart((-613442063));
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList52 = scriptNode2.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node56 = scope55.getLastSibling();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode2, node56);
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode64.getEncodedSource();
        scriptNode64.setEncodedSourceEnd(18);
        java.lang.String str68 = comment63.toStringTree(scriptNode64);
        com.google.javascript.rhino.head.Node node70 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode64, node70);
        int int72 = scriptNode64.getRegexpCount();
        com.google.javascript.rhino.head.Node node73 = scriptNode64.getNext();
        // The following exception was thrown during execution in test generation
        try {
            int int74 = scriptNode1.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str10, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(astNodeList52);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(node73);
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        java.lang.String str8 = scriptNode0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getEncodedSource();
        int int24 = scriptNode22.getBaseLineno();
        java.lang.String str25 = scriptNode22.getNextTempName();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        java.lang.String str27 = scriptNode22.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str33 = scope31.toSource(12);
        scope31.setRelative(1);
        scriptNode22.putProp(17, (java.lang.Object) 1);
        java.lang.String str38 = scriptNode22.toSource(13);
        scriptNode0.target = scriptNode22;
        java.lang.String str41 = scriptNode0.toSource(16);
        boolean boolean42 = scriptNode0.hasConsistentReturnUsage();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str27, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                        {\n                        }\n" + "'", str33, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                          {\n                          }\n" + "'", str38, "                          {\n                          }\n");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                {\n                                }\n" + "'", str41, "                                {\n                                }\n");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        scriptNode1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) scriptNode1, 19);
        scriptNode1.setPosition(3);
        scriptNode1.setEncodedSourceEnd(20);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node12 = scriptNode1.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int3 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode4.getEncodedSource();
        scriptNode4.setEncodedSourceEnd(18);
        scriptNode2.target = scriptNode4;
        int int9 = scriptNode4.getParamCount();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.lang.String str47 = scriptNode38.getEncodedSource();
        int int48 = scriptNode38.getAbsolutePosition();
        scriptNode38.setPosition(17);
        scriptNode38.removeChildren();
        java.lang.String str52 = scriptNode38.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = scriptNode38.getTop();
        // The following exception was thrown during execution in test generation
        try {
            int int54 = scriptNode4.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "69\t  SCRIPT 17 1\n" + "'", str52, "69\t  SCRIPT 17 1\n");
        org.junit.Assert.assertNotNull(scriptNode53);
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        scriptNode20.putIntProp(12, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = scriptNode31.getTop();
        scriptNode40.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int45 = scriptNode44.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getEncodedSource();
        scriptNode46.setEncodedSourceEnd(18);
        scriptNode44.target = scriptNode46;
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scriptNode46);
        int int52 = scriptNode46.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        int int65 = scriptNode54.getIntProp(6, 2);
        int int66 = scriptNode54.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str68 = scriptNode67.getEncodedSource();
        int int69 = scriptNode67.getBaseLineno();
        java.lang.String str70 = scriptNode67.getNextTempName();
        scriptNode54.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        scriptNode72.setEncodedSourceStart((int) (byte) 100);
        int int83 = scriptNode72.getIntProp(6, 2);
        scriptNode72.setEndLineno(18);
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode67, (com.google.javascript.rhino.head.Node) scriptNode72, (int) (byte) -1);
        scriptNode46.target = scriptNode72;
        scriptNode72.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot90 = scriptNode72.getAstRoot();
        java.lang.String str91 = scriptNode72.toSource();
        int int92 = scriptNode72.getAbsolutePosition();
        scriptNode72.setLineno(0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node95 = scriptNode20.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "$0" + "'", str70, "$0");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNull(astRoot90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{\n}\n" + "'", str91, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        int int72 = scriptNode70.getBaseLineno();
        java.lang.Object obj73 = scriptNode70.getCompilerData();
        scriptNode70.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        com.google.javascript.rhino.head.ast.Comment comment87 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType85, "Scope");
        scriptNode82.setParent((com.google.javascript.rhino.head.ast.AstNode) comment87);
        scope78.setJsDocNode(comment87);
        java.lang.String str91 = comment87.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment87);
        comment87.setLength(0);
        scriptNode23.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) comment87);
        java.lang.String str96 = comment87.getValue();
        java.lang.String str97 = comment87.getJsDoc();
        java.lang.String str98 = comment87.getValue();
        int int99 = comment87.getPosition();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "                    Scope" + "'", str91, "                    Scope");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Scope" + "'", str96, "Scope");
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Scope" + "'", str98, "Scope");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 52 + "'", int99 == 52);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = node0.new NodeIterator();
        boolean boolean2 = nodeIterator1.hasNext();
        boolean boolean3 = nodeIterator1.hasNext();
        boolean boolean4 = nodeIterator1.hasNext();
        boolean boolean5 = nodeIterator1.hasNext();
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        int int10 = comment4.getType();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        comment4.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        int int90 = scriptNode51.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope91 = scriptNode51.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node92 = scope91.target;
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 161 + "'", int10 == 161);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNull(scope91);
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        int int26 = scriptNode15.getIntProp(6, 2);
        int int27 = scriptNode15.getParamCount();
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.clearParentScope();
        scriptNode30.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode41.toSource(18);
        java.lang.Object obj44 = scriptNode41.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scope60.setJsDocNode(comment69);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList79 = scriptNode72.getSymbols();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope60, (com.google.javascript.rhino.head.Node) scriptNode72);
        scriptNode72.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node83 = scriptNode72.target;
        scriptNode41.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode72);
        boolean boolean85 = scriptNode72.hasSideEffects();
        java.lang.String str86 = scriptNode32.toStringTree(scriptNode72);
        java.lang.Object obj88 = scriptNode72.getProp(35);
        node1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode72);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                                    {\n                                    }\n" + "'", str43, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(symbolList79);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.Node node60 = scriptNode25.target;
        java.lang.String str61 = scriptNode25.toSource();
        com.google.javascript.rhino.head.ast.AstNode astNode62 = scriptNode25.getParent();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = scriptNode25.getFunctionNode(19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNotNull(astNode62);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        scriptNode4.setEncodedSource("                                  {\n                                  }\n");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral17 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.addRegExp(regExpLiteral17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        scriptNode9.setSourceName("                    Scope");
        com.google.javascript.rhino.head.Node node13 = scriptNode9.getNext();
        int int14 = scriptNode9.getLength();
        int int15 = scriptNode9.getAbsolutePosition();
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 100, 2, commentType2, "                                              hi!");
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment9 = scriptNode0.getJsDocNode();
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode0.getParentScope();
        java.lang.String str11 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode13.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode13.getParentScope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        java.lang.String str25 = scope19.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = scope19.getSymbolTable();
        boolean boolean27 = scope19.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scope19.target = scriptNode28;
        com.google.javascript.rhino.head.Node node39 = scriptNode28.target;
        int int40 = scriptNode28.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        int int56 = scriptNode54.getBaseLineno();
        java.lang.String str57 = scriptNode54.getNextTempName();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        java.lang.String str59 = scriptNode54.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str65 = scope63.toSource(12);
        scope63.setRelative(1);
        scriptNode54.putProp(17, (java.lang.Object) 1);
        scriptNode28.target = scriptNode54;
        int int70 = scriptNode28.getEncodedSourceEnd();
        java.lang.Object obj71 = scriptNode28.getCompilerData();
        int int72 = scriptNode28.getEndLineno();
        scriptNode13.setTop(scriptNode28);
        scriptNode0.setTop(scriptNode28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode75 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int76 = scriptNode28.addFunction(functionNode75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(comment9);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str59, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                        {\n                        }\n" + "'", str65, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(19);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope3.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scope21.setJsDocNode(comment30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode33);
        scriptNode33.setPosition((int) (byte) 0);
        scope3.setTop(scriptNode33);
        java.lang.String str46 = scriptNode33.makeIndent((int) (short) 100);
        node1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope51 = scope49.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node52 = scope49.target;
        scope49.setPosition(2);
        java.lang.String str55 = scope49.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = scope49.getSymbolTable();
        boolean boolean57 = scope49.hasChildren();
        com.google.javascript.rhino.head.Node node58 = scope49.getNext();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scope60.setJsDocNode(comment69);
        java.lang.String str73 = comment69.toSource((int) (short) 10);
        scope49.setJsDocNode(comment69);
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newNumber((double) (-1));
        comment69.addChildrenToBack(node76);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 100, 15);
        com.google.javascript.rhino.head.ast.Scope scope82 = scope80.getDefiningScope("                                        {\n                                        }\n");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode33.replaceChildAfter((com.google.javascript.rhino.head.Node) comment69, (com.google.javascript.rhino.head.Node) scope80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                                                                                                                                                        " + "'", str46, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n}\n" + "'", str55, "{\n}\n");
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                    Scope" + "'", str73, "                    Scope");
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(scope82);
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scriptNode0.getParent();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scriptNode0.iterator();
        boolean boolean14 = nodeItor13.hasNext();
        boolean boolean15 = nodeItor13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node16 = nodeItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(astNode12);
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(100);
        com.google.javascript.rhino.head.ast.Scope scope2 = scope1.getEnclosingScope();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope4.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        int int19 = scriptNode8.getIntProp(6, 2);
        int int20 = scriptNode8.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope24 = scope22.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node25 = scope22.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scope22.setJsDocNode(comment31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = scriptNode34.getSymbols();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope22, (com.google.javascript.rhino.head.Node) scriptNode34);
        scriptNode34.setPosition((int) (byte) 0);
        scope4.setTop(scriptNode34);
        int int46 = scriptNode34.getParamCount();
        boolean boolean47 = scriptNode34.hasConsistentReturnUsage();
        boolean boolean48 = scriptNode34.hasChildren();
        int int49 = scriptNode34.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = scriptNode34.getTop();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap51 = null;
        scriptNode50.setSymbolTable(strMap51);
        com.google.javascript.rhino.head.ast.Comment comment53 = scriptNode50.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = scope2.toStringTree(scriptNode50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(symbolList41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertNull(comment53);
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node3 = scope2.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = scope2.getSymbol("                                                                                                                                                                                                        ");
        boolean boolean6 = scope2.hasConsistentReturnUsage();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        java.lang.String str90 = scriptNode0.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol92 = scriptNode0.getSymbol("                                                                                                                                                                                                        Scope");
        int int93 = scriptNode0.getFunctionCount();
        java.lang.String str94 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode95 = scriptNode0.getEnclosingFunction();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "136" + "'", str90, "136");
        org.junit.Assert.assertNull(symbol92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "$0" + "'", str94, "$0");
        org.junit.Assert.assertNull(functionNode95);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = null;
        scope1.setTop(scriptNode5);
        scope1.setBounds(7, 17);
        int int10 = scope1.getPosition();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setPosition(2);
        scope12.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node20 = scope12.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        scriptNode21.setEncodedSourceEnd(18);
        java.lang.String str26 = scriptNode21.makeIndent((int) '#');
        scope12.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        scope29.setPosition(2);
        scope29.putIntProp(17, 25);
        scope29.setLength((int) ' ');
        scriptNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        int int43 = scriptNode41.getBaseLineno();
        java.lang.Object obj44 = scriptNode41.getCompilerData();
        scriptNode41.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList48 = scriptNode41.getSymbols();
        scope29.setTop(scriptNode41);
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        scope1.removeProp((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump53 = scope1.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                      " + "'", str26, "                                                                      ");
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(symbolList48);
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.Node node10 = scope1.getNext();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        java.lang.String str25 = comment21.toSource((int) (short) 10);
        scope1.setJsDocNode(comment21);
        java.lang.String str27 = comment21.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = comment21.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = comment21.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        scriptNode30.setEndLineno(5);
        java.lang.Object obj42 = scriptNode30.getProp((int) (short) 10);
        int int43 = scriptNode30.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope44 = scriptNode30.getEnclosingScope();
        java.lang.String str45 = scriptNode30.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node46 = comment21.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    Scope" + "'", str25, "                    Scope");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Scope" + "'", str27, "Scope");
        org.junit.Assert.assertNull(commentType28);
        org.junit.Assert.assertNull(commentType29);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        java.lang.String str23 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.ast.Symbol symbol25 = scriptNode16.getSymbol("  ");
        int int28 = scriptNode16.getIntProp((int) (byte) 10, 161);
        scriptNode16.setEndLineno(220850805);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(symbol25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 161 + "'", int28 == 161);
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = scriptNode31.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator45.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode13.getTop();
        scriptNode22.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        scriptNode26.target = scriptNode28;
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str46 = scriptNode37.getSourceName();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode37, 26);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node33, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope51 = scriptNode37.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode37.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scriptNode68.setEncodedSourceStart((int) (byte) 100);
        int int79 = scriptNode68.getIntProp(6, 2);
        int int80 = scriptNode68.getParamCount();
        scriptNode55.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode55.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode83);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType88 = null;
        com.google.javascript.rhino.head.ast.Comment comment90 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType88, "Scope");
        scriptNode85.setParent((com.google.javascript.rhino.head.ast.AstNode) comment90);
        scriptNode85.clearParentScope();
        scriptNode83.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode85);
        scriptNode53.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode83);
        com.google.javascript.rhino.head.Node node96 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) scriptNode53, 15);
        java.lang.Object obj97 = scriptNode53.getCompilerData();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList98 = scriptNode53.getSymbols();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertNotNull(symbolList98);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.lang.String str22 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType26, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        java.lang.String str34 = scriptNode29.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment28, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        comment28.setCommentType(commentType36);
        scriptNode16.target = comment28;
        scriptNode16.flattenSymbolTable(false);
        java.lang.String str41 = scriptNode16.debugPrint();
        scriptNode16.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump43 = scriptNode16.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                      " + "'", str34, "                                                                      ");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str41, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        java.lang.String str52 = scriptNode39.debugPrint();
        scriptNode39.setPosition(8);
        int int55 = scriptNode39.getParamCount();
        scriptNode39.setPosition((int) (byte) 10);
        scriptNode17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        java.lang.Object obj59 = scriptNode17.getCompilerData();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList60 = scriptNode17.getStatements();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str52, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(astNodeList60);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope1.getSymbol("{\n{\n}\n}\n");
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = null;
        scope1.setSymbolTable(strMap12);
        int int14 = scope1.depth();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = scope1.getExistingIntProp((-824625719));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(symbol11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.String str41 = scriptNode26.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        java.lang.String str54 = scriptNode46.toSource(26);
        scriptNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.lang.String str56 = scriptNode46.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = scriptNode57.getTop();
        java.lang.String str67 = scriptNode66.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scriptNode68.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = scriptNode68.getTop();
        java.lang.String str78 = scriptNode77.shortName();
        scriptNode66.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        java.lang.String str81 = scriptNode66.makeIndent(6);
        scriptNode66.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        scriptNode46.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode66);
        int int86 = scriptNode66.getEncodedSourceEnd();
        scriptNode26.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        java.lang.String str88 = scriptNode66.shortName();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str41, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                                                    {\n                                                    }\n" + "'", str54, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "136" + "'", str56, "136");
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ScriptNode" + "'", str67, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ScriptNode" + "'", str78, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "            " + "'", str81, "            ");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ScriptNode" + "'", str88, "ScriptNode");
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode11.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node32 = scriptNode11.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(astNodeList31);
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.lang.String str10 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope11 = scriptNode0.getParentScope();
        scriptNode0.setEndLineno(19);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        int int21 = scope15.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scope15.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode50.setPosition((int) (byte) 0);
        scriptNode50.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str64 = scriptNode50.makeIndent(0);
        boolean boolean65 = scriptNode50.hasSideEffects();
        scope15.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.Node node68 = scriptNode50.getLastSibling();
        node68.removeProp(272356811);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(node68);
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scope14.setJsDocNode(comment23);
        boolean boolean26 = scope14.hasChildren();
        java.lang.String str27 = scope14.debugPrint();
        int int28 = scope14.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        int int40 = scriptNode29.getIntProp(6, 2);
        int int41 = scriptNode29.getParamCount();
        java.lang.String str42 = scriptNode29.debugPrint();
        scriptNode29.setPosition(8);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope14, (com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = scope14.new NodeIterator();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scope14);
        // The following exception was thrown during execution in test generation
        try {
            scope1.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0\tBLOCK 0 1\n" + "'", str27, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str42, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = scriptNode45.getTop();
        // The following exception was thrown during execution in test generation
        try {
            double double61 = scriptNode60.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(scriptNode60);
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        scriptNode23.setPosition(18);
        int int73 = scriptNode23.getIntProp(129, (int) (short) 100);
        scriptNode23.setBaseLineno((int) (byte) 10);
        java.lang.String str76 = scriptNode23.getNextTempName();
        boolean boolean77 = scriptNode23.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope78 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "$0" + "'", str76, "$0");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode23.getSymbols();
        scriptNode23.removeChildren();
        int int63 = scriptNode23.getIntProp((int) '#', (-53));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-53) + "'", int63 == (-53));
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        scriptNode1.setEncodedSource("0\tBLOCK 0 1\n");
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(908331048, (com.google.javascript.rhino.head.Node) scriptNode1, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = scriptNode1.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        boolean boolean24 = nodeIterator17.hasNext();
        boolean boolean25 = nodeIterator17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node26 = nodeIterator17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int9 = scriptNode6.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope11.setPosition(100);
        com.google.javascript.rhino.head.Node node14 = scope11.getLastSibling();
        node14.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = node14.spliterator();
        scriptNode6.setCompilerData((java.lang.Object) node14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) comment45);
        java.lang.String str47 = scriptNode6.toStringTree(scriptNode29);
        java.lang.String str48 = scriptNode29.toString();
        com.google.javascript.rhino.head.Node node51 = com.google.javascript.rhino.head.Node.newString(19, "                    Scope");
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope4, (com.google.javascript.rhino.head.Node) scriptNode29, node51, 12);
        int int54 = scriptNode29.getLineno();
        scriptNode29.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        scriptNode56.setEncodedSourceEnd(18);
        java.lang.String str61 = scriptNode56.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator62 = scriptNode56.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope63 = scriptNode56.getParentScope();
        java.lang.String str64 = scriptNode56.getNextTempName();
        int int65 = scriptNode56.getType();
        com.google.javascript.rhino.head.Node node67 = scriptNode56.setType(0);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((-42), (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode56);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "136" + "'", str48, "136");
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "                                                                      " + "'", str61, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator62);
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "$0" + "'", str64, "$0");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 136 + "'", int65 == 136);
        org.junit.Assert.assertNotNull(node67);
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        int int5 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        int int21 = scriptNode19.getBaseLineno();
        java.lang.String str22 = scriptNode19.getNextTempName();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        scriptNode19.setEncodedSourceBounds(9, 2);
        scriptNode19.clearParentScope();
        java.lang.String str31 = scriptNode19.makeIndent(19);
        com.google.javascript.rhino.head.ast.AstNode astNode32 = scriptNode19.getParent();
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 129 + "'", int5 == 129);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str24, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                      " + "'", str31, "                                      ");
        org.junit.Assert.assertNotNull(astNode32);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str6 = scope4.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str19 = scriptNode10.getSourceName();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode10, 26);
        scriptNode8.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        java.lang.String str23 = scriptNode8.getNextTempName();
        scope4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        scope26.setPosition(2);
        int int32 = scope26.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope33 = scope26.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scope26.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope38 = scope36.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node39 = scope36.target;
        scope36.setPosition(2);
        int int42 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope43 = scope36.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = scope36.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        int int47 = scriptNode45.getBaseLineno();
        java.lang.Object obj48 = scriptNode45.getCompilerData();
        scriptNode45.flattenSymbolTable(false);
        scope26.addChildAfter((com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.lang.String str53 = scriptNode45.makeIndent((-1));
        scope4.target = scriptNode45;
        scriptNode0.target = scope4;
        int int56 = scriptNode0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope61 = scope59.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node62 = scope59.target;
        scope59.setPosition(2);
        scope59.setLength((int) (byte) 1);
        boolean boolean67 = scope59.hasSideEffects();
        com.google.javascript.rhino.head.Node node70 = com.google.javascript.rhino.head.Node.newString("$0");
        node70.putIntProp(25, 1);
        com.google.javascript.rhino.head.Node node74 = node70.getFirstChild();
        scope59.putProp((int) (short) 100, (java.lang.Object) node70);
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType79, "{\n}\n");
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment81, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType84 = comment81.getCommentType();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(9, node70, (com.google.javascript.rhino.head.Node) comment81, 17);
        com.google.javascript.rhino.head.Token.CommentType commentType87 = comment81.getCommentType();
        scriptNode0.setJsDocNode(comment81);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node89 = scriptNode0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(scope61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNull(commentType84);
        org.junit.Assert.assertNull(commentType87);
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = scriptNode0.iterator();
        java.lang.String str11 = scriptNode0.debugPrint();
        java.lang.String str12 = scriptNode0.getSourceName();
        boolean boolean13 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope14 = scriptNode0.getParentScope();
        java.lang.Object obj15 = scriptNode0.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node16 = scriptNode0.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str11, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        scriptNode6.setSourceName("0\tSCRIPT 0 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode6.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node19 = scriptNode6.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(functionNode18);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        int int14 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode0.getParentScope();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = scriptNode0.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray17 = scriptNode0.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope15);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(226035720);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 226035720");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(20);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + ">>>" + "'", str1, ">>>");
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral43 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.addRegExp(regExpLiteral43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        scope18.putIntProp(17, 25);
        scope18.setLength((int) ' ');
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        int int30 = scriptNode10.getLength();
        int int31 = scriptNode10.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = null;
        java.lang.String str33 = scriptNode10.toStringTree(scriptNode32);
        int int34 = scriptNode10.getBaseLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump35 = scriptNode10.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        scriptNode10.setLineno((-1));
        java.lang.Object obj84 = scriptNode10.getCompilerData();
        scriptNode10.flattenSymbolTable(true);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap87 = scriptNode10.getSymbolTable();
        scriptNode10.setEncodedSourceStart(0);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(strMap87);
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList21 = scriptNode10.getFunctions();
        scriptNode10.setEncodedSourceStart(52);
        int int24 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = null;
        scriptNode10.setParentScope(scope25);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump27 = scriptNode10.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNotNull(functionNodeList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scope51.setJsDocNode(comment60);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode63.getSymbols();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope76 = scope74.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node77 = scope74.target;
        scope74.setPosition(2);
        scope74.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope74);
        int int83 = scriptNode30.getEndLineno();
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node(22, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode85 = scriptNode30.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump86 = scriptNode30.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(functionNode85);
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList2 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = scriptNode1.getEnclosingFunction();
        scriptNode1.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scope21.setJsDocNode(comment30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode33);
        java.lang.String str42 = scriptNode33.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList43 = scriptNode33.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode45);
        scriptNode45.setEndLineno(20);
        scriptNode45.removeProp((int) 'a');
        scriptNode33.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode45);
        scriptNode45.setEncodedSourceBounds(16, 52);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.AstNode astNode56 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.addChild(astNode56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: arg cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList2);
        org.junit.Assert.assertNull(functionNode3);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(astNodeList43);
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = null;
        scriptNode16.setSymbols(symbolList22);
        java.lang.String str24 = scriptNode16.getJsDoc();
        java.lang.String str25 = scriptNode16.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        java.lang.Class<?> wildcardClass28 = scriptNode26.getClass();
        scriptNode16.setCompilerData((java.lang.Object) wildcardClass28);
        int int30 = scriptNode16.getType();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode16.flattenSymbolTable(true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 136 + "'", int30 == 136);
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean16 = scriptNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean20 = scope19.hasSideEffects();
        scriptNode0.putProp((int) (short) 1, (java.lang.Object) boolean20);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor22 = scriptNode0.iterator();
        boolean boolean23 = nodeItor22.hasNext();
        com.google.javascript.rhino.head.Node node24 = nodeItor22.next();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(nodeItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(node24);
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scriptNode0.getParent();
        scriptNode0.setEncodedSource("/");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        int int26 = scriptNode15.getIntProp(6, 2);
        int int27 = scriptNode15.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        int int39 = scriptNode28.getIntProp(6, 2);
        int int40 = scriptNode28.getParamCount();
        scriptNode15.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope45 = scope43.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node46 = scope43.target;
        scope43.setPosition(2);
        scope43.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node51 = scope43.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        scriptNode52.setEncodedSourceEnd(18);
        java.lang.String str57 = scriptNode52.makeIndent((int) '#');
        scope43.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode52);
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        scope60.setPosition(2);
        scope60.putIntProp(17, 25);
        scope60.setLength((int) ' ');
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scope60);
        scriptNode15.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode15.clearParentScope();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode15);
        int int75 = scriptNode0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor76 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(astNode12);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "                                                                      " + "'", str57, "                                                                      ");
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(97, (-366869103));
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        scope18.putIntProp(17, 25);
        scope18.setLength((int) ' ');
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.Object obj33 = scriptNode30.getCompilerData();
        scriptNode30.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode30.getSymbols();
        scope18.setTop(scriptNode30);
        scriptNode30.setRelative(12);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(symbolList37);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = scope1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node7 = scope1.setType(6);
        scope1.setBounds(5, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode(18);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap13 = null;
        scriptNode12.setSymbolTable(strMap13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getEncodedSource();
        scriptNode15.setEncodedSourceEnd(18);
        java.lang.String str20 = scriptNode15.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scriptNode15.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope22 = scriptNode15.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scriptNode23.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope30 = scriptNode23.getParentScope();
        scriptNode23.clearParentScope();
        scriptNode15.target = scriptNode23;
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = scope1.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(functionNode5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                      " + "'", str20, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertNull(scope30);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode26.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        scriptNode42.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = scriptNode42.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol48 = scriptNode46.getSymbol("100\tIFEQ 100 1\n");
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertNull(symbol48);
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        java.lang.String str59 = scriptNode41.shortName();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode41);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode41.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode41.labelId(1487440611);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ScriptNode" + "'", str59, "ScriptNode");
        org.junit.Assert.assertNotNull(functionNodeList61);
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        boolean boolean29 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        comment27.setCommentType(commentType30);
        java.lang.String str33 = comment27.toSource(3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(18);
        scriptNode36.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) scriptNode36, 19);
        comment27.putProp(14, (java.lang.Object) node42);
        int int44 = comment27.depth();
        java.lang.String str45 = comment27.getValue();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "      Scope" + "'", str33, "      Scope");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                    {\n                                    }\n" + "'", str38, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Scope" + "'", str45, "Scope");
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = scriptNode68.getSymbols();
        scriptNode32.setSymbols(symbolList75);
        // The following exception was thrown during execution in test generation
        try {
            scope1.removeChild((com.google.javascript.rhino.head.Node) scriptNode32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertNotNull(symbolList75);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        boolean boolean10 = scope2.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = null;
        scope2.setSymbolTable(strMap11);
        com.google.javascript.rhino.head.ast.Symbol symbol14 = scope2.getSymbol("            ");
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scope2.getChildScopes();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) scope2);
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str27 = comment22.toStringTree(scriptNode23);
        com.google.javascript.rhino.head.Node node29 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode23, node29);
        int int31 = scriptNode23.getRegexpCount();
        scriptNode23.setBaseLineno((int) '#');
        scope2.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.Node node35 = scope2.target;
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(symbol14);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(node35);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode11.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scope33.setJsDocNode(comment42);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        comment42.setCommentType(commentType45);
        scriptNode11.setJsDocNode(comment42);
        com.google.javascript.rhino.head.ast.Scope scope48 = scriptNode11.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = scope48.shortName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(scope48);
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        int int17 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode0.getEnclosingFunction();
        scriptNode0.setEncodedSourceBounds(22, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode0.getTop();
        java.lang.String str23 = scriptNode22.toSource();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = scriptNode22.getParamOrVarName(19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(functionNode18);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        java.lang.Object obj11 = scope2.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope2);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = node12.iterator();
        com.google.javascript.rhino.head.Node node14 = nodeItor13.next();
        boolean boolean15 = nodeItor13.hasNext();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        scriptNode16.setLength(19);
        boolean boolean65 = scriptNode16.hasConsistentReturnUsage();
        scriptNode16.clearParentScope();
        scriptNode16.setEndLineno(19);
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment(6, 53, commentType71, "                                  Scope");
        java.lang.String str74 = comment73.getValue();
        scriptNode16.addChildToBack((com.google.javascript.rhino.head.Node) comment73);
        java.lang.String str76 = comment73.debugPrint();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor77 = comment73.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor77.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                                  Scope" + "'", str74, "                                  Scope");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "6\tCOMMENT 6 53\n" + "'", str76, "6\tCOMMENT 6 53\n");
        org.junit.Assert.assertNotNull(nodeItor77);
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope2.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scope20.setJsDocNode(comment29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode32);
        scriptNode32.setPosition((int) (byte) 0);
        scope2.setTop(scriptNode32);
        int int44 = scriptNode32.getParamCount();
        boolean boolean45 = scriptNode32.hasConsistentReturnUsage();
        boolean boolean46 = scriptNode32.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        int int59 = scriptNode47.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str61 = scriptNode60.getEncodedSource();
        int int62 = scriptNode60.getBaseLineno();
        java.lang.String str63 = scriptNode60.getNextTempName();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        int int65 = scriptNode60.getType();
        java.lang.String str66 = scriptNode60.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode60.getSymbols();
        scriptNode60.flattenSymbolTable(true);
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        com.google.javascript.rhino.head.ast.Scope scope71 = scriptNode60.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(23, (com.google.javascript.rhino.head.Node) scope71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 136 + "'", int65 == 136);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str66, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertNull(scope71);
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.Node node55 = scriptNode26.target;
        scriptNode26.flattenSymbolTable(false);
        java.lang.String str58 = scriptNode26.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump59 = scriptNode26.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str58, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode0.getTop();
        java.lang.String str62 = scriptNode61.shortName();
        int int63 = scriptNode61.getEncodedSourceEnd();
        int int64 = scriptNode61.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ScriptNode" + "'", str62, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        int int4 = scriptNode0.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray5 = scriptNode0.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        com.google.javascript.rhino.head.Node node18 = nodeIterator17.next();
        nodeIterator17.remove();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node20 = nodeIterator17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertNotNull(node18);
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode31.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment47 = scriptNode46.getJsDocNode();
        scriptNode46.flattenSymbolTable(true);
        int int50 = scriptNode46.getLength();
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        int int52 = scriptNode46.getEncodedSourceStart();
        int int53 = scriptNode46.getType();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNull(comment47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 136 + "'", int53 == 136);
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = null;
        scope15.setTop(scriptNode19);
        scriptNode13.target = scope15;
        int int22 = scriptNode13.getEncodedSourceStart();
        scope1.setTop(scriptNode13);
        java.lang.String str25 = scope1.toSource(15);
        int int26 = scope1.getLineno();
        com.google.javascript.rhino.head.Node node27 = scope1.target;
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope29.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        int int44 = scriptNode33.getIntProp(6, 2);
        int int45 = scriptNode33.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope49 = scope47.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node50 = scope47.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scope47.setJsDocNode(comment56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scope47, (com.google.javascript.rhino.head.Node) scriptNode59);
        scriptNode59.setPosition((int) (byte) 0);
        scope29.setTop(scriptNode59);
        int int71 = scriptNode59.getParamCount();
        boolean boolean72 = scriptNode59.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = scriptNode59.getAstRoot();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode59.getSymbols();
        int int75 = scriptNode59.getLength();
        int int76 = scriptNode59.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node77 = scope1.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                              {\n                              }\n" + "'", str25, "                              {\n                              }\n");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(scope49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(astRoot73);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        int int5 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        int int21 = scriptNode19.getBaseLineno();
        java.lang.String str22 = scriptNode19.getNextTempName();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        scriptNode19.setEncodedSourceBounds(9, 2);
        java.lang.String str29 = scriptNode19.toString();
        java.lang.String str30 = scriptNode19.toSource();
        int int31 = scriptNode19.getLength();
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 129 + "'", int5 == 129);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str24, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "136" + "'", str29, "136");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{\n}\n" + "'", str30, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int3 = scriptNode2.getBaseLineno();
        int int4 = scriptNode2.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = scriptNode2.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        java.lang.String str13 = scope7.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = scope7.getSymbolTable();
        boolean boolean15 = scope7.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scope7.target = scriptNode16;
        com.google.javascript.rhino.head.Node node27 = scriptNode16.target;
        scriptNode16.setBaseLineno(10);
        scriptNode16.setEncodedSourceEnd((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList32 = scriptNode16.getSymbols();
        com.google.javascript.rhino.head.Node node33 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode16, node33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(scopeList5);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(symbolList32);
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        com.google.javascript.rhino.head.ast.Scope scope5 = scope2.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope6 = scope5.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertNull(scope5);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = null;
        scriptNode0.setSymbolTable(strMap17);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope20.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode50.setPosition((int) (byte) 0);
        scope20.setTop(scriptNode50);
        int int62 = scriptNode50.getParamCount();
        boolean boolean63 = scriptNode50.hasConsistentReturnUsage();
        boolean boolean64 = scriptNode50.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str79 = scriptNode78.getEncodedSource();
        int int80 = scriptNode78.getBaseLineno();
        java.lang.String str81 = scriptNode78.getNextTempName();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode78);
        int int83 = scriptNode78.getType();
        java.lang.String str84 = scriptNode78.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode78.getSymbols();
        scriptNode78.flattenSymbolTable(true);
        scriptNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode78);
        scriptNode0.setTop(scriptNode78);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node90 = scriptNode0.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "$0" + "'", str81, "$0");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 136 + "'", int83 == 136);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str84, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList85);
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(226035720, 17);
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node16 = scriptNode6.getLastChild();
        int int17 = scriptNode6.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope19.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode49.setPosition((int) (byte) 0);
        scope19.setTop(scriptNode49);
        int int61 = scriptNode49.getParamCount();
        boolean boolean62 = scriptNode49.hasConsistentReturnUsage();
        java.lang.String str63 = scriptNode49.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode49.getSymbols();
        scriptNode6.setSymbols(symbolList64);
        scriptNode6.setEncodedSourceBounds(161, (int) (byte) 1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(symbolList64);
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        scriptNode1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) scriptNode1, 19);
        int int8 = scriptNode1.getType();
        scriptNode1.setRelative(5);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.labelId((-243114478));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 136 + "'", int8 == 136);
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(5, 5);
        com.google.javascript.rhino.head.Node node3 = scope2.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node4 = scope2.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node3);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        scriptNode26.setEncodedSourceEnd(20);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = scriptNode26.getFunctionNode(97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode0.setParentScope(scope17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode21.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope26.setPosition(100);
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        node29.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = node29.spliterator();
        scriptNode21.setCompilerData((java.lang.Object) node29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) comment60);
        java.lang.String str62 = scriptNode21.toStringTree(scriptNode44);
        int int63 = scriptNode44.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode64.setEndLineno(18);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode64);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        int int80 = scriptNode0.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = scriptNode0.getParamOrVarName(161);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode5.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope10.setPosition(100);
        com.google.javascript.rhino.head.Node node13 = scope10.getLastSibling();
        node13.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = node13.spliterator();
        scriptNode5.setCompilerData((java.lang.Object) node13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = scriptNode5.toStringTree(scriptNode28);
        java.lang.String str47 = scriptNode28.toString();
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newString(19, "                    Scope");
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, node50, 12);
        com.google.javascript.rhino.head.Node node53 = scriptNode28.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray54 = scriptNode28.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(node53);
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("                                              Scope");
        java.lang.String str3 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        boolean boolean39 = scope27.hasChildren();
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope27);
        scriptNode20.setEncodedSourceEnd((-547629399));
        scriptNode20.setEncodedSourceBounds(1, (-366869103));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode6.getTop();
        scriptNode15.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        scope78.setPosition(2);
        scope78.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope78);
        node4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        scriptNode34.setEncodedSourceBounds(14, 24);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator91 = scriptNode34.new NodeIterator();
        boolean boolean92 = nodeIterator91.hasNext();
        boolean boolean93 = nodeIterator91.hasNext();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node12 = scriptNode5.setType(16);
        int int13 = scriptNode5.getLength();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = scope15.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getParamCount();
        java.lang.String str33 = scriptNode20.debugPrint();
        scope15.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode20);
        scriptNode5.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode20);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump36 = scriptNode20.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(astRoot19);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str33, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = scriptNode13.getSymbolTable();
        java.lang.String str28 = scriptNode13.getSourceName();
        scriptNode13.setEncodedSourceStart(21);
        com.google.javascript.rhino.head.ast.Scope scope31 = scriptNode13.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            scope31.setLineno((-53));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(scope31);
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("      Scope");
        com.google.javascript.rhino.head.ast.Scope scope2 = node1.getScope();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(scope2);
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.setSourceName("-1\t  SCRIPT -53 1\n");
        int int5 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope10 = scope8.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node11 = scope8.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scope8.setJsDocNode(comment17);
        java.lang.String str21 = comment17.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = node22.new NodeIterator();
        com.google.javascript.rhino.head.Node node24 = nodeIterator23.next();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getRegexpCount();
        java.lang.String str38 = scriptNode25.getSourceName();
        java.lang.String str39 = node24.toStringTree(scriptNode25);
        scriptNode25.setBounds((-1), 26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        int int54 = scriptNode43.getIntProp(6, 2);
        int int55 = scriptNode43.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        int int58 = scriptNode56.getBaseLineno();
        java.lang.String str59 = scriptNode56.getNextTempName();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        java.lang.String str61 = scriptNode56.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        scriptNode56.setSymbols(symbolList69);
        int int71 = scriptNode56.getRegexpCount();
        int int72 = scriptNode56.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        int int84 = scriptNode73.getIntProp(6, 2);
        int int85 = scriptNode73.getRegexpCount();
        scriptNode73.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode73.setLineno((int) '#');
        int int90 = scriptNode73.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode91 = scriptNode73.getEnclosingFunction();
        int int92 = scriptNode73.getFunctionCount();
        scriptNode56.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode73);
        scriptNode25.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode56);
        scriptNode2.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node97 = new com.google.javascript.rhino.head.Node((int) (byte) 1, node1, (com.google.javascript.rhino.head.Node) scriptNode2, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                    Scope" + "'", str21, "                    Scope");
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str61, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 35 + "'", int90 == 35);
        org.junit.Assert.assertNull(functionNode91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int3 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode2.getDefiningScope("51\t    SCRIPT 52 1\n");
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode2, 129);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode2.setDouble((double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope5);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode16.getEncodedSourceStart();
        scriptNode16.setLineno(1);
        int int28 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = scriptNode30.getTop();
        scriptNode39.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int44 = scriptNode43.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        scriptNode45.setEncodedSourceEnd(18);
        scriptNode43.target = scriptNode45;
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode78.getSymbols();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope66, (com.google.javascript.rhino.head.Node) scriptNode78);
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList88 = scriptNode52.getSymbols();
        scriptNode16.setSymbols(symbolList88);
        scriptNode0.setSymbols(symbolList88);
        scriptNode0.setRelative(0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertNotNull(symbolList88);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scope2.removeProp(13);
        // The following exception was thrown during execution in test generation
        try {
            scope2.setString("      Scope");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType4, "{\n}\n");
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment6, (-53));
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str12 = scope10.makeIndent(0);
        int int15 = scope10.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope17.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        int int32 = scriptNode21.getIntProp(6, 2);
        int int33 = scriptNode21.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope37 = scope35.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node38 = scope35.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scope35.setJsDocNode(comment44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode47.getSymbols();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope35, (com.google.javascript.rhino.head.Node) scriptNode47);
        scriptNode47.setPosition((int) (byte) 0);
        scope17.setTop(scriptNode47);
        int int59 = scriptNode47.getParamCount();
        scope10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = scriptNode61.getTop();
        java.lang.String str71 = scriptNode70.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        scriptNode72.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = scriptNode72.getTop();
        java.lang.String str82 = scriptNode81.shortName();
        scriptNode70.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode81);
        java.lang.String str84 = scope10.toStringTree(scriptNode70);
        comment6.addChildrenToFront((com.google.javascript.rhino.head.Node) scope10);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scope10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ScriptNode" + "'", str71, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ScriptNode" + "'", str82, "ScriptNode");
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment8 = scriptNode0.getJsDocNode();
        int int11 = scriptNode0.getIntProp(0, (int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope15 = scope13.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node16 = scope13.target;
        scope13.setPosition(2);
        java.lang.String str19 = scope13.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap20 = scope13.getSymbolTable();
        boolean boolean21 = scope13.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scope13.target = scriptNode22;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.Object obj36 = scriptNode33.getCompilerData();
        scriptNode33.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode33.setSymbolTable(strMap39);
        java.lang.String str42 = scriptNode33.toSource((int) 'a');
        scriptNode22.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode33);
        com.google.javascript.rhino.head.ast.Scope scope44 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode33);
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList46 = scriptNode0.getChildScopes();
        org.junit.Assert.assertNull(comment8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 97 + "'", int11 == 97);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str42, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNotNull(scope44);
        org.junit.Assert.assertNull(scopeList46);
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode52.setPosition((int) (byte) 0);
        scriptNode52.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        java.lang.String str78 = scriptNode65.debugPrint();
        int int81 = scriptNode65.getIntProp(17, 10);
        scriptNode52.setTop(scriptNode65);
        scriptNode52.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node85 = scriptNode52.getLastChild();
        scriptNode9.setTop(scriptNode52);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node87 = scriptNode9.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str78, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNull(node85);
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        java.lang.String str45 = scriptNode31.getEncodedSource();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        scriptNode53.setEncodedSourceEnd(18);
        java.lang.String str57 = comment52.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.Node node59 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode53, node59);
        scriptNode53.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str72 = scriptNode63.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope74.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope74, (int) (byte) 10);
        java.lang.String str80 = scriptNode53.getNextTempName();
        java.lang.String str81 = scriptNode31.toStringTree(scriptNode53);
        scriptNode53.setPosition(0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = null;
        scope1.setTop(scriptNode5);
        scope1.setBounds(7, 17);
        int int10 = scope1.getPosition();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setPosition(2);
        scope12.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node20 = scope12.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        scriptNode21.setEncodedSourceEnd(18);
        java.lang.String str26 = scriptNode21.makeIndent((int) '#');
        scope12.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        scope29.setPosition(2);
        scope29.putIntProp(17, 25);
        scope29.setLength((int) ' ');
        scriptNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        int int43 = scriptNode41.getBaseLineno();
        java.lang.Object obj44 = scriptNode41.getCompilerData();
        scriptNode41.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList48 = scriptNode41.getSymbols();
        scope29.setTop(scriptNode41);
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope29);
        scope1.removeProp((int) (byte) 100);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor53 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope1.visit(nodeVisitor53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                      " + "'", str26, "                                                                      ");
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(symbolList48);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 20);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(53, 53, commentType2, "                  Scope");
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment(8, 0, commentType7, "                        {\n                        }\n");
        comment4.addChildToBack((com.google.javascript.rhino.head.Node) comment9);
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType14, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        java.lang.String str22 = scriptNode17.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment16, (com.google.javascript.rhino.head.Node) scriptNode17);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node24 = comment9.getChildBefore(node23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                                                      " + "'", str22, "                                                                      ");
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        java.lang.String str8 = scriptNode0.getNextTempName();
        int int9 = scriptNode0.getType();
        com.google.javascript.rhino.head.Node node11 = scriptNode0.setType(0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode0.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 136 + "'", int9 == 136);
        org.junit.Assert.assertNotNull(node11);
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        java.lang.String str52 = scriptNode38.getNextTempName();
        int int53 = scriptNode38.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        int int56 = scriptNode54.getBaseLineno();
        java.lang.Object obj57 = scriptNode54.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.lang.String str66 = scriptNode58.toSource(26);
        scriptNode54.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        scriptNode58.setEncodedSourceBounds((int) '#', 7);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode38.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 136 + "'", int53 == 136);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                                                    {\n                                                    }\n" + "'", str66, "                                                    {\n                                                    }\n");
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = scriptNode1.getParamOrVarName((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList2);
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 100.0f);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        scriptNode1.target = scriptNode3;
        scriptNode3.setEncodedSourceBounds((int) (byte) -1, 11);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode3.labelId((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            int int31 = scriptNode11.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        int int23 = scriptNode0.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        scope26.setPosition(2);
        scope26.putIntProp(17, 25);
        scope26.setLength((int) ' ');
        scriptNode0.replaceWith(scope26);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump38 = scriptNode0.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode2.getSymbols();
        java.lang.String str10 = scriptNode2.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode11.getEncodedSource();
        com.google.javascript.rhino.head.Node node13 = scriptNode11.getLastSibling();
        scriptNode11.setEncodedSource("Scope");
        scriptNode11.setEndLineno(100);
        scriptNode2.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope20.putProp(25, (java.lang.Object) 100L);
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) scope20);
        com.google.javascript.rhino.head.Node node25 = scriptNode2.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        int int41 = scriptNode39.getBaseLineno();
        java.lang.String str42 = scriptNode39.getNextTempName();
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        scriptNode39.setEncodedSource("                        ");
        int int46 = scriptNode39.getLineno();
        scriptNode2.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode39);
        int int48 = scriptNode2.getLineno();
        int int49 = scriptNode2.getRegexpCount();
        scriptNode2.setEncodedSourceStart((-613442063));
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList52 = scriptNode2.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node56 = scope55.getLastSibling();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode2, node56);
        boolean boolean58 = node57.hasChildren();
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str10, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "$0" + "'", str42, "$0");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(astNodeList52);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope3.setPosition(100);
        com.google.javascript.rhino.head.Node node6 = scope3.getLastSibling();
        node6.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = node6.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = null;
        scriptNode25.setSymbols(symbolList31);
        node6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str34 = scriptNode1.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        int int50 = scriptNode48.getBaseLineno();
        java.lang.String str51 = scriptNode48.getNextTempName();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode25, (com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        scope55.setPosition(2);
        java.lang.String str61 = scope55.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap62 = scope55.getSymbolTable();
        boolean boolean63 = scope55.hasChildren();
        com.google.javascript.rhino.head.Node node64 = scope55.getNext();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        java.lang.String str79 = comment75.toSource((int) (short) 10);
        scope55.setJsDocNode(comment75);
        scriptNode25.addChildToBack((com.google.javascript.rhino.head.Node) comment75);
        com.google.javascript.rhino.head.Token.CommentType commentType82 = comment75.getCommentType();
        java.lang.String str83 = comment75.debugPrint();
        java.lang.String str85 = comment75.toSource(100);
        comment75.putIntProp(220850805, 1);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "                    Scope" + "'", str79, "                    Scope");
        org.junit.Assert.assertNull(commentType82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str83, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str85, "                                                                                                                                                                                                        Scope");
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        scope1.setPosition(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode24 = scriptNode12.getParent();
        scope1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode12.labelId((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(astNode24);
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        int int56 = scriptNode26.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump57 = scriptNode26.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        java.lang.Object obj11 = scope2.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope2);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        java.lang.String str20 = scope14.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = scope14.getSymbolTable();
        boolean boolean22 = scope14.hasChildren();
        com.google.javascript.rhino.head.Node node23 = scope14.getNext();
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList25 = scope2.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode28.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope33.setPosition(100);
        com.google.javascript.rhino.head.Node node36 = scope33.getLastSibling();
        node36.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = node36.spliterator();
        scriptNode28.setCompilerData((java.lang.Object) node36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = scriptNode42.getTop();
        scriptNode51.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int56 = scriptNode55.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getEncodedSource();
        scriptNode57.setEncodedSourceEnd(18);
        scriptNode55.target = scriptNode57;
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scriptNode57);
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) comment67);
        java.lang.String str69 = scriptNode28.toStringTree(scriptNode51);
        int int70 = scriptNode51.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scriptNode71.setEncodedSourceStart((int) (byte) 100);
        int int82 = scriptNode71.getIntProp(6, 2);
        scriptNode71.setEndLineno(18);
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scriptNode71);
        int int86 = scriptNode71.getEncodedSourceStart();
        java.lang.Object obj88 = scriptNode71.getProp(2);
        com.google.javascript.rhino.head.Node node89 = scriptNode71.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList90 = scriptNode71.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            scope2.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(scopeList25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(node89);
        org.junit.Assert.assertNotNull(astNodeList90);
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        int int19 = scriptNode14.getType();
        java.lang.String str20 = scriptNode14.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode14.getSymbols();
        int int22 = scriptNode14.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        int int38 = scriptNode36.getBaseLineno();
        java.lang.String str39 = scriptNode36.getNextTempName();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode36);
        int int43 = scriptNode14.getType();
        java.lang.String str44 = scriptNode14.toSource();
        int int45 = scriptNode14.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 136 + "'", int19 == 136);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str20, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str41, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 136 + "'", int43 == 136);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{\n}\n" + "'", str44, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 51 + "'", int45 == 51);
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.lang.String str14 = comment10.toSource((int) (byte) 100);
        com.google.javascript.rhino.head.Token.CommentType commentType15 = comment10.getCommentType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor16 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment10.visit(nodeVisitor16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str14, "                                                                                                                                                                                                        Scope");
        org.junit.Assert.assertNull(commentType15);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        int int37 = scriptNode27.getAbsolutePosition();
        scriptNode27.setPosition(17);
        scriptNode27.removeChildren();
        java.lang.String str41 = scriptNode27.debugPrint();
        java.lang.String str42 = scriptNode27.shortName();
        scriptNode27.setEncodedSourceBounds(12, (-389829193));
        java.lang.Class<?> wildcardClass46 = scriptNode27.getClass();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "69\t  SCRIPT 17 1\n" + "'", str41, "69\t  SCRIPT 17 1\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ScriptNode" + "'", str42, "ScriptNode");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node12 = scriptNode5.setType(16);
        scriptNode5.setBaseLineno(97);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList15 = scriptNode5.getStatements();
        boolean boolean16 = scriptNode5.hasConsistentReturnUsage();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(astNodeList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode0.getChildScopes();
        java.lang.String str12 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                      " + "'", str12, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEndLineno(14);
        boolean boolean10 = scriptNode1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap51 = null;
        scriptNode38.setSymbolTable(strMap51);
        java.lang.Object obj54 = scriptNode38.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode38.getChildScopes();
        int int56 = scriptNode38.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        int int60 = scope59.depth();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope59, 8);
        scope59.setLength(908331048);
        java.lang.String str65 = scope59.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        int int77 = scriptNode66.getIntProp(6, 2);
        int int78 = scriptNode66.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str80 = scriptNode79.getEncodedSource();
        int int81 = scriptNode79.getBaseLineno();
        java.lang.String str82 = scriptNode79.getNextTempName();
        scriptNode66.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        com.google.javascript.rhino.head.ast.Scope scope86 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int87 = scope86.depth();
        scriptNode66.replaceWith(scope86);
        com.google.javascript.rhino.head.Token.CommentType commentType91 = null;
        com.google.javascript.rhino.head.ast.Comment comment93 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType91, "Scope");
        java.lang.String str94 = comment93.getValue();
        scriptNode66.setJsDocNode(comment93);
        int int96 = scriptNode66.getPosition();
        com.google.javascript.rhino.head.Node node97 = new com.google.javascript.rhino.head.Node(371991955, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope59, (com.google.javascript.rhino.head.Node) scriptNode66);
        scriptNode66.flattenSymbolTable(false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "$0" + "'", str82, "$0");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Scope" + "'", str94, "Scope");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-53) + "'", int96 == (-53));
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(17, 213295120);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope2.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        int int68 = scriptNode23.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            int int69 = scriptNode23.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(21);
        int int2 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstNode astNode3 = scriptNode1.getParent();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(astNode3);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList28 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment29 = scriptNode0.getJsDocNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode0.getSymbols();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(astNodeList28);
        org.junit.Assert.assertNull(comment29);
        org.junit.Assert.assertNotNull(symbolList30);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType2, "hi!");
        comment4.removeChildren();
        java.lang.String str6 = comment4.getValue();
        java.lang.String str8 = comment4.toSource((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = comment4.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                    hi!" + "'", str8, "                    hi!");
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode13.setEncodedSourceStart((int) (byte) 1);
        scriptNode13.setEncodedSource("                                                                                                                                                                                                        Scope");
        int int31 = scriptNode13.depth();
        java.lang.String str32 = scriptNode13.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope33 = scriptNode13.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str32, "                                                                                                                                                                                                        Scope");
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode3.getEncodedSourceStart();
        int int13 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode58, 26);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node54, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode58);
        node70.setLineno(5);
        scriptNode14.setCompilerData((java.lang.Object) node70);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode3, node70);
        scriptNode3.setEncodedSource("                        {\n                        }\n");
        boolean boolean77 = scriptNode3.hasConsistentReturnUsage();
        java.lang.String str78 = scriptNode3.getNextTempName();
        scriptNode3.setEncodedSourceStart(15);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$0" + "'", str78, "$0");
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scope3.setJsDocNode(comment12);
        java.lang.String str16 = comment12.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment12);
        comment12.setLength(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment28 = scriptNode20.getJsDocNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = scriptNode20.spliterator();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) comment12, (com.google.javascript.rhino.head.Node) scriptNode20, 129);
        int int32 = scriptNode20.getEncodedSourceStart();
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                    Scope" + "'", str16, "                    Scope");
        org.junit.Assert.assertNull(comment28);
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.Object obj42 = scriptNode26.getProp((int) (short) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol44 = scriptNode26.getSymbol("                    Scope");
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope46.setPosition(100);
        com.google.javascript.rhino.head.Node node49 = scope46.getLastSibling();
        node49.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator51 = node49.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scriptNode53.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = scriptNode53.getTop();
        scriptNode62.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int67 = scriptNode66.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        scriptNode68.setEncodedSourceEnd(18);
        scriptNode66.target = scriptNode68;
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode62, (com.google.javascript.rhino.head.Node) scriptNode68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = null;
        scriptNode68.setSymbols(symbolList74);
        node49.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode68);
        scriptNode68.setBaseLineno(26);
        int int79 = scriptNode68.getLength();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor80 = scriptNode68.iterator();
        scriptNode26.setTop(scriptNode68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = scriptNode26.getParamOrVarName((-613442063));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(symbol44);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(nodeSpliterator51);
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(nodeItor80);
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode0.getChildScopes();
        scriptNode0.flattenSymbolTable(false);
        scriptNode0.setLength(17);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setString("13");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(scopeList10);
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        int int19 = scriptNode1.getEndLineno();
        int int20 = scriptNode1.getEncodedSourceEnd();
        java.lang.String str22 = scriptNode1.toSource((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode24);
        scriptNode24.setRelative(8);
        int int28 = scriptNode24.getBaseLineno();
        scriptNode1.setTop(scriptNode24);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((-2), (com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int32 = scriptNode24.addFunction(functionNode31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n{\n}\n}\n" + "'", str22, "{\n{\n}\n}\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump13 = scope1.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        scriptNode1.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode34.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str38 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scope40.iterator();
        boolean boolean53 = scope40.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope40, 8);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scriptNode34.spliterator();
        int int57 = scriptNode34.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            int int58 = scriptNode34.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ScriptNode" + "'", str38, "ScriptNode");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        int int46 = scriptNode44.getBaseLineno();
        java.lang.Object obj47 = scriptNode44.getCompilerData();
        scriptNode44.setEncodedSourceBounds((int) '4', 0);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        java.lang.String str52 = scriptNode0.toSource();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        scope54.setPosition(2);
        scope54.setLength((int) (byte) 1);
        java.lang.Object obj63 = scope54.getProp((int) 'a');
        java.lang.String str64 = scope54.debugPrint();
        scope54.removeChildren();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, scope54);
        java.lang.Class<?> wildcardClass67 = scope54.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "2\tBLOCK 2 1\n" + "'", str64, "2\tBLOCK 2 1\n");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 23);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        boolean boolean5 = scriptNode1.hasSideEffects();
        int int6 = scriptNode1.depth();
        scriptNode1.setBounds(1487440633, 23);
        java.lang.Object obj10 = scriptNode1.getCompilerData();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        java.lang.Object obj11 = scope2.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope2);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = node12.iterator();
        com.google.javascript.rhino.head.Node node14 = nodeItor13.next();
        nodeItor13.remove();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node16 = nodeItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertNotNull(node14);
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        java.lang.String str23 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.ast.Symbol symbol25 = scriptNode16.getSymbol("  ");
        int int28 = scriptNode16.getIntProp((int) (byte) 10, 161);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = scriptNode16.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator29.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(symbol25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 161 + "'", int28 == 161);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        boolean boolean24 = nodeIterator17.hasNext();
        boolean boolean25 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node28 = nodeIterator17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.Node node52 = comment49.getFirstChild();
        scriptNode17.setJsDocNode(comment49);
        com.google.javascript.rhino.head.Node node55 = com.google.javascript.rhino.head.Node.newString("      Scope");
        // The following exception was thrown during execution in test generation
        try {
            int int56 = scriptNode17.getIndexForNameNode(node55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(node55);
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node3 = scope2.getLastSibling();
        boolean boolean4 = node3.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode17 = scriptNode5.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str23 = scriptNode18.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int40 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        scriptNode39.target = scriptNode41;
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) comment51);
        int int53 = scriptNode35.depth();
        int int54 = scriptNode35.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor55 = scriptNode35.iterator();
        scriptNode18.setTop(scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int68 = scriptNode57.getIntProp(6, 2);
        int int69 = scriptNode57.getParamCount();
        java.lang.String str70 = scriptNode57.debugPrint();
        scriptNode57.setPosition(8);
        int int73 = scriptNode57.getParamCount();
        scriptNode57.setPosition((int) (byte) 10);
        scriptNode35.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        java.lang.Object obj77 = scriptNode35.getCompilerData();
        node3.addChildAfter((com.google.javascript.rhino.head.Node) astNode17, (com.google.javascript.rhino.head.Node) scriptNode35);
        java.lang.String str79 = scriptNode35.debugPrint();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(astNode17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                                                                      " + "'", str23, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(nodeItor55);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str70, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "58\t  SCRIPT 6 1\n62\t  SCRIPT 10 1\n" + "'", str79, "58\t  SCRIPT 6 1\n62\t  SCRIPT 10 1\n");
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        int int2 = scriptNode1.getEndLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str26 = scriptNode17.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scope28, (int) (byte) 10);
        com.google.javascript.rhino.head.Node node34 = scriptNode17.getLastChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scope51.setJsDocNode(comment60);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode63.getSymbols();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.Node node73 = scriptNode37.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node75 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode37, node75, 13);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = scriptNode17.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(node75);
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str36 = scriptNode27.getSourceName();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode27, 26);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node23, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode27);
        com.google.javascript.rhino.head.Node node40 = node23.getNext();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (short) 0, node40);
        java.lang.String str42 = node41.getJsDoc();
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 11, commentType2, "hi!");
        boolean boolean5 = comment4.hasChildren();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator6 = comment4.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node7 = nodeIterator6.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int3 = scope2.getLength();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        java.lang.String str19 = comment15.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment15);
        java.lang.Object obj22 = comment15.getProp((int) (short) -1);
        java.lang.String str24 = comment15.makeIndent((int) (short) -1);
        scope2.setJsDocNode(comment15);
        com.google.javascript.rhino.head.Node node26 = scope2.target;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                    Scope" + "'", str19, "                    Scope");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(node26);
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        scriptNode4.clearParentScope();
        int int15 = scriptNode4.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode17.getSymbols();
        java.lang.String str25 = scriptNode17.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        int int38 = scriptNode27.getIntProp(6, 2);
        int int39 = scriptNode27.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode53.getSymbols();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) scriptNode53);
        scriptNode53.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node64 = scriptNode53.target;
        scriptNode53.setBounds(16, 13);
        scriptNode53.clearParentScope();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode53, 3);
        int int71 = scriptNode17.depth();
        scriptNode4.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot73 = scriptNode17.getAstRoot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str25, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNull(astRoot73);
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        int int38 = scriptNode36.getBaseLineno();
        java.lang.String str39 = scriptNode36.getNextTempName();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str47 = scope45.toSource(12);
        scope45.setRelative(1);
        scriptNode36.putProp(17, (java.lang.Object) 1);
        scriptNode10.target = scriptNode36;
        int int52 = scriptNode10.getEncodedSourceEnd();
        int int53 = scriptNode10.getBaseLineno();
        int int54 = scriptNode10.depth();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral55 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode10.addRegExp(regExpLiteral55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str41, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                        {\n                        }\n" + "'", str47, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 51");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode26.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        scriptNode42.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Node node46 = scriptNode42.target;
        com.google.javascript.rhino.head.Node node47 = scriptNode42.getFirstChild();
        java.lang.String str48 = scriptNode42.toSource();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator49 = scriptNode42.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump50 = scriptNode42.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{\n}\n" + "'", str48, "{\n}\n");
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        java.lang.Object obj11 = scope2.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope2);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        java.lang.String str20 = scope14.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = scope14.getSymbolTable();
        boolean boolean22 = scope14.hasChildren();
        com.google.javascript.rhino.head.Node node23 = scope14.getNext();
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope14);
        // The following exception was thrown during execution in test generation
        try {
            double double25 = scope14.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(node23);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        java.lang.String str44 = scriptNode0.getSourceName();
        java.lang.String str45 = scriptNode0.getNextTempName();
        int int46 = scriptNode0.getEndLineno();
        java.lang.String str47 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral48 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.addRegExp(regExpLiteral48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getPosition();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str26 = scope24.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str39 = scriptNode30.getSourceName();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode30, 26);
        scriptNode28.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode30);
        java.lang.String str43 = scriptNode28.getNextTempName();
        scope24.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        int int45 = scriptNode28.getLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.setSourceName("-1\t  SCRIPT -53 1\n");
        int int50 = scriptNode47.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getEncodedSource();
        scriptNode51.setEncodedSourceEnd(18);
        java.lang.String str56 = scriptNode51.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = scriptNode59.getTop();
        scriptNode68.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int73 = scriptNode72.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str75 = scriptNode74.getEncodedSource();
        scriptNode74.setEncodedSourceEnd(18);
        scriptNode72.target = scriptNode74;
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) scriptNode74);
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) comment84);
        int int86 = scriptNode68.depth();
        int int87 = scriptNode68.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor88 = scriptNode68.iterator();
        scriptNode51.setTop(scriptNode68);
        com.google.javascript.rhino.head.ast.Symbol symbol91 = scriptNode51.getSymbol("                        {\n                        }\n");
        java.lang.String str92 = scriptNode51.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode10.replaceChildAfter((com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scriptNode51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-53) + "'", int22 == (-53));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                                                                      " + "'", str56, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(nodeItor88);
        org.junit.Assert.assertNull(symbol91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "$0" + "'", str92, "$0");
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = scriptNode0.iterator();
        java.lang.String str11 = scriptNode0.debugPrint();
        java.lang.String str12 = scriptNode0.getSourceName();
        boolean boolean13 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope14 = scriptNode0.getParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor15 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope14.visit(nodeVisitor15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str11, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(scope14);
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = null;
        scope1.setSymbolTable(strMap10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        int int20 = scope14.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope21 = scope14.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope14.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        scope24.setPosition(2);
        int int30 = scope24.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope31 = scope24.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope24.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.Object obj36 = scriptNode33.getCompilerData();
        scriptNode33.flattenSymbolTable(false);
        scope14.addChildAfter((com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int40 = scriptNode33.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str46 = scriptNode41.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        scriptNode41.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        boolean boolean57 = scriptNode41.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = scriptNode41.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        scope1.putProp(161, (java.lang.Object) scriptNode41);
        java.lang.String str62 = scope1.toSource((int) (byte) 10);
        scope1.setRelative((int) (short) 0);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                      " + "'", str46, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                    {\n                    }\n" + "'", str62, "                    {\n                    }\n");
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope1.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        int int47 = scriptNode45.getBaseLineno();
        java.lang.String str48 = scriptNode45.getNextTempName();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        int int50 = scriptNode32.getEndLineno();
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        scope1.setPosition(20);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }
}
