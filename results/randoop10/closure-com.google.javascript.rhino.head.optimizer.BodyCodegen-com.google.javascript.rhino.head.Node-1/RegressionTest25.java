import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest25 {

    public static boolean debug = false;

    @Test
    public void test12501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12501");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = scriptNode13.getSymbolTable();
        java.lang.String str28 = scriptNode13.getSourceName();
        int int29 = scriptNode13.getBaseLineno();
        int int30 = scriptNode13.getLength();
        java.lang.String str31 = scriptNode13.toSource();
        java.lang.String str32 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.Node node33 = scriptNode13.getNext();
        int int34 = scriptNode13.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{\n}\n" + "'", str31, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test12502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12502");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        int int25 = scriptNode0.getLineno();
        int int26 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = null;
        scope29.setTop(scriptNode33);
        scriptNode27.target = scope29;
        int int36 = scriptNode27.getEncodedSourceStart();
        int int37 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        scriptNode27.setLength(213295120);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 53 + "'", int26 == 53);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
    }

    @Test
    public void test12503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12503");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-992272926));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test12504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12504");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int12 = scriptNode9.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope14.setPosition(100);
        com.google.javascript.rhino.head.Node node17 = scope14.getLastSibling();
        node17.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = node17.spliterator();
        scriptNode9.setCompilerData((java.lang.Object) node17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        scriptNode36.target = scriptNode38;
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment48);
        java.lang.String str50 = scriptNode9.toStringTree(scriptNode32);
        scope1.setTop(scriptNode32);
        scope1.setLineno((int) (short) -1);
        int int54 = scope1.getPosition();
        com.google.javascript.rhino.head.ast.Symbol symbol55 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope1.putSymbol(symbol55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
    }

    @Test
    public void test12505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12505");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        com.google.javascript.rhino.head.Node node9 = scope2.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        java.lang.String str25 = comment21.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment21);
        java.lang.Object obj28 = comment21.getProp((int) (short) -1);
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        comment21.setCommentType(commentType29);
        java.lang.String str32 = comment21.makeIndent((-1805289491));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(917696443, node9, (com.google.javascript.rhino.head.Node) comment21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    Scope" + "'", str25, "                    Scope");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test12506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12506");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode16.getSymbol("                                                                                                                                                                                                        Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        scriptNode78.setEncodedSourceStart((int) (byte) 100);
        int int89 = scriptNode78.getIntProp(6, 2);
        int int90 = scriptNode78.getParamCount();
        scriptNode65.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = scriptNode65.getTop();
        java.lang.String str93 = scriptNode65.shortName();
        scriptNode16.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode65);
        com.google.javascript.rhino.head.ast.Scope scope95 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode65);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(scriptNode92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "ScriptNode" + "'", str93, "ScriptNode");
        org.junit.Assert.assertNotNull(scope95);
    }

    @Test
    public void test12507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12507");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode16.getSymbol("                                                                                                                                                                                                        Scope");
        int int65 = scriptNode16.getFunctionCount();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap66 = scriptNode16.getSymbolTable();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = scriptNode16.getChildScopes();
        int int68 = scriptNode16.getEndLineno();
        java.lang.String str69 = scriptNode16.debugPrint();
        com.google.javascript.rhino.head.Node node70 = scriptNode16.target;
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(scopeList67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str69, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNull(node70);
    }

    @Test
    public void test12508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12508");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        boolean boolean8 = scope1.hasSideEffects();
        int int9 = scope1.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str20 = scriptNode11.getSourceName();
        int int21 = scriptNode11.getFunctionCount();
        scope1.putProp(19, (java.lang.Object) scriptNode11);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scriptNode11.iterator();
        boolean boolean24 = nodeItor23.hasNext();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 129 + "'", int9 == 129);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test12509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12509");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = scope1.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        int int21 = scriptNode10.getIntProp(6, 2);
        int int22 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode36.getSymbols();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setPosition((int) (byte) 0);
        scriptNode36.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str50 = scriptNode36.makeIndent(0);
        boolean boolean51 = scriptNode36.hasSideEffects();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.Node node53 = scriptNode36.getLastSibling();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node53);
    }

    @Test
    public void test12510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12510");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode2.getDefiningScope("                                                    {\n                                                    }\n");
        java.lang.String str5 = scriptNode2.toSource();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        scope20.setPosition(2);
        scope20.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node28 = scope20.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        java.lang.String str34 = scriptNode29.makeIndent((int) '#');
        scope20.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope7, (com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope37 = scope7.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        int int49 = scriptNode38.getIntProp(6, 2);
        int int50 = scriptNode38.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getEncodedSource();
        int int53 = scriptNode51.getBaseLineno();
        java.lang.String str54 = scriptNode51.getNextTempName();
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        int int56 = scriptNode38.getEndLineno();
        scope7.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode38);
        int int59 = scriptNode2.getAbsolutePosition();
        scriptNode2.setBounds((-389829193), (-824625719));
        boolean boolean63 = scriptNode2.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(960854933, (com.google.javascript.rhino.head.Node) scriptNode2);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{\n}\n" + "'", str5, "{\n}\n");
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                      " + "'", str34, "                                                                      ");
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test12511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12511");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode17.setEncodedSourceEnd(11);
        java.lang.String str25 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str29 = scriptNode17.getEncodedSource();
        com.google.javascript.rhino.head.Node node30 = scriptNode17.target;
        int int31 = scriptNode17.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap32 = null;
        scriptNode17.setSymbolTable(strMap32);
        scriptNode17.setEncodedSourceBounds(58, (int) (byte) -1);
        int int37 = scriptNode17.getPosition();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str29, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test12512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12512");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(100);
        com.google.javascript.rhino.head.Node node2 = scriptNode1.getLastSibling();
        int int3 = node2.getType();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 136 + "'", int3 == 136);
    }

    @Test
    public void test12513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12513");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode4.getSymbol("/");
        scriptNode4.setRelative(25);
        int int19 = scriptNode4.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.clearParentScope();
        scriptNode27.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node38 = scriptNode27.target;
        scriptNode27.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getEncodedSource();
        scriptNode40.setEncodedSourceEnd(18);
        java.lang.String str45 = scriptNode40.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        scriptNode40.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode27, (com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap57 = scriptNode40.getSymbolTable();
        scope26.setSymbolTable(strMap57);
        scriptNode20.setSymbolTable(strMap57);
        scriptNode4.setSymbolTable(strMap57);
        scriptNode4.setEndLineno(135357821);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-25) + "'", int19 == (-25));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                                                                      " + "'", str45, "                                                                      ");
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test12514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12514");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setRelative(8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(18);
        java.lang.Object obj8 = scriptNode5.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        int int21 = scriptNode10.getIntProp(6, 2);
        int int22 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode36.getSymbols();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node47 = scriptNode36.target;
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        java.lang.String str49 = scriptNode5.getEncodedSource();
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        scriptNode5.setBaseLineno(1487440633);
        java.lang.String str53 = scriptNode5.debugPrint();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                    {\n                                    }\n" + "'", str7, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str53, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test12515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12515");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(170200694, (-547629399));
    }

    @Test
    public void test12516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12516");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope24 = scope22.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node25 = scope22.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scope22.setJsDocNode(comment31);
        boolean boolean34 = scope22.hasChildren();
        boolean boolean35 = scope22.hasChildren();
        com.google.javascript.rhino.head.Node node36 = scope22.getFirstChild();
        scope1.target = scope22;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = scope22.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(node36);
    }

    @Test
    public void test12517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12517");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        java.lang.Object obj4 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scope20.setJsDocNode(comment29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode32);
        scriptNode32.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node43 = scriptNode32.target;
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        int int45 = scriptNode32.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope50 = scriptNode47.getDefiningScope("51\t    SCRIPT 52 1\n");
        boolean boolean51 = scriptNode47.hasChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scriptNode47.iterator();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode47);
        int int54 = scriptNode32.getLineno();
        int int55 = scriptNode32.depth();
        java.lang.String str56 = scriptNode32.getEncodedSource();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scope50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test12518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12518");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        boolean boolean45 = scriptNode31.hasChildren();
        int int46 = scriptNode31.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = scriptNode31.getTop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = scriptNode47.getRegexpFlags(1670905977);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
    }

    @Test
    public void test12519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12519");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceStart((int) ' ');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode16.getChildScopes();
        int int25 = scriptNode16.getPosition();
        scriptNode16.setEncodedSourceBounds((int) (short) -1, 26);
        scriptNode16.setBaseLineno(26);
        int int31 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.Node node32 = scriptNode16.getNext();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(node32);
    }

    @Test
    public void test12520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12520");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode13.setEncodedSourceStart((int) (byte) 1);
        scriptNode13.setEncodedSource("                                                                                                                                                                                                        Scope");
        int int31 = scriptNode13.depth();
        java.lang.String str32 = scriptNode13.getEncodedSource();
        int int33 = scriptNode13.getEncodedSourceEnd();
        scriptNode13.clearParentScope();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str32, "                                                                                                                                                                                                        Scope");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test12521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12521");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        scriptNode1.target = scriptNode3;
        boolean boolean8 = scriptNode3.hasChildren();
        scriptNode3.setEndLineno(1);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray11 = scriptNode3.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test12522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12522");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setEndLineno(20);
        scriptNode1.removeProp((int) 'a');
        int int7 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode8.getEncodedSource();
        scriptNode8.setEncodedSourceEnd(18);
        java.lang.String str13 = scriptNode8.makeIndent((int) '#');
        int int16 = scriptNode8.getIntProp((int) '4', 4);
        scriptNode8.setRelative(5);
        java.lang.Object obj19 = scriptNode8.getCompilerData();
        scriptNode1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode8);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                      " + "'", str13, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test12523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12523");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(21, 2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        java.lang.String str8 = scriptNode3.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scriptNode3.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode3.getParentScope();
        java.lang.String str11 = scriptNode3.getNextTempName();
        node2.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode3);
        scriptNode3.clearParentScope();
        int int14 = scriptNode3.getPosition();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                                      " + "'", str8, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test12524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12524");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        int int43 = scriptNode2.getLineno();
        scriptNode2.setEncodedSourceStart(100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test12525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12525");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode1.getSymbols();
        scriptNode1.setEncodedSourceBounds((int) (byte) 10, (int) (short) 1);
        scriptNode1.setEncodedSourceBounds(22, 98666588);
        java.lang.String[] strArray21 = scriptNode1.getParamAndVarNames();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test12526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12526");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = scriptNode30.getEnclosingFunction();
        scriptNode6.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode30);
        java.lang.Object obj39 = scriptNode30.getProp((-51));
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 35, commentType42, "    Scope");
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        comment44.setCommentType(commentType45);
        scriptNode30.addChildToBack((com.google.javascript.rhino.head.Node) comment44);
        int int48 = comment44.getLineno();
        int int49 = comment44.getType();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(functionNode36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 161 + "'", int49 == 161);
    }

    @Test
    public void test12527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12527");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 11, commentType2, "                                                                                                                                                                                                  ");
        java.lang.String str5 = comment4.getValue();
        comment4.setPosition((-1121821920));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                                                                                                                  " + "'", str5, "                                                                                                                                                                                                  ");
    }

    @Test
    public void test12528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12528");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode31.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment47 = scriptNode46.getJsDocNode();
        scriptNode46.flattenSymbolTable(true);
        int int50 = scriptNode46.getLength();
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int53 = scriptNode46.addFunction(functionNode52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertNull(comment47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
    }

    @Test
    public void test12529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12529");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        int int17 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode0.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = scriptNode0.getStatements();
        java.lang.String str20 = scriptNode0.shortName();
        com.google.javascript.rhino.head.ast.AstNode astNode21 = scriptNode0.getParent();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral22 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.addRegExp(regExpLiteral22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(functionNode18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ScriptNode" + "'", str20, "ScriptNode");
        org.junit.Assert.assertNotNull(astNode21);
    }

    @Test
    public void test12530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12530");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode20.getChildScopes();
        int int29 = scriptNode20.getLineno();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scriptNode20.new NodeIterator();
        int int33 = scriptNode20.getIntProp(966852023, (-1805289491));
        int int34 = scriptNode20.getAbsolutePosition();
        int int35 = scriptNode20.getPosition();
        scriptNode20.setPosition(655773337);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1805289491) + "'", int33 == (-1805289491));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test12531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12531");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        scriptNode39.setEndLineno(18);
        scriptNode26.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode39);
        java.lang.String str54 = scriptNode26.getJsDoc();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test12532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12532");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        java.lang.String str15 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode16.getIntProp(6, 2);
        int int28 = scriptNode16.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        int int31 = scriptNode29.getBaseLineno();
        java.lang.String str32 = scriptNode29.getNextTempName();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.lang.String str34 = scriptNode29.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode35.getSymbols();
        scriptNode29.setSymbols(symbolList42);
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode45.toSource(18);
        java.lang.Object obj48 = scriptNode45.getCompilerData();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode45.getSymbols();
        scriptNode29.setSymbols(symbolList49);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral51 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode29.addRegExp(regExpLiteral51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0\tBLOCK 0 1\n" + "'", str15, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str34, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                                    {\n                                    }\n" + "'", str47, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(symbolList49);
    }

    @Test
    public void test12533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12533");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(98666588, 1670905977);
    }

    @Test
    public void test12534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12534");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node12 = scriptNode5.setType(16);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList13 = scriptNode5.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = scriptNode5.getRegexpString(371991955);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(functionNodeList13);
    }

    @Test
    public void test12535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12535");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(0, "51\t    SCRIPT 52 19\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test12536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12536");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode0.getTop();
        scriptNode0.setRelative(2018070520);
        scriptNode0.setEncodedSourceStart((-296494744));
        org.junit.Assert.assertNotNull(scriptNode11);
    }

    @Test
    public void test12537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12537");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        scriptNode27.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node60 = scriptNode27.getLastChild();
        java.lang.String str61 = scriptNode27.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = scriptNode27.getFunctions();
        java.lang.String str63 = scriptNode27.shortName();
        com.google.javascript.rhino.head.ast.Symbol symbol65 = scriptNode27.getSymbol("                    hi!");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.setDouble((double) (-51));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ScriptNode" + "'", str63, "ScriptNode");
        org.junit.Assert.assertNull(symbol65);
    }

    @Test
    public void test12538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12538");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("53\tCOMMENT 53 53\n");
        boolean boolean2 = node1.hasConsistentReturnUsage();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test12539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12539");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        java.lang.String str6 = comment4.toSource(19);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        comment4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType52 = comment4.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        scriptNode53.setEncodedSourceEnd(18);
        java.lang.String str58 = scriptNode53.makeIndent((int) '#');
        int int61 = scriptNode53.getIntProp((int) '4', 4);
        scriptNode53.setRelative(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int68 = scriptNode65.getIntProp(23, (int) (short) 1);
        boolean boolean69 = scriptNode65.hasSideEffects();
        scriptNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode65);
        comment4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        scriptNode72.setEncodedSourceStart((int) (byte) 100);
        int int83 = scriptNode72.getIntProp(6, 2);
        int int84 = scriptNode72.getParamCount();
        java.lang.String str85 = scriptNode72.debugPrint();
        scriptNode72.setEncodedSourceStart((int) 'a');
        scriptNode72.setLength(874571570);
        int int90 = scriptNode53.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode72);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor91 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode72.visit(nodeVisitor91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                      Scope" + "'", str6, "                                      Scope");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(commentType52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                                                      " + "'", str58, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str85, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test12540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12540");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.clearParentScope();
        scriptNode29.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode31);
        java.lang.String str40 = scriptNode31.toSource();
        scriptNode31.setEncodedSourceStart(13);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = scriptNode31.new NodeIterator();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(845940331, (com.google.javascript.rhino.head.Node) scriptNode31, (int) 'a');
        java.lang.String str46 = scriptNode31.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = scriptNode31.getRegexpFlags((-220138142));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test12541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12541");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode13.setEncodedSourceStart((int) (byte) 1);
        scriptNode13.setEncodedSource("                                                                                                                                                                                                        Scope");
        java.lang.String str32 = scriptNode13.makeIndent(21);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode13.getSymbols();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                          " + "'", str32, "                                          ");
        org.junit.Assert.assertNotNull(symbolList33);
    }

    @Test
    public void test12542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12542");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str6 = scope4.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str19 = scriptNode10.getSourceName();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode10, 26);
        scriptNode8.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        java.lang.String str23 = scriptNode8.getNextTempName();
        scope4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        scope26.setPosition(2);
        int int32 = scope26.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope33 = scope26.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scope26.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope38 = scope36.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node39 = scope36.target;
        scope36.setPosition(2);
        int int42 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope43 = scope36.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = scope36.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        int int47 = scriptNode45.getBaseLineno();
        java.lang.Object obj48 = scriptNode45.getCompilerData();
        scriptNode45.flattenSymbolTable(false);
        scope26.addChildAfter((com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.lang.String str53 = scriptNode45.makeIndent((-1));
        scope4.target = scriptNode45;
        scriptNode0.target = scope4;
        java.lang.Object obj57 = scope4.getProp((int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int61 = scriptNode60.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getEncodedSource();
        scriptNode62.setEncodedSourceEnd(18);
        scriptNode60.target = scriptNode62;
        scriptNode62.setEncodedSourceBounds((int) (byte) -1, 11);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str74 = scope72.toSource(12);
        scope72.setRelative(1);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode62, (com.google.javascript.rhino.head.Node) scope72);
        int int78 = scriptNode62.getRegexpCount();
        scriptNode62.setLength(10);
        scope4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.ast.AstRoot astRoot82 = scriptNode62.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode62.setString("                                                                                                                                                                                                        Scope");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                        {\n                        }\n" + "'", str74, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(astRoot82);
    }

    @Test
    public void test12543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12543");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(8, 1, commentType2, "$0");
        com.google.javascript.rhino.head.Node node5 = comment4.getLastSibling();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = comment4.getCommentType();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = comment4.getExistingIntProp((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(commentType6);
    }

    @Test
    public void test12544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12544");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        node4.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = node4.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = null;
        scriptNode23.setSymbols(symbolList29);
        node4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.ast.Symbol symbol33 = scriptNode23.getSymbol("41");
        com.google.javascript.rhino.head.Node node35 = scriptNode23.setType(2);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = node35.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(symbol33);
        org.junit.Assert.assertNotNull(node35);
    }

    @Test
    public void test12545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12545");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = scriptNode18.getTop();
        scriptNode27.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        scriptNode33.setEncodedSourceEnd(18);
        scriptNode31.target = scriptNode33;
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node76 = scriptNode40.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode40);
        int int78 = scriptNode27.getEncodedSourceEnd();
        java.lang.String str79 = scriptNode27.debugPrint();
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node(1500056961, 384417477);
        scriptNode27.addChildrenToFront(node82);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "58\t  SCRIPT 6 1\n" + "'", str79, "58\t  SCRIPT 6 1\n");
    }

    @Test
    public void test12546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12546");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(226035720);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope7 = scope5.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node8 = scope5.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = null;
        scope5.setTop(scriptNode9);
        scriptNode3.target = scope5;
        java.lang.String str13 = scriptNode3.toSource((int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType16, "41");
        java.lang.String str19 = comment18.getValue();
        scriptNode3.setJsDocNode(comment18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        int int33 = scriptNode22.getIntProp(6, 2);
        int int34 = scriptNode22.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        scriptNode22.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode35);
        scriptNode35.setEncodedSourceStart((int) (byte) 1);
        scriptNode35.setEncodedSource("                                                                                                                                                                                                        Scope");
        int int53 = scriptNode35.depth();
        scriptNode35.setEncodedSourceEnd((int) (byte) 0);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(34756133, (com.google.javascript.rhino.head.Node) scriptNode35, 20);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(845940330, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode3, node57, 180367011);
        boolean boolean60 = scriptNode3.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        int int72 = scriptNode61.getIntProp(6, 2);
        int int73 = scriptNode61.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList74 = scriptNode61.getStatements();
        java.lang.String str75 = scriptNode61.toSource();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode3.setDefault((com.google.javascript.rhino.head.Node) scriptNode61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str13, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "41" + "'", str19, "41");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(astNodeList74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "{\n}\n" + "'", str75, "{\n}\n");
    }

    @Test
    public void test12547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12547");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        java.lang.String str43 = scriptNode24.getNextTempName();
        scriptNode24.setBaseLineno(9);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node46 = scriptNode24.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
    }

    @Test
    public void test12548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12548");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope2.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str14 = comment9.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node16 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode10, node16);
        scriptNode10.setSourceName("hi!");
        scope2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scope2);
        boolean boolean22 = node21.hasChildren();
        int int23 = node21.getLineno();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Scope" + "'", str3, "Scope");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test12549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12549");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        int int16 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode0.getTop();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode17.setString("-1\t  ENUM_INIT_KEYS -53 1\n-1\tSCRIPT -1 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(scriptNode17);
    }

    @Test
    public void test12550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12550");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(161, 129);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        node25.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope29.setPosition(100);
        com.google.javascript.rhino.head.Node node32 = scope29.getLastSibling();
        node32.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = node32.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = scriptNode36.getTop();
        scriptNode45.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int50 = scriptNode49.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getEncodedSource();
        scriptNode51.setEncodedSourceEnd(18);
        scriptNode49.target = scriptNode51;
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode51);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = null;
        scriptNode51.setSymbols(symbolList57);
        node32.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode51);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope63 = scope61.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node64 = scope61.target;
        scope61.setPosition(2);
        scope61.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node69 = scope61.getFirstChild();
        node25.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope61);
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment(8, 1, commentType73, "$0");
        scriptNode51.setJsDocNode(comment75);
        java.lang.String str77 = scriptNode51.getEncodedSource();
        scriptNode51.setBaseLineno((int) (short) 10);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(845940330, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode51, (-748421155));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node82 = scriptNode51.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test12551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12551");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str27 = scriptNode0.debugPrint();
        java.lang.String str29 = scriptNode0.makeIndent(15);
        java.lang.String str30 = scriptNode0.toSource();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n" + "'", str27, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                              " + "'", str29, "                              ");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{\n  {\n  }\n}\n" + "'", str30, "{\n  {\n  }\n}\n");
    }

    @Test
    public void test12552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12552");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode13.getType();
        int int19 = scriptNode13.getParamCount();
        int int20 = scriptNode13.getLength();
        int int21 = scriptNode13.getFunctionCount();
        scriptNode13.setRelative((-25));
        boolean boolean24 = scriptNode13.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test12553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12553");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        java.lang.String str43 = scriptNode24.toString();
        int int44 = scriptNode24.getEncodedSourceStart();
        scriptNode24.setBounds((int) (byte) 100, 18);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor48 = scriptNode24.iterator();
        scriptNode24.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment53 = scriptNode52.getJsDocNode();
        scriptNode52.flattenSymbolTable(true);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scriptNode52.spliterator();
        scriptNode24.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode52);
        int int58 = scriptNode52.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode60 = scriptNode52.getFunctionNode(942365810);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(nodeItor48);
        org.junit.Assert.assertNull(comment53);
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test12554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12554");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode26.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = scriptNode61.getTop();
        scriptNode70.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int75 = scriptNode74.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str77 = scriptNode76.getEncodedSource();
        scriptNode76.setEncodedSourceEnd(18);
        scriptNode74.target = scriptNode76;
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) scriptNode76);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = null;
        scriptNode76.setSymbols(symbolList82);
        java.lang.String str84 = scriptNode76.getJsDoc();
        java.lang.String str85 = scriptNode76.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode86.getEncodedSource();
        int int88 = scriptNode86.getBaseLineno();
        java.lang.Object obj89 = scriptNode86.getCompilerData();
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode76, (com.google.javascript.rhino.head.Node) scriptNode86, (-51));
        int int92 = scriptNode76.getBaseLineno();
        scriptNode26.setTop(scriptNode76);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap94 = null;
        scriptNode76.setSymbolTable(strMap94);
        scriptNode76.setBounds((-769830162), (-474135938));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test12555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12555");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str26 = scriptNode17.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scope28, (int) (byte) 10);
        scriptNode17.setEndLineno(136);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = scriptNode17.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = scriptNode17.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node38 = astRoot37.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(nodeSpliterator36);
        org.junit.Assert.assertNull(astRoot37);
    }

    @Test
    public void test12556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12556");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.Object obj72 = scriptNode23.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node73 = scriptNode23.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope74 = scriptNode23.getParentScope();
        int int75 = scriptNode23.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode23, scope77);
        scriptNode23.clearParentScope();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNull(scope74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test12557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12557");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.lang.String str14 = comment10.toSource((int) (byte) 100);
        int int15 = comment10.getAbsolutePosition();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str14, "                                                                                                                                                                                                        Scope");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test12558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12558");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        comment10.setPosition(0);
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        comment10.setCommentType(commentType15);
        com.google.javascript.rhino.head.Token.CommentType commentType17 = comment10.getCommentType();
        boolean boolean18 = comment10.hasSideEffects();
        int int19 = comment10.getLineno();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(commentType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test12559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12559");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope6 = scope4.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node7 = scope4.target;
        scope4.setPosition(2);
        java.lang.String str10 = scope4.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = scope4.getSymbolTable();
        boolean boolean12 = scope4.hasChildren();
        com.google.javascript.rhino.head.Node node13 = scope4.getNext();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        java.lang.String str28 = comment24.toSource((int) (short) 10);
        scope4.setJsDocNode(comment24);
        scriptNode1.replaceWith(scope4);
        com.google.javascript.rhino.head.Node node32 = scope4.setType((int) (short) 1);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode33 = scope4.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = functionNode33.hasChildren();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\n}\n" + "'", str10, "{\n}\n");
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                    Scope" + "'", str28, "                    Scope");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(functionNode33);
    }

    @Test
    public void test12560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12560");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor15 = node14.iterator();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(1558149202, node14);
        com.google.javascript.rhino.head.Node node17 = node16.getNext();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeItor15);
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test12561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12561");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode19.getIntProp(6, 2);
        scriptNode19.setEndLineno(18);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode19, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstNode astNode35 = scriptNode19.getParent();
        int int36 = scriptNode19.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node38 = scriptNode19.setType(1278533831);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = scriptNode19.getTop();
        int int40 = scriptNode19.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(astNode35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test12562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12562");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(5);
        scriptNode1.setEncodedSourceEnd(35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = scriptNode1.getParamOrVarName((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12563");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str5 = scriptNode1.getNextTempName();
        int int6 = scriptNode1.getRegexpCount();
        int int7 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode9.getEncodedSourceStart();
        scriptNode9.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode9.getSymbols();
        scriptNode9.setEncodedSourceBounds((int) (byte) 10, (int) (short) 1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.Node node27 = scriptNode9.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode9.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node29 = scriptNode1.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(scriptNode28);
    }

    @Test
    public void test12564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12564");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = null;
        scriptNode16.setSymbols(symbolList22);
        int int24 = scriptNode16.getParamCount();
        boolean boolean25 = scriptNode16.hasSideEffects();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor26 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode16.visit(nodeVisitor26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test12565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12565");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = scriptNode30.getEnclosingFunction();
        scriptNode6.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode30);
        scriptNode6.setEncodedSourceStart(136);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = scriptNode43.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope49 = scriptNode43.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode63 = scriptNode51.getParent();
        scriptNode43.putProp((int) 'a', (java.lang.Object) scriptNode51);
        java.lang.Object obj65 = scriptNode43.getCompilerData();
        int int66 = scriptNode43.getEncodedSourceEnd();
        java.lang.String str67 = scriptNode43.toSource();
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode43);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node69 = scriptNode6.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(functionNode36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(scope49);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(astNode63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 18 + "'", int66 == 18);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{\n}\n" + "'", str67, "{\n}\n");
    }

    @Test
    public void test12566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12566");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEncodedSourceStart();
        scriptNode0.setEncodedSource("                                      {\n                                        {\n                                        }\n                                      }\n");
        int int6 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstNode astNode7 = scriptNode0.getParent();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(astNode7);
    }

    @Test
    public void test12567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12567");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        scope18.putIntProp(17, 25);
        scope18.setLength((int) ' ');
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.Object obj33 = scriptNode30.getCompilerData();
        scriptNode30.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode30.getSymbols();
        scope18.setTop(scriptNode30);
        scriptNode30.setEncodedSourceBounds((int) (short) -1, 19);
        com.google.javascript.rhino.head.ast.Scope scope42 = scriptNode30.getParentScope();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertNull(scope42);
    }

    @Test
    public void test12568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12568");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        int int3 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = scope2.getTop();
        scope2.setLength(26);
        java.lang.String str8 = scope2.toSource(13);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor9 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope2.visit(nodeVisitor9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 129 + "'", int3 == 129);
        org.junit.Assert.assertNull(scriptNode4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                          {\n                          }\n" + "'", str8, "                          {\n                          }\n");
    }

    @Test
    public void test12569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12569");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(9);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope7 = scope5.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node8 = scope5.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scope5.setJsDocNode(comment14);
        java.lang.String str18 = comment14.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment14);
        java.lang.Object obj21 = comment14.getProp((int) (short) -1);
        java.lang.String str23 = comment14.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode24.getTop();
        scriptNode33.setPosition(6);
        comment14.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        int int49 = scriptNode38.getIntProp(6, 2);
        int int50 = scriptNode38.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getEncodedSource();
        int int53 = scriptNode51.getBaseLineno();
        java.lang.String str54 = scriptNode51.getNextTempName();
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        java.lang.String str56 = scriptNode51.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode57.getSymbols();
        scriptNode51.setSymbols(symbolList64);
        comment14.putProp(23, (java.lang.Object) symbolList64);
        scriptNode2.setSymbols(symbolList64);
        com.google.javascript.rhino.head.Node node68 = scriptNode2.getLastChild();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment(6, 53, commentType71, "                                  Scope");
        java.lang.String str74 = comment73.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = comment73.getCommentType();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((-547629399), node68, (com.google.javascript.rhino.head.Node) comment73, 69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                    Scope" + "'", str18, "                    Scope");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str56, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                                  Scope" + "'", str74, "                                  Scope");
        org.junit.Assert.assertNull(commentType75);
    }

    @Test
    public void test12570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12570");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSourceEnd(136);
        boolean boolean5 = scriptNode0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.setSourceName("                                              Scope");
        java.lang.String str9 = scriptNode6.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scriptNode20.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int25 = scriptNode24.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        scriptNode26.setEncodedSourceEnd(18);
        scriptNode24.target = scriptNode26;
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scope33.setJsDocNode(comment42);
        boolean boolean45 = scope33.hasChildren();
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope33);
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode26);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node48 = scriptNode26.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test12571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12571");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(26, "ScriptNode");
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newNumber(0.0d);
        node2.addChildrenToFront(node4);
        int int8 = node2.getIntProp(11, 20);
        com.google.javascript.rhino.head.Node node9 = node2.getLastChild();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment(17, 3, commentType12, "                                  Scope");
        java.lang.String str16 = comment14.toSource(35);
        java.lang.String str17 = comment14.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        comment14.setCommentType(commentType18);
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        comment14.setCommentType(commentType20);
        com.google.javascript.rhino.head.Token.CommentType commentType22 = comment14.getCommentType();
        node9.setJsDocNode(comment14);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 20 + "'", int8 == 20);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                                                                                                        Scope" + "'", str16, "                                                                                                        Scope");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                  Scope" + "'", str17, "                                  Scope");
        org.junit.Assert.assertNull(commentType22);
    }

    @Test
    public void test12572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12572");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode2.getSymbols();
        java.lang.String str10 = scriptNode2.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node49 = scriptNode38.target;
        scriptNode38.setBounds(16, 13);
        scriptNode38.clearParentScope();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode38, 3);
        com.google.javascript.rhino.head.Node node56 = scriptNode38.getNext();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.lang.String str58 = scriptNode38.getNextTempName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode38.getFunctions();
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str10, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertNotNull(functionNodeList59);
    }

    @Test
    public void test12573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12573");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(734000496, "                        {\n}\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test12574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12574");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode58.setPosition((int) (byte) 0);
        scope28.setTop(scriptNode58);
        scriptNode13.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scriptNode71.setEncodedSourceStart((int) (byte) 100);
        int int82 = scriptNode71.getIntProp(6, 2);
        int int83 = scriptNode71.getRegexpCount();
        scriptNode71.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode71.setLineno((int) '#');
        int int88 = scriptNode71.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = scriptNode71.getEnclosingFunction();
        scriptNode71.setEncodedSourceBounds(22, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode93 = scriptNode71.getTop();
        java.lang.String str94 = scriptNode93.toSource();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.setDefault((com.google.javascript.rhino.head.Node) scriptNode93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 35 + "'", int88 == 35);
        org.junit.Assert.assertNull(functionNode89);
        org.junit.Assert.assertNotNull(scriptNode93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "{\n}\n" + "'", str94, "{\n}\n");
    }

    @Test
    public void test12575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12575");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-102));
    }

    @Test
    public void test12576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12576");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode50.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode50.getFunctions();
        java.lang.String str62 = scriptNode50.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            int int63 = scriptNode20.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "52\t  SCRIPT 0 1\n" + "'", str62, "52\t  SCRIPT 0 1\n");
    }

    @Test
    public void test12577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12577");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(966852023, 15);
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node((-613442063), (com.google.javascript.rhino.head.Node) scope3, 58);
    }

    @Test
    public void test12578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12578");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.String str41 = scriptNode26.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        int int54 = scriptNode43.getIntProp(6, 2);
        int int55 = scriptNode43.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope59 = scope57.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node60 = scope57.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scope57.setJsDocNode(comment66);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList76 = scriptNode69.getSymbols();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scope57, (com.google.javascript.rhino.head.Node) scriptNode69);
        boolean boolean78 = scriptNode43.hasChildren();
        java.lang.String str79 = scriptNode26.toStringTree(scriptNode43);
        boolean boolean80 = scriptNode26.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor81 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode26.visit(nodeVisitor81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str41, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(symbolList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test12579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12579");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) '#');
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scope3.setJsDocNode(comment12);
        scope3.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        int int20 = scriptNode18.getBaseLineno();
        java.lang.Object obj21 = scriptNode18.getCompilerData();
        scriptNode18.setEncodedSourceBounds((int) '4', 0);
        scope3.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope3.getDefiningScope("");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, scope3);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node29 = scope3.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(scope27);
    }

    @Test
    public void test12580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12580");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        int int82 = scriptNode29.getEncodedSourceStart();
        int int83 = scriptNode29.getEncodedSourceStart();
        java.lang.String str84 = scriptNode29.getJsDoc();
        int int85 = scriptNode29.getLength();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator86 = scriptNode29.spliterator();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap87 = scriptNode29.getSymbolTable();
        com.google.javascript.rhino.head.ast.AstNode astNode88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int89 = scriptNode29.compareTo(astNode88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(nodeSpliterator86);
        org.junit.Assert.assertNull(strMap87);
    }

    @Test
    public void test12581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12581");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.Node node23 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        scriptNode37.setEncodedSource("                        ");
        int int44 = scriptNode37.getLineno();
        scriptNode0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        int int46 = scriptNode0.getLineno();
        int int47 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSourceStart((-613442063));
        java.lang.String str50 = scriptNode0.toString();
        scriptNode0.setLength(3);
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "136" + "'", str50, "136");
    }

    @Test
    public void test12582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12582");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        java.lang.String str45 = scriptNode31.getEncodedSource();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        scriptNode53.setEncodedSourceEnd(18);
        java.lang.String str57 = comment52.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.Node node59 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode53, node59);
        scriptNode53.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str72 = scriptNode63.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope74.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope74, (int) (byte) 10);
        java.lang.String str80 = scriptNode53.getNextTempName();
        java.lang.String str81 = scriptNode31.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.Node node82 = scriptNode53.getNext();
        com.google.javascript.rhino.head.Node node83 = node82.getNext();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(node83);
    }

    @Test
    public void test12583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12583");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(18);
        java.lang.Object obj16 = scriptNode13.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node55 = scriptNode44.target;
        scriptNode13.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        int int57 = scriptNode44.getLineno();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode44);
        scriptNode0.setRelative((int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode0.getSymbolTable();
        java.lang.String str63 = scriptNode0.makeIndent((-547629399));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                    {\n                                    }\n" + "'", str15, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
    }

    @Test
    public void test12584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12584");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        int int24 = scriptNode16.getFunctionCount();
        com.google.javascript.rhino.head.Node node25 = scriptNode16.getNext();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(node25);
    }

    @Test
    public void test12585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12585");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str36 = scriptNode27.getSourceName();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode27, 26);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node23, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode27);
        com.google.javascript.rhino.head.Node node40 = scriptNode27.getLastSibling();
        java.lang.String str41 = scriptNode27.getEncodedSource();
        com.google.javascript.rhino.head.Node node43 = scriptNode27.setType(8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node47 = com.google.javascript.rhino.head.Node.newString(0, "-1\t  SCRIPT -7 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = null;
        scope50.setTop(scriptNode54);
        scriptNode48.target = scope50;
        java.lang.String str58 = scriptNode48.toSource((int) 'a');
        java.lang.Object obj60 = scriptNode48.getProp(22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = scriptNode63.getTop();
        scriptNode72.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int77 = scriptNode76.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str79 = scriptNode78.getEncodedSource();
        scriptNode78.setEncodedSourceEnd(18);
        scriptNode76.target = scriptNode78;
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode72, (com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.Token.CommentType commentType86 = null;
        com.google.javascript.rhino.head.ast.Comment comment88 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType86, "Scope");
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode72, (com.google.javascript.rhino.head.Node) comment88);
        boolean boolean90 = comment88.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType91 = null;
        comment88.setCommentType(commentType91);
        java.lang.String str94 = comment88.toSource(3);
        boolean boolean95 = comment88.hasConsistentReturnUsage();
        scriptNode48.setJsDocNode(comment88);
        com.google.javascript.rhino.head.Node node97 = new com.google.javascript.rhino.head.Node(170200694, (com.google.javascript.rhino.head.Node) scriptNode27, node47, (com.google.javascript.rhino.head.Node) comment88);
        com.google.javascript.rhino.head.Node node99 = comment88.setType(595467506);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str58, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "      Scope" + "'", str94, "      Scope");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(node99);
    }

    @Test
    public void test12586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12586");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.Node node24 = scriptNode0.setType(0);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        scope29.setPosition(2);
        scope29.setLength((int) (byte) 1);
        java.lang.Object obj38 = scope29.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope29);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        scope41.setPosition(2);
        java.lang.String str47 = scope41.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap48 = scope41.getSymbolTable();
        boolean boolean49 = scope41.hasChildren();
        com.google.javascript.rhino.head.Node node50 = scope41.getNext();
        scope29.addChildrenToFront((com.google.javascript.rhino.head.Node) scope41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        scriptNode61.setPosition(6);
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType66, "{\n}\n");
        java.lang.String str69 = comment68.getValue();
        comment68.setLength(129);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) scope29, (com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) comment68);
        java.lang.String str74 = comment68.toSource(0);
        scriptNode0.putProp((-1), (java.lang.Object) comment68);
        java.lang.String str76 = scriptNode0.shortName();
        com.google.javascript.rhino.head.ast.Symbol symbol78 = scriptNode0.getSymbol("                                                                                                                                                                                                                                                                                {\n                                                                                                                                                                                                                                                                                }\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = scriptNode0.getFunctionNode(908331048);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{\n}\n" + "'", str47, "{\n}\n");
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{\n}\n" + "'", str69, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{\n}\n" + "'", str74, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ScriptNode" + "'", str76, "ScriptNode");
        org.junit.Assert.assertNull(symbol78);
    }

    @Test
    public void test12587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12587");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList7 = scriptNode0.getStatements();
        java.lang.Object obj8 = scriptNode0.getCompilerData();
        int int9 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.Comment comment10 = scriptNode0.getJsDocNode();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(astNodeList7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(comment10);
    }

    @Test
    public void test12588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12588");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        scriptNode28.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node61 = scriptNode28.getLastChild();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(1486135515, (com.google.javascript.rhino.head.Node) scriptNode28, 100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertNull(node61);
    }

    @Test
    public void test12589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12589");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        java.lang.String str13 = comment8.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode9, node15);
        scriptNode9.setSourceName("hi!");
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.Object obj20 = scriptNode9.getCompilerData();
        scriptNode9.setEncodedSourceEnd((int) (byte) 100);
        int int23 = scriptNode9.getEncodedSourceStart();
        boolean boolean24 = scriptNode9.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode9.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.Object obj29 = scriptNode26.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        java.lang.String str38 = scriptNode30.toSource(26);
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        java.lang.String str40 = scriptNode30.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol42 = scriptNode30.getSymbol("/");
        int int43 = scriptNode30.getEncodedSourceEnd();
        boolean boolean44 = scriptNode30.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = scriptNode46.getTop();
        scriptNode55.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int60 = scriptNode59.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getEncodedSource();
        scriptNode61.setEncodedSourceEnd(18);
        scriptNode59.target = scriptNode61;
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode61);
        scriptNode61.setEncodedSourceEnd(11);
        int int69 = scriptNode61.getEncodedSourceStart();
        int int70 = scriptNode61.getRegexpCount();
        java.lang.String str71 = scriptNode30.toStringTree(scriptNode61);
        scriptNode30.putIntProp(966852023, (-674152164));
        scriptNode25.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        java.lang.String str76 = scriptNode30.getJsDoc();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                                    {\n                                                    }\n" + "'", str38, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "136" + "'", str40, "136");
        org.junit.Assert.assertNull(symbol42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test12590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12590");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scriptNode0.getParent();
        scriptNode0.setBounds(14, 4);
        java.lang.String str16 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = scriptNode0.getSymbol("          {\n{\n}\n}\n");
        java.lang.String str19 = scriptNode0.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope20 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(astNode12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
    }

    @Test
    public void test12591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12591");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        scope3.setPosition(2);
        scope3.setLength((int) (byte) 1);
        java.lang.Object obj12 = scope3.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope3);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        java.lang.String str21 = scope15.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = scope15.getSymbolTable();
        boolean boolean23 = scope15.hasChildren();
        com.google.javascript.rhino.head.Node node24 = scope15.getNext();
        scope3.addChildrenToFront((com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType40, "{\n}\n");
        java.lang.String str43 = comment42.getValue();
        comment42.setLength(129);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) comment42);
        scriptNode35.setEncodedSourceStart(14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = scriptNode35.getAstRoot();
        int int50 = scriptNode35.getEncodedSourceStart();
        int int51 = scriptNode35.getType();
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n}\n" + "'", str21, "{\n}\n");
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertNull(astRoot49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 14 + "'", int50 == 14);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 136 + "'", int51 == 136);
    }

    @Test
    public void test12592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12592");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.setEncodedSourceBounds((int) '4', 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        int int41 = scriptNode30.getIntProp(6, 2);
        int int42 = scriptNode30.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scope44.setJsDocNode(comment53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = scriptNode56.getSymbols();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope44, (com.google.javascript.rhino.head.Node) scriptNode56);
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        scriptNode30.setSymbols(symbolList73);
        scriptNode0.setSymbols(symbolList73);
        scriptNode0.setSourceName("52\t  SCRIPT 0 1\n");
        com.google.javascript.rhino.head.Node node78 = scriptNode0.getLastChild();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNotNull(symbolList63);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNull(node78);
    }

    @Test
    public void test12593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12593");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.String str41 = scriptNode26.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        java.lang.String str54 = scriptNode46.toSource(26);
        scriptNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.lang.String str56 = scriptNode46.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = scriptNode57.getTop();
        java.lang.String str67 = scriptNode66.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scriptNode68.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = scriptNode68.getTop();
        java.lang.String str78 = scriptNode77.shortName();
        scriptNode66.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        java.lang.String str81 = scriptNode66.makeIndent(6);
        scriptNode66.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        scriptNode46.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode66);
        int int86 = scriptNode66.getEncodedSourceEnd();
        scriptNode26.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList88 = scriptNode66.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope89 = scriptNode66.getParentScope();
        com.google.javascript.rhino.head.ast.Scope scope90 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        int int91 = scope90.getLineno();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str41, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                                                    {\n                                                    }\n" + "'", str54, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "136" + "'", str56, "136");
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ScriptNode" + "'", str67, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ScriptNode" + "'", str78, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "            " + "'", str81, "            ");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(scopeList88);
        org.junit.Assert.assertNotNull(scope89);
        org.junit.Assert.assertNotNull(scope90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test12594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12594");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scope2.getSymbolTable();
        boolean boolean10 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scope2.target = scriptNode11;
        com.google.javascript.rhino.head.Node node22 = scriptNode11.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = scriptNode25.getTop();
        scriptNode34.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int39 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getEncodedSource();
        scriptNode40.setEncodedSourceEnd(18);
        scriptNode38.target = scriptNode40;
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str58 = scriptNode49.getSourceName();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode49, 26);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node45, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.Node node62 = scriptNode49.getLastSibling();
        boolean boolean63 = scriptNode49.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        scriptNode49.putProp((int) (byte) 0, (java.lang.Object) int76);
        com.google.javascript.rhino.head.Node node78 = scriptNode49.target;
        scriptNode49.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node81 = scriptNode49.getLastSibling();
        scriptNode11.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str84 = scriptNode83.getEncodedSource();
        int int85 = scriptNode83.getBaseLineno();
        java.lang.Object obj86 = scriptNode83.getCompilerData();
        scriptNode83.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap89 = null;
        scriptNode83.setSymbolTable(strMap89);
        scriptNode11.setTop(scriptNode83);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(8, (com.google.javascript.rhino.head.Node) scriptNode83);
        java.lang.String str94 = scriptNode83.makeIndent(52);
        com.google.javascript.rhino.head.ast.Comment comment95 = scriptNode83.getJsDocNode();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "                                                                                                        " + "'", str94, "                                                                                                        ");
        org.junit.Assert.assertNull(comment95);
    }

    @Test
    public void test12595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12595");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        scriptNode1.flattenSymbolTable(true);
        scriptNode1.setEncodedSourceStart(100);
        scriptNode1.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope8 = scriptNode1.getEnclosingScope();
        scriptNode1.setSourceName("");
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertNull(scope8);
    }

    @Test
    public void test12596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12596");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        boolean boolean10 = scope2.hasSideEffects();
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("$0");
        node13.putIntProp(25, 1);
        com.google.javascript.rhino.head.Node node17 = node13.getFirstChild();
        scope2.putProp((int) (short) 100, (java.lang.Object) node13);
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType22, "{\n}\n");
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment24, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType27 = comment24.getCommentType();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(9, node13, (com.google.javascript.rhino.head.Node) comment24, 17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = comment24.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator30.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(commentType27);
    }

    @Test
    public void test12597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12597");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("                                              Scope");
        java.lang.String str3 = scriptNode0.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        scope6.setPosition(2);
        int int12 = scope6.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope13 = scope6.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope6.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        int int22 = scope16.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope23 = scope16.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator24 = scope16.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        int int27 = scriptNode25.getBaseLineno();
        java.lang.Object obj28 = scriptNode25.getCompilerData();
        scriptNode25.flattenSymbolTable(false);
        scope6.addChildAfter((com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.Node node32 = scope16.getNext();
        scriptNode0.setParentScope(scope16);
        java.lang.Class<?> wildcardClass34 = scriptNode0.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNotNull(nodeSpliterator24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test12598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12598");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                                                                              {\n                        }\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test12599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12599");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        java.lang.String str8 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        scriptNode9.removeProp(180367011);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope15 = scope13.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node16 = scope13.target;
        scope13.setPosition(2);
        java.lang.String str19 = scope13.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap20 = scope13.getSymbolTable();
        boolean boolean21 = scope13.hasChildren();
        com.google.javascript.rhino.head.Node node22 = scope13.getNext();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        java.lang.String str37 = comment33.toSource((int) (short) 10);
        scope13.setJsDocNode(comment33);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator39 = comment33.spliterator();
        java.lang.String str40 = comment33.getValue();
        java.lang.String str41 = comment33.toString();
        int int42 = comment33.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        comment33.setCommentType(commentType43);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = scriptNode9.getIndexForNameNode((com.google.javascript.rhino.head.Node) comment33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                    Scope" + "'", str37, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Scope" + "'", str40, "Scope");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "161" + "'", str41, "161");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test12600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12600");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        scriptNode1.flattenSymbolTable(true);
        int int5 = scriptNode1.getLength();
        scriptNode1.setEncodedSourceBounds(19, (-42));
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test12601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12601");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = scriptNode1.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12602");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        java.lang.String str23 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int33 = scriptNode24.getEncodedSourceStart();
        int int34 = scriptNode24.getEncodedSourceEnd();
        java.lang.String str35 = scriptNode24.getSourceName();
        scriptNode24.setRelative(161);
        scriptNode16.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        int int41 = scriptNode24.getIntProp((-314896491), 7);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
    }

    @Test
    public void test12603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12603");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(52, 4);
        int int3 = node2.getLineno();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator4 = node2.new NodeIterator();
        boolean boolean5 = nodeIterator4.hasNext();
        boolean boolean6 = nodeIterator4.hasNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test12604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12604");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        scriptNode0.setLineno(371991955);
        java.lang.String str14 = scriptNode0.toSource(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode16.getIntProp(6, 2);
        int int28 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope32 = scope30.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node33 = scope30.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scope30.setJsDocNode(comment39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode42.getSymbols();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scope30, (com.google.javascript.rhino.head.Node) scriptNode42);
        scriptNode42.setEncodedSource("-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        scriptNode42.setLineno(26);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode42.getSymbols();
        scriptNode0.setSymbols(symbolList55);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                        {\n                                        }\n" + "'", str14, "                                        {\n                                        }\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNotNull(symbolList55);
    }

    @Test
    public void test12605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12605");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode6.getTop();
        scriptNode15.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        scope78.setPosition(2);
        scope78.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope78);
        node4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        scriptNode34.setEncodedSourceBounds(14, 24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode91 = scriptNode34.getTop();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode34.setBaseLineno((-748421155));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertNotNull(scriptNode91);
    }

    @Test
    public void test12606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12606");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(21, 2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        java.lang.String str8 = scriptNode3.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scriptNode3.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode3.getParentScope();
        java.lang.String str11 = scriptNode3.getNextTempName();
        node2.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode3);
        int int13 = scriptNode3.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Symbol symbol14 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode3.putSymbol(symbol14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                                      " + "'", str8, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test12607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12607");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        scriptNode1.setEncodedSourceEnd(18);
        java.lang.String str6 = scriptNode1.makeIndent((int) '#');
        scriptNode1.setRelative(371991955);
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(197839691, (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode11);
        scriptNode11.setRelative(8);
        scriptNode11.setBaseLineno(6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode11.getChildScopes();
        scriptNode11.putIntProp(1583199871, (-7));
        boolean boolean21 = scriptNode11.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope(0);
        java.lang.Object obj25 = scope23.getProp((-243114478));
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType29, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        scriptNode32.setEncodedSourceEnd(18);
        java.lang.String str37 = scriptNode32.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment31, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int39 = scriptNode32.depth();
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope23, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        int int43 = scope23.getIntProp(13, 14);
        node9.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope23);
        int int45 = scriptNode11.getLength();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                      " + "'", str6, "                                                                      ");
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                      " + "'", str37, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 14 + "'", int43 == 14);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test12608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12608");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode27.getFunctions();
        int int39 = scriptNode27.getLength();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        scope41.setPosition(2);
        scope41.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node49 = scope41.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        java.lang.String str55 = scriptNode50.makeIndent((int) '#');
        scope41.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        scope58.setPosition(2);
        scope58.putIntProp(17, 25);
        scope58.setLength((int) ' ');
        scriptNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) scope58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        int int72 = scriptNode70.getBaseLineno();
        java.lang.Object obj73 = scriptNode70.getCompilerData();
        scriptNode70.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode70.getSymbols();
        scope58.setTop(scriptNode70);
        scriptNode70.setEncodedSourceBounds((int) (short) -1, 19);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = scriptNode70.getSymbols();
        scriptNode27.setSymbols(symbolList82);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "                                                                      " + "'", str55, "                                                                      ");
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertNotNull(symbolList82);
    }

    @Test
    public void test12609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12609");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode19.getIntProp(6, 2);
        scriptNode19.setEndLineno(18);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode19, (int) (byte) -1);
        int int35 = scriptNode19.getEncodedSourceStart();
        scriptNode19.setPosition((-26522106));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    }

    @Test
    public void test12610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12610");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(18);
        java.lang.Object obj16 = scriptNode13.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node55 = scriptNode44.target;
        scriptNode13.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        int int57 = scriptNode44.getLineno();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode44);
        java.lang.String str59 = scriptNode44.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str69 = scriptNode60.getSourceName();
        int int70 = scriptNode60.getAbsolutePosition();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap71 = scriptNode60.getSymbolTable();
        scriptNode60.setEndLineno(15);
        scriptNode44.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList75 = scriptNode44.getFunctions();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor76 = scriptNode44.iterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                    {\n                                    }\n" + "'", str15, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(functionNodeList75);
        org.junit.Assert.assertNotNull(nodeItor76);
    }

    @Test
    public void test12611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12611");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.lang.String str10 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = scope1.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.Scope scope12 = scope1.getEnclosingScope();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(functionNode11);
        org.junit.Assert.assertNull(scope12);
    }

    @Test
    public void test12612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12612");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        java.lang.String str52 = scriptNode39.debugPrint();
        scriptNode39.setPosition(8);
        int int55 = scriptNode39.getParamCount();
        scriptNode39.setPosition((int) (byte) 10);
        scriptNode17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        int int72 = scriptNode61.getIntProp(6, 2);
        int int73 = scriptNode61.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope75 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope77 = scope75.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node78 = scope75.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        scope75.setJsDocNode(comment84);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType90 = null;
        com.google.javascript.rhino.head.ast.Comment comment92 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType90, "Scope");
        scriptNode87.setParent((com.google.javascript.rhino.head.ast.AstNode) comment92);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList94 = scriptNode87.getSymbols();
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) scope75, (com.google.javascript.rhino.head.Node) scriptNode87);
        scriptNode39.putProp(6, (java.lang.Object) scriptNode61);
        boolean boolean97 = scriptNode61.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList98 = scriptNode61.getFunctions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str52, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(scope77);
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertNotNull(symbolList94);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(functionNodeList98);
    }

    @Test
    public void test12613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12613");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        comment11.setCommentType(commentType14);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment11, 14);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = comment11.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        comment11.setCommentType(commentType19);
        comment11.setPosition(1);
        java.lang.String str24 = comment11.toSource(2);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = comment11.getCommentType();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(commentType18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "    Scope" + "'", str24, "    Scope");
        org.junit.Assert.assertNull(commentType25);
    }

    @Test
    public void test12614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12614");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = scriptNode0.getTop();
        scriptNode27.setEndLineno(10);
        scriptNode27.setRelative(2);
        com.google.javascript.rhino.head.ast.Scope scope32 = scriptNode27.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node33 = scope32.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertNull(scope32);
    }

    @Test
    public void test12615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12615");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope1.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = scope1.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.getLastSibling();
        scriptNode6.setEncodedSourceEnd(136);
        boolean boolean11 = scriptNode6.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode13.getIntProp(23, (int) (short) 1);
        boolean boolean17 = scriptNode13.hasSideEffects();
        int int18 = scriptNode13.depth();
        int int19 = scriptNode13.getFunctionCount();
        int int20 = scriptNode13.getEncodedSourceEnd();
        java.lang.String str22 = scriptNode13.toSource((-547629399));
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str24 = scope1.toStringTree(scriptNode13);
        java.lang.String str26 = scriptNode13.makeIndent(35);
        int int27 = scriptNode13.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Symbol symbol28 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.putSymbol(symbol28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(scopeList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                      " + "'", str26, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 11 + "'", int27 == 11);
    }

    @Test
    public void test12616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12616");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node49 = scriptNode38.target;
        scriptNode0.setTop(scriptNode38);
        scriptNode38.setEncodedSourceBounds(942365810, (-1121821920));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(node49);
    }

    @Test
    public void test12617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12617");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getPosition();
        com.google.javascript.rhino.head.Node node13 = null;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str49 = scriptNode40.getSourceName();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode40, 26);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node36, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.Node node53 = scriptNode40.getLastSibling();
        int int54 = node53.getType();
        node53.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.replaceChild(node13, node53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-53) + "'", int12 == (-53));
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 136 + "'", int54 == 136);
    }

    @Test
    public void test12618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12618");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode1.setLineno(12);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode1.getFunctions();
        scriptNode1.flattenSymbolTable(false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(functionNodeList38);
    }

    @Test
    public void test12619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12619");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment4 = scriptNode0.getJsDocNode();
        int int5 = scriptNode0.getBaseLineno();
        scriptNode0.setEncodedSourceBounds(129, 7);
        int int9 = scriptNode0.getEncodedSourceEnd();
        boolean boolean10 = scriptNode0.hasSideEffects();
        scriptNode0.setEncodedSourceBounds((-927222420), (-1324633820));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(comment4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test12620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12620");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = null;
        scriptNode0.setSymbolTable(strMap6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode8.toSource(18);
        int int11 = scriptNode8.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment12 = scriptNode8.getJsDocNode();
        int int13 = scriptNode8.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode8.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol19 = scope17.getSymbol("$0");
        boolean boolean20 = scope17.hasSideEffects();
        boolean boolean21 = scope17.hasChildren();
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) scope17);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = scriptNode24.getSymbols();
        java.lang.String str32 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.getLastSibling();
        scriptNode33.setEncodedSource("Scope");
        scriptNode33.setEndLineno(100);
        scriptNode24.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope42.putProp(25, (java.lang.Object) 100L);
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) scope42);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope50 = scope48.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node51 = scope48.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scope48.setJsDocNode(comment57);
        scope48.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getEncodedSource();
        int int65 = scriptNode63.getBaseLineno();
        java.lang.Object obj66 = scriptNode63.getCompilerData();
        scriptNode63.setEncodedSourceBounds((int) '4', 0);
        scope48.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode63);
        scope48.setPosition(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = scriptNode73.getTop();
        scriptNode82.setPosition(6);
        scope48.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode82);
        scriptNode24.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode82);
        scriptNode82.flattenSymbolTable(false);
        java.lang.String str89 = scriptNode82.getEncodedSource();
        int int90 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode82);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode92 = scriptNode0.getFunctionNode(11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                    {\n                                    }\n" + "'", str10, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(comment12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNull(symbol19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(symbolList31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str32, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNull(scope50);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(scriptNode82);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test12621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12621");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        scope24.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        int int41 = scriptNode39.getBaseLineno();
        java.lang.Object obj42 = scriptNode39.getCompilerData();
        scriptNode39.setEncodedSourceBounds((int) '4', 0);
        scope24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        scope24.setPosition(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode49.getTop();
        scriptNode58.setPosition(6);
        scope24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        scriptNode58.setEncodedSourceEnd((int) '#');
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol69 = scope67.getSymbol("$0");
        int int70 = scope67.getPosition();
        int int71 = scriptNode58.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope67);
        int int72 = scriptNode58.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope73 = scriptNode58.getParentScope();
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNull(symbol69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(scope73);
    }

    @Test
    public void test12622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12622");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        scope1.setPosition(5);
        scope1.putIntProp(1, 3);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode29 = scope1.getEnclosingFunction();
        scope1.setRelative((int) (byte) 10);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(functionNode29);
    }

    @Test
    public void test12623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12623");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        int int27 = scriptNode10.getLineno();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
    }

    @Test
    public void test12624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12624");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(5, "                          {\n                            {\n                            }\n                          }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test12625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12625");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        int int14 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode0.getParentScope();
        boolean boolean16 = scriptNode0.hasConsistentReturnUsage();
        java.lang.String str17 = scriptNode0.getJsDoc();
        scriptNode0.setSourceName("                        {\n}\n");
        boolean boolean20 = scriptNode0.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test12626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12626");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (short) 10, 7, commentType2, "");
        comment4.removeChildren();
        java.lang.String str6 = comment4.getValue();
        int int7 = comment4.getLength();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 7 + "'", int7 == 7);
    }

    @Test
    public void test12627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12627");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setEncodedSource("-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        scriptNode27.setLineno(26);
        java.lang.Object obj41 = scriptNode27.getProp(1558149202);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test12628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12628");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node11 = scriptNode0.target;
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray13 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList14, symbolArray13);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList14);
        int int17 = scriptNode0.getType();
        com.google.javascript.rhino.head.ast.AstNode astNode18 = scriptNode0.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scriptNode30.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        scriptNode34.target = scriptNode36;
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setEncodedSourceEnd(11);
        java.lang.String str44 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode36);
        java.lang.String str48 = scriptNode36.getEncodedSource();
        com.google.javascript.rhino.head.Node node49 = scriptNode36.target;
        int int50 = scriptNode36.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap51 = null;
        scriptNode36.setSymbolTable(strMap51);
        boolean boolean53 = scriptNode36.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode54.toSource(18);
        int int57 = scriptNode54.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment58 = scriptNode54.getJsDocNode();
        int int59 = scriptNode54.getBaseLineno();
        scriptNode54.setEncodedSourceBounds(129, 7);
        int int63 = scriptNode54.getEncodedSourceEnd();
        scriptNode36.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        int int66 = scriptNode36.getRegexpCount();
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(symbolArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 136 + "'", int17 == 136);
        org.junit.Assert.assertNotNull(astNode18);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str48, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                                    {\n                                    }\n" + "'", str56, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(comment58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 7 + "'", int63 == 7);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test12629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12629");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node4 = scope3.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        scriptNode5.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode5.setLineno((int) '#');
        int int22 = scriptNode5.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = scriptNode5.getEnclosingFunction();
        int int24 = scriptNode5.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope29 = scriptNode26.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode26.setSourceName("");
        com.google.javascript.rhino.head.ast.AstNode astNode32 = scriptNode26.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode26.getChildScopes();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(98666588, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scriptNode26, (-243114478));
        int int36 = scriptNode26.getEncodedSourceEnd();
        scriptNode26.setLength(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int41 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        scriptNode42.setEncodedSourceEnd(18);
        scriptNode40.target = scriptNode42;
        com.google.javascript.rhino.head.Node node47 = scriptNode42.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope48 = scriptNode42.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scriptNode50.setEncodedSourceStart((int) (byte) 100);
        int int61 = scriptNode50.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode62 = scriptNode50.getParent();
        scriptNode42.putProp((int) 'a', (java.lang.Object) scriptNode50);
        java.lang.Object obj64 = scriptNode42.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode26, (com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        java.lang.String str66 = scriptNode26.toString();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 35 + "'", int22 == 35);
        org.junit.Assert.assertNull(functionNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(astNode32);
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertNotNull(astNode62);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "136" + "'", str66, "136");
    }

    @Test
    public void test12630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12630");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 10);
        scriptNode1.setSourceName("                                              Scope");
        scriptNode1.setSourceName("      ");
        // The following exception was thrown during execution in test generation
        try {
            int int6 = scriptNode1.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12631");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.Object obj72 = scriptNode23.getProp((int) (byte) -1);
        java.lang.Object obj73 = scriptNode23.getCompilerData();
        scriptNode23.setLineno(0);
        int int76 = scriptNode23.getLineno();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test12632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12632");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node3 = scope2.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope5.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scope23.setJsDocNode(comment32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode35.getSymbols();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) scope23, (com.google.javascript.rhino.head.Node) scriptNode35);
        scriptNode35.setPosition((int) (byte) 0);
        scope5.setTop(scriptNode35);
        java.lang.String str48 = scriptNode35.makeIndent((int) (short) 100);
        int int49 = scriptNode35.getFunctionCount();
        scope2.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode35);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = scriptNode35.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "                                                                                                                                                                                                        " + "'", str48, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test12633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12633");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        int int14 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode0.getParentScope();
        boolean boolean16 = scriptNode0.hasConsistentReturnUsage();
        java.lang.String str17 = scriptNode0.getJsDoc();
        int int18 = scriptNode0.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = scriptNode0.getParamOrVarName(51160157);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test12634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12634");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(135381063, (-824625719), commentType2, "-");
        // The following exception was thrown during execution in test generation
        try {
            comment4.setDouble((double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Comment cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12635");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.Node node60 = scriptNode25.target;
        java.lang.String str61 = scriptNode25.toSource();
        scriptNode25.setPosition(5);
        com.google.javascript.rhino.head.ast.Comment comment64 = scriptNode25.getJsDocNode();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap65 = scriptNode25.getSymbolTable();
        int int66 = scriptNode25.getEncodedSourceStart();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(comment64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
    }

    @Test
    public void test12636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12636");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        scope1.setPosition(0);
        scope1.setLength(13);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        scope15.putIntProp(17, 25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = scriptNode24.getSymbols();
        java.lang.String str32 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.getLastSibling();
        scriptNode33.setEncodedSource("Scope");
        scriptNode33.setEndLineno(100);
        scriptNode24.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope42.putProp(25, (java.lang.Object) 100L);
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) scope42);
        scope15.addChildrenToFront((com.google.javascript.rhino.head.Node) scope42);
        int int48 = scope1.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        scope51.setPosition(2);
        int int57 = scope51.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope58 = scope51.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator59 = scope51.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope63 = scope61.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node64 = scope61.target;
        scope61.setPosition(2);
        int int67 = scope61.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope68 = scope61.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator69 = scope61.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        int int72 = scriptNode70.getBaseLineno();
        java.lang.Object obj73 = scriptNode70.getCompilerData();
        scriptNode70.flattenSymbolTable(false);
        scope51.addChildAfter((com.google.javascript.rhino.head.Node) scope61, (com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode70.putIntProp(12, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.AstNode astNode80 = scriptNode70.getParent();
        scope15.putProp((int) ' ', (java.lang.Object) scriptNode70);
        scriptNode70.setSourceName("35\tSCRIPT 35 1\n");
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str32, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(scope58);
        org.junit.Assert.assertNotNull(nodeSpliterator59);
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNotNull(nodeSpliterator69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(astNode80);
    }

    @Test
    public void test12637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12637");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        boolean boolean14 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean17 = scope16.hasSideEffects();
        java.lang.String str18 = scope16.toSource();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean21 = scope20.hasSideEffects();
        java.lang.String str22 = scope20.toSource();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scope20, 17);
        int int25 = scope16.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope26 = com.google.javascript.rhino.head.ast.Scope.splitScope(scope16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test12638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12638");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment8 = scriptNode0.getJsDocNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scriptNode0.spliterator();
        scriptNode0.setSourceName("129");
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("/");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node14 = scriptNode0.getChildBefore(node13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(comment8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNotNull(node13);
    }

    @Test
    public void test12639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12639");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, (-1121821920), commentType2, "-1\t  ENUM_INIT_KEYS -53 1\n-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test12640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12640");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode13.getType();
        java.lang.String str19 = scriptNode13.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode13.getSymbols();
        scriptNode13.setBounds(1, 26);
        com.google.javascript.rhino.head.Node node25 = scriptNode13.setType(98666588);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode13.getFunctions();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str19, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(functionNodeList26);
    }

    @Test
    public void test12641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12641");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 100, commentType2, "                                                                                                        Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = scriptNode7.getTop();
        scriptNode16.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int21 = scriptNode20.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getEncodedSource();
        scriptNode22.setEncodedSourceEnd(18);
        scriptNode20.target = scriptNode22;
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scriptNode22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str40 = scriptNode31.getSourceName();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode31, 26);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node27, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Node node44 = scriptNode31.getLastSibling();
        boolean boolean45 = scriptNode31.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        scriptNode31.putProp((int) (byte) 0, (java.lang.Object) int58);
        com.google.javascript.rhino.head.ast.AstNode astNode60 = scriptNode31.getParent();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) scope61);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = scriptNode31.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = scriptNode66.getTop();
        scriptNode75.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int80 = scriptNode79.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str82 = scriptNode81.getEncodedSource();
        scriptNode81.setEncodedSourceEnd(18);
        scriptNode79.target = scriptNode81;
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode75, (com.google.javascript.rhino.head.Node) scriptNode81);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList87 = null;
        scriptNode81.setSymbols(symbolList87);
        java.lang.String str89 = scriptNode81.getJsDoc();
        java.lang.String str90 = scriptNode81.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode91 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str92 = scriptNode91.getEncodedSource();
        int int93 = scriptNode91.getBaseLineno();
        java.lang.Object obj94 = scriptNode91.getCompilerData();
        com.google.javascript.rhino.head.Node node96 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode81, (com.google.javascript.rhino.head.Node) scriptNode91, (-51));
        int int97 = scriptNode81.getBaseLineno();
        scriptNode31.setTop(scriptNode81);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node99 = comment4.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertNotNull(astNode60);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test12642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12642");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        int int4 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("Scope");
        java.lang.Object obj7 = scriptNode0.getCompilerData();
        java.lang.String str9 = scriptNode0.toSource(161);
        java.lang.Object obj11 = scriptNode0.getProp(934127539);
        scriptNode0.setSourceName("                                                                                                                                                                                                                                                                                                                                  hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                                                                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                                                                                  }\n" + "'", str9, "                                                                                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test12643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12643");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope2.setPosition(100);
        com.google.javascript.rhino.head.Node node5 = scope2.getLastSibling();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((-366869103), node5, 11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode9);
        scriptNode9.setEndLineno(20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = scriptNode9.getEnclosingFunction();
        java.lang.String str14 = node7.toStringTree(scriptNode9);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray15 = scriptNode9.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(functionNode13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test12644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12644");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope72 = scope70.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node73 = scope70.target;
        scope70.setPosition(2);
        java.lang.String str76 = scope70.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap77 = scope70.getSymbolTable();
        boolean boolean78 = scope70.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        scriptNode79.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = scriptNode79.getTop();
        scope70.target = scriptNode79;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList90 = scriptNode79.getFunctions();
        scriptNode79.setEncodedSourceStart(52);
        int int93 = scriptNode79.getType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode23, (com.google.javascript.rhino.head.ast.Scope) scriptNode79);
        scriptNode23.setEncodedSourceStart(12);
        boolean boolean97 = scriptNode23.hasSideEffects();
        int int98 = scriptNode23.getParamCount();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNull(scope72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{\n}\n" + "'", str76, "{\n}\n");
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertNotNull(functionNodeList90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 136 + "'", int93 == 136);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test12645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12645");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        scriptNode37.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str51 = scriptNode37.makeIndent(0);
        java.lang.String str52 = scriptNode0.toStringTree(scriptNode37);
        scriptNode0.clearParentScope();
        scriptNode0.flattenSymbolTable(false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test12646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12646");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        java.lang.String str52 = scriptNode38.getNextTempName();
        int int53 = scriptNode38.getType();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode38.setEndLineno((-388664030));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 136 + "'", int53 == 136);
    }

    @Test
    public void test12647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12647");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        scope1.setLength((int) ' ');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = null;
        scope1.setSymbolTable(strMap12);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        java.lang.String str21 = scope15.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = scope15.getSymbolTable();
        boolean boolean23 = scope15.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode24.getTop();
        scope15.target = scriptNode24;
        com.google.javascript.rhino.head.Node node35 = scriptNode24.target;
        int int36 = scriptNode24.getPosition();
        scriptNode24.removeChildren();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList38 = scriptNode24.getStatements();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.lang.String str40 = scope1.toString();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = scope1.getEnclosingFunction();
        scope1.setPosition((-613442063));
        java.lang.String str44 = scope1.toString();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n}\n" + "'", str21, "{\n}\n");
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-53) + "'", int36 == (-53));
        org.junit.Assert.assertNotNull(astNodeList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "129" + "'", str40, "129");
        org.junit.Assert.assertNull(functionNode41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "129" + "'", str44, "129");
    }

    @Test
    public void test12648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12648");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        com.google.javascript.rhino.head.Node node28 = scriptNode10.setType((int) (short) 10);
        scriptNode10.setEncodedSourceBounds(13, 129);
        boolean boolean32 = scriptNode10.hasSideEffects();
        scriptNode10.setSourceName("            {\n            }\n");
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test12649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12649");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node16 = scriptNode6.getLastChild();
        int int17 = scriptNode6.getEndLineno();
        java.lang.String str18 = scriptNode6.toSource();
        int int19 = scriptNode6.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        java.lang.String str25 = scriptNode20.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scriptNode20.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope27 = scriptNode20.getParentScope();
        scriptNode20.clearParentScope();
        scriptNode20.setSourceName("                                                                                                        Scope");
        scriptNode20.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int41 = scriptNode32.getEncodedSourceStart();
        int int42 = scriptNode32.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scope44.setJsDocNode(comment53);
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        comment53.setCommentType(commentType56);
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = comment53.getAstRoot();
        scriptNode32.setJsDocNode(comment53);
        scriptNode20.setCompilerData((java.lang.Object) scriptNode32);
        scriptNode6.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment(16, 0, commentType64, "                                                                                                        ");
        int int67 = comment66.getLineno();
        scriptNode32.setJsDocNode(comment66);
        com.google.javascript.rhino.head.Token.CommentType commentType69 = comment66.getCommentType();
        comment66.setPosition(0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                                                                      " + "'", str25, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(astRoot58);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(commentType69);
    }

    @Test
    public void test12650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12650");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        java.lang.String str90 = scriptNode0.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol92 = scriptNode0.getSymbol("                                                                                                                                                                                                        Scope");
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor94 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "136" + "'", str90, "136");
        org.junit.Assert.assertNull(symbol92);
    }

    @Test
    public void test12651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12651");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = scriptNode27.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setEndLineno(20);
        scriptNode39.removeProp((int) 'a');
        scriptNode27.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope47.setPosition(100);
        com.google.javascript.rhino.head.Node node50 = scope47.getLastSibling();
        node50.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = node50.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = scriptNode54.getTop();
        scriptNode63.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int68 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getEncodedSource();
        scriptNode69.setEncodedSourceEnd(18);
        scriptNode67.target = scriptNode69;
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = null;
        scriptNode69.setSymbols(symbolList75);
        node50.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        scriptNode69.putIntProp(136, 35);
        scriptNode27.target = scriptNode69;
        int int82 = scriptNode27.getBaseLineno();
        scriptNode27.setRelative(10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test12652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12652");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        java.lang.String str40 = comment35.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode36, node42);
        scriptNode36.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str55 = scriptNode46.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope57.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope57, (int) (byte) 10);
        java.lang.String str63 = scriptNode36.getNextTempName();
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        scriptNode0.setEncodedSourceStart(98666588);
        int int67 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node68 = null;
        com.google.javascript.rhino.head.Node node70 = com.google.javascript.rhino.head.Node.newString("                                    {\n                                    }\n");
        boolean boolean71 = node70.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.replaceChild(node68, node70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test12653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12653");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(70, "                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test12654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12654");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(13);
        int int4 = scriptNode1.getIntProp(161, (int) (byte) -1);
        scriptNode1.setEncodedSourceBounds(727575172, (-613442063));
        int int8 = scriptNode1.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = scriptNode1.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test12655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12655");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode42.setEndLineno(18);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode42, (int) (byte) -1);
        scriptNode16.target = scriptNode42;
        int int59 = scriptNode42.getLineno();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test12656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12656");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        node4.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = node4.spliterator();
        com.google.javascript.rhino.head.Node node7 = node4.getFirstChild();
        java.lang.Class<?> wildcardClass8 = node4.getClass();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test12657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12657");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        int int8 = scope2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        scope10.setPosition(2);
        scope10.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        java.lang.String str32 = comment28.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = comment28.getAstRoot();
        scope10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        int int50 = scriptNode48.getBaseLineno();
        java.lang.String str51 = scriptNode48.getNextTempName();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) scriptNode48, 136);
        int int57 = scope2.getIntProp((int) (byte) 10, 23);
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode64.getEncodedSource();
        scriptNode64.setEncodedSourceEnd(18);
        java.lang.String str68 = comment63.toStringTree(scriptNode64);
        com.google.javascript.rhino.head.Node node70 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode64, node70);
        scriptNode64.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node74 = scriptNode64.getLastChild();
        int int75 = scriptNode64.getEndLineno();
        scope2.setTop(scriptNode64);
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType79, "Scope");
        java.lang.String str82 = comment81.getValue();
        scriptNode64.addChildrenToFront((com.google.javascript.rhino.head.Node) comment81);
        java.lang.String str85 = comment81.toSource(0);
        com.google.javascript.rhino.head.Node node86 = comment81.getLastChild();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    Scope" + "'", str32, "                    Scope");
        org.junit.Assert.assertNull(astRoot33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 23 + "'", int57 == 23);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Scope" + "'", str82, "Scope");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Scope" + "'", str85, "Scope");
        org.junit.Assert.assertNull(node86);
    }

    @Test
    public void test12658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12658");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(1558149202);
        scriptNode1.setSourceName("                    ^");
    }

    @Test
    public void test12659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12659");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int12 = scriptNode9.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope14.setPosition(100);
        com.google.javascript.rhino.head.Node node17 = scope14.getLastSibling();
        node17.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = node17.spliterator();
        scriptNode9.setCompilerData((java.lang.Object) node17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        scriptNode36.target = scriptNode38;
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment48);
        java.lang.String str50 = scriptNode9.toStringTree(scriptNode32);
        scope1.setTop(scriptNode32);
        scope1.setLineno((int) (short) -1);
        int int54 = scope1.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump55 = scope1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
    }

    @Test
    public void test12660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12660");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        int int38 = scriptNode36.getBaseLineno();
        java.lang.String str39 = scriptNode36.getNextTempName();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str47 = scope45.toSource(12);
        scope45.setRelative(1);
        scriptNode36.putProp(17, (java.lang.Object) 1);
        scriptNode10.target = scriptNode36;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode52 = scriptNode36.getEnclosingFunction();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str41, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                        {\n                        }\n" + "'", str47, "                        {\n                        }\n");
        org.junit.Assert.assertNull(functionNode52);
    }

    @Test
    public void test12661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12661");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        int int25 = scriptNode0.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = scriptNode0.getRegexpFlags(581273883);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test12662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12662");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode0.getTop();
        int int13 = scriptNode12.getLength();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = scriptNode12.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode15.getSymbols();
        java.lang.String str23 = scriptNode15.debugPrint();
        scriptNode15.setBaseLineno((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = functionNode14.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNull(functionNode14);
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str23, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test12663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12663");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scriptNode0.new NodeIterator();
        java.lang.String str11 = scriptNode0.shortName();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray12 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList13, symbolArray12);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList13);
        scriptNode0.flattenSymbolTable(false);
        int int18 = scriptNode0.getParamAndVarCount();
        java.lang.String str20 = scriptNode0.toSource(58);
        scriptNode0.flattenSymbolTable(false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertNotNull(symbolArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                    {\n                                                                                                                    }\n" + "'", str20, "                                                                                                                    {\n                                                                                                                    }\n");
    }

    @Test
    public void test12664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12664");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        java.lang.String str40 = scriptNode26.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode42);
        scriptNode42.setEndLineno(20);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode26, (com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        int int47 = scriptNode26.getRegexpCount();
        scriptNode26.setEncodedSource("                                                Scope");
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 100, 10, commentType52, "{\n{\n}\n}\n");
        java.lang.String str55 = comment54.getValue();
        java.lang.String str56 = comment54.getValue();
        boolean boolean57 = comment54.hasConsistentReturnUsage();
        scriptNode26.setJsDocNode(comment54);
        java.lang.String str59 = scriptNode26.getNextTempName();
        int int60 = scriptNode26.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = scriptNode26.getEnclosingFunction();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n{\n}\n}\n" + "'", str55, "{\n{\n}\n}\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{\n{\n}\n}\n" + "'", str56, "{\n{\n}\n}\n");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(functionNode61);
    }

    @Test
    public void test12665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12665");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        int int14 = scriptNode4.getType();
        java.lang.String str15 = scriptNode4.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = scriptNode4.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 136 + "'", int14 == 136);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
    }

    @Test
    public void test12666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12666");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        int int43 = scriptNode24.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode45.getSymbols();
        com.google.javascript.rhino.head.ast.Symbol symbol48 = scriptNode45.getSymbol("^");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        com.google.javascript.rhino.head.Node node51 = scriptNode49.getLastSibling();
        scriptNode49.setEncodedSource("Scope");
        scriptNode49.setEndLineno(100);
        scriptNode49.putIntProp(14, 3);
        java.lang.String str59 = scriptNode45.toStringTree(scriptNode49);
        java.lang.String str60 = scriptNode45.getEncodedSource();
        scriptNode24.setTop(scriptNode45);
        java.lang.String str63 = scriptNode24.toSource(4);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertNull(symbol48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "        {\n        }\n" + "'", str63, "        {\n        }\n");
    }

    @Test
    public void test12667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12667");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("                                              Scope");
        java.lang.String str3 = scriptNode0.getJsDoc();
        scriptNode0.setEndLineno(8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scope21.setJsDocNode(comment30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode33);
        scriptNode33.setPosition((int) (byte) 0);
        scriptNode33.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getParamCount();
        java.lang.String str59 = scriptNode46.debugPrint();
        int int62 = scriptNode46.getIntProp(17, 10);
        scriptNode33.setTop(scriptNode46);
        int int64 = scriptNode46.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode46.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode46.getSymbols();
        scriptNode0.setSymbols(symbolList66);
        int int68 = scriptNode0.getLength();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str59, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test12668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12668");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope41 = scope39.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node42 = scope39.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scope39.setJsDocNode(comment48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode51.getSymbols();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope39, (com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        scriptNode18.putIntProp((-1), 13);
        int int64 = scriptNode18.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol66 = scriptNode18.getSymbol("                                                                                                                                                                                                        Scope");
        int int67 = scriptNode18.getFunctionCount();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = scriptNode18.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj72 = scriptNode71.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        boolean boolean77 = scriptNode74.hasSideEffects();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode74.visit(nodeVisitor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 18 + "'", int64 == 18);
        org.junit.Assert.assertNull(symbol66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test12669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12669");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.Object obj72 = scriptNode23.getProp((int) (byte) -1);
        java.lang.Object obj73 = scriptNode23.getCompilerData();
        scriptNode23.setEncodedSourceBounds(2, 2);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList77 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.ast.Scope scope78 = scriptNode23.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode23.setString("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(functionNodeList77);
        org.junit.Assert.assertNull(scope78);
    }

    @Test
    public void test12670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12670");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode19.getIntProp(6, 2);
        scriptNode19.setEndLineno(18);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode19, (int) (byte) -1);
        int int35 = scriptNode19.getEncodedSourceStart();
        scriptNode19.setLineno(9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    }

    @Test
    public void test12671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12671");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        int int25 = scriptNode0.getLineno();
        int int26 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = null;
        scope29.setTop(scriptNode33);
        scriptNode27.target = scope29;
        int int36 = scriptNode27.getEncodedSourceStart();
        int int37 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.Node node38 = scriptNode0.target;
        java.lang.String str39 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = scriptNode41.getTop();
        scriptNode50.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int55 = scriptNode54.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        scriptNode56.setEncodedSourceEnd(18);
        scriptNode54.target = scriptNode56;
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scriptNode56);
        scriptNode56.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.Node node65 = scriptNode56.setType((int) (byte) 10);
        scriptNode56.clearParentScope();
        boolean boolean67 = scriptNode56.hasChildren();
        int int68 = scriptNode56.depth();
        scriptNode0.setTop(scriptNode56);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 53 + "'", int26 == 53);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1\t  SCRIPT -53 53\n51\t    SCRIPT 52 1\n" + "'", str39, "-1\t  SCRIPT -53 53\n51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test12672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12672");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int40 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        scriptNode39.target = scriptNode41;
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scriptNode50.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str59 = scriptNode50.getSourceName();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode50, 26);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node46, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        int int74 = scriptNode63.getIntProp(6, 2);
        scriptNode63.setEndLineno(18);
        scriptNode50.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode50.flattenSymbolTable(false);
        scriptNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        boolean boolean81 = scriptNode10.hasSideEffects();
        int int82 = scriptNode10.getType();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 136 + "'", int82 == 136);
    }

    @Test
    public void test12673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12673");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = null;
        scope15.setTop(scriptNode19);
        scriptNode13.target = scope15;
        int int22 = scriptNode13.getEncodedSourceStart();
        scope1.setTop(scriptNode13);
        scriptNode13.setEncodedSourceStart((-53));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scriptNode53.setEncodedSourceStart((int) (byte) 100);
        int int64 = scriptNode53.getIntProp(6, 2);
        int int65 = scriptNode53.getParamCount();
        scriptNode40.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = scriptNode40.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = scriptNode40.getSymbolTable();
        scriptNode40.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int74 = scriptNode73.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope76 = scriptNode73.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str77 = scriptNode73.shortName();
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope81 = scope79.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node82 = scope79.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType86 = null;
        com.google.javascript.rhino.head.ast.Comment comment88 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType86, "Scope");
        scriptNode83.setParent((com.google.javascript.rhino.head.ast.AstNode) comment88);
        scope79.setJsDocNode(comment88);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor91 = scope79.iterator();
        boolean boolean92 = scope79.hasSideEffects();
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scriptNode73, (com.google.javascript.rhino.head.Node) scope79, 8);
        int int95 = scriptNode40.getEncodedSourceStart();
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode97 = scriptNode40.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            int int98 = scriptNode13.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ScriptNode" + "'", str77, "ScriptNode");
        org.junit.Assert.assertNull(scope81);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNotNull(nodeItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 100 + "'", int95 == 100);
        org.junit.Assert.assertNull(functionNode97);
    }

    @Test
    public void test12674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12674");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 5, commentType2, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        comment4.setPosition(16);
        com.google.javascript.rhino.head.Token.CommentType commentType7 = comment4.getCommentType();
        java.lang.String str8 = comment4.getValue();
        int int9 = comment4.getLineno();
        com.google.javascript.rhino.head.ast.AstNode astNode10 = comment4.getParent();
        org.junit.Assert.assertNull(commentType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(astNode10);
    }

    @Test
    public void test12675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12675");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        boolean boolean6 = scriptNode2.hasSideEffects();
        int int7 = scriptNode2.depth();
        int int8 = scriptNode2.getFunctionCount();
        int int9 = scriptNode2.getEncodedSourceEnd();
        int int10 = scriptNode2.getParamCount();
        int int11 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(1784707759, (com.google.javascript.rhino.head.Node) scriptNode2);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = scriptNode2.getExistingIntProp(812687858);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test12676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12676");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(581273883);
    }

    @Test
    public void test12677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12677");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        int int39 = scriptNode0.getPosition();
        com.google.javascript.rhino.head.Node node40 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment(17, 3, commentType43, "                                  Scope");
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (short) -1);
        comment45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        int int50 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode0.setLineno((-864528307));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test12678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12678");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode3.getEncodedSourceStart();
        int int13 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode58, 26);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node54, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode58);
        node70.setLineno(5);
        scriptNode14.setCompilerData((java.lang.Object) node70);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode3, node70);
        scriptNode3.setEncodedSource("                        {\n                        }\n");
        scriptNode3.setLength(384417477);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test12679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12679");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean22 = scriptNode5.hasChildren();
        java.lang.String str23 = scriptNode5.getEncodedSource();
        com.google.javascript.rhino.head.Node node24 = scriptNode5.getNext();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = scriptNode5.getAstRoot();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(astRoot25);
    }

    @Test
    public void test12680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12680");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(0, "                                                                                                                    ");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test12681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12681");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        java.lang.String str40 = comment35.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode36, node42);
        scriptNode36.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str55 = scriptNode46.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope57.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope57, (int) (byte) 10);
        java.lang.String str63 = scriptNode36.getNextTempName();
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        scriptNode0.setEncodedSourceStart(98666588);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = scriptNode0.getAstRoot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertNull(astRoot67);
    }

    @Test
    public void test12682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12682");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList2 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode3 = scriptNode1.getEnclosingFunction();
        scriptNode1.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scope21.setJsDocNode(comment30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode33);
        java.lang.String str42 = scriptNode33.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList43 = scriptNode33.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode45);
        scriptNode45.setEndLineno(20);
        scriptNode45.removeProp((int) 'a');
        scriptNode33.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode45);
        scriptNode45.setEncodedSourceBounds(16, 52);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode45);
        scriptNode1.putIntProp(69, (-314896491));
        org.junit.Assert.assertNotNull(functionNodeList2);
        org.junit.Assert.assertNull(functionNode3);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(astNodeList43);
    }

    @Test
    public void test12683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12683");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(213295120);
        java.lang.String str3 = scriptNode1.makeIndent((-26522106));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test12684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12684");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode2.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode39.getSymbols();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope27, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setPosition((int) (byte) 0);
        scriptNode39.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str53 = scriptNode39.makeIndent(0);
        java.lang.String str54 = scriptNode2.toStringTree(scriptNode39);
        java.lang.String str56 = scriptNode39.makeIndent(12);
        java.lang.String str57 = scriptNode39.getSourceName();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str68 = scriptNode59.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = scriptNode59.iterator();
        java.lang.String str70 = scriptNode59.debugPrint();
        java.lang.String str71 = scriptNode59.getSourceName();
        boolean boolean72 = scriptNode59.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = scriptNode59.getTop();
        scriptNode39.setCompilerData((java.lang.Object) scriptNode59);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                        " + "'", str56, "                        ");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str70, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(scriptNode73);
    }

    @Test
    public void test12685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12685");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-272528452));
        com.google.javascript.rhino.head.Node node2 = node1.getFirstChild();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test12686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12686");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        java.lang.String str6 = comment4.toSource(19);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        comment4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType52 = comment4.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        scriptNode53.setEncodedSourceEnd(18);
        java.lang.String str58 = scriptNode53.makeIndent((int) '#');
        int int61 = scriptNode53.getIntProp((int) '4', 4);
        scriptNode53.setRelative(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int68 = scriptNode65.getIntProp(23, (int) (short) 1);
        boolean boolean69 = scriptNode65.hasSideEffects();
        scriptNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode65);
        comment4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        scriptNode72.setEncodedSourceStart((int) (byte) 100);
        int int83 = scriptNode72.getIntProp(6, 2);
        int int84 = scriptNode72.getParamCount();
        java.lang.String str85 = scriptNode72.debugPrint();
        scriptNode72.setEncodedSourceStart((int) 'a');
        scriptNode72.setLength(874571570);
        int int90 = scriptNode53.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode72);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = scriptNode53.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                      Scope" + "'", str6, "                                      Scope");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(commentType52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                                                      " + "'", str58, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str85, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test12687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12687");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int4 = scope3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        java.lang.Object obj23 = comment16.getProp((int) (short) -1);
        java.lang.String str25 = comment16.makeIndent((int) (short) -1);
        scope3.setJsDocNode(comment16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode28.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope33.setPosition(100);
        com.google.javascript.rhino.head.Node node36 = scope33.getLastSibling();
        node36.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = node36.spliterator();
        scriptNode28.setCompilerData((java.lang.Object) node36);
        java.lang.String str40 = scriptNode28.getSourceName();
        int int41 = scriptNode28.getEncodedSourceStart();
        scriptNode28.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        java.lang.String str54 = comment49.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode50, node56);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode28.setSourceName("          {\n}\n");
        com.google.javascript.rhino.head.ast.Scope scope61 = scriptNode28.getParentScope();
        com.google.javascript.rhino.head.ast.Symbol symbol62 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope61.putSymbol(symbol62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNull(scope61);
    }

    @Test
    public void test12688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12688");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        int int5 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        int int21 = scriptNode19.getBaseLineno();
        java.lang.String str22 = scriptNode19.getNextTempName();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        scriptNode19.setSourceName("41");
        boolean boolean28 = scriptNode19.hasSideEffects();
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 129 + "'", int5 == 129);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str24, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test12689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12689");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode52.setPosition((int) (byte) 0);
        scriptNode52.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        java.lang.String str78 = scriptNode65.debugPrint();
        int int81 = scriptNode65.getIntProp(17, 10);
        scriptNode52.setTop(scriptNode65);
        scriptNode52.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node85 = scriptNode52.getLastChild();
        scriptNode9.setTop(scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList87 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope88 = scriptNode9.getEnclosingScope();
        scriptNode9.setEncodedSourceStart((int) ' ');
        java.lang.String str91 = scriptNode9.debugPrint();
        com.google.javascript.rhino.head.ast.Symbol symbol93 = scriptNode9.getSymbol("-1\tSCRIPT -1 1\n-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str78, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNotNull(symbolList87);
        org.junit.Assert.assertNull(scope88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n" + "'", str91, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(symbol93);
    }

    @Test
    public void test12690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12690");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getPosition();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str26 = scope24.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str39 = scriptNode30.getSourceName();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode30, 26);
        scriptNode28.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode30);
        java.lang.String str43 = scriptNode28.getNextTempName();
        scope24.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        int int45 = scriptNode28.getLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scriptNode28.spliterator();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-53) + "'", int22 == (-53));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator47);
    }

    @Test
    public void test12691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12691");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int6 = scriptNode3.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.Node node11 = scope8.getLastSibling();
        node11.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator13 = node11.spliterator();
        scriptNode3.setCompilerData((java.lang.Object) node11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = scriptNode17.getTop();
        scriptNode26.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode30.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        scriptNode32.setEncodedSourceEnd(18);
        scriptNode30.target = scriptNode32;
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) comment42);
        java.lang.String str44 = scriptNode3.toStringTree(scriptNode26);
        int int45 = scriptNode26.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        scriptNode46.setEndLineno(18);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scriptNode46);
        int int61 = scriptNode46.getEncodedSourceStart();
        java.lang.String str63 = scriptNode46.makeIndent((-547629399));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode((int) '4');
        com.google.javascript.rhino.head.Node node66 = scriptNode65.getLastChild();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(1487440633, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scriptNode65, (int) (byte) 1);
        java.lang.String str70 = scriptNode65.toSource((int) (short) 0);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor71 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode65.visit(nodeVisitor71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(nodeSpliterator13);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{\n}\n" + "'", str70, "{\n}\n");
    }

    @Test
    public void test12692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12692");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(812687858, (-399411339));
    }

    @Test
    public void test12693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12693");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.String str41 = scriptNode26.debugPrint();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = scriptNode26.spliterator();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = scriptNode26.getParent();
        int int44 = scriptNode26.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        java.lang.String str54 = comment49.toStringTree(scriptNode50);
        boolean boolean55 = scriptNode50.hasSideEffects();
        scriptNode50.setEndLineno(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        int int67 = scriptNode58.getEncodedSourceStart();
        int int68 = scriptNode58.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope72 = scope70.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node73 = scope70.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        scope70.setJsDocNode(comment79);
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        comment79.setCommentType(commentType82);
        com.google.javascript.rhino.head.ast.AstRoot astRoot84 = comment79.getAstRoot();
        scriptNode58.setJsDocNode(comment79);
        scriptNode50.setJsDocNode(comment79);
        java.lang.String str88 = comment79.toSource(161);
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) comment79);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str41, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertNotNull(astNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(scope72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNull(astRoot84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "                                                                                                                                                                                                                                                                                                                                  Scope" + "'", str88, "                                                                                                                                                                                                                                                                                                                                  Scope");
    }

    @Test
    public void test12694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12694");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        int int38 = scriptNode36.getBaseLineno();
        java.lang.String str39 = scriptNode36.getNextTempName();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str47 = scope45.toSource(12);
        scope45.setRelative(1);
        scriptNode36.putProp(17, (java.lang.Object) 1);
        scriptNode10.target = scriptNode36;
        java.lang.String str52 = scriptNode36.toSource();
        java.lang.String str53 = scriptNode36.getSourceName();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor54 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode36.visit(nodeVisitor54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str41, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                        {\n                        }\n" + "'", str47, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test12695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12695");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        java.lang.String str43 = scriptNode24.toString();
        int int44 = scriptNode24.getEncodedSourceStart();
        scriptNode24.setBounds((int) (byte) 100, 18);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor48 = scriptNode24.iterator();
        scriptNode24.flattenSymbolTable(false);
        boolean boolean51 = scriptNode24.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode(12);
        int int54 = scriptNode53.getLength();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap55 = scriptNode53.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scriptNode56.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str65 = scriptNode56.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor66 = scriptNode56.iterator();
        java.lang.String str67 = scriptNode56.debugPrint();
        java.lang.String str68 = scriptNode56.getSourceName();
        boolean boolean69 = scriptNode56.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scriptNode70.clearParentScope();
        scriptNode70.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node81 = scriptNode70.target;
        scriptNode70.clearParentScope();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray83 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList84, symbolArray83);
        scriptNode70.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList84);
        scriptNode56.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList84);
        scriptNode53.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList84);
        scriptNode24.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList84);
        scriptNode24.clearParentScope();
        java.lang.String str92 = scriptNode24.toSource(0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(nodeItor48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(nodeItor66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str67, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertNotNull(symbolArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "{\n}\n" + "'", str92, "{\n}\n");
    }

    @Test
    public void test12696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12696");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode4.getSymbol("/");
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode4.getParentScope();
        scriptNode4.setSourceName("                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
        int int20 = scriptNode4.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope22 = scriptNode4.getDefiningScope("typeof");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(scope22);
    }

    @Test
    public void test12697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12697");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str14 = scriptNode5.getSourceName();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode5, 26);
        scriptNode3.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        java.lang.String str18 = scriptNode3.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        scope21.setPosition(2);
        scope21.setLength((int) (byte) 1);
        java.lang.Object obj30 = scope21.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope21);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        java.lang.String str39 = scope33.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = scope33.getSymbolTable();
        boolean boolean41 = scope33.hasChildren();
        com.google.javascript.rhino.head.Node node42 = scope33.getNext();
        scope21.addChildrenToFront((com.google.javascript.rhino.head.Node) scope33);
        scriptNode3.addChildToBack((com.google.javascript.rhino.head.Node) scope33);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope33, 129);
        scope33.setLineno(100);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        scope51.setPosition(2);
        int int57 = scope51.depth();
        int int58 = scope51.getType();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(19, (com.google.javascript.rhino.head.Node) scope51, 17);
        scope33.replaceWith(scope51);
        scope51.setRelative(180367011);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((-1919164661), (com.google.javascript.rhino.head.Node) scope51, (int) (byte) 100);
        com.google.javascript.rhino.head.Node node66 = node65.getNext();
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{\n}\n" + "'", str39, "{\n}\n");
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 129 + "'", int58 == 129);
        org.junit.Assert.assertNull(node66);
    }

    @Test
    public void test12698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12698");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int60 = scriptNode25.getRegexpCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray61 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList62 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList62, symbolArray61);
        scriptNode25.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList62);
        scriptNode25.removeChildren();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode25.getSymbols();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(symbolArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(symbolList66);
    }

    @Test
    public void test12699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12699");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode1.setSourceName("");
        com.google.javascript.rhino.head.ast.AstNode astNode7 = scriptNode1.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode1.getChildScopes();
        int int9 = scriptNode1.getPosition();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(astNode7);
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 11 + "'", int9 == 11);
    }

    @Test
    public void test12700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12700");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newNumber((double) 100);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope(21, 15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode6.getSymbols();
        java.lang.String str14 = scriptNode6.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getEncodedSource();
        com.google.javascript.rhino.head.Node node17 = scriptNode15.getLastSibling();
        scriptNode15.setEncodedSource("Scope");
        scriptNode15.setEndLineno(100);
        scriptNode6.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope24.putProp(25, (java.lang.Object) 100L);
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.Node node29 = scriptNode6.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        int int41 = scriptNode30.getIntProp(6, 2);
        int int42 = scriptNode30.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        int int45 = scriptNode43.getBaseLineno();
        java.lang.String str46 = scriptNode43.getNextTempName();
        scriptNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode43);
        scriptNode43.setEncodedSource("                        ");
        int int50 = scriptNode43.getLineno();
        scriptNode6.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope55 = scope53.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node56 = scope53.target;
        scope53.setPosition(2);
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        scope60.setPosition(2);
        java.lang.String str66 = scope60.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap67 = scope60.getSymbolTable();
        boolean boolean68 = scope60.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scriptNode69.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = scriptNode69.getTop();
        scope60.target = scriptNode69;
        com.google.javascript.rhino.head.Node node80 = scriptNode69.target;
        scriptNode69.setBaseLineno(10);
        scope53.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope5, (com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(581273883, node2, (com.google.javascript.rhino.head.Node) scope5);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = scope5.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str14, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scope55);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{\n}\n" + "'", str66, "{\n}\n");
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test12701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12701");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList28 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        java.lang.String str37 = scriptNode29.debugPrint();
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        boolean boolean39 = scriptNode29.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode29.getSymbols();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(astNodeList28);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str37, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(symbolList40);
    }

    @Test
    public void test12702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12702");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scriptNode0.getParent();
        scriptNode0.setBounds(14, 4);
        java.lang.String str16 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = scriptNode0.getSymbol("          {\n{\n}\n}\n");
        java.lang.String str19 = scriptNode0.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = scriptNode0.getExistingIntProp((-864528307));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(astNode12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
    }

    @Test
    public void test12703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12703");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList28 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment29 = scriptNode0.getJsDocNode();
        java.lang.String str30 = scriptNode0.getEncodedSource();
        int int33 = scriptNode0.getIntProp((int) (short) -1, (-243114478));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(astNodeList28);
        org.junit.Assert.assertNull(comment29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-243114478) + "'", int33 == (-243114478));
    }

    @Test
    public void test12704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12704");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        scriptNode1.target = scriptNode3;
        com.google.javascript.rhino.head.Node node8 = scriptNode3.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope9 = scriptNode3.getParentScope();
        scriptNode3.setEndLineno(14);
        scriptNode3.setEncodedSourceEnd(51);
        scriptNode3.clearParentScope();
        java.lang.Object obj15 = scriptNode3.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray16 = scriptNode3.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test12705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12705");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-296494744));
    }

    @Test
    public void test12706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12706");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode13.flattenSymbolTable(false);
        scriptNode13.setSourceName("                                                                                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                                                                                  }\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = scriptNode13.getParamOrVarName(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test12707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12707");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(69, 0);
    }

    @Test
    public void test12708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12708");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        int int5 = scriptNode1.getEncodedSourceEnd();
        java.lang.String str6 = scriptNode1.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        java.lang.String str25 = scriptNode20.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode26.getSymbols();
        scriptNode20.setSymbols(symbolList33);
        int int35 = scriptNode20.getRegexpCount();
        scriptNode20.setEndLineno(0);
        scriptNode20.setEncodedSource("                                                                {\n                                                                }\n");
        scriptNode1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode20);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode1.getFunctions();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str25, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(functionNodeList41);
    }

    @Test
    public void test12709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12709");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = scope1.new NodeIterator();
        boolean boolean27 = nodeIterator26.hasNext();
        boolean boolean28 = nodeIterator26.hasNext();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test12710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12710");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        java.lang.Object obj10 = scope1.getProp((int) 'a');
        java.lang.String str11 = scope1.debugPrint();
        scope1.removeChildren();
        int int13 = scope1.getType();
        com.google.javascript.rhino.head.Node node15 = scope1.setType((-1379055074));
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "2\tBLOCK 2 1\n" + "'", str11, "2\tBLOCK 2 1\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 129 + "'", int13 == 129);
        org.junit.Assert.assertNotNull(node15);
    }

    @Test
    public void test12711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12711");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scriptNode29.spliterator();
        scriptNode29.putIntProp(5, (-243114478));
        scriptNode29.setEncodedSourceEnd((-1072816741));
        // The following exception was thrown during execution in test generation
        try {
            scriptNode29.setDouble((double) 1500056961);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNotNull(nodeSpliterator82);
    }

    @Test
    public void test12712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12712");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(581273883, 960854933);
    }

    @Test
    public void test12713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12713");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        java.lang.String str11 = scriptNode10.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = scriptNode12.getTop();
        java.lang.String str22 = scriptNode21.shortName();
        scriptNode10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.ast.Comment comment24 = null;
        scriptNode21.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope27, 10);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope31.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope51 = scope49.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node52 = scope49.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scope49.setJsDocNode(comment58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode61.getSymbols();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scope49, (com.google.javascript.rhino.head.Node) scriptNode61);
        scriptNode61.setPosition((int) (byte) 0);
        scope31.setTop(scriptNode61);
        int int73 = scriptNode61.getParamCount();
        boolean boolean74 = scriptNode61.hasConsistentReturnUsage();
        boolean boolean75 = scriptNode61.hasChildren();
        int int76 = scriptNode61.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = scriptNode61.getTop();
        java.lang.String str78 = scriptNode77.debugPrint();
        scriptNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode77);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node80 = scriptNode77.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ScriptNode" + "'", str22, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "52\t  SCRIPT 0 1\n" + "'", str78, "52\t  SCRIPT 0 1\n");
    }

    @Test
    public void test12714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12714");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode1.getSymbols();
        scriptNode1.setEncodedSourceBounds((int) (byte) 10, (int) (short) 1);
        scriptNode1.setEncodedSourceBounds(22, 98666588);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode1.getChildScopes();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertNull(scopeList21);
    }

    @Test
    public void test12715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12715");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 0);
        java.lang.String str2 = scriptNode1.getSourceName();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test12716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12716");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        int int8 = scriptNode0.getIntProp((int) '4', 4);
        scriptNode0.setRelative(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode12.getIntProp(23, (int) (short) 1);
        boolean boolean16 = scriptNode12.hasSideEffects();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int18 = scriptNode0.getPosition();
        int int19 = scriptNode0.getEndLineno();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-6) + "'", int18 == (-6));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test12717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12717");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = scriptNode0.getSymbolTable();
        int int29 = scriptNode0.getEndLineno();
        java.lang.String str31 = scriptNode0.toSource((-1805289491));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{\n{\n}\n}\n" + "'", str31, "{\n{\n}\n}\n");
    }

    @Test
    public void test12718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12718");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        scriptNode28.setEncodedSourceStart(7);
        boolean boolean64 = scriptNode28.hasChildren();
        com.google.javascript.rhino.head.ast.Symbol symbol66 = scriptNode28.getSymbol("                                  {\n                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = scriptNode28.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode67.getSymbols();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(symbol66);
        org.junit.Assert.assertNotNull(scriptNode67);
        org.junit.Assert.assertNotNull(symbolList68);
    }

    @Test
    public void test12719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12719");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setRelative((int) '4');
        scriptNode0.setEncodedSourceBounds(12, (-1666765792));
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray19 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test12720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12720");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(934127539);
        com.google.javascript.rhino.head.Node node2 = scope1.getLastChild();
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test12721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12721");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList17 = scriptNode0.getFunctions();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor18 = scriptNode0.iterator();
        boolean boolean19 = nodeItor18.hasNext();
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(functionNodeList17);
        org.junit.Assert.assertNotNull(nodeItor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test12722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12722");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        scriptNode1.setEndLineno(18);
        int int15 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = scriptNode1.getParentScope();
        boolean boolean17 = scriptNode1.hasConsistentReturnUsage();
        java.lang.String str18 = scriptNode1.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getParamCount();
        java.lang.String str33 = scriptNode20.debugPrint();
        scriptNode20.setPosition(8);
        int int36 = scriptNode20.getParamCount();
        scriptNode20.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode40.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope45.setPosition(100);
        com.google.javascript.rhino.head.Node node48 = scope45.getLastSibling();
        node48.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator50 = node48.spliterator();
        scriptNode40.setCompilerData((java.lang.Object) node48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = scriptNode54.getTop();
        scriptNode63.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int68 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getEncodedSource();
        scriptNode69.setEncodedSourceEnd(18);
        scriptNode67.target = scriptNode69;
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode69);
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) comment79);
        java.lang.String str81 = scriptNode40.toStringTree(scriptNode63);
        scriptNode20.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        com.google.javascript.rhino.head.ast.AstNode astNode83 = scriptNode63.getParent();
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astNode83);
        int int85 = scriptNode1.getLength();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump86 = scriptNode1.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str33, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(nodeSpliterator50);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(astNode83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
    }

    @Test
    public void test12723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12723");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        java.lang.String str38 = comment34.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment34);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator40 = node39.new NodeIterator();
        com.google.javascript.rhino.head.Node node41 = nodeIterator40.next();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getRegexpCount();
        java.lang.String str55 = scriptNode42.getSourceName();
        java.lang.String str56 = node41.toStringTree(scriptNode42);
        scriptNode42.flattenSymbolTable(true);
        scope18.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode42);
        int int60 = scriptNode42.getFunctionCount();
        int int61 = scriptNode42.getLineno();
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                    Scope" + "'", str38, "                    Scope");
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test12724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12724");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        int int14 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode0.getParentScope();
        scriptNode0.setPosition(7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode19.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope24.setPosition(100);
        com.google.javascript.rhino.head.Node node27 = scope24.getLastSibling();
        node27.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = node27.spliterator();
        scriptNode19.setCompilerData((java.lang.Object) node27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode33.getTop();
        scriptNode42.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int47 = scriptNode46.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        scriptNode48.setEncodedSourceEnd(18);
        scriptNode46.target = scriptNode48;
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) comment58);
        java.lang.String str60 = scriptNode19.toStringTree(scriptNode42);
        java.lang.String str61 = scriptNode42.toString();
        int int62 = scriptNode42.getEncodedSourceStart();
        scriptNode42.setBounds((int) (byte) 100, 18);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor66 = scriptNode42.iterator();
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        int int68 = scriptNode0.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setString("                  ScriptNode");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "136" + "'", str61, "136");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(nodeItor66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test12725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12725");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        int int57 = scriptNode55.getBaseLineno();
        java.lang.String str58 = scriptNode55.getNextTempName();
        scriptNode55.setLength((int) 'a');
        int int61 = scriptNode55.depth();
        scriptNode26.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        int int63 = scriptNode55.getParamCount();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test12726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12726");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSourceEnd(136);
        scriptNode0.setSourceName("                                    {\n                                    }\n");
        java.lang.Object obj7 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope8 = scriptNode0.getParentScope();
        scriptNode0.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = scope12.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        int int28 = scriptNode17.getIntProp(6, 2);
        int int29 = scriptNode17.getParamCount();
        java.lang.String str30 = scriptNode17.debugPrint();
        scope12.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        scriptNode17.setEndLineno(1278533831);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = scriptNode17.getRegexpString((-1850081477));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(astRoot16);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str30, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test12727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12727");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        scriptNode0.setSourceName("                                                                                                        Scope");
        int int11 = scriptNode0.getFunctionCount();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test12728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12728");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newString("-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        int int8 = scriptNode6.getBaseLineno();
        java.lang.Object obj9 = scriptNode6.getCompilerData();
        scriptNode6.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = null;
        scriptNode6.setSymbolTable(strMap12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(18);
        int int17 = scriptNode14.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment18 = scriptNode14.getJsDocNode();
        int int19 = scriptNode14.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode14.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol25 = scope23.getSymbol("$0");
        boolean boolean26 = scope23.hasSideEffects();
        boolean boolean27 = scope23.hasChildren();
        scriptNode14.addChildToFront((com.google.javascript.rhino.head.Node) scope23);
        scriptNode6.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        boolean boolean44 = scope32.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean47 = scope46.hasSideEffects();
        java.lang.String str48 = scope46.toSource();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean51 = scope50.hasSideEffects();
        java.lang.String str52 = scope50.toSource();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scope50, 17);
        java.lang.String str56 = scope50.toSource(4);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(7, node5, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope50, 22);
        scriptNode0.addChildToBack(node5);
        int int60 = scriptNode0.getEncodedSourceEnd();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                                    {\n                                    }\n" + "'", str16, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(comment18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertNull(symbol25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{\n}\n" + "'", str48, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "        {\n        }\n" + "'", str56, "        {\n        }\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test12729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12729");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(960854933);
        com.google.javascript.rhino.head.Node node3 = scriptNode2.getFirstChild();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        java.lang.String str13 = comment8.toStringTree(scriptNode9);
        boolean boolean14 = scriptNode9.hasSideEffects();
        java.lang.String str15 = scriptNode9.getEncodedSource();
        int int16 = scriptNode9.depth();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType20, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        java.lang.String str38 = comment34.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment34);
        comment22.addChildToBack(node39);
        java.lang.String str42 = comment22.toSource((-1));
        java.lang.Object obj44 = comment22.getProp(129);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        scriptNode45.setEncodedSourceEnd(18);
        java.lang.Object obj49 = scriptNode45.getCompilerData();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = scriptNode45.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope52 = scriptNode45.getDefiningScope("                                                    Scope");
        scriptNode45.setLineno(136);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = null;
        scriptNode45.setSymbols(symbolList55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = scriptNode59.getTop();
        scriptNode68.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int73 = scriptNode72.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str75 = scriptNode74.getEncodedSource();
        scriptNode74.setEncodedSourceEnd(18);
        scriptNode72.target = scriptNode74;
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) scriptNode74);
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) comment84);
        java.lang.String str87 = comment84.toSource(26);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(1487440611, (com.google.javascript.rhino.head.Node) comment22, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) comment84, 22);
        int int90 = comment22.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node(0, node3, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) comment22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                    Scope" + "'", str38, "                    Scope");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNotNull(scriptNode68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "                                                    Scope" + "'", str87, "                                                    Scope");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test12730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12730");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList8 = scriptNode1.getSymbols();
        java.lang.String str9 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node48 = scriptNode37.target;
        scriptNode37.setBounds(16, 13);
        scriptNode37.clearParentScope();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode37, 3);
        com.google.javascript.rhino.head.Node node55 = scriptNode1.getLastChild();
        int int56 = scriptNode1.getLineno();
        scriptNode1.setEncodedSource("                                                                                                                                                                                                  {\n}\n");
        boolean boolean59 = scriptNode1.hasSideEffects();
        org.junit.Assert.assertNotNull(symbolList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str9, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test12731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12731");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = scriptNode40.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode40.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = scriptNode40.getFunctionNode(51160157);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(functionNode58);
        org.junit.Assert.assertNotNull(functionNodeList59);
    }

    @Test
    public void test12732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12732");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode16.getSymbol("                                                                                                                                                                                                        Scope");
        int int65 = scriptNode16.getFunctionCount();
        scriptNode16.setEncodedSourceEnd(25);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor68 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode16.visit(nodeVisitor68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test12733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12733");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        scriptNode9.setSourceName("                    Scope");
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scriptNode9.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        java.lang.String str23 = comment18.toStringTree(scriptNode19);
        int int24 = comment18.getType();
        java.lang.String str25 = comment18.getValue();
        comment18.setBounds(908331048, 23);
        scriptNode9.setJsDocNode(comment18);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode9.setEndLineno((-51099649));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 161 + "'", int24 == 161);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Scope" + "'", str25, "Scope");
    }

    @Test
    public void test12734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12734");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.Node node24 = scriptNode0.setType(0);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        scope29.setPosition(2);
        scope29.setLength((int) (byte) 1);
        java.lang.Object obj38 = scope29.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope29);
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        scope41.setPosition(2);
        java.lang.String str47 = scope41.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap48 = scope41.getSymbolTable();
        boolean boolean49 = scope41.hasChildren();
        com.google.javascript.rhino.head.Node node50 = scope41.getNext();
        scope29.addChildrenToFront((com.google.javascript.rhino.head.Node) scope41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        scriptNode61.setPosition(6);
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType66, "{\n}\n");
        java.lang.String str69 = comment68.getValue();
        comment68.setLength(129);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) scope29, (com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) comment68);
        java.lang.String str74 = comment68.toSource(0);
        scriptNode0.putProp((-1), (java.lang.Object) comment68);
        java.lang.String str76 = scriptNode0.shortName();
        com.google.javascript.rhino.head.ast.Symbol symbol78 = scriptNode0.getSymbol("                                                                                                                                                                                                                                                                                {\n                                                                                                                                                                                                                                                                                }\n");
        // The following exception was thrown during execution in test generation
        try {
            int int80 = scriptNode0.getExistingIntProp((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{\n}\n" + "'", str47, "{\n}\n");
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{\n}\n" + "'", str69, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{\n}\n" + "'", str74, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ScriptNode" + "'", str76, "ScriptNode");
        org.junit.Assert.assertNull(symbol78);
    }

    @Test
    public void test12735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12735");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode2.getSymbols();
        java.lang.String str10 = scriptNode2.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node49 = scriptNode38.target;
        scriptNode38.setBounds(16, 13);
        scriptNode38.clearParentScope();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode38, 3);
        com.google.javascript.rhino.head.Node node56 = scriptNode2.getLastChild();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(908331048, (com.google.javascript.rhino.head.Node) scriptNode2);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope58 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str10, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node56);
    }

    @Test
    public void test12736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12736");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        boolean boolean9 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("$0");
        node12.putIntProp(25, 1);
        com.google.javascript.rhino.head.Node node16 = node12.getFirstChild();
        scope1.putProp((int) (short) 100, (java.lang.Object) node12);
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        scriptNode24.setEncodedSourceEnd(18);
        java.lang.String str28 = comment23.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.Node node30 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode24, node30);
        scriptNode24.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope37 = scope35.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node38 = scope35.target;
        scope35.setPosition(2);
        java.lang.String str41 = scope35.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap42 = scope35.getSymbolTable();
        boolean boolean43 = scope35.hasChildren();
        com.google.javascript.rhino.head.Node node44 = scope35.getNext();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        java.lang.String str59 = comment55.toSource((int) (short) 10);
        scope35.setJsDocNode(comment55);
        comment55.setRelative(4);
        scriptNode24.setJsDocNode(comment55);
        java.lang.String str64 = node12.toStringTree(scriptNode24);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap65 = scriptNode24.getSymbolTable();
        int int66 = scriptNode24.getLineno();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{\n}\n" + "'", str41, "{\n}\n");
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "                    Scope" + "'", str59, "                    Scope");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test12737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12737");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.String str72 = scriptNode23.toSource((-53));
        int int73 = scriptNode23.getRegexpCount();
        int int76 = scriptNode23.getIntProp((-243114478), (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = scriptNode23.getTop();
        int int78 = scriptNode23.getRegexpCount();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{\n}\n" + "'", str72, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test12738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12738");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = scope1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node7 = scope1.setType(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.clearParentScope();
        java.lang.String str16 = scriptNode8.toString();
        scope1.target = scriptNode8;
        java.lang.String str18 = scriptNode8.getJsDoc();
        com.google.javascript.rhino.head.Node node21 = com.google.javascript.rhino.head.Node.newString(7, "");
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode8.addChildBefore(node21, (com.google.javascript.rhino.head.Node) scope23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(functionNode5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(node21);
    }

    @Test
    public void test12739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12739");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType2, "41");
        java.lang.String str5 = comment4.getValue();
        comment4.setBounds(371991955, (-2));
        java.lang.String str9 = comment4.getValue();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "41" + "'", str5, "41");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "41" + "'", str9, "41");
    }

    @Test
    public void test12740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12740");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        int int16 = scriptNode0.getParamCount();
        scriptNode0.setEncodedSource("%");
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode0.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump20 = scriptNode0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(scopeList19);
    }

    @Test
    public void test12741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12741");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        boolean boolean8 = scope1.hasSideEffects();
        int int9 = scope1.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str20 = scriptNode11.getSourceName();
        int int21 = scriptNode11.getFunctionCount();
        scope1.putProp(19, (java.lang.Object) scriptNode11);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scriptNode11.iterator();
        com.google.javascript.rhino.head.Node node24 = scriptNode11.target;
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 129 + "'", int9 == 129);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertNull(node24);
    }

    @Test
    public void test12742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12742");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        boolean boolean2 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scriptNode4.getTop();
        scriptNode13.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int18 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        scriptNode17.target = scriptNode19;
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        scriptNode19.putIntProp((-1), 13);
        int int65 = scriptNode19.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList66 = scriptNode19.getFunctions();
        com.google.javascript.rhino.head.Node node68 = scriptNode19.setType(1487440633);
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = scriptNode19.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 18 + "'", int65 == 18);
        org.junit.Assert.assertNotNull(functionNodeList66);
        org.junit.Assert.assertNotNull(node68);
    }

    @Test
    public void test12743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12743");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        java.lang.String str23 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int33 = scriptNode24.getEncodedSourceStart();
        int int34 = scriptNode24.getEncodedSourceEnd();
        java.lang.String str35 = scriptNode24.getSourceName();
        scriptNode24.setRelative(161);
        scriptNode16.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        java.lang.String str39 = scriptNode16.getNextTempName();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
    }

    @Test
    public void test12744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12744");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node38 = scriptNode27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        java.lang.String str75 = scriptNode66.getEncodedSource();
        int int76 = scriptNode66.getAbsolutePosition();
        int int77 = scriptNode66.getLineno();
        java.lang.String str78 = scriptNode66.getEncodedSource();
        int int79 = scriptNode27.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        scriptNode66.clearParentScope();
        int int81 = scriptNode66.getEncodedSourceEnd();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test12745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12745");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.Node node25 = scriptNode16.setType((int) (byte) 10);
        int int26 = scriptNode16.getEncodedSourceEnd();
        scriptNode16.putIntProp(4, (int) (short) 1);
        com.google.javascript.rhino.head.Node node30 = scriptNode16.getLastSibling();
        boolean boolean31 = scriptNode16.hasChildren();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 11 + "'", int26 == 11);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test12746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12746");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str24 = node23.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(23, node23, (com.google.javascript.rhino.head.Node) scope26, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scope26.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode34.getEncodedSourceStart();
        int int44 = scriptNode34.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        comment55.setCommentType(commentType58);
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = comment55.getAstRoot();
        scriptNode34.setJsDocNode(comment55);
        com.google.javascript.rhino.head.Token.CommentType commentType62 = comment55.getCommentType();
        com.google.javascript.rhino.head.Node node64 = com.google.javascript.rhino.head.Node.newString("0\tSCRIPT 0 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode66.getEncodedSourceStart();
        int int76 = scriptNode66.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node77 = scriptNode66.getNext();
        scriptNode66.setSourceName("-1\t  SCRIPT -53 1\n");
        int int80 = scriptNode66.getRegexpCount();
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node((-547629399), (com.google.javascript.rhino.head.Node) scriptNode66, (int) ' ');
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node((-547629399), (com.google.javascript.rhino.head.Node) comment55, node64, node82, 102);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node((-1121821920), (com.google.javascript.rhino.head.Node) scriptNode32, node64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(astRoot60);
        org.junit.Assert.assertNull(commentType62);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test12747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12747");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        boolean boolean24 = nodeIterator17.hasNext();
        boolean boolean25 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test12748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12748");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scope17.setJsDocNode(comment26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode29.setPosition((int) (byte) 0);
        scriptNode29.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getParamCount();
        java.lang.String str55 = scriptNode42.debugPrint();
        int int58 = scriptNode42.getIntProp(17, 10);
        scriptNode29.setTop(scriptNode42);
        scriptNode29.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node62 = scriptNode29.getLastChild();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode29.getSymbol("");
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope66.setPosition(100);
        com.google.javascript.rhino.head.Node node70 = scope66.setType((int) (byte) 0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode29, node70);
        int int72 = scriptNode29.getLineno();
        scriptNode29.removeProp((-2));
        com.google.javascript.rhino.head.ast.Scope scope76 = scriptNode29.getDefiningScope("                    {\n}\n");
        com.google.javascript.rhino.head.ast.AstNode astNode77 = scriptNode29.getParent();
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str55, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNotNull(astNode77);
    }

    @Test
    public void test12749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12749");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        com.google.javascript.rhino.head.Node node18 = nodeIterator17.next();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        boolean boolean22 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test12750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12750");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str14 = scriptNode1.toSource(21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        scriptNode15.setEndLineno(5);
        java.lang.Object obj27 = scriptNode15.getProp((int) (short) 10);
        int int28 = scriptNode15.getParamCount();
        scriptNode1.setTop(scriptNode15);
        scriptNode1.setBounds(17, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.Scope scope35 = scriptNode1.getDefiningScope("-1\t  SCRIPT -53 1\n");
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        scope38.setPosition(2);
        java.lang.String str44 = scope38.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap45 = scope38.getSymbolTable();
        boolean boolean46 = scope38.hasChildren();
        com.google.javascript.rhino.head.Node node47 = scope38.getNext();
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope51 = scope49.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node52 = scope49.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scope49.setJsDocNode(comment58);
        java.lang.String str62 = comment58.toSource((int) (short) 10);
        scope38.setJsDocNode(comment58);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator64 = comment58.spliterator();
        com.google.javascript.rhino.head.ast.AstNode astNode65 = comment58.getParent();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = comment58.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str73 = scriptNode72.getEncodedSource();
        scriptNode72.setEncodedSourceEnd(18);
        java.lang.String str76 = comment71.toStringTree(scriptNode72);
        boolean boolean77 = scriptNode72.hasSideEffects();
        scriptNode72.setPosition(1784707759);
        comment58.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode72);
        com.google.javascript.rhino.head.ast.Scope scope83 = new com.google.javascript.rhino.head.ast.Scope(35);
        com.google.javascript.rhino.head.Node node85 = com.google.javascript.rhino.head.Node.newString("                                                                                                          {\n                                                                                                          }\n");
        com.google.javascript.rhino.head.Node node86 = node85.getLastSibling();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope83, node86);
        scriptNode72.addChildrenToBack(node86);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator89 = node86.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setCompilerData((java.lang.Object) nodeSpliterator89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                          {\n                                          }\n" + "'", str14, "                                          {\n                                          }\n");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{\n}\n" + "'", str44, "{\n}\n");
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                    Scope" + "'", str62, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator64);
        org.junit.Assert.assertNull(astNode65);
        org.junit.Assert.assertNull(commentType66);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertNotNull(nodeSpliterator89);
    }

    @Test
    public void test12751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12751");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode26.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        scriptNode42.setBaseLineno((int) '4');
        scriptNode42.setSourceName("58\t  SCRIPT 6 1\n");
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList48 = scriptNode42.getStatements();
        java.lang.String str49 = scriptNode42.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode42.labelId(1558149202);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNotNull(astNodeList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "11\tSCRIPT 11 1\n" + "'", str49, "11\tSCRIPT 11 1\n");
    }

    @Test
    public void test12752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12752");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean16 = scriptNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean20 = scope19.hasSideEffects();
        scriptNode0.putProp((int) (short) 1, (java.lang.Object) boolean20);
        com.google.javascript.rhino.head.Node node22 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = scriptNode0.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode0.getChildScopes();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNull(scopeList24);
    }

    @Test
    public void test12753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12753");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.lang.String str19 = scriptNode14.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) comment47);
        int int49 = scriptNode31.depth();
        int int50 = scriptNode31.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor51 = scriptNode31.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int61 = scriptNode52.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode52, 23);
        int int64 = scriptNode14.getEndLineno();
        boolean boolean65 = scriptNode14.hasSideEffects();
        java.lang.Object obj66 = scriptNode14.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol68 = scriptNode14.getSymbol("-1\t  SCRIPT -3 1\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(nodeItor51);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(symbol68);
    }

    @Test
    public void test12754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12754");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode59.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope64.setPosition(100);
        com.google.javascript.rhino.head.Node node67 = scope64.getLastSibling();
        node67.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator69 = node67.spliterator();
        scriptNode59.setCompilerData((java.lang.Object) node67);
        java.lang.String str71 = scriptNode59.getSourceName();
        int int72 = scriptNode59.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope75 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str77 = scope75.toSource(12);
        scope75.setRelative(1);
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scope75);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        com.google.javascript.rhino.head.ast.Comment comment86 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType84, "Scope");
        scriptNode81.setParent((com.google.javascript.rhino.head.ast.AstNode) comment86);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str90 = scriptNode88.toSource(18);
        java.lang.Object obj91 = scriptNode88.getCompilerData();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList92 = scriptNode88.getSymbols();
        scriptNode81.setSymbols(symbolList92);
        scope75.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode81);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode95 = scriptNode81.getTop();
        java.lang.String str97 = scriptNode81.toSource((int) (short) 0);
        scriptNode81.removeProp(6);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(nodeSpliterator69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "                        {\n                        }\n" + "'", str77, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "                                    {\n                                    }\n" + "'", str90, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(symbolList92);
        org.junit.Assert.assertNotNull(scriptNode95);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "{\n}\n" + "'", str97, "{\n}\n");
    }

    @Test
    public void test12755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12755");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        scriptNode27.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node60 = scriptNode27.getLastChild();
        java.lang.String str61 = scriptNode27.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = scriptNode27.getFunctions();
        int int63 = scriptNode27.getFunctionCount();
        int int64 = scriptNode27.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope65 = scriptNode27.getEnclosingScope();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scope65);
    }

    @Test
    public void test12756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12756");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node11 = scriptNode0.target;
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        scriptNode13.setEncodedSourceEnd(18);
        java.lang.String str18 = scriptNode13.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        scriptNode13.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        java.lang.String str31 = scriptNode0.makeIndent((int) (short) 100);
        scriptNode0.putIntProp(35, 15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = scriptNode0.getAstRoot();
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                                                                      " + "'", str18, "                                                                      ");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                                                                                                                                                                                        " + "'", str31, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNull(astRoot35);
    }

    @Test
    public void test12757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12757");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode42.setEndLineno(18);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode42, (int) (byte) -1);
        scriptNode16.target = scriptNode42;
        scriptNode42.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = scriptNode42.getAstRoot();
        scriptNode42.setEncodedSourceStart(5);
        boolean boolean63 = scriptNode42.hasChildren();
        int int64 = scriptNode42.getLineno();
        com.google.javascript.rhino.head.Node node65 = scriptNode42.target;
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(astRoot60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(node65);
    }

    @Test
    public void test12758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12758");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceEnd(11);
        java.lang.String str24 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceBounds(6, 24);
        scriptNode16.setRelative(754207379);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode16.getSymbols();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(symbolList30);
    }

    @Test
    public void test12759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12759");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("69\t  SCRIPT 17 1\n");
        int int2 = node1.getType();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 41 + "'", int2 == 41);
    }

    @Test
    public void test12760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12760");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str4 = scope2.makeIndent(0);
        int int7 = scope2.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope9.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode39.getSymbols();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope27, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setPosition((int) (byte) 0);
        scope9.setTop(scriptNode39);
        int int51 = scriptNode39.getParamCount();
        scope2.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        java.lang.String str53 = scriptNode39.getNextTempName();
        int int54 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int57 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope59 = scriptNode56.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode56.setSourceName("");
        scriptNode39.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode56);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope(7);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope69 = scope67.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node70 = scope67.target;
        scope67.setPosition(2);
        scope67.setLength((int) (byte) 1);
        java.lang.Object obj76 = scope67.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope67);
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope81 = scope79.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node82 = scope79.target;
        scope79.setPosition(2);
        java.lang.String str85 = scope79.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap86 = scope79.getSymbolTable();
        boolean boolean87 = scope79.hasChildren();
        com.google.javascript.rhino.head.Node node88 = scope79.getNext();
        scope67.addChildrenToFront((com.google.javascript.rhino.head.Node) scope79);
        com.google.javascript.rhino.head.Node node90 = scope67.getNext();
        java.lang.String str91 = scope67.shortName();
        int int92 = scope67.getLineno();
        int int93 = scope64.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope67);
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(396011107, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scope67);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(scope69);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(scope81);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{\n}\n" + "'", str85, "{\n}\n");
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(node88);
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Scope" + "'", str91, "Scope");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test12761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12761");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        java.lang.String str90 = scriptNode0.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol92 = scriptNode0.getSymbol("                                                                                                                                                                                                        Scope");
        scriptNode0.clearParentScope();
        java.lang.String str94 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope95 = scriptNode0.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            int int97 = scriptNode0.getExistingIntProp(197839691);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "136" + "'", str90, "136");
        org.junit.Assert.assertNull(symbol92);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(scope95);
    }

    @Test
    public void test12762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12762");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.Object obj42 = scriptNode26.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode26.getChildScopes();
        scriptNode26.setEncodedSourceBounds((-53), 5);
        java.lang.Object obj47 = scriptNode26.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = scriptNode26.getTop();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor49 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode26.visit(nodeVisitor49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(scriptNode48);
    }

    @Test
    public void test12763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12763");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.Node node13 = comment10.getFirstChild();
        int int14 = comment10.getLength();
        java.lang.Class<?> wildcardClass15 = comment10.getClass();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 6 + "'", int14 == 6);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test12764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12764");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-1666765792), "    {\n      {\n      }\n    }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test12765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12765");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        scriptNode37.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str51 = scriptNode37.makeIndent(0);
        java.lang.String str52 = scriptNode0.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.Node node53 = scriptNode37.target;
        scriptNode37.setEncodedSource("Comment");
        java.lang.String str56 = scriptNode37.toSource();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scope58.setPosition(97);
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope65 = scope63.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node66 = scope63.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        scope63.setJsDocNode(comment72);
        boolean boolean75 = scope63.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean78 = scope77.hasSideEffects();
        java.lang.String str79 = scope77.toSource();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean82 = scope81.hasSideEffects();
        java.lang.String str83 = scope81.toSource();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) scope63, (com.google.javascript.rhino.head.Node) scope77, (com.google.javascript.rhino.head.Node) scope81, 17);
        java.lang.String str86 = node85.toString();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node((-613442063), (com.google.javascript.rhino.head.Node) scope58, node85);
        int int88 = node85.getLineno();
        scriptNode37.target = node85;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{\n}\n" + "'", str56, "{\n}\n");
        org.junit.Assert.assertNull(scope65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "{\n}\n" + "'", str79, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "{\n}\n" + "'", str83, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "13" + "'", str86, "13");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 17 + "'", int88 == 17);
    }

    @Test
    public void test12766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12766");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = null;
        scriptNode18.setSymbols(symbolList24);
        java.lang.String str26 = scriptNode18.getJsDoc();
        java.lang.String str27 = scriptNode18.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        int int30 = scriptNode28.getBaseLineno();
        java.lang.Object obj31 = scriptNode28.getCompilerData();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode28, (-51));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        int int45 = scriptNode34.getIntProp(6, 2);
        int int46 = scriptNode34.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        int int59 = scriptNode47.getParamCount();
        scriptNode34.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode47.getSymbolTable();
        java.lang.String str62 = scriptNode47.getSourceName();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode18, (com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(34756133, (com.google.javascript.rhino.head.Node) scriptNode47);
        int int65 = scriptNode47.getParamCount();
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test12767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12767");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(3);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap2 = scope1.getSymbolTable();
        scope1.removeChildren();
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        java.lang.String str6 = scope1.toSource((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = scope1.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                    {\n                    }\n" + "'", str6, "                    {\n                    }\n");
    }

    @Test
    public void test12768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12768");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment8 = scriptNode0.getJsDocNode();
        int int9 = scriptNode0.getRegexpCount();
        java.lang.String str10 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        int int26 = scriptNode24.getBaseLineno();
        java.lang.String str27 = scriptNode24.getNextTempName();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.lang.String str29 = scriptNode24.debugPrint();
        java.lang.String str31 = scriptNode24.toSource((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int41 = scriptNode32.getEncodedSourceStart();
        scriptNode32.setLineno(1);
        scriptNode24.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        java.lang.String str45 = scriptNode24.getEncodedSource();
        scriptNode24.setLineno((-51));
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        scriptNode0.setEncodedSourceStart(35);
        scriptNode0.removeProp((-399411339));
        com.google.javascript.rhino.head.ast.Scope scope53 = scriptNode0.getParentScope();
        int int54 = scriptNode0.getEncodedSourceStart();
        org.junit.Assert.assertNull(comment8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str29, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "  {\n  }\n" + "'", str31, "  {\n  }\n");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(scope53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 35 + "'", int54 == 35);
    }

    @Test
    public void test12769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12769");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node11 = scriptNode0.target;
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceEnd(6);
        scriptNode0.setEncodedSourceEnd(754207379);
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test12770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12770");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        java.lang.String str44 = scriptNode0.getEncodedSource();
        int int45 = scriptNode0.getLineno();
        int int46 = scriptNode0.getParamCount();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test12771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12771");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope2.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scope20.setJsDocNode(comment29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode32);
        scriptNode32.setPosition((int) (byte) 0);
        scope2.setTop(scriptNode32);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode32);
        int int45 = scriptNode32.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str55 = scriptNode46.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor56 = scriptNode46.iterator();
        scriptNode46.setBounds((-613442063), 1278533831);
        int int62 = scriptNode46.getIntProp(727575172, 874571570);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode63.toSource(18);
        java.lang.Object obj66 = scriptNode63.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = scriptNode63.getAstRoot();
        int int68 = scriptNode63.getBaseLineno();
        int int69 = scriptNode63.getPosition();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode46, (com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        scriptNode32.setCompilerData((java.lang.Object) scriptNode63);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(nodeItor56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 874571570 + "'", int62 == 874571570);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                                    {\n                                    }\n" + "'", str65, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(astRoot67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test12772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12772");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode6.getTop();
        scriptNode15.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        scope78.setPosition(2);
        scope78.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope78);
        node4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        scriptNode34.setEncodedSourceBounds(14, 24);
        int int91 = scriptNode34.getFunctionCount();
        java.lang.String str92 = scriptNode34.toString();
        scriptNode34.removeProp(908331048);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = scriptNode34.getParamOrVarName((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "136" + "'", str92, "136");
    }

    @Test
    public void test12773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12773");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str23 = node22.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(23, node22, (com.google.javascript.rhino.head.Node) scope25, (int) (byte) 1);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment(0, 5, commentType33, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        comment35.setPosition(16);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = comment35.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getParamCount();
        scriptNode39.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode39.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode67);
        java.lang.String str69 = scriptNode39.getEncodedSource();
        node30.addChildAfter((com.google.javascript.rhino.head.Node) comment35, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        comment35.setCommentType(commentType71);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(commentType38);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test12774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12774");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        int int14 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode0.getParentScope();
        boolean boolean16 = scriptNode0.hasConsistentReturnUsage();
        java.lang.String str17 = scriptNode0.getJsDoc();
        scriptNode0.setSourceName("                        {\n}\n");
        com.google.javascript.rhino.head.Node node20 = scriptNode0.getLastChild();
        int int21 = scriptNode0.getEncodedSourceEnd();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test12775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12775");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        int int39 = scriptNode0.getPosition();
        scriptNode0.setSourceName("                                                                      ");
        scriptNode0.setEncodedSourceEnd(19);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope44 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test12776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12776");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = null;
        scope1.setSymbolTable(strMap10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        int int20 = scope14.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope21 = scope14.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope14.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        scope24.setPosition(2);
        int int30 = scope24.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope31 = scope24.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope24.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.Object obj36 = scriptNode33.getCompilerData();
        scriptNode33.flattenSymbolTable(false);
        scope14.addChildAfter((com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int40 = scriptNode33.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str46 = scriptNode41.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        scriptNode41.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        boolean boolean57 = scriptNode41.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = scriptNode41.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        scope1.putProp(161, (java.lang.Object) scriptNode41);
        scriptNode41.clearParentScope();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                      " + "'", str46, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(strMap58);
    }

    @Test
    public void test12777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12777");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        scriptNode5.setEndLineno(20);
        int int15 = scriptNode5.getIntProp((int) '#', 14);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode5.setEndLineno((-272528452));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 14 + "'", int15 == 14);
    }

    @Test
    public void test12778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12778");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-1));
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = node1.new NodeIterator();
        java.lang.Class<?> wildcardClass3 = node1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test12779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12779");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(13, 7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scriptNode31.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        int int55 = scriptNode44.getIntProp(6, 2);
        int int56 = scriptNode44.getParamCount();
        java.lang.String str57 = scriptNode44.debugPrint();
        int int60 = scriptNode44.getIntProp(17, 10);
        scriptNode31.setTop(scriptNode44);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode31);
        int int63 = scriptNode31.getRegexpCount();
        com.google.javascript.rhino.head.Node node64 = scriptNode31.getNext();
        scope2.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        boolean boolean66 = scriptNode31.hasConsistentReturnUsage();
        int int67 = scriptNode31.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope68 = scriptNode31.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str57, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test12780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12780");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        int int10 = comment4.getType();
        java.lang.String str11 = comment4.getValue();
        comment4.setPosition(21);
        int int14 = comment4.depth();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 161 + "'", int10 == 161);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Scope" + "'", str11, "Scope");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test12781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12781");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj2 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node7 = scriptNode1.getNext();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertNull(node7);
    }

    @Test
    public void test12782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12782");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        java.lang.Object obj59 = scriptNode40.getProp(17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = scriptNode61.getTop();
        scriptNode70.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int75 = scriptNode74.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str77 = scriptNode76.getEncodedSource();
        scriptNode76.setEncodedSourceEnd(18);
        scriptNode74.target = scriptNode76;
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) scriptNode76);
        scriptNode76.setEncodedSourceStart((int) ' ');
        int int84 = scriptNode76.getPosition();
        scriptNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        scriptNode76.setBounds(11, 9);
        scriptNode76.clearParentScope();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test12783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12783");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode3.getEncodedSourceStart();
        int int13 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode58, 26);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node54, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode58);
        node70.setLineno(5);
        scriptNode14.setCompilerData((java.lang.Object) node70);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode3, node70);
        scriptNode3.setEncodedSource("                        {\n                        }\n");
        boolean boolean77 = scriptNode3.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str85 = scriptNode84.getEncodedSource();
        scriptNode84.setEncodedSourceEnd(18);
        java.lang.String str88 = comment83.toStringTree(scriptNode84);
        com.google.javascript.rhino.head.Node node90 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode84, node90);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList92 = scriptNode84.getSymbols();
        scriptNode3.setSymbols(symbolList92);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList94 = scriptNode3.getChildScopes();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(node90);
        org.junit.Assert.assertNotNull(symbolList92);
        org.junit.Assert.assertNull(scopeList94);
    }

    @Test
    public void test12784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12784");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode4.getSymbol("/");
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode4.getParentScope();
        scriptNode4.setSourceName("                                        {\n                                        }\n");
        int int20 = scriptNode4.getParamCount();
        int int21 = scriptNode4.getFunctionCount();
        int int22 = scriptNode4.getEncodedSourceStart();
        java.lang.String str23 = scriptNode4.getNextTempName();
        scriptNode4.setPosition(102);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode27.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope32.setPosition(100);
        com.google.javascript.rhino.head.Node node35 = scope32.getLastSibling();
        node35.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = node35.spliterator();
        scriptNode27.setCompilerData((java.lang.Object) node35);
        java.lang.String str40 = scriptNode27.toSource(21);
        int int41 = scriptNode27.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode4, (com.google.javascript.rhino.head.ast.Scope) scriptNode27);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = scriptNode27.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                          {\n                                          }\n" + "'", str40, "                                          {\n                                          }\n");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test12785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12785");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = scriptNode18.getTop();
        scriptNode27.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        scriptNode33.setEncodedSourceEnd(18);
        scriptNode31.target = scriptNode33;
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node76 = scriptNode40.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode40);
        java.lang.String str78 = scriptNode7.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap79 = scriptNode7.getSymbolTable();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList80 = scriptNode7.getSymbols();
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment(53, 26, commentType83, "15\tCOMMENT 15 52\n");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.setFinally((com.google.javascript.rhino.head.Node) comment85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{\n}\n" + "'", str78, "{\n}\n");
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(symbolList80);
    }

    @Test
    public void test12786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12786");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str24 = scope22.toSource(12);
        scope22.setRelative(1);
        scriptNode13.putProp(17, (java.lang.Object) 1);
        java.lang.String str29 = scriptNode13.toSource(13);
        com.google.javascript.rhino.head.ast.Comment comment30 = scriptNode13.getJsDocNode();
        com.google.javascript.rhino.head.Node node31 = scriptNode13.target;
        java.lang.String str32 = scriptNode13.getSourceName();
        scriptNode13.setBounds((-42), (-399411339));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = scriptNode13.getRegexpString(845940330);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str18, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "                        {\n                        }\n" + "'", str24, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                          {\n                          }\n" + "'", str29, "                          {\n                          }\n");
        org.junit.Assert.assertNull(comment30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test12787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12787");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = null;
        scope15.setTop(scriptNode19);
        scriptNode13.target = scope15;
        int int22 = scriptNode13.getEncodedSourceStart();
        scope1.setTop(scriptNode13);
        java.lang.String str25 = scope1.toSource(15);
        java.lang.String str26 = scope1.getJsDoc();
        java.lang.Object obj28 = scope1.getProp(35);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope29 = com.google.javascript.rhino.head.ast.Scope.splitScope(scope1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                              {\n                              }\n" + "'", str25, "                              {\n                              }\n");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Scope" + "'", str26, "Scope");
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test12788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12788");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(97, (int) (byte) 10);
    }

    @Test
    public void test12789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12789");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol56 = scope54.getSymbol("$0");
        int int57 = scope54.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        int int69 = scriptNode58.getIntProp(6, 2);
        int int70 = scriptNode58.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getEncodedSource();
        int int73 = scriptNode71.getBaseLineno();
        java.lang.String str74 = scriptNode71.getNextTempName();
        scriptNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.lang.String str76 = scriptNode71.debugPrint();
        scope54.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode71);
        scriptNode38.setTop(scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList79 = scriptNode38.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = scriptNode38.getParamOrVarName(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(symbol56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 129 + "'", int57 == 129);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "$0" + "'", str74, "$0");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str76, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(astNodeList79);
    }

    @Test
    public void test12790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12790");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        com.google.javascript.rhino.head.Node node31 = scriptNode11.getLastSibling();
        int int32 = scriptNode11.getFunctionCount();
        scriptNode11.setBounds((-1850081477), 19);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test12791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12791");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        java.lang.String str41 = scriptNode26.toSource();
        java.lang.String str43 = scriptNode26.toSource(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        java.lang.String str52 = scriptNode44.debugPrint();
        scriptNode44.setRelative((int) ' ');
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        java.lang.String str56 = scriptNode44.toString();
        boolean boolean57 = scriptNode44.hasConsistentReturnUsage();
        int int58 = scriptNode44.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray59 = scriptNode44.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{\n}\n" + "'", str41, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                      {\n                      }\n" + "'", str43, "                      {\n                      }\n");
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str52, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "136" + "'", str56, "136");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test12792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12792");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode13.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str29 = scriptNode13.getSourceName();
        int int30 = scriptNode13.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        int int33 = scriptNode31.getBaseLineno();
        java.lang.Object obj34 = scriptNode31.getCompilerData();
        scriptNode31.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        int int52 = scriptNode50.getBaseLineno();
        java.lang.String str53 = scriptNode50.getNextTempName();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int58 = scope57.depth();
        scriptNode37.replaceWith(scope57);
        com.google.javascript.rhino.head.ast.Symbol symbol61 = scriptNode37.getSymbol("                                      Scope");
        scriptNode31.setTop(scriptNode37);
        scriptNode13.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType67, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        scriptNode70.setEncodedSourceEnd(18);
        java.lang.String str75 = scriptNode70.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment69, (com.google.javascript.rhino.head.Node) scriptNode70);
        java.lang.String str77 = scriptNode13.toStringTree(scriptNode70);
        com.google.javascript.rhino.head.Node node79 = scriptNode70.setType(0);
        node79.removeProp((-53635080));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 136 + "'", int30 == 136);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(symbol61);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "                                                                      " + "'", str75, "                                                                      ");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(node79);
    }

    @Test
    public void test12793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12793");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        com.google.javascript.rhino.head.Node node18 = nodeIterator17.next();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        boolean boolean23 = nodeIterator17.hasNext();
        boolean boolean24 = nodeIterator17.hasNext();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test12794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12794");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scope2.getSymbolTable();
        boolean boolean10 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scope2.target = scriptNode11;
        com.google.javascript.rhino.head.Node node22 = scriptNode11.target;
        scriptNode11.setBaseLineno(10);
        scriptNode11.setEncodedSourceEnd((int) (short) -1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = null;
        scriptNode11.setSymbolTable(strMap27);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(22, (com.google.javascript.rhino.head.Node) scriptNode11, 11);
        java.lang.Object obj31 = scriptNode11.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope33 = scriptNode11.getDefiningScope("                                                                                                                    ");
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(scope33);
    }

    @Test
    public void test12795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12795");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(18);
        java.lang.Object obj16 = scriptNode13.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node55 = scriptNode44.target;
        scriptNode13.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        int int57 = scriptNode44.getLineno();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode44);
        java.lang.String str59 = scriptNode44.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str69 = scriptNode60.getSourceName();
        int int70 = scriptNode60.getAbsolutePosition();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap71 = scriptNode60.getSymbolTable();
        scriptNode60.setEndLineno(15);
        scriptNode44.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        int int75 = scriptNode60.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                    {\n                                    }\n" + "'", str15, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test12796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12796");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode27.getFunctions();
        java.lang.Object obj39 = scriptNode27.getCompilerData();
        int int40 = scriptNode27.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test12797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12797");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode0.getChildScopes();
        scriptNode0.flattenSymbolTable(false);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode0.getChildScopes();
        scriptNode0.setSourceName("        {\n        }\n");
        int int16 = scriptNode0.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test12798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12798");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        scriptNode4.setEncodedSource("                  Scope");
        int int17 = scriptNode4.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = scriptNode4.getTop();
        int int19 = scriptNode18.getLineno();
        int int20 = scriptNode18.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        int int55 = scriptNode44.getIntProp(6, 2);
        int int56 = scriptNode44.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scope58.setJsDocNode(comment67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode70.getSymbols();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope58, (com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType83, "Scope");
        scriptNode80.setParent((com.google.javascript.rhino.head.ast.AstNode) comment85);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList87 = scriptNode80.getSymbols();
        scriptNode44.setSymbols(symbolList87);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList89 = scriptNode44.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList90 = scriptNode44.getFunctions();
        com.google.javascript.rhino.head.Node node91 = scriptNode44.getLastSibling();
        com.google.javascript.rhino.head.Node node92 = scriptNode44.getFirstChild();
        int int93 = scriptNode44.getLineno();
        scriptNode18.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        com.google.javascript.rhino.head.ast.Scope scope95 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertNotNull(symbolList87);
        org.junit.Assert.assertNotNull(symbolList89);
        org.junit.Assert.assertNotNull(functionNodeList90);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertNull(node92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(scope95);
    }

    @Test
    public void test12799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12799");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        scope29.setPosition(2);
        scope29.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node37 = scope29.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        java.lang.String str43 = scriptNode38.makeIndent((int) '#');
        scope29.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        scope46.putIntProp(17, 25);
        scope46.setLength((int) ' ');
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) scope46);
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode1.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope63 = scope61.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node64 = scope61.target;
        scope61.setPosition(2);
        int int67 = scope61.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope68 = scope61.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator69 = scope61.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope71 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope73 = scope71.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node74 = scope71.target;
        scope71.setPosition(2);
        int int77 = scope71.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope78 = scope71.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator79 = scope71.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str81 = scriptNode80.getEncodedSource();
        int int82 = scriptNode80.getBaseLineno();
        java.lang.Object obj83 = scriptNode80.getCompilerData();
        scriptNode80.flattenSymbolTable(false);
        scope61.addChildAfter((com.google.javascript.rhino.head.Node) scope71, (com.google.javascript.rhino.head.Node) scriptNode80);
        int int87 = scriptNode80.getLength();
        scriptNode80.setEncodedSourceEnd((int) (byte) 0);
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((-389829193), (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode80, 135357821);
        com.google.javascript.rhino.head.ast.AstRoot astRoot92 = scriptNode1.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray93 = astRoot92.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                                                                      " + "'", str43, "                                                                      ");
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNotNull(nodeSpliterator69);
        org.junit.Assert.assertNull(scope73);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(scope78);
        org.junit.Assert.assertNotNull(nodeSpliterator79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNull(astRoot92);
    }

    @Test
    public void test12800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12800");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode19.getSymbols();
        scriptNode13.setSymbols(symbolList26);
        int int28 = scriptNode13.getRegexpCount();
        int int29 = scriptNode13.getPosition();
        scriptNode13.setBounds((int) (byte) 100, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.setEndLineno((-927222420));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str18, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
    }

    @Test
    public void test12801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12801");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        int int4 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        int int19 = scriptNode8.getIntProp(6, 2);
        int int20 = scriptNode8.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.String str24 = scriptNode21.getNextTempName();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        int int26 = scriptNode21.getType();
        int int27 = scriptNode21.getParamCount();
        com.google.javascript.rhino.head.Node node29 = scriptNode21.setType((int) '#');
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((-51), (com.google.javascript.rhino.head.Node) scriptNode21, 52);
        scriptNode0.addChildToBack(node31);
        int int33 = scriptNode0.getEncodedSourceEnd();
        int int34 = scriptNode0.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            int int36 = scriptNode0.getExistingIntProp(220850805);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test12802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12802");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(1, 9);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope4.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        int int19 = scriptNode8.getIntProp(6, 2);
        int int20 = scriptNode8.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope24 = scope22.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node25 = scope22.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scope22.setJsDocNode(comment31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = scriptNode34.getSymbols();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope22, (com.google.javascript.rhino.head.Node) scriptNode34);
        scriptNode34.setPosition((int) (byte) 0);
        scope4.setTop(scriptNode34);
        int int46 = scriptNode34.getParamCount();
        boolean boolean47 = scriptNode34.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = scriptNode34.getAstRoot();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode34.getSymbols();
        scope2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope52 = scriptNode34.getDefiningScope("");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(symbolList41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(astRoot48);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNull(scope52);
    }

    @Test
    public void test12803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12803");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode60.getSymbols();
        scriptNode24.setSymbols(symbolList67);
        int int69 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope74 = scope72.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node75 = scope72.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType79, "Scope");
        scriptNode76.setParent((com.google.javascript.rhino.head.ast.AstNode) comment81);
        scope72.setJsDocNode(comment81);
        boolean boolean84 = scope72.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope86 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean87 = scope86.hasSideEffects();
        java.lang.String str88 = scope86.toSource();
        com.google.javascript.rhino.head.ast.Scope scope90 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean91 = scope90.hasSideEffects();
        java.lang.String str92 = scope90.toSource();
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) scope72, (com.google.javascript.rhino.head.Node) scope86, (com.google.javascript.rhino.head.Node) scope90, 17);
        java.lang.String str95 = node94.toString();
        com.google.javascript.rhino.head.Node node97 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode24, node94, 0);
        boolean boolean98 = node94.hasConsistentReturnUsage();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(scope74);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "{\n}\n" + "'", str88, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "{\n}\n" + "'", str92, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "13" + "'", str95, "13");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test12804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12804");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node4 = scope3.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        scriptNode5.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode5.setLineno((int) '#');
        int int22 = scriptNode5.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = scriptNode5.getEnclosingFunction();
        int int24 = scriptNode5.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope29 = scriptNode26.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode26.setSourceName("");
        com.google.javascript.rhino.head.ast.AstNode astNode32 = scriptNode26.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode26.getChildScopes();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(98666588, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scriptNode26, (-243114478));
        boolean boolean36 = scriptNode26.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = scriptNode26.getParamOrVarName(384417477);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 35 + "'", int22 == 35);
        org.junit.Assert.assertNull(functionNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(astNode32);
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test12805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12805");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        boolean boolean26 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode27.toSource(18);
        java.lang.Object obj30 = scriptNode27.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        scope33.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope44 = scope42.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node45 = scope42.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scope42.setJsDocNode(comment51);
        java.lang.String str55 = comment51.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = comment51.getAstRoot();
        scope33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = scriptNode60.getTop();
        scriptNode69.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int74 = scriptNode73.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode75.getEncodedSource();
        scriptNode75.setEncodedSourceEnd(18);
        scriptNode73.target = scriptNode75;
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode69, (com.google.javascript.rhino.head.Node) scriptNode75);
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType83, "Scope");
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode69, (com.google.javascript.rhino.head.Node) comment85);
        int int87 = scriptNode69.depth();
        int int88 = scriptNode69.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor89 = scriptNode69.iterator();
        scope33.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        scriptNode27.putProp(0, (java.lang.Object) scriptNode69);
        java.lang.String str92 = scope1.toStringTree(scriptNode69);
        boolean boolean93 = scriptNode69.hasChildren();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node94 = scriptNode69.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                    {\n                                    }\n" + "'", str29, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "                    Scope" + "'", str55, "                    Scope");
        org.junit.Assert.assertNull(astRoot56);
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(nodeItor89);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test12806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12806");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node11 = scriptNode0.getNext();
        scriptNode0.setSourceName("-1\t  SCRIPT -53 1\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = scriptNode0.getAstRoot();
        java.lang.String str16 = scriptNode0.toSource(24);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = scriptNode0.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(astRoot14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                                                {\n                                                }\n" + "'", str16, "                                                {\n                                                }\n");
    }

    @Test
    public void test12807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12807");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int3 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode2.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode2.setSourceName("");
        int int8 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        scope10.setPosition(2);
        int int16 = scope10.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope17 = scope10.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scope10.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        scope20.setPosition(2);
        int int26 = scope20.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope27 = scope20.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scope20.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        int int31 = scriptNode29.getBaseLineno();
        java.lang.Object obj32 = scriptNode29.getCompilerData();
        scriptNode29.flattenSymbolTable(false);
        scope10.addChildAfter((com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode29);
        int int36 = scriptNode29.getLength();
        scriptNode2.setTop(scriptNode29);
        scriptNode2.setEncodedSourceBounds(16, 35);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(754207379, (com.google.javascript.rhino.head.Node) scriptNode2);
        scriptNode2.setEncodedSourceStart(1583199871);
        int int44 = scriptNode2.getType();
        scriptNode2.clearParentScope();
        int int46 = scriptNode2.getParamCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 136 + "'", int44 == 136);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test12808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12808");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        scriptNode5.setSourceName("-2\t      SCRIPT -53 1\n");
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList13 = scriptNode5.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getRegexpCount();
        scriptNode14.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode14.setLineno((int) '#');
        int int31 = scriptNode14.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode32 = scriptNode14.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList33 = scriptNode14.getStatements();
        scriptNode14.removeProp(1);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode5.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(astNodeList13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 35 + "'", int31 == 35);
        org.junit.Assert.assertNull(functionNode32);
        org.junit.Assert.assertNotNull(astNodeList33);
    }

    @Test
    public void test12809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12809");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.String str2 = scriptNode1.getSourceName();
        scriptNode1.setSourceName("-1\tGT -1 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        int int20 = scriptNode18.getBaseLineno();
        java.lang.String str21 = scriptNode18.getNextTempName();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        int int23 = scriptNode18.getType();
        int int24 = scriptNode18.getParamCount();
        java.lang.String str25 = scriptNode18.toString();
        int int26 = scriptNode18.getEncodedSourceEnd();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 136 + "'", int23 == 136);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test12810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12810");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = scriptNode27.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setEndLineno(20);
        scriptNode39.removeProp((int) 'a');
        scriptNode27.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope49 = scope47.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node50 = scope47.target;
        scope47.setPosition(2);
        java.lang.String str53 = scope47.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap54 = scope47.getSymbolTable();
        boolean boolean55 = scope47.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scriptNode56.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = scriptNode56.getTop();
        scope47.target = scriptNode56;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList67 = scriptNode56.getFunctions();
        scriptNode56.setEncodedSourceStart(52);
        int int70 = scriptNode56.getType();
        scriptNode39.setTop(scriptNode56);
        int int72 = scriptNode39.getType();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertNull(scope49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{\n}\n" + "'", str53, "{\n}\n");
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertNotNull(functionNodeList67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 136 + "'", int70 == 136);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 136 + "'", int72 == 136);
    }

    @Test
    public void test12811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12811");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("                                              Scope");
        java.lang.String str3 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        boolean boolean39 = scope27.hasChildren();
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope27);
        int int41 = scriptNode0.getLength();
        scriptNode0.setBaseLineno(845940330);
        java.lang.Object obj45 = scriptNode0.getProp(845940331);
        java.lang.String str46 = scriptNode0.toSource();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{\n}\n" + "'", str46, "{\n}\n");
    }

    @Test
    public void test12812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12812");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int22 = scope21.depth();
        scriptNode1.replaceWith(scope21);
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        java.lang.String str29 = comment28.getValue();
        scriptNode1.setJsDocNode(comment28);
        java.lang.String str32 = comment28.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol37 = scope35.getSymbol("$0");
        int int38 = scope35.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        int int54 = scriptNode52.getBaseLineno();
        java.lang.String str55 = scriptNode52.getNextTempName();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.lang.String str57 = scriptNode52.debugPrint();
        scope35.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode52.setSourceName("41");
        boolean boolean61 = scriptNode52.hasSideEffects();
        int int62 = scriptNode52.getParamCount();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) comment28, (com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.Token.CommentType commentType64 = comment28.getCommentType();
        java.lang.String str66 = comment28.toSource(26);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Scope" + "'", str29, "Scope");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    Scope" + "'", str32, "                    Scope");
        org.junit.Assert.assertNull(symbol37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 129 + "'", int38 == 129);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str57, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(commentType64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                                                    Scope" + "'", str66, "                                                    Scope");
    }

    @Test
    public void test12813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12813");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(1404628457, 4);
        scope2.clearParentScope();
    }

    @Test
    public void test12814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12814");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(25, 18);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = node2.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node4 = nodeIterator3.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12815");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(7, 8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        scriptNode20.setEncodedSourceEnd(11);
        java.lang.String str28 = scriptNode20.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        int int41 = scriptNode30.getIntProp(6, 2);
        int int42 = scriptNode30.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        int int45 = scriptNode43.getBaseLineno();
        java.lang.String str46 = scriptNode43.getNextTempName();
        scriptNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        int int59 = scriptNode48.getIntProp(6, 2);
        scriptNode48.setEndLineno(18);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode48, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.AstNode astNode64 = scriptNode48.getParent();
        int int65 = scriptNode48.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str70 = scope68.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        scriptNode74.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str83 = scriptNode74.getSourceName();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode74, 26);
        scriptNode72.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode74);
        java.lang.String str87 = scriptNode72.getNextTempName();
        scope68.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        boolean boolean89 = scriptNode72.hasChildren();
        scriptNode72.setBaseLineno(4);
        java.lang.String str92 = scriptNode72.getNextTempName();
        java.lang.String str93 = scriptNode72.debugPrint();
        scriptNode48.putProp(18, (java.lang.Object) scriptNode72);
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode72);
        java.lang.String str96 = scriptNode72.getSourceName();
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "$0" + "'", str46, "$0");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertNotNull(astNode64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "$0" + "'", str87, "$0");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "$1" + "'", str92, "$1");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "6\tSCRIPT 6 1\n" + "'", str93, "6\tSCRIPT 6 1\n");
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test12816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12816");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str26 = scriptNode17.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scope28, (int) (byte) 10);
        java.lang.String str34 = scriptNode7.shortName();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ScriptNode" + "'", str34, "ScriptNode");
    }

    @Test
    public void test12817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12817");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 5, commentType2, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        comment4.setPosition(16);
        com.google.javascript.rhino.head.Token.CommentType commentType7 = comment4.getCommentType();
        java.lang.String str8 = comment4.getValue();
        java.lang.String str9 = comment4.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        comment4.setCommentType(commentType10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor12 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment4.visit(nodeVisitor12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n" + "'", str9, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test12818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12818");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.Object obj42 = scriptNode26.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode26.getChildScopes();
        scriptNode26.setEncodedSourceBounds((-53), 5);
        java.lang.Object obj47 = scriptNode26.getCompilerData();
        java.lang.String str49 = scriptNode26.toSource((int) (short) 100);
        java.lang.String str50 = scriptNode26.getSourceName();
        scriptNode26.setEndLineno(0);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n" + "'", str49, "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test12819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12819");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        boolean boolean12 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scope14.setJsDocNode(comment23);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        scope27.setPosition(2);
        scope27.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node35 = scope27.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        java.lang.String str41 = scriptNode36.makeIndent((int) '#');
        scope27.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope14, (com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList44 = scriptNode36.getStatements();
        int int45 = scriptNode36.depth();
        scriptNode0.target = scriptNode36;
        java.lang.Object obj47 = scriptNode36.getCompilerData();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                                                      " + "'", str41, "                                                                      ");
        org.junit.Assert.assertNotNull(astNodeList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test12820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12820");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode42.setEndLineno(18);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode42, (int) (byte) -1);
        scriptNode16.target = scriptNode42;
        scriptNode42.clearParentScope();
        java.lang.String str60 = scriptNode42.shortName();
        boolean boolean61 = scriptNode42.hasSideEffects();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ScriptNode" + "'", str60, "ScriptNode");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test12821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12821");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        java.lang.String str14 = node12.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        int int49 = scriptNode38.getIntProp(6, 2);
        int int50 = scriptNode38.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope54 = scope52.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node55 = scope52.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scope52.setJsDocNode(comment61);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode64.getSymbols();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope52, (com.google.javascript.rhino.head.Node) scriptNode64);
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        scriptNode74.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = scriptNode74.getTop();
        scriptNode31.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode83);
        java.lang.String str85 = node12.toStringTree(scriptNode31);
        scriptNode31.setEncodedSource("-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        java.lang.String str88 = scriptNode31.toString();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray89 = scriptNode31.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "41" + "'", str14, "41");
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "136" + "'", str88, "136");
    }

    @Test
    public void test12822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12822");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = null;
        scope1.setTop(scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope7 = scope1.getEnclosingScope();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope10 = scope1.getDefiningScope("                  {\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = scope1.getAstRoot();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertNull(astRoot11);
    }

    @Test
    public void test12823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12823");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        int int17 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode0.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = scriptNode0.getStatements();
        java.lang.String str20 = scriptNode0.shortName();
        scriptNode0.setSourceName("136");
        int int23 = scriptNode0.getEncodedSourceEnd();
        scriptNode0.setEndLineno(52);
        int int26 = scriptNode0.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDouble((double) 18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(functionNode18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ScriptNode" + "'", str20, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
    }

    @Test
    public void test12824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12824");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        scriptNode20.clearParentScope();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator28 = scriptNode20.new NodeIterator();
        scriptNode20.removeProp(13);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test12825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12825");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str14 = scriptNode1.toSource(21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        scriptNode15.setEndLineno(5);
        java.lang.Object obj27 = scriptNode15.getProp((int) (short) 10);
        int int28 = scriptNode15.getParamCount();
        scriptNode1.setTop(scriptNode15);
        scriptNode1.setBounds(17, (int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode1.getTop();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor34 = scriptNode1.iterator();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (short) -1);
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scope37);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int40 = scriptNode1.addFunction(functionNode39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                          {\n                                          }\n" + "'", str14, "                                          {\n                                          }\n");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertNotNull(nodeItor34);
    }

    @Test
    public void test12826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12826");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        scope23.setPosition(2);
        int int29 = scope23.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope30 = scope23.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope23.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        int int39 = scope33.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope40 = scope33.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scope33.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        scriptNode42.flattenSymbolTable(false);
        scope23.addChildAfter((com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str50 = scriptNode42.makeIndent((-1));
        scope1.target = scriptNode42;
        com.google.javascript.rhino.head.Node node52 = scriptNode42.getNext();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        java.lang.String str68 = comment64.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment64);
        java.lang.Object obj71 = comment64.getProp((int) (short) -1);
        java.lang.String str73 = comment64.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        scriptNode74.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = scriptNode74.getTop();
        scriptNode83.setPosition(6);
        comment64.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode83);
        com.google.javascript.rhino.head.ast.Comment comment87 = comment64.getJsDocNode();
        comment64.removeProp(13);
        int int90 = scriptNode42.compareTo((com.google.javascript.rhino.head.ast.AstNode) comment64);
        int int91 = comment64.getLineno();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                    Scope" + "'", str68, "                    Scope");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(scriptNode83);
        org.junit.Assert.assertNull(comment87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test12827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12827");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        int int4 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        int int19 = scriptNode8.getIntProp(6, 2);
        int int20 = scriptNode8.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.String str24 = scriptNode21.getNextTempName();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        int int26 = scriptNode21.getType();
        int int27 = scriptNode21.getParamCount();
        com.google.javascript.rhino.head.Node node29 = scriptNode21.setType((int) '#');
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((-51), (com.google.javascript.rhino.head.Node) scriptNode21, 52);
        scriptNode0.addChildToBack(node31);
        java.lang.String str33 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator34 = scriptNode0.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = scriptNode0.debugPrint();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.AstNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test12828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12828");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = scriptNode0.getAstRoot();
        int int5 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        int int13 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scope7.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode16.getIntProp(6, 2);
        int int28 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope32 = scope30.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node33 = scope30.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scope30.setJsDocNode(comment39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode42.getSymbols();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scope30, (com.google.javascript.rhino.head.Node) scriptNode42);
        scriptNode42.setPosition((int) (byte) 0);
        scriptNode42.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str56 = scriptNode42.makeIndent(0);
        boolean boolean57 = scriptNode42.hasSideEffects();
        scope7.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = scriptNode60.getTop();
        scriptNode69.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int74 = scriptNode73.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode75.getEncodedSource();
        scriptNode75.setEncodedSourceEnd(18);
        scriptNode73.target = scriptNode75;
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode69, (com.google.javascript.rhino.head.Node) scriptNode75);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList81 = null;
        scriptNode75.setSymbols(symbolList81);
        java.lang.String str83 = scriptNode75.getJsDoc();
        scriptNode75.setBaseLineno((int) (byte) 0);
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        scriptNode0.setTop(scriptNode75);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node88 = scriptNode0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(astRoot4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test12829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12829");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-2), (int) '#');
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        java.lang.String str13 = comment8.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode9, node15);
        scriptNode9.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node19 = scriptNode9.getLastChild();
        int int20 = scriptNode9.getEndLineno();
        int int21 = scriptNode9.getEndLineno();
        scope2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode9);
        int int25 = scriptNode9.getIntProp((-748421155), 1558149202);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope27.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        int int42 = scriptNode31.getIntProp(6, 2);
        int int43 = scriptNode31.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope47 = scope45.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node48 = scope45.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scope45.setJsDocNode(comment54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode57.getSymbols();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scope45, (com.google.javascript.rhino.head.Node) scriptNode57);
        scriptNode57.setPosition((int) (byte) 0);
        scope27.setTop(scriptNode57);
        int int69 = scriptNode57.getParamCount();
        boolean boolean70 = scriptNode57.hasConsistentReturnUsage();
        java.lang.String str71 = scriptNode57.getEncodedSource();
        com.google.javascript.rhino.head.Node node73 = scriptNode57.setType(136);
        scriptNode57.setEncodedSourceEnd((-474135938));
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1558149202 + "'", int25 == 1558149202);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(node73);
    }

    @Test
    public void test12830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12830");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode11.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scope33.setJsDocNode(comment42);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        comment42.setCommentType(commentType45);
        scriptNode11.setJsDocNode(comment42);
        java.lang.String str49 = comment42.toSource(2);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "    Scope" + "'", str49, "    Scope");
    }

    @Test
    public void test12831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12831");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 1, 874571570);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = scope2.getSymbolTable();
        org.junit.Assert.assertNull(strMap3);
    }

    @Test
    public void test12832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12832");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.lang.String str22 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType26, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        java.lang.String str34 = scriptNode29.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment28, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        comment28.setCommentType(commentType36);
        scriptNode16.target = comment28;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = scriptNode41.getTop();
        scriptNode50.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int55 = scriptNode54.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        scriptNode56.setEncodedSourceEnd(18);
        scriptNode54.target = scriptNode56;
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scriptNode56);
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) comment66);
        scriptNode16.addChildToBack(node67);
        java.lang.String str69 = scriptNode16.getSourceName();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                      " + "'", str34, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test12833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12833");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        java.lang.String str13 = comment8.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode9, node15);
        scriptNode9.setSourceName("hi!");
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.Object obj20 = scriptNode9.getCompilerData();
        scriptNode9.setEncodedSourceEnd((int) (byte) 100);
        int int23 = scriptNode9.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode9.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode9.getTop();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertNotNull(scriptNode25);
    }

    @Test
    public void test12834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12834");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str30 = scriptNode28.debugPrint();
        int int31 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        scriptNode41.setLineno((int) (byte) 1);
        scriptNode33.setCompilerData((java.lang.Object) (byte) 1);
        int int45 = scriptNode33.depth();
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        com.google.javascript.rhino.head.Node node51 = com.google.javascript.rhino.head.Node.newString(2, "{\n  -1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n}\n");
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str54 = scope53.shortName();
        com.google.javascript.rhino.head.Node node55 = scope53.getLastChild();
        java.lang.String str57 = scope53.makeIndent(1);
        java.lang.String str58 = scope53.toSource();
        int int59 = scope53.getType();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList60 = scope53.getStatements();
        com.google.javascript.rhino.head.Node node62 = com.google.javascript.rhino.head.Node.newString("      Scope");
        boolean boolean63 = node62.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(135357821, node51, (com.google.javascript.rhino.head.Node) scope53, node62, (-42));
        scriptNode28.putProp((-769830162), (java.lang.Object) 135357821);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "22\tSCRIPT 22 1\n" + "'", str30, "22\tSCRIPT 22 1\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Scope" + "'", str54, "Scope");
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "  " + "'", str57, "  ");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{\n}\n" + "'", str58, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 129 + "'", int59 == 129);
        org.junit.Assert.assertNotNull(astNodeList60);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test12835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12835");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        scriptNode10.setLineno((-1));
        scriptNode10.putIntProp((int) '#', 16);
        int int87 = scriptNode10.depth();
        int int88 = scriptNode10.getEncodedSourceEnd();
        scriptNode10.setLength((-994326085));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test12836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12836");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode13.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str29 = scriptNode13.getSourceName();
        int int30 = scriptNode13.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        int int33 = scriptNode31.getBaseLineno();
        java.lang.Object obj34 = scriptNode31.getCompilerData();
        scriptNode31.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        int int52 = scriptNode50.getBaseLineno();
        java.lang.String str53 = scriptNode50.getNextTempName();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int58 = scope57.depth();
        scriptNode37.replaceWith(scope57);
        com.google.javascript.rhino.head.ast.Symbol symbol61 = scriptNode37.getSymbol("                                      Scope");
        scriptNode31.setTop(scriptNode37);
        scriptNode13.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType67, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        scriptNode70.setEncodedSourceEnd(18);
        java.lang.String str75 = scriptNode70.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment69, (com.google.javascript.rhino.head.Node) scriptNode70);
        java.lang.String str77 = scriptNode13.toStringTree(scriptNode70);
        com.google.javascript.rhino.head.ast.Scope scope78 = scriptNode70.getEnclosingScope();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 136 + "'", int30 == 136);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(symbol61);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "                                                                      " + "'", str75, "                                                                      ");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(scope78);
    }

    @Test
    public void test12837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12837");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode10.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = scriptNode30.getTop();
        scriptNode39.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int44 = scriptNode43.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        scriptNode45.setEncodedSourceEnd(18);
        scriptNode43.target = scriptNode45;
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str63 = scriptNode54.getSourceName();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode54, 26);
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node50, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scriptNode54);
        com.google.javascript.rhino.head.ast.Scope scope68 = scriptNode54.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode54.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode70);
        scriptNode70.setBaseLineno((int) '4');
        int int74 = scriptNode70.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) scriptNode70);
        java.lang.String str76 = scriptNode70.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray77 = scriptNode70.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test12838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12838");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.Node node32 = scriptNode23.setType((int) (byte) 0);
        com.google.javascript.rhino.head.ast.AstNode astNode33 = scriptNode23.getParent();
        // The following exception was thrown during execution in test generation
        try {
            astNode33.setLength(21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(astNode33);
    }

    @Test
    public void test12839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12839");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(17, 213295120);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = scope2.new NodeIterator();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope5.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = scriptNode68.getSymbols();
        scriptNode32.setSymbols(symbolList75);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode32.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList78 = scriptNode32.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList79 = scriptNode32.getChildScopes();
        scope5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        scriptNode32.clearParentScope();
        scriptNode32.removeProp(24);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList84 = scriptNode32.getChildScopes();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode32);
        scope2.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = scope2.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node88 = scope2.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertNotNull(symbolList75);
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertNotNull(functionNodeList78);
        org.junit.Assert.assertNull(scopeList79);
        org.junit.Assert.assertNull(scopeList84);
        org.junit.Assert.assertNull(scriptNode87);
    }

    @Test
    public void test12840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12840");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(34, (-1666765792));
    }

    @Test
    public void test12841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12841");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType2, "41");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = comment4.getCommentType();
        boolean boolean6 = comment4.hasSideEffects();
        org.junit.Assert.assertNull(commentType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test12842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12842");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(10, "0\tBLOCK 0 1\n-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Node node3 = null;
        // The following exception was thrown during execution in test generation
        try {
            node2.addChildToFront(node3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test12843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12843");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(960854933);
        int int2 = scriptNode1.getRegexpCount();
        scriptNode1.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setEndLineno((-51));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test12844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12844");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.setEncodedSourceEnd((int) (byte) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol31 = scriptNode20.getSymbol(">>");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        scriptNode32.setEncodedSourceEnd(18);
        java.lang.Object obj36 = scriptNode32.getCompilerData();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = scriptNode32.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator48 = scriptNode38.new NodeIterator();
        java.lang.String str49 = scriptNode38.shortName();
        int int50 = scriptNode38.getAbsolutePosition();
        scriptNode20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode32.setString("  53\tCOMMENT 53 53\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(symbol31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ScriptNode" + "'", str49, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test12845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12845");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        int int4 = scriptNode1.getEndLineno();
        int int5 = scriptNode1.getRegexpCount();
        scriptNode1.setEncodedSource("Scope");
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = scriptNode1.new NodeIterator();
        java.lang.String str9 = scriptNode1.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        int int12 = scriptNode10.getBaseLineno();
        java.lang.Object obj13 = scriptNode10.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        java.lang.String str22 = scriptNode14.toSource(26);
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.lang.String str24 = scriptNode14.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = scriptNode25.getTop();
        java.lang.String str35 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = scriptNode36.getTop();
        java.lang.String str46 = scriptNode45.shortName();
        scriptNode34.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode45);
        java.lang.String str49 = scriptNode34.makeIndent(6);
        scriptNode34.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        scriptNode14.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        int int54 = scriptNode34.getEncodedSourceEnd();
        int int55 = scriptNode34.getType();
        scriptNode34.setEncodedSourceEnd(0);
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        scope60.setPosition(2);
        scope60.putIntProp(17, 25);
        scope60.setPosition(0);
        scope60.setLength(13);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scope60, 21);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(1558149202, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope60, 23);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator77 = scriptNode34.new NodeIterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode34.visit(nodeVisitor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                                    {\n                                                    }\n" + "'", str22, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "136" + "'", str24, "136");
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ScriptNode" + "'", str35, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ScriptNode" + "'", str46, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "            " + "'", str49, "            ");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 136 + "'", int55 == 136);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
    }

    @Test
    public void test12846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12846");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode26.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        int int44 = scriptNode26.getType();
        int int47 = scriptNode26.getIntProp(97, (int) (byte) -1);
        java.lang.String str49 = scriptNode26.makeIndent(0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node50 = scriptNode26.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 136 + "'", int44 == 136);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test12847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12847");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str14 = scriptNode1.toSource(21);
        int int15 = scriptNode1.getEncodedSourceStart();
        boolean boolean16 = scriptNode1.hasChildren();
        int int17 = scriptNode1.getEncodedSourceStart();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                          {\n                                          }\n" + "'", str14, "                                          {\n                                          }\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test12848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12848");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope2.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str14 = comment9.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node16 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode10, node16);
        scriptNode10.setSourceName("hi!");
        scope2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        java.lang.Object obj21 = scriptNode10.getCompilerData();
        int int22 = scriptNode10.getEndLineno();
        java.lang.Object obj24 = scriptNode10.getProp(15);
        int int27 = scriptNode10.getIntProp(6, 18);
        int int30 = scriptNode10.getIntProp(22, 24);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scriptNode10, 1487440633);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor33 = scriptNode10.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor33.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Scope" + "'", str3, "Scope");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 18 + "'", int27 == 18);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 24 + "'", int30 == 24);
        org.junit.Assert.assertNotNull(nodeItor33);
    }

    @Test
    public void test12849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12849");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode13.getType();
        java.lang.String str19 = scriptNode13.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode13.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setEncodedSourceStart((int) ' ');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList45 = scriptNode37.getChildScopes();
        int int46 = scriptNode37.getPosition();
        scriptNode13.setCompilerData((java.lang.Object) int46);
        scriptNode13.setRelative(1487440611);
        com.google.javascript.rhino.head.Node node51 = scriptNode13.setType(727575172);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str19, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(scopeList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(node51);
    }

    @Test
    public void test12850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12850");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj2 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int5 = scriptNode3.addFunction(functionNode4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(scriptNode3);
    }

    @Test
    public void test12851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12851");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode4.getSymbol("/");
        scriptNode4.setRelative(25);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope24 = scope22.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node25 = scope22.target;
        scope22.setPosition(2);
        scope22.setLength((int) (byte) 1);
        boolean boolean30 = scope22.hasSideEffects();
        com.google.javascript.rhino.head.Node node33 = com.google.javascript.rhino.head.Node.newString("$0");
        node33.putIntProp(25, 1);
        com.google.javascript.rhino.head.Node node37 = node33.getFirstChild();
        scope22.putProp((int) (short) 100, (java.lang.Object) node33);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType42, "{\n}\n");
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment44, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType47 = comment44.getCommentType();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(9, node33, (com.google.javascript.rhino.head.Node) comment44, 17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator50 = comment44.new NodeIterator();
        com.google.javascript.rhino.head.Node node51 = comment44.getLastSibling();
        scriptNode4.putProp((int) '#', (java.lang.Object) node51);
        com.google.javascript.rhino.head.ast.Scope scope53 = scriptNode4.getParentScope();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(commentType47);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNull(scope53);
    }

    @Test
    public void test12852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12852");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("                                                    {\n                                                    }\n");
        java.lang.String str4 = scriptNode1.toSource();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        scope19.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node27 = scope19.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        java.lang.String str33 = scriptNode28.makeIndent((int) '#');
        scope19.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope6, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope6.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        int int52 = scriptNode50.getBaseLineno();
        java.lang.String str53 = scriptNode50.getNextTempName();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        int int55 = scriptNode37.getEndLineno();
        scope6.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        int int58 = scriptNode1.getAbsolutePosition();
        scriptNode1.setBounds((-389829193), (-824625719));
        boolean boolean62 = scriptNode1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Symbol symbol63 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.putSymbol(symbol63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{\n}\n" + "'", str4, "{\n}\n");
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                      " + "'", str33, "                                                                      ");
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test12853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12853");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        scriptNode0.setEncodedSourceBounds(3, 272356811);
        int int42 = scriptNode0.getLineno();
        int int43 = scriptNode0.getParamCount();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test12854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12854");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        int int8 = scope2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope9 = scope2.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scope2.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setPosition(2);
        int int18 = scope12.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope19 = scope12.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope12.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.Object obj24 = scriptNode21.getCompilerData();
        scriptNode21.flattenSymbolTable(false);
        scope2.addChildAfter((com.google.javascript.rhino.head.Node) scope12, (com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope28 = scriptNode21.getEnclosingScope();
        java.lang.String str29 = scriptNode21.getSourceName();
        int int30 = scriptNode21.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Symbol symbol32 = scriptNode21.getSymbol("                                                                                                                                                                                                  Scope");
        int int33 = scriptNode21.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope37 = scope35.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node38 = scope35.target;
        scope35.setPosition(2);
        java.lang.String str41 = scope35.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap42 = scope35.getSymbolTable();
        boolean boolean43 = scope35.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = scriptNode44.getTop();
        scope35.target = scriptNode44;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList55 = scriptNode44.getFunctions();
        scriptNode44.setEncodedSourceStart(52);
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope61 = scope59.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node62 = scope59.target;
        scope59.setPosition(2);
        int int65 = scope59.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope66 = scope59.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator67 = scope59.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope71 = scope69.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node72 = scope69.target;
        scope69.setPosition(2);
        int int75 = scope69.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope76 = scope69.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator77 = scope69.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str79 = scriptNode78.getEncodedSource();
        int int80 = scriptNode78.getBaseLineno();
        java.lang.Object obj81 = scriptNode78.getCompilerData();
        scriptNode78.flattenSymbolTable(false);
        scope59.addChildAfter((com.google.javascript.rhino.head.Node) scope69, (com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.ast.Scope scope85 = scriptNode78.getEnclosingScope();
        java.lang.String str86 = scriptNode78.getSourceName();
        int int87 = scriptNode78.getAbsolutePosition();
        scriptNode78.setEncodedSourceEnd((-51));
        scriptNode44.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node(727575172, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scriptNode44);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(symbol32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{\n}\n" + "'", str41, "{\n}\n");
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertNotNull(functionNodeList55);
        org.junit.Assert.assertNull(scope61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scope66);
        org.junit.Assert.assertNotNull(nodeSpliterator67);
        org.junit.Assert.assertNull(scope71);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNotNull(nodeSpliterator77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(scope85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test12855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12855");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope6 = scope4.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node7 = scope4.target;
        scope4.setPosition(2);
        java.lang.String str10 = scope4.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = scope4.getSymbolTable();
        boolean boolean12 = scope4.hasChildren();
        com.google.javascript.rhino.head.Node node13 = scope4.getNext();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        java.lang.String str28 = comment24.toSource((int) (short) 10);
        scope4.setJsDocNode(comment24);
        scriptNode1.replaceWith(scope4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = scriptNode1.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node32 = scriptNode1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\n}\n" + "'", str10, "{\n}\n");
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                    Scope" + "'", str28, "                    Scope");
        org.junit.Assert.assertNotNull(functionNodeList31);
    }

    @Test
    public void test12856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12856");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        scriptNode13.setEncodedSource("                        ");
        scriptNode13.setEncodedSourceBounds(12, 0);
        scriptNode13.removeProp(53);
        scriptNode13.setLineno(38914433);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
    }

    @Test
    public void test12857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12857");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.lang.String str10 = scope1.makeIndent(0);
        int int11 = scope1.getLength();
        com.google.javascript.rhino.head.Node node13 = scope1.setType(3);
        com.google.javascript.rhino.head.Node node16 = com.google.javascript.rhino.head.Node.newString((int) (byte) 10, "");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = node16.toStringTree(scriptNode28);
        scope1.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode28.getChildScopes();
        int int49 = scriptNode28.depth();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test12858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12858");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType2, "41");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        int int13 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope7.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope7.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        int int23 = scope17.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope24 = scope17.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope17.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.Object obj29 = scriptNode26.getCompilerData();
        scriptNode26.flattenSymbolTable(false);
        scope7.addChildAfter((com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int33 = scriptNode26.getLength();
        scriptNode26.setEncodedSourceEnd((int) (byte) 0);
        comment4.putProp(9, (java.lang.Object) scriptNode26);
        java.lang.String str37 = comment4.getJsDoc();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = comment4.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        comment4.setCommentType(commentType39);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(commentType38);
    }

    @Test
    public void test12859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12859");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 10);
        scriptNode1.setEndLineno(23);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList4 = scriptNode1.getStatements();
        java.lang.String str5 = scriptNode1.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode1.getSymbols();
        org.junit.Assert.assertNotNull(astNodeList4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "10\tSCRIPT 10 1\n" + "'", str5, "10\tSCRIPT 10 1\n");
        org.junit.Assert.assertNotNull(symbolList6);
    }

    @Test
    public void test12860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12860");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getLineno();
        java.lang.Object obj12 = scriptNode0.getProp(26);
        int int13 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode58, 26);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node54, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode58);
        node70.setLineno(5);
        scriptNode14.setCompilerData((java.lang.Object) node70);
        scriptNode14.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = scriptNode14.getTop();
        java.lang.String str76 = scriptNode75.shortName();
        int int77 = scriptNode75.getEncodedSourceEnd();
        int int78 = scriptNode75.getEndLineno();
        scriptNode0.setTop(scriptNode75);
        com.google.javascript.rhino.head.Node node81 = scriptNode0.setType((-6));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ScriptNode" + "'", str76, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(node81);
    }

    @Test
    public void test12861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12861");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        int int4 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment5 = scriptNode1.getJsDocNode();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode1, 2);
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType12, "41");
        java.lang.String str15 = comment14.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        comment14.setCommentType(commentType16);
        int int18 = comment14.getLineno();
        boolean boolean19 = comment14.hasSideEffects();
        scriptNode1.setJsDocNode(comment14);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = scriptNode1.getSymbolTable();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.labelId(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(comment5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "41" + "'", str15, "41");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test12862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12862");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100);
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        int int12 = comment6.getType();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        java.lang.String str24 = comment19.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.Node node26 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode20, node26);
        scriptNode20.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = scriptNode31.getTop();
        scriptNode40.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int45 = scriptNode44.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getEncodedSource();
        scriptNode46.setEncodedSourceEnd(18);
        scriptNode44.target = scriptNode46;
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scriptNode46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scriptNode53.setEncodedSourceStart((int) (byte) 100);
        int int64 = scriptNode53.getIntProp(6, 2);
        int int65 = scriptNode53.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope69 = scope67.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node70 = scope67.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scope67.setJsDocNode(comment76);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList86 = scriptNode79.getSymbols();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scope67, (com.google.javascript.rhino.head.Node) scriptNode79);
        com.google.javascript.rhino.head.Node node89 = scriptNode53.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scriptNode53);
        comment6.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode53);
        int int92 = scriptNode53.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope93 = scriptNode53.getParentScope();
        boolean boolean94 = scriptNode53.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope95 = scriptNode53.getParentScope();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode53);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode97 = scriptNode53.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList98 = scriptNode53.getSymbols();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 161 + "'", int12 == 161);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(scope69);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNotNull(symbolList86);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNull(scope93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(scope95);
        org.junit.Assert.assertNull(functionNode97);
        org.junit.Assert.assertNotNull(symbolList98);
    }

    @Test
    public void test12863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12863");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int12 = scriptNode9.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope14.setPosition(100);
        com.google.javascript.rhino.head.Node node17 = scope14.getLastSibling();
        node17.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = node17.spliterator();
        scriptNode9.setCompilerData((java.lang.Object) node17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        scriptNode36.target = scriptNode38;
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment48);
        java.lang.String str50 = scriptNode9.toStringTree(scriptNode32);
        scope1.setTop(scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scope1.getTop();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode53 = scope1.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump54 = scope1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNull(functionNode53);
    }

    @Test
    public void test12864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12864");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        boolean boolean6 = scriptNode2.hasSideEffects();
        scriptNode2.setSourceName("0\tCOMMENT 0 6\n");
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope(11);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope11, 874571570);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        int int24 = scope18.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope25 = scope18.getEnclosingScope();
        java.lang.String str27 = scope18.makeIndent(0);
        int int28 = scope18.getLength();
        com.google.javascript.rhino.head.ast.AstNode astNode29 = scope18.getParent();
        scope16.target = astNode29;
        node13.addChildToBack((com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(34756133, (com.google.javascript.rhino.head.Node) scriptNode2, node13);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = node13.spliterator();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertNotNull(nodeSpliterator33);
    }

    @Test
    public void test12865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12865");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(18);
        java.lang.Object obj16 = scriptNode13.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node55 = scriptNode44.target;
        scriptNode13.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        int int57 = scriptNode44.getLineno();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode44);
        scriptNode0.setRelative((int) (byte) 0);
        java.lang.String str61 = scriptNode0.debugPrint();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                    {\n                                    }\n" + "'", str15, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str61, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test12866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12866");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 1670905977);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test12867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12867");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode3, 26);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode3);
        java.lang.String str16 = scriptNode1.getNextTempName();
        scriptNode1.setEncodedSourceStart(5);
        scriptNode1.setLineno(52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        int int33 = scriptNode22.getIntProp(6, 2);
        int int34 = scriptNode22.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope38 = scope36.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node39 = scope36.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scope36.setJsDocNode(comment45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode48.getSymbols();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) scriptNode48);
        scriptNode48.setPosition((int) (byte) 0);
        scriptNode48.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        int int72 = scriptNode61.getIntProp(6, 2);
        int int73 = scriptNode61.getParamCount();
        java.lang.String str74 = scriptNode61.debugPrint();
        int int77 = scriptNode61.getIntProp(17, 10);
        scriptNode48.setTop(scriptNode61);
        scriptNode48.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node81 = scriptNode48.getLastChild();
        java.lang.String str82 = scriptNode48.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList83 = scriptNode48.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int86 = scriptNode85.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str88 = scriptNode87.getEncodedSource();
        scriptNode87.setEncodedSourceEnd(18);
        scriptNode85.target = scriptNode87;
        com.google.javascript.rhino.head.Node node92 = scriptNode87.getFirstChild();
        scriptNode48.setTop(scriptNode87);
        java.lang.String str94 = scriptNode1.toStringTree(scriptNode48);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str74, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(functionNodeList83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(node92);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test12868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12868");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.Node node32 = scriptNode23.setType((int) (byte) 0);
        boolean boolean33 = scriptNode23.hasSideEffects();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test12869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12869");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType13, "41");
        java.lang.String str16 = comment15.getValue();
        scriptNode0.setJsDocNode(comment15);
        java.lang.String str18 = comment15.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        comment15.setCommentType(commentType19);
        com.google.javascript.rhino.head.Node node21 = comment15.getNext();
        java.lang.String str22 = comment15.getValue();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "41" + "'", str16, "41");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Comment" + "'", str18, "Comment");
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "41" + "'", str22, "41");
    }

    @Test
    public void test12870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12870");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        scriptNode0.setLength(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str27 = scriptNode18.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor28 = scriptNode18.iterator();
        java.lang.String str29 = scriptNode18.debugPrint();
        java.lang.String str30 = scriptNode18.getSourceName();
        boolean boolean31 = scriptNode18.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.clearParentScope();
        scriptNode32.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node43 = scriptNode32.target;
        scriptNode32.clearParentScope();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray45 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList46, symbolArray45);
        scriptNode32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList46);
        scriptNode18.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList46);
        java.lang.Object obj51 = scriptNode18.getProp(16);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode18);
        boolean boolean53 = scriptNode0.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(nodeItor28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str29, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test12871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12871");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        java.lang.Object obj11 = scope2.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope2);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        java.lang.String str20 = scope14.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = scope14.getSymbolTable();
        boolean boolean22 = scope14.hasChildren();
        com.google.javascript.rhino.head.Node node23 = scope14.getNext();
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope14);
        // The following exception was thrown during execution in test generation
        try {
            scope14.labelId(2018070520);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(node23);
    }

    @Test
    public void test12872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12872");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj2 = scriptNode1.getCompilerData();
        scriptNode1.setLineno(53);
        int int5 = scriptNode1.getParamCount();
        int int6 = scriptNode1.getLength();
        int int7 = scriptNode1.getEncodedSourceEnd();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test12873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12873");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(701595233);
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = scope1.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        int int5 = scriptNode3.getBaseLineno();
        java.lang.String str6 = scriptNode3.getNextTempName();
        scriptNode3.setLength((int) 'a');
        int int9 = scriptNode3.depth();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        java.lang.String str20 = comment15.toStringTree(scriptNode16);
        com.google.javascript.rhino.head.Node node22 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode16, node22);
        java.lang.String str24 = scriptNode16.getSourceName();
        int int25 = scriptNode16.getEncodedSourceStart();
        scriptNode16.setLineno(17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.clearParentScope();
        scriptNode28.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = scriptNode28.getTop();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.clearParentScope();
        scriptNode43.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node54 = scriptNode43.target;
        scriptNode43.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        scriptNode56.setEncodedSourceEnd(18);
        java.lang.String str61 = scriptNode56.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scriptNode62.setEncodedSourceStart((int) (byte) 100);
        scriptNode56.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode43, (com.google.javascript.rhino.head.ast.Scope) scriptNode56);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap73 = scriptNode56.getSymbolTable();
        scope42.setSymbolTable(strMap73);
        scriptNode39.setSymbolTable(strMap73);
        scriptNode16.setSymbolTable(strMap73);
        scriptNode3.setSymbolTable(strMap73);
        // The following exception was thrown during execution in test generation
        try {
            astRoot2.setSymbolTable(strMap73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astRoot2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "$0" + "'", str6, "$0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "                                                                      " + "'", str61, "                                                                      ");
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test12874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12874");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int60 = scriptNode28.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode28.getFunctions();
        boolean boolean62 = scriptNode28.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test12875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12875");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node12 = scriptNode5.setType(16);
        int int13 = scriptNode5.getLength();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = scriptNode5.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        int int49 = scriptNode38.getIntProp(6, 2);
        int int50 = scriptNode38.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope52 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope54 = scope52.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node55 = scope52.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scope52.setJsDocNode(comment61);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode64.getSymbols();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope52, (com.google.javascript.rhino.head.Node) scriptNode64);
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList81 = scriptNode74.getSymbols();
        scriptNode38.setSymbols(symbolList81);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList83 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode84 = scriptNode38.getEnclosingFunction();
        scriptNode5.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.Node node86 = scriptNode5.getLastSibling();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNotNull(symbolList81);
        org.junit.Assert.assertNotNull(symbolList83);
        org.junit.Assert.assertNull(functionNode84);
        org.junit.Assert.assertNotNull(node86);
    }

    @Test
    public void test12876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12876");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((int) ' ');
        com.google.javascript.rhino.head.Node node2 = node1.getFirstChild();
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test12877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12877");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        java.lang.Object obj4 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scope20.setJsDocNode(comment29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode32);
        scriptNode32.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node43 = scriptNode32.target;
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        java.lang.String str45 = scriptNode1.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope49 = scope47.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node50 = scope47.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int55 = scriptNode52.getIntProp(23, (int) (short) 1);
        boolean boolean56 = scriptNode52.hasSideEffects();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope47, (com.google.javascript.rhino.head.Node) scriptNode52);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator58 = scriptNode52.spliterator();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = scriptNode52.getTop();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(scope49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator58);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNotNull(scriptNode60);
    }

    @Test
    public void test12878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12878");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        boolean boolean21 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node24 = nodeIterator17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test12879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12879");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        int int16 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        scriptNode44.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray57 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList58, symbolArray57);
        scriptNode44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        java.lang.String str62 = scriptNode0.toSource();
        java.lang.String str63 = scriptNode0.shortName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap64 = null;
        scriptNode0.setSymbolTable(strMap64);
        com.google.javascript.rhino.head.Node node67 = scriptNode0.setType((-1850081477));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNotNull(symbolArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{\n  {\n  }\n}\n" + "'", str62, "{\n  {\n  }\n}\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ScriptNode" + "'", str63, "ScriptNode");
        org.junit.Assert.assertNotNull(node67);
    }

    @Test
    public void test12880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12880");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((-1850081477));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: -1850081477");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12881");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        scope73.setLineno(26);
        java.lang.String str84 = scope73.shortName();
        java.lang.String str85 = scope73.debugPrint();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Scope" + "'", str84, "Scope");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "2\tBLOCK 2 1\n" + "'", str85, "2\tBLOCK 2 1\n");
    }

    @Test
    public void test12882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12882");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        int int5 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        int int21 = scriptNode19.getBaseLineno();
        java.lang.String str22 = scriptNode19.getNextTempName();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        boolean boolean26 = scriptNode19.hasConsistentReturnUsage();
        java.lang.String str27 = scriptNode19.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node28 = scriptNode19.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 129 + "'", int5 == 129);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str24, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test12883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12883");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = scriptNode45.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
    }

    @Test
    public void test12884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12884");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        boolean boolean29 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        comment27.setCommentType(commentType30);
        java.lang.String str32 = comment27.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        comment27.setCommentType(commentType33);
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        comment27.setCommentType(commentType35);
        com.google.javascript.rhino.head.Token.CommentType commentType37 = comment27.getCommentType();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Scope" + "'", str32, "Scope");
        org.junit.Assert.assertNull(commentType37);
    }

    @Test
    public void test12885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12885");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        java.lang.String str37 = scriptNode29.debugPrint();
        scriptNode29.setBaseLineno((int) (byte) 10);
        scriptNode20.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        java.lang.String str41 = scriptNode20.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol43 = scriptNode20.getSymbol("                    Scope");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str37, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "136" + "'", str41, "136");
        org.junit.Assert.assertNull(symbol43);
    }

    @Test
    public void test12886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12886");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getLength();
        scriptNode10.setEncodedSourceStart((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = scriptNode10.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test12887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12887");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode26.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        scriptNode42.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        int int57 = scriptNode45.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getEncodedSource();
        int int60 = scriptNode58.getBaseLineno();
        java.lang.String str61 = scriptNode58.getNextTempName();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        int int63 = scriptNode58.getType();
        java.lang.String str64 = scriptNode58.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        scriptNode42.setSymbols(symbolList65);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor67 = scriptNode42.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = scriptNode42.getRegexpFlags(26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 136 + "'", int63 == 136);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str64, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertNotNull(nodeItor67);
    }

    @Test
    public void test12888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12888");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        scriptNode0.clearParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode0.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.lang.String str70 = scriptNode62.toSource(26);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator71 = scriptNode62.new NodeIterator();
        java.lang.String str72 = scriptNode0.toStringTree(scriptNode62);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node73 = scriptNode62.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                                                    {\n                                                    }\n" + "'", str70, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test12889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12889");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        scriptNode27.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node60 = scriptNode27.getLastChild();
        java.lang.String str61 = scriptNode27.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = scriptNode27.getFunctions();
        java.lang.String str63 = scriptNode27.shortName();
        com.google.javascript.rhino.head.ast.Symbol symbol65 = scriptNode27.getSymbol("                    hi!");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor66 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.visit(nodeVisitor66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ScriptNode" + "'", str63, "ScriptNode");
        org.junit.Assert.assertNull(symbol65);
    }

    @Test
    public void test12890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12890");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node70 = scriptNode23.getLastSibling();
        com.google.javascript.rhino.head.Node node71 = scriptNode23.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode23.getSymbols();
        int int73 = scriptNode23.getRegexpCount();
        scriptNode23.setLength(34);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test12891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12891");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType3, "hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode7);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = node8.iterator();
        com.google.javascript.rhino.head.Node node10 = nodeItor9.next();
        node10.removeProp((-51));
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) comment5, node10, 23);
        java.lang.String str16 = comment5.toSource((int) '4');
        java.lang.String str18 = comment5.toSource(7);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor19 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment5.visit(nodeVisitor19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                                                                                                        hi!" + "'", str16, "                                                                                                        hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "              hi!" + "'", str18, "              hi!");
    }

    @Test
    public void test12892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12892");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        scope1.setPosition(97);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        boolean boolean18 = scope6.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean21 = scope20.hasSideEffects();
        java.lang.String str22 = scope20.toSource();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean25 = scope24.hasSideEffects();
        java.lang.String str26 = scope24.toSource();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scope24, 17);
        java.lang.String str29 = node28.toString();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((-613442063), (com.google.javascript.rhino.head.Node) scope1, node28);
        scope1.setRelative(371991955);
        com.google.javascript.rhino.head.Node node33 = scope1.target;
        com.google.javascript.rhino.head.Node node34 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope1.addChildToBack(node34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{\n}\n" + "'", str26, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "13" + "'", str29, "13");
        org.junit.Assert.assertNull(node33);
    }

    @Test
    public void test12893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12893");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean22 = scriptNode5.hasChildren();
        java.lang.String str23 = scriptNode5.getEncodedSource();
        scriptNode5.flattenSymbolTable(true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test12894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12894");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(16);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = node1.spliterator();
        org.junit.Assert.assertNotNull(nodeSpliterator2);
    }

    @Test
    public void test12895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12895");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        com.google.javascript.rhino.head.Node node60 = scriptNode0.getNext();
        int int61 = scriptNode0.getBaseLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope62 = scriptNode0.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test12896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12896");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = scriptNode0.getAstRoot();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = scriptNode0.addFunction(functionNode5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(astRoot4);
    }

    @Test
    public void test12897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12897");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        boolean boolean13 = scope1.hasChildren();
        java.lang.String str14 = scope1.debugPrint();
        int int15 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode16.getIntProp(6, 2);
        int int28 = scriptNode16.getParamCount();
        java.lang.String str29 = scriptNode16.debugPrint();
        scriptNode16.setPosition(8);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        scope1.setBounds((-899539259), 734000496);
        scope1.clearParentScope();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0\tBLOCK 0 1\n" + "'", str14, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str29, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test12898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12898");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        java.lang.String str25 = scriptNode24.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        java.lang.String str36 = scriptNode35.shortName();
        scriptNode24.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode35);
        java.lang.String str39 = scriptNode24.makeIndent(6);
        scriptNode24.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        scriptNode4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode24);
        int int44 = scriptNode24.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        int int57 = scriptNode45.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getEncodedSource();
        int int60 = scriptNode58.getBaseLineno();
        java.lang.String str61 = scriptNode58.getNextTempName();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        int int63 = scriptNode58.getType();
        int int64 = scriptNode58.getParamCount();
        int int65 = scriptNode58.getLength();
        int int66 = scriptNode58.getFunctionCount();
        java.lang.Object obj67 = scriptNode58.getCompilerData();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        java.lang.String str69 = scriptNode24.shortName();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode24.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope71 = scriptNode24.getParentScope();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ScriptNode" + "'", str25, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ScriptNode" + "'", str36, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "            " + "'", str39, "            ");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 136 + "'", int63 == 136);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ScriptNode" + "'", str69, "ScriptNode");
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertNull(scope71);
    }

    @Test
    public void test12899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12899");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str37 = scriptNode28.getSourceName();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode28, 26);
        scriptNode10.setCompilerData((java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope45 = scope43.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node46 = scope43.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scope43.setJsDocNode(comment52);
        boolean boolean55 = scope43.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean58 = scope57.hasSideEffects();
        java.lang.String str59 = scope57.toSource();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean62 = scope61.hasSideEffects();
        java.lang.String str63 = scope61.toSource();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) scope43, (com.google.javascript.rhino.head.Node) scope57, (com.google.javascript.rhino.head.Node) scope61, 17);
        scope57.setBounds((int) (short) 100, 16);
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) (short) 1, 14, commentType71, "/");
        scope57.setJsDocNode(comment73);
        scriptNode10.setJsDocNode(comment73);
        scriptNode10.setEndLineno(70);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{\n}\n" + "'", str59, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{\n}\n" + "'", str63, "{\n}\n");
    }

    @Test
    public void test12900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12900");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        scriptNode1.target = scriptNode3;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        scriptNode9.setLineno((int) (byte) 1);
        scriptNode1.setCompilerData((java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.ast.Comment comment13 = scriptNode1.getJsDocNode();
        java.lang.String str15 = scriptNode1.toSource((int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        int int23 = scope17.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope24 = scope17.getEnclosingScope();
        java.lang.String str26 = scope17.makeIndent(0);
        int int27 = scope17.getLength();
        com.google.javascript.rhino.head.ast.AstNode astNode28 = scope17.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str38 = scriptNode29.getSourceName();
        int int39 = scriptNode29.getFunctionCount();
        int int40 = scriptNode29.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode42.getEncodedSourceStart();
        java.lang.String str52 = scriptNode42.getSourceName();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scriptNode42);
        scriptNode42.setEncodedSourceEnd(17);
        scriptNode29.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        java.lang.String str57 = scriptNode42.toSource();
        scope17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        java.lang.String str59 = scriptNode1.toStringTree(scriptNode42);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(comment13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                {\n                                                                }\n" + "'", str15, "                                                                {\n                                                                }\n");
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(astNode28);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{\n}\n" + "'", str57, "{\n}\n");
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test12901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12901");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = null;
        scope1.setSymbolTable(strMap10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        int int20 = scope14.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope21 = scope14.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope14.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        scope24.setPosition(2);
        int int30 = scope24.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope31 = scope24.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope24.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.Object obj36 = scriptNode33.getCompilerData();
        scriptNode33.flattenSymbolTable(false);
        scope14.addChildAfter((com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int40 = scriptNode33.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str46 = scriptNode41.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        scriptNode41.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        boolean boolean57 = scriptNode41.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = scriptNode41.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        scope1.putProp(161, (java.lang.Object) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope61 = scriptNode41.getEnclosingScope();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                      " + "'", str46, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(scope61);
    }

    @Test
    public void test12902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12902");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        java.lang.Object obj59 = scriptNode40.getProp(17);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode40.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getEncodedSource();
        scriptNode61.setEncodedSourceEnd(18);
        java.lang.String str66 = scriptNode61.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        scriptNode67.setEncodedSourceStart((int) (byte) 100);
        scriptNode61.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode61.putIntProp((-547629399), (-547629399));
        // The following exception was thrown during execution in test generation
        try {
            scriptNode40.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                                                                      " + "'", str66, "                                                                      ");
    }

    @Test
    public void test12903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12903");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        int int8 = scriptNode0.getIntProp((int) '4', 4);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scriptNode0.spliterator();
        java.lang.String str10 = scriptNode0.shortName();
        scriptNode0.setBaseLineno(595467506);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
    }

    @Test
    public void test12904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12904");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode8.getEncodedSource();
        scriptNode8.setEncodedSourceEnd(18);
        java.lang.String str12 = comment7.toStringTree(scriptNode8);
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode8, node14);
        scriptNode8.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        com.google.javascript.rhino.head.Node node77 = scriptNode41.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode41);
        java.lang.String str79 = scriptNode8.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap80 = scriptNode8.getSymbolTable();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor81 = scriptNode8.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        com.google.javascript.rhino.head.ast.Comment comment87 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType85, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str89 = scriptNode88.getEncodedSource();
        scriptNode88.setEncodedSourceEnd(18);
        java.lang.String str92 = comment87.toStringTree(scriptNode88);
        com.google.javascript.rhino.head.Node node94 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode88, node94);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList96 = scriptNode88.getSymbols();
        scriptNode8.setSymbols(symbolList96);
        com.google.javascript.rhino.head.Node node99 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode8, 51);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "{\n}\n" + "'", str79, "{\n}\n");
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(nodeItor81);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertNotNull(symbolList96);
    }

    @Test
    public void test12905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12905");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList21 = scriptNode10.getFunctions();
        com.google.javascript.rhino.head.ast.AstNode astNode22 = scriptNode10.getParent();
        int int23 = scriptNode10.getBaseLineno();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNotNull(functionNodeList21);
        org.junit.Assert.assertNotNull(astNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test12906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12906");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        boolean boolean13 = scriptNode0.hasSideEffects();
        com.google.javascript.rhino.head.Node node14 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode0.getSymbol("%");
        int int17 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.Scope scope19 = scriptNode0.getDefiningScope("");
        java.lang.String str20 = scriptNode0.getNextTempName();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
    }

    @Test
    public void test12907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12907");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.Node node15 = scriptNode4.setType((int) (short) 10);
        boolean boolean16 = node15.hasConsistentReturnUsage();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test12908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12908");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(17);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol6 = scope4.getSymbol("$0");
        int int7 = scope4.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        int int19 = scriptNode8.getIntProp(6, 2);
        int int20 = scriptNode8.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.String str24 = scriptNode21.getNextTempName();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        java.lang.String str26 = scriptNode21.debugPrint();
        scope4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        scriptNode21.setEncodedSourceBounds(9, 2);
        java.lang.String str31 = scriptNode21.toString();
        com.google.javascript.rhino.head.ast.Scope scope32 = scriptNode21.getEnclosingScope();
        int int33 = scope1.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump34 = scriptNode21.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(symbol6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 129 + "'", int7 == 129);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str26, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "136" + "'", str31, "136");
        org.junit.Assert.assertNotNull(scope32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test12909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12909");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        scriptNode1.target = scriptNode3;
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList8 = scriptNode3.getSymbols();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(symbolList8);
    }

    @Test
    public void test12910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12910");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode17.setEncodedSourceEnd(11);
        java.lang.String str25 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str29 = scriptNode17.getEncodedSource();
        com.google.javascript.rhino.head.Node node30 = scriptNode17.target;
        int int31 = scriptNode17.getEndLineno();
        scriptNode17.setEndLineno(874571570);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str29, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test12911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12911");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("        ");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test12912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12912");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        java.lang.String str13 = comment8.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode9, node15);
        scriptNode9.setSourceName("hi!");
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.Object obj20 = scriptNode9.getCompilerData();
        java.lang.String str22 = scriptNode9.toSource(23);
        com.google.javascript.rhino.head.ast.Scope scope23 = scriptNode9.getEnclosingScope();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                              {\n                                              }\n" + "'", str22, "                                              {\n                                              }\n");
        org.junit.Assert.assertNull(scope23);
    }

    @Test
    public void test12913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12913");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((-366869103));
        scope2.replaceWith(scope10);
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scope10.getParent();
        // The following exception was thrown during execution in test generation
        try {
            scope10.setDouble((double) 908331048);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(astNode12);
    }

    @Test
    public void test12914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12914");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(12, 53);
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment(24, 5, commentType5, "==");
        node2.addChildToBack((com.google.javascript.rhino.head.Node) comment7);
        int int9 = comment7.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 24 + "'", int9 == 24);
    }

    @Test
    public void test12915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12915");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        boolean boolean24 = nodeIterator17.hasNext();
        boolean boolean25 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        boolean boolean27 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test12916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12916");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scope1.iterator();
        boolean boolean14 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode16.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope21.setPosition(100);
        com.google.javascript.rhino.head.Node node24 = scope21.getLastSibling();
        node24.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = node24.spliterator();
        scriptNode16.setCompilerData((java.lang.Object) node24);
        com.google.javascript.rhino.head.Node node29 = node24.setType(20);
        scope1.addChildToBack(node24);
        com.google.javascript.rhino.head.Node node31 = node24.getLastSibling();
        com.google.javascript.rhino.head.Node node32 = node24.getFirstChild();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(node32);
    }

    @Test
    public void test12917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12917");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        int int17 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode0.getEnclosingFunction();
        int int19 = scriptNode0.getFunctionCount();
        int int20 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope24 = scope22.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node25 = scope22.target;
        scope22.setPosition(2);
        scope22.setLength((int) (byte) 1);
        java.lang.Object obj31 = scope22.getProp((int) 'a');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap32 = scope22.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        int int44 = scriptNode33.getIntProp(6, 2);
        int int45 = scriptNode33.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getParamCount();
        scriptNode33.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList60 = scriptNode33.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList61 = scriptNode33.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment62 = scriptNode33.getJsDocNode();
        scope22.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList64 = scriptNode33.getFunctions();
        scriptNode0.setTop(scriptNode33);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(functionNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(functionNodeList60);
        org.junit.Assert.assertNotNull(astNodeList61);
        org.junit.Assert.assertNull(comment62);
        org.junit.Assert.assertNotNull(functionNodeList64);
    }

    @Test
    public void test12918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12918");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, (int) (short) 100, commentType2, "Scope");
        java.lang.String str6 = comment4.toSource((-547629399));
        com.google.javascript.rhino.head.ast.Scope scope7 = comment4.getEnclosingScope();
        java.lang.String str8 = comment4.getValue();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Scope" + "'", str6, "Scope");
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Scope" + "'", str8, "Scope");
    }

    @Test
    public void test12919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12919");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        int int10 = comment4.getType();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        comment4.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        com.google.javascript.rhino.head.Node node90 = comment4.getLastChild();
        comment4.setBounds((-389829193), 1278533831);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 161 + "'", int10 == 161);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertNotNull(node90);
    }

    @Test
    public void test12920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12920");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        scriptNode0.setRelative((int) ' ');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = scriptNode12.getTop();
        scriptNode21.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int26 = scriptNode25.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        scriptNode27.setEncodedSourceEnd(18);
        scriptNode25.target = scriptNode27;
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = null;
        scriptNode27.setSymbols(symbolList33);
        java.lang.String str35 = scriptNode27.getJsDoc();
        java.lang.String str36 = scriptNode27.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        java.lang.Class<?> wildcardClass39 = scriptNode37.getClass();
        scriptNode27.setCompilerData((java.lang.Object) wildcardClass39);
        scriptNode27.setEncodedSourceEnd((int) ' ');
        int int43 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.Node node44 = scriptNode27.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str54 = scriptNode45.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = scriptNode45.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = scriptNode57.getTop();
        java.lang.String str67 = scriptNode66.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scriptNode68.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = scriptNode68.getTop();
        java.lang.String str78 = scriptNode77.shortName();
        scriptNode66.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.ast.Comment comment80 = null;
        scriptNode77.setJsDocNode(comment80);
        com.google.javascript.rhino.head.ast.Scope scope83 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode77, (com.google.javascript.rhino.head.Node) scope83, 10);
        com.google.javascript.rhino.head.ast.Scope scope88 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (short) -1);
        scriptNode45.replaceChildAfter((com.google.javascript.rhino.head.Node) scriptNode77, (com.google.javascript.rhino.head.Node) scope88);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = scriptNode27.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ScriptNode" + "'", str67, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ScriptNode" + "'", str78, "ScriptNode");
    }

    @Test
    public void test12921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12921");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope6 = scriptNode0.getEnclosingScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getParamCount();
        scriptNode7.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap34 = scriptNode20.getSymbolTable();
        int int35 = scriptNode20.depth();
        int int36 = scriptNode20.getEncodedSourceStart();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        java.lang.String str38 = scriptNode0.getEncodedSource();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test12922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12922");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(100, (int) '4');
        int int5 = scope2.getIntProp(874571570, (-769830162));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-769830162) + "'", int5 == (-769830162));
    }

    @Test
    public void test12923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12923");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = scriptNode31.getTop();
        scriptNode40.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int45 = scriptNode44.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getEncodedSource();
        scriptNode46.setEncodedSourceEnd(18);
        scriptNode44.target = scriptNode46;
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scriptNode46);
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) comment56);
        int int58 = scriptNode40.depth();
        int int59 = scriptNode40.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor60 = scriptNode40.iterator();
        scriptNode23.setTop(scriptNode40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scriptNode62.setEncodedSourceStart((int) (byte) 100);
        int int73 = scriptNode62.getIntProp(6, 2);
        int int74 = scriptNode62.getParamCount();
        java.lang.String str75 = scriptNode62.debugPrint();
        scriptNode62.setPosition(8);
        int int78 = scriptNode62.getParamCount();
        scriptNode62.setPosition((int) (byte) 10);
        scriptNode40.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode62);
        java.lang.Object obj82 = scriptNode40.getCompilerData();
        int int83 = scriptNode40.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode86.getEncodedSource();
        int int88 = scriptNode86.getBaseLineno();
        java.lang.String str89 = scriptNode86.getNextTempName();
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode86);
        scriptNode40.putProp(16, (java.lang.Object) node90);
        com.google.javascript.rhino.head.Node node93 = new com.google.javascript.rhino.head.Node(908331048, (com.google.javascript.rhino.head.Node) scriptNode40, 734000496);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode16.setContinue(node93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(nodeItor60);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str75, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "$0" + "'", str89, "$0");
    }

    @Test
    public void test12924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12924");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        int int37 = scriptNode27.getAbsolutePosition();
        scriptNode27.setEncodedSourceEnd((int) '4');
        scriptNode27.setEncodedSource("13");
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode27.getFunctions();
        int int43 = scriptNode27.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test12925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12925");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        int int16 = scriptNode0.getRegexpCount();
        java.lang.String str17 = scriptNode0.getSourceName();
        java.lang.String str18 = scriptNode0.getNextTempName();
        java.lang.String str19 = scriptNode0.toSource();
        scriptNode0.flattenSymbolTable(false);
        java.lang.String str22 = scriptNode0.getSourceName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n  {\n  }\n}\n" + "'", str19, "{\n  {\n  }\n}\n");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test12926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12926");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                                                                                                                                                                                            {\n                                                                                                                                                                                                            }\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test12927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12927");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode13 = scriptNode1.getParent();
        scriptNode1.setEncodedSource("/");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj18 = scriptNode17.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        scriptNode1.target = scriptNode17;
        scriptNode1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node25 = scriptNode1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = null;
        scriptNode1.setParent(astNode26);
        com.google.javascript.rhino.head.Node node30 = com.google.javascript.rhino.head.Node.newString(371991955, "                        {\n                        }\n");
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode1, node30, 1802585157);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(astNode13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(node30);
    }

    @Test
    public void test12928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12928");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                    {\n}\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test12929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12929");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode0.shortName();
        int int15 = scriptNode0.getLength();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDouble((double) 53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ScriptNode" + "'", str14, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-51) + "'", int15 == (-51));
    }

    @Test
    public void test12930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12930");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(1487440633, 19, commentType2, "$0");
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = comment4.iterator();
        com.google.javascript.rhino.head.ast.Scope scope6 = comment4.getEnclosingScope();
        org.junit.Assert.assertNotNull(nodeItor5);
        org.junit.Assert.assertNull(scope6);
    }

    @Test
    public void test12931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12931");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 10);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = node1.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode13.getTop();
        scriptNode22.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        scriptNode26.target = scriptNode28;
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = null;
        scriptNode28.setSymbols(symbolList34);
        node9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str37 = scriptNode4.toStringTree(scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        int int49 = scriptNode38.getIntProp(6, 2);
        int int50 = scriptNode38.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getEncodedSource();
        int int53 = scriptNode51.getBaseLineno();
        java.lang.String str54 = scriptNode51.getNextTempName();
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode28, (com.google.javascript.rhino.head.ast.Scope) scriptNode51);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        scope58.setPosition(2);
        java.lang.String str64 = scope58.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap65 = scope58.getSymbolTable();
        boolean boolean66 = scope58.hasChildren();
        com.google.javascript.rhino.head.Node node67 = scope58.getNext();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope71 = scope69.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node72 = scope69.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scope69.setJsDocNode(comment78);
        java.lang.String str82 = comment78.toSource((int) (short) 10);
        scope58.setJsDocNode(comment78);
        scriptNode28.addChildToBack((com.google.javascript.rhino.head.Node) comment78);
        com.google.javascript.rhino.head.Token.CommentType commentType85 = comment78.getCommentType();
        node1.addChildrenToBack((com.google.javascript.rhino.head.Node) comment78);
        comment78.setRelative(1034180762);
        comment78.setLineno(213295120);
        com.google.javascript.rhino.head.Token.CommentType commentType91 = comment78.getCommentType();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "$0" + "'", str54, "$0");
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{\n}\n" + "'", str64, "{\n}\n");
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(scope71);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "                    Scope" + "'", str82, "                    Scope");
        org.junit.Assert.assertNull(commentType85);
        org.junit.Assert.assertNull(commentType91);
    }

    @Test
    public void test12932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12932");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setRelative(8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(18);
        java.lang.Object obj8 = scriptNode5.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        int int21 = scriptNode10.getIntProp(6, 2);
        int int22 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode36.getSymbols();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node47 = scriptNode36.target;
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        java.lang.String str49 = scriptNode5.getEncodedSource();
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.Node node51 = scriptNode5.target;
        scriptNode5.setRelative((-54843021));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int55 = scriptNode5.addFunction(functionNode54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                    {\n                                    }\n" + "'", str7, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(node51);
    }

    @Test
    public void test12933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12933");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        int int4 = scriptNode0.getBaseLineno();
        boolean boolean5 = scriptNode0.hasChildren();
        java.lang.String str6 = scriptNode0.getSourceName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = null;
        scriptNode0.setSymbolTable(strMap7);
        com.google.javascript.rhino.head.ast.AstNode astNode9 = scriptNode0.getParent();
        java.lang.String str10 = scriptNode0.debugPrint();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(astNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str10, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test12934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12934");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        boolean boolean14 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean17 = scope16.hasSideEffects();
        java.lang.String str18 = scope16.toSource();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean21 = scope20.hasSideEffects();
        java.lang.String str22 = scope20.toSource();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scope20, 17);
        java.lang.String str26 = scope20.toSource(4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = scope20.iterator();
        com.google.javascript.rhino.head.ast.Symbol symbol29 = scope20.getSymbol("$0");
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str33 = scope31.makeIndent(0);
        int int36 = scope31.getIntProp((int) (byte) 10, (int) (byte) -1);
        java.lang.String str37 = scope31.debugPrint();
        com.google.javascript.rhino.head.Node node38 = scope31.getLastChild();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scope31.getChildScopes();
        scope20.addChildScope(scope31);
        scope20.setPosition(934127539);
        // The following exception was thrown during execution in test generation
        try {
            scope20.labelId((-54843021));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "        {\n        }\n" + "'", str26, "        {\n        }\n");
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertNull(symbol29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "0\tBLOCK 0 1\n" + "'", str37, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(scopeList39);
    }

    @Test
    public void test12935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12935");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        int int58 = scriptNode40.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode40.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode40.getChildScopes();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator61 = scriptNode40.new NodeIterator();
        boolean boolean62 = nodeIterator61.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node63 = nodeIterator61.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test12936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12936");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-547629399), (-769830162));
        com.google.javascript.rhino.head.ast.Symbol symbol3 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope2.putSymbol(symbol3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12937");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode17.setEncodedSourceEnd(11);
        java.lang.String str25 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str29 = scriptNode17.getEncodedSource();
        com.google.javascript.rhino.head.Node node30 = scriptNode17.target;
        int int31 = scriptNode17.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        java.lang.String str56 = node55.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.getLastSibling();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(23, node55, (com.google.javascript.rhino.head.Node) scope58, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode64.getSymbols();
        java.lang.String str72 = scriptNode64.debugPrint();
        scriptNode64.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope78 = scope76.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node79 = scope76.target;
        scope76.setPosition(2);
        scope76.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap85 = null;
        scope76.setSymbolTable(strMap85);
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope58, (com.google.javascript.rhino.head.Node) scriptNode64, (com.google.javascript.rhino.head.Node) scope76);
        int int88 = scriptNode64.getLineno();
        java.lang.String str90 = scriptNode64.makeIndent(136);
        java.lang.String str91 = scriptNode64.getSourceName();
        scriptNode64.setLength(52);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList94 = scriptNode64.getChildScopes();
        scriptNode17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode64);
        java.lang.String str96 = scriptNode17.debugPrint();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str29, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str72, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope78);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "                                                                                                                                                                                                                                                                                " + "'", str90, "                                                                                                                                                                                                                                                                                ");
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(scopeList94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "-1\tSCRIPT -1 1\n-1\t  SCRIPT -53 52\n" + "'", str96, "-1\tSCRIPT -1 1\n-1\t  SCRIPT -53 52\n");
    }

    @Test
    public void test12938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12938");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scope51.setJsDocNode(comment60);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode63.getSymbols();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope76 = scope74.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node77 = scope74.target;
        scope74.setPosition(2);
        scope74.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope74);
        int int83 = scriptNode30.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType87 = null;
        com.google.javascript.rhino.head.ast.Comment comment89 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType87, "Scope");
        scriptNode84.setParent((com.google.javascript.rhino.head.ast.AstNode) comment89);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList91 = scriptNode84.getSymbols();
        java.lang.String str92 = scriptNode84.debugPrint();
        scriptNode84.setRelative((int) ' ');
        com.google.javascript.rhino.head.Node node96 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scriptNode84, 18);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList97 = scriptNode30.getFunctions();
        int int98 = scriptNode30.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray99 = scriptNode30.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 136 + "'", int83 == 136);
        org.junit.Assert.assertNotNull(symbolList91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str92, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNotNull(functionNodeList97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test12939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12939");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setPosition(2);
        java.lang.String str18 = scope12.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = scope12.getSymbolTable();
        boolean boolean20 = scope12.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scope12.target = scriptNode21;
        com.google.javascript.rhino.head.Node node32 = scriptNode21.target;
        scriptNode21.setBounds((int) (byte) 1, 845940331);
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        int int37 = scriptNode21.getBaseLineno();
        java.lang.Class<?> wildcardClass38 = scriptNode21.getClass();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test12940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12940");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node11 = scriptNode0.target;
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        scriptNode13.setEncodedSourceEnd(18);
        java.lang.String str18 = scriptNode13.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        scriptNode13.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        scriptNode0.setPosition(272356811);
        int int32 = scriptNode0.getType();
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                                                                      " + "'", str18, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 136 + "'", int32 == 136);
    }

    @Test
    public void test12941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12941");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        int int25 = scriptNode0.getLineno();
        int int26 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = null;
        scope29.setTop(scriptNode33);
        scriptNode27.target = scope29;
        int int36 = scriptNode27.getEncodedSourceStart();
        int int37 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.Node node38 = scriptNode0.target;
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode0.getDefiningScope("                                                                                                                    ");
        com.google.javascript.rhino.head.ast.Scope scope41 = scriptNode0.getEnclosingScope();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 53 + "'", int26 == 53);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(scope41);
    }

    @Test
    public void test12942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12942");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-366869103));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope5.setPosition(100);
        com.google.javascript.rhino.head.Node node8 = scope5.getLastSibling();
        node8.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = node8.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = scriptNode12.getTop();
        scriptNode21.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int26 = scriptNode25.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        scriptNode27.setEncodedSourceEnd(18);
        scriptNode25.target = scriptNode27;
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = null;
        scriptNode27.setSymbols(symbolList33);
        node8.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode3.toStringTree(scriptNode27);
        int int37 = scriptNode3.getEncodedSourceEnd();
        int int38 = scriptNode3.getEncodedSourceStart();
        java.lang.Object obj39 = scriptNode3.getCompilerData();
        scope1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test12943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12943");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(19);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode58.setPosition((int) (byte) 0);
        scope28.setTop(scriptNode58);
        java.lang.String str71 = scriptNode58.makeIndent((int) (short) 100);
        node26.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList74 = scriptNode0.getChildScopes();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) (short) 0, 129, commentType77, "");
        boolean boolean80 = comment79.hasSideEffects();
        scriptNode0.setJsDocNode(comment79);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = scriptNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "                                                                                                                                                                                                        " + "'", str71, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNull(scopeList74);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test12944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12944");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        boolean boolean58 = scriptNode26.hasConsistentReturnUsage();
        scriptNode26.setLineno(754207379);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj63 = scriptNode62.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode62.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode65);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode62);
        boolean boolean68 = scriptNode26.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node69 = scriptNode26.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test12945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12945");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (byte) 10, "52\t  SCRIPT 53 1\n");
        com.google.javascript.rhino.head.Node node3 = node2.getLastSibling();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(node3);
    }

    @Test
    public void test12946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12946");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(6, (int) ' ', commentType2, "69\t  SCRIPT 17 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str10 = scriptNode5.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        scriptNode5.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        boolean boolean21 = scriptNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean25 = scope24.hasSideEffects();
        scriptNode5.putProp((int) (short) 1, (java.lang.Object) boolean25);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = scriptNode5.iterator();
        int int28 = scriptNode5.getBaseLineno();
        comment4.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        int int30 = scriptNode5.getBaseLineno();
        java.lang.String str31 = scriptNode5.toString();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode5.setString("                                                                ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                      " + "'", str10, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "136" + "'", str31, "136");
    }

    @Test
    public void test12947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12947");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(13);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope3.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scope21.setJsDocNode(comment30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode33);
        scriptNode33.setPosition((int) (byte) 0);
        scope3.setTop(scriptNode33);
        int int45 = scriptNode33.getParamCount();
        boolean boolean46 = scriptNode33.hasConsistentReturnUsage();
        boolean boolean47 = scriptNode33.hasChildren();
        int int48 = scriptNode33.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        int int60 = scriptNode49.getIntProp(6, 2);
        int int61 = scriptNode49.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getEncodedSource();
        int int64 = scriptNode62.getBaseLineno();
        java.lang.String str65 = scriptNode62.getNextTempName();
        scriptNode49.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode62);
        java.lang.String str67 = scriptNode62.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int72 = scriptNode69.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope74.setPosition(100);
        com.google.javascript.rhino.head.Node node77 = scope74.getLastSibling();
        node77.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator79 = node77.spliterator();
        scriptNode69.setCompilerData((java.lang.Object) node77);
        java.lang.String str81 = scriptNode69.getSourceName();
        int int82 = scriptNode69.getEncodedSourceStart();
        scriptNode69.setEncodedSourceStart((int) (byte) 0);
        scriptNode62.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode69);
        int int86 = scriptNode33.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        scriptNode69.setBaseLineno((int) (byte) 0);
        scriptNode69.removeChildren();
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str67, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(nodeSpliterator79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test12948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12948");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(17, 213295120);
        com.google.javascript.rhino.head.Node node3 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode6.getTop();
        scriptNode15.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int20 = scriptNode19.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        scriptNode21.setEncodedSourceEnd(18);
        scriptNode19.target = scriptNode21;
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str39 = scriptNode30.getSourceName();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode30, 26);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node26, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        int int54 = scriptNode43.getIntProp(6, 2);
        scriptNode43.setEndLineno(18);
        scriptNode30.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode43);
        scriptNode30.flattenSymbolTable(false);
        // The following exception was thrown during execution in test generation
        try {
            scope2.setFinally((com.google.javascript.rhino.head.Node) scriptNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
    }

    @Test
    public void test12949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12949");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        java.lang.String str41 = scriptNode26.toSource();
        java.lang.String str42 = scriptNode26.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap43 = scriptNode26.getSymbolTable();
        com.google.javascript.rhino.head.Node node45 = scriptNode26.setType(581273883);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{\n}\n" + "'", str41, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{\n}\n" + "'", str42, "{\n}\n");
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(node45);
    }

    @Test
    public void test12950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12950");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        scriptNode23.setPosition(18);
        int int73 = scriptNode23.getIntProp(129, (int) (short) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str75 = scriptNode74.getEncodedSource();
        int int76 = scriptNode74.getBaseLineno();
        java.lang.Object obj77 = scriptNode74.getCompilerData();
        scriptNode74.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope80 = scriptNode74.getEnclosingScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = scriptNode74.getTop();
        scriptNode23.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode81);
        java.lang.Object obj84 = scriptNode23.getProp((int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope85 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(scope85);
    }

    @Test
    public void test12951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12951");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getEncodedSource();
        int int24 = scriptNode22.getBaseLineno();
        java.lang.String str25 = scriptNode22.getNextTempName();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scriptNode53.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str62 = scriptNode53.getSourceName();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode53, 26);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node49, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scriptNode53);
        node65.setLineno(5);
        scriptNode9.setCompilerData((java.lang.Object) node65);
        scriptNode0.target = scriptNode9;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.Scope scope72 = scriptNode0.getDefiningScope("                                                                                                                                                                                                                                                                                                                                  Scope");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode73 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int74 = scriptNode0.addFunction(functionNode73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertNull(scope72);
    }

    @Test
    public void test12952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12952");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(161, 129);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        node25.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope29.setPosition(100);
        com.google.javascript.rhino.head.Node node32 = scope29.getLastSibling();
        node32.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = node32.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = scriptNode36.getTop();
        scriptNode45.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int50 = scriptNode49.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getEncodedSource();
        scriptNode51.setEncodedSourceEnd(18);
        scriptNode49.target = scriptNode51;
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode51);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = null;
        scriptNode51.setSymbols(symbolList57);
        node32.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode51);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope63 = scope61.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node64 = scope61.target;
        scope61.setPosition(2);
        scope61.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node69 = scope61.getFirstChild();
        node25.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope61);
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment(8, 1, commentType73, "$0");
        scriptNode51.setJsDocNode(comment75);
        java.lang.String str77 = scriptNode51.getEncodedSource();
        scriptNode51.setBaseLineno((int) (short) 10);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(845940330, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode51, (-748421155));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList82 = scope3.getChildScopes();
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(scopeList82);
    }

    @Test
    public void test12953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12953");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(53, (-51), commentType2, "-1\t  ASSIGN_DIV -53 1\n");
        int int5 = comment4.getAbsolutePosition();
        java.lang.Object obj7 = comment4.getProp((int) 'a');
        boolean boolean8 = comment4.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 53 + "'", int5 == 53);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test12954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12954");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode8.getEncodedSource();
        scriptNode8.setEncodedSourceEnd(18);
        java.lang.String str12 = comment7.toStringTree(scriptNode8);
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode8, node14);
        scriptNode8.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        com.google.javascript.rhino.head.Node node77 = scriptNode41.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.Node node80 = scriptNode41.setType((int) 'a');
        com.google.javascript.rhino.head.Node node82 = scriptNode41.setType(0);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(1246415336, node82);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNotNull(node82);
    }

    @Test
    public void test12955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12955");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode19.getSymbols();
        scriptNode13.setSymbols(symbolList26);
        int int28 = scriptNode13.getRegexpCount();
        int int29 = scriptNode13.depth();
        java.lang.String str30 = scriptNode13.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        scope32.setPosition(2);
        java.lang.String str38 = scope32.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = scope32.getSymbolTable();
        boolean boolean40 = scope32.hasChildren();
        com.google.javascript.rhino.head.Node node41 = scope32.getNext();
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope45 = scope43.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node46 = scope43.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scope43.setJsDocNode(comment52);
        java.lang.String str56 = comment52.toSource((int) (short) 10);
        scope32.setJsDocNode(comment52);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator58 = comment52.spliterator();
        com.google.javascript.rhino.head.ast.AstNode astNode59 = comment52.getParent();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = comment52.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str67 = scriptNode66.getEncodedSource();
        scriptNode66.setEncodedSourceEnd(18);
        java.lang.String str70 = comment65.toStringTree(scriptNode66);
        boolean boolean71 = scriptNode66.hasSideEffects();
        scriptNode66.setPosition(1784707759);
        comment52.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        comment52.setCommentType(commentType75);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.setFinally((com.google.javascript.rhino.head.Node) comment52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str18, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$1" + "'", str30, "$1");
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                    Scope" + "'", str56, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator58);
        org.junit.Assert.assertNull(astNode59);
        org.junit.Assert.assertNull(commentType60);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test12956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12956");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scriptNode37.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) comment53);
        int int55 = scriptNode37.depth();
        int int56 = scriptNode37.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor57 = scriptNode37.iterator();
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Node node60 = scriptNode37.setType((int) (short) 1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node62 = scriptNode37.target;
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeItor57);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(symbolList61);
        org.junit.Assert.assertNull(node62);
    }

    @Test
    public void test12957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12957");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        scriptNode1.flattenSymbolTable(true);
        int int5 = scriptNode1.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode7.getEncodedSourceStart();
        scriptNode7.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = scriptNode7.getSymbols();
        int int21 = scriptNode7.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = scriptNode7.getSymbols();
        scriptNode1.setSymbols(symbolList22);
        scriptNode1.putIntProp((int) (short) 10, (int) (short) -1);
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNotNull(symbolList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(symbolList22);
    }

    @Test
    public void test12958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12958");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        int int24 = scriptNode16.getFunctionCount();
        java.lang.String str26 = scriptNode16.makeIndent(24);
        scriptNode16.setEncodedSourceStart(226035720);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = scriptNode16.getRegexpFlags(1802585157);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                " + "'", str26, "                                                ");
    }

    @Test
    public void test12959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12959");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode4.getSymbol("/");
        scriptNode4.setRelative(25);
        scriptNode4.setBaseLineno(1320165685);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(symbol16);
    }

    @Test
    public void test12960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12960");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int3 = scope2.depth();
        scope2.setPosition(21);
        scope2.setLineno(8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int10 = scriptNode9.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode9.getDefiningScope("51\t    SCRIPT 52 1\n");
        boolean boolean13 = scriptNode9.hasSideEffects();
        scope2.setTop(scriptNode9);
        com.google.javascript.rhino.head.ast.Scope scope15 = scope2.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            scope15.setString("                  {\n  }\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(scope15);
    }

    @Test
    public void test12961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12961");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = scriptNode0.iterator();
        int int11 = scriptNode0.getParamCount();
        scriptNode0.setLength(97);
        int int14 = scriptNode0.getEncodedSourceStart();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
    }

    @Test
    public void test12962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12962");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        java.lang.String str31 = scriptNode29.debugPrint();
        int int34 = scriptNode29.getIntProp(9, 1583199871);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.Node node71 = node70.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope(35);
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newString("                                                                                                          {\n                                                                                                          }\n");
        com.google.javascript.rhino.head.Node node77 = node76.getLastSibling();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope74, node77);
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) scriptNode29, node70, (com.google.javascript.rhino.head.Node) scope74, 18);
        scope74.removeProp(5);
        scope74.removeProp(58);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "22\tSCRIPT 22 1\n" + "'", str31, "22\tSCRIPT 22 1\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1583199871 + "'", int34 == 1583199871);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(node77);
    }

    @Test
    public void test12963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12963");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode0.setParentScope(scope17);
        int int19 = scriptNode0.getType();
        com.google.javascript.rhino.head.Node node20 = scriptNode0.getLastChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = scriptNode0.getTop();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 136 + "'", int19 == 136);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(scriptNode21);
    }

    @Test
    public void test12964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12964");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(9, 371991955, commentType2, "                                ");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment4.visit(nodeVisitor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12965");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        scriptNode1.setEncodedSourceEnd(18);
        java.lang.String str6 = scriptNode1.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator7 = scriptNode1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope8 = scriptNode1.getParentScope();
        scriptNode1.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment10 = scriptNode1.getJsDocNode();
        com.google.javascript.rhino.head.ast.Scope scope11 = scriptNode1.getParentScope();
        java.lang.String str12 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str15 = scope14.shortName();
        com.google.javascript.rhino.head.Node node16 = scope14.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        comment28.setCommentType(commentType31);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment28, 14);
        scope14.addChildrenToFront((com.google.javascript.rhino.head.Node) comment28);
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(734000496, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope14);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor37 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.visit(nodeVisitor37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                      " + "'", str6, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator7);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(comment10);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Scope" + "'", str15, "Scope");
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
    }

    @Test
    public void test12966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12966");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.clearParentScope();
        scriptNode28.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        scriptNode66.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList77 = scriptNode66.getFunctions();
        int int78 = scriptNode66.getLength();
        boolean boolean79 = scriptNode66.hasSideEffects();
        scriptNode30.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        int int81 = scriptNode66.getEndLineno();
        int int82 = scriptNode66.getEncodedSourceEnd();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(functionNodeList77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test12967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12967");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        java.lang.String str52 = scriptNode38.getNextTempName();
        int int53 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int56 = scriptNode55.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope58 = scriptNode55.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode55.setSourceName("");
        scriptNode38.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int63 = scriptNode38.addFunction(functionNode62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(scope58);
    }

    @Test
    public void test12968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12968");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        java.lang.String str9 = scriptNode0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = scriptNode12.getTop();
        scriptNode21.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int26 = scriptNode25.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        scriptNode27.setEncodedSourceEnd(18);
        scriptNode25.target = scriptNode27;
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str45 = scriptNode36.getSourceName();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode36, 26);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node32, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode36);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = null;
        scriptNode36.setSymbolTable(strMap49);
        java.lang.String str51 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scriptNode53.setEncodedSourceStart((int) (byte) 100);
        int int64 = scriptNode53.getIntProp(6, 2);
        int int65 = scriptNode53.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope69 = scope67.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node70 = scope67.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scope67.setJsDocNode(comment76);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList86 = scriptNode79.getSymbols();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scope67, (com.google.javascript.rhino.head.Node) scriptNode79);
        boolean boolean88 = scriptNode53.hasChildren();
        java.lang.String str89 = scriptNode36.toStringTree(scriptNode53);
        scriptNode53.setLength(20);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "136" + "'", str9, "136");
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str51, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(scope69);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNotNull(symbolList86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test12969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12969");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.Object obj42 = scriptNode26.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode26.getChildScopes();
        scriptNode26.setEncodedSourceBounds((-53), 5);
        java.lang.Object obj47 = scriptNode26.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = scriptNode26.getTop();
        java.lang.Object obj50 = scriptNode48.getProp(0);
        java.lang.Object obj52 = scriptNode48.getProp(960854933);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test12970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12970");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.Node node70 = scriptNode23.getLastSibling();
        com.google.javascript.rhino.head.Node node71 = scriptNode23.getFirstChild();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode23.getSymbols();
        int int73 = scriptNode23.getRegexpCount();
        scriptNode23.setEncodedSourceBounds(18, (-389829193));
        int int77 = scriptNode23.getLength();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test12971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12971");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node16 = scriptNode6.getLastChild();
        scriptNode6.flattenSymbolTable(true);
        int int19 = scriptNode6.getParamAndVarCount();
        com.google.javascript.rhino.head.ast.Symbol symbol20 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode6.putSymbol(symbol20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test12972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12972");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        scriptNode14.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str30 = scriptNode14.getSourceName();
        int int31 = scriptNode14.getType();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str34 = scope33.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str45 = comment40.toStringTree(scriptNode41);
        com.google.javascript.rhino.head.Node node47 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode41, node47);
        scriptNode41.setSourceName("hi!");
        scope33.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode41);
        java.lang.String str52 = scope33.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str56 = scope54.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str69 = scriptNode60.getSourceName();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode60, 26);
        scriptNode58.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        java.lang.String str73 = scriptNode58.getNextTempName();
        scope54.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        boolean boolean75 = scriptNode58.hasChildren();
        scriptNode58.setBaseLineno(4);
        java.lang.String str78 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int80 = node79.getType();
        // The following exception was thrown during execution in test generation
        try {
            double double81 = node79.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 136 + "'", int31 == 136);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Scope" + "'", str34, "Scope");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "0\tBLOCK 0 1\n-1\tSCRIPT -1 1\n" + "'", str52, "0\tBLOCK 0 1\n-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$1" + "'", str78, "$1");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 136 + "'", int80 == 136);
    }

    @Test
    public void test12973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12973");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = scriptNode0.new NodeIterator();
        boolean boolean10 = scriptNode0.hasConsistentReturnUsage();
        java.lang.Object obj11 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope15 = scope13.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node16 = scope13.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scope13.setJsDocNode(comment22);
        com.google.javascript.rhino.head.Node node25 = scope13.target;
        java.lang.String str26 = scope13.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scriptNode37.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode43);
        int int49 = scriptNode43.getLength();
        int int50 = scriptNode43.getEncodedSourceStart();
        scope13.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        scriptNode0.replaceWith(scope13);
        com.google.javascript.rhino.head.Node node54 = scope13.setType((-107359633));
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope56.putProp(25, (java.lang.Object) 100L);
        // The following exception was thrown during execution in test generation
        try {
            node54.removeChild((com.google.javascript.rhino.head.Node) scope56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0\tBLOCK 0 1\n" + "'", str26, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node54);
    }

    @Test
    public void test12974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12974");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.removeProp(6);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(13, 8);
        scriptNode20.addChildToBack(node32);
        int int34 = scriptNode20.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope37.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode67.setPosition((int) (byte) 0);
        scope37.setTop(scriptNode67);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode20.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode67);
        com.google.javascript.rhino.head.ast.AstNode astNode81 = scriptNode67.getParent();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray82 = scriptNode67.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNotNull(astNode81);
    }

    @Test
    public void test12975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12975");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setBounds(52, 15);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray6 = scriptNode1.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test12976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12976");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.String str41 = scriptNode26.debugPrint();
        scriptNode26.setBounds((int) (byte) 1, 3);
        int int45 = scriptNode26.getPosition();
        int int46 = scriptNode26.getEncodedSourceStart();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str41, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    }

    @Test
    public void test12977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12977");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(1278533831);
    }

    @Test
    public void test12978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12978");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode8.getEncodedSource();
        scriptNode8.setEncodedSourceEnd(18);
        java.lang.String str13 = scriptNode8.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scriptNode8.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode8.getParentScope();
        scriptNode8.clearParentScope();
        scriptNode0.target = scriptNode8;
        scriptNode0.setEncodedSourceStart(1320165685);
        java.lang.String str21 = scriptNode0.makeIndent((int) '4');
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                      " + "'", str13, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                        " + "'", str21, "                                                                                                        ");
    }

    @Test
    public void test12979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12979");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 0, (-700164298));
    }

    @Test
    public void test12980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12980");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode26.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        scriptNode42.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        int int52 = scope46.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope53 = scope46.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator54 = scope46.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope58 = scope56.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node59 = scope56.target;
        scope56.setPosition(2);
        int int62 = scope56.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope63 = scope56.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator64 = scope56.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str66 = scriptNode65.getEncodedSource();
        int int67 = scriptNode65.getBaseLineno();
        java.lang.Object obj68 = scriptNode65.getCompilerData();
        scriptNode65.flattenSymbolTable(false);
        scope46.addChildAfter((com.google.javascript.rhino.head.Node) scope56, (com.google.javascript.rhino.head.Node) scriptNode65);
        com.google.javascript.rhino.head.Node node72 = scope56.getNext();
        int int73 = scriptNode42.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope56);
        java.lang.String str74 = scriptNode42.getEncodedSource();
        int int75 = scriptNode42.depth();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNotNull(nodeSpliterator54);
        org.junit.Assert.assertNull(scope58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNotNull(nodeSpliterator64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test12981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12981");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        int int14 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.Node node15 = scriptNode6.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str52 = scriptNode43.getSourceName();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode43, 26);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node39, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.Node node56 = scriptNode43.getLastSibling();
        java.lang.String str57 = scriptNode43.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode59);
        scriptNode59.setEndLineno(20);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode43, (com.google.javascript.rhino.head.ast.Scope) scriptNode59);
        com.google.javascript.rhino.head.ast.Comment comment64 = scriptNode59.getJsDocNode();
        node15.putProp(1, (java.lang.Object) scriptNode59);
        int int66 = scriptNode59.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray67 = scriptNode59.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(comment64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test12982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12982");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node4 = scope3.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        scriptNode5.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode5.setLineno((int) '#');
        int int22 = scriptNode5.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode23 = scriptNode5.getEnclosingFunction();
        int int24 = scriptNode5.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope29 = scriptNode26.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode26.setSourceName("");
        com.google.javascript.rhino.head.ast.AstNode astNode32 = scriptNode26.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList33 = scriptNode26.getChildScopes();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(98666588, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scriptNode26, (-243114478));
        int int36 = scriptNode26.getEncodedSourceEnd();
        scriptNode26.setLength(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int41 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        scriptNode42.setEncodedSourceEnd(18);
        scriptNode40.target = scriptNode42;
        com.google.javascript.rhino.head.Node node47 = scriptNode42.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope48 = scriptNode42.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scriptNode50.setEncodedSourceStart((int) (byte) 100);
        int int61 = scriptNode50.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode62 = scriptNode50.getParent();
        scriptNode42.putProp((int) 'a', (java.lang.Object) scriptNode50);
        java.lang.Object obj64 = scriptNode42.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode26, (com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        scriptNode26.removeChildren();
        int int67 = scriptNode26.getEndLineno();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 35 + "'", int22 == 35);
        org.junit.Assert.assertNull(functionNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(astNode32);
        org.junit.Assert.assertNull(scopeList33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertNotNull(astNode62);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test12983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12983");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scope2.getSymbolTable();
        boolean boolean10 = scope2.hasChildren();
        com.google.javascript.rhino.head.Node node11 = scope2.getNext();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope15 = scope13.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node16 = scope13.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scope13.setJsDocNode(comment22);
        java.lang.String str26 = comment22.toSource((int) (short) 10);
        scope2.setJsDocNode(comment22);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = comment22.spliterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor29 = comment22.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        int int39 = scriptNode30.getEncodedSourceStart();
        int int40 = scriptNode30.getEncodedSourceEnd();
        java.lang.String str41 = scriptNode30.getEncodedSource();
        java.lang.String str43 = scriptNode30.makeIndent((-51));
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(170200694, (com.google.javascript.rhino.head.Node) comment22, (com.google.javascript.rhino.head.Node) scriptNode30);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                    Scope" + "'", str26, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertNotNull(nodeItor29);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test12984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12984");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        scriptNode1.setEndLineno(18);
        int int15 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = scriptNode1.getParentScope();
        boolean boolean17 = scriptNode1.hasConsistentReturnUsage();
        java.lang.String str18 = scriptNode1.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getParamCount();
        java.lang.String str33 = scriptNode20.debugPrint();
        scriptNode20.setPosition(8);
        int int36 = scriptNode20.getParamCount();
        scriptNode20.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode40.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope45.setPosition(100);
        com.google.javascript.rhino.head.Node node48 = scope45.getLastSibling();
        node48.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator50 = node48.spliterator();
        scriptNode40.setCompilerData((java.lang.Object) node48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = scriptNode54.getTop();
        scriptNode63.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int68 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getEncodedSource();
        scriptNode69.setEncodedSourceEnd(18);
        scriptNode67.target = scriptNode69;
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode69);
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) comment79);
        java.lang.String str81 = scriptNode40.toStringTree(scriptNode63);
        scriptNode20.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        com.google.javascript.rhino.head.ast.AstNode astNode83 = scriptNode63.getParent();
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astNode83);
        com.google.javascript.rhino.head.Node node85 = scriptNode1.getFirstChild();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str33, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(nodeSpliterator50);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(astNode83);
        org.junit.Assert.assertNull(node85);
    }

    @Test
    public void test12985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12985");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        int int16 = scriptNode0.getParamCount();
        scriptNode0.setEncodedSource("%");
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode0.getChildScopes();
        java.lang.String str20 = scriptNode0.getJsDoc();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test12986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12986");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-7), "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test12987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12987");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getLastSibling();
        scriptNode1.setEncodedSource("Scope");
        scriptNode1.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        int int19 = scriptNode8.getIntProp(6, 2);
        int int20 = scriptNode8.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.String str24 = scriptNode21.getNextTempName();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        int int26 = scriptNode21.getType();
        int int27 = scriptNode21.getParamCount();
        int int28 = scriptNode21.getLength();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        java.lang.String str30 = scriptNode21.toString();
        boolean boolean31 = scriptNode21.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scope33.setJsDocNode(comment42);
        comment42.setPosition(0);
        com.google.javascript.rhino.head.Token.CommentType commentType47 = comment42.getCommentType();
        java.lang.String str49 = comment42.toSource(9);
        com.google.javascript.rhino.head.Token.CommentType commentType50 = comment42.getCommentType();
        com.google.javascript.rhino.head.Node node52 = comment42.setType(0);
        int int53 = comment42.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node55 = comment42.setType(25);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((-25), (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) comment42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode57.getEncodedSourceStart();
        int int67 = scriptNode57.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope71 = scope69.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node72 = scope69.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scope69.setJsDocNode(comment78);
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        comment78.setCommentType(commentType81);
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = comment78.getAstRoot();
        scriptNode57.setJsDocNode(comment78);
        java.lang.String str86 = comment78.toSource(24);
        java.lang.String str88 = comment78.toSource(23);
        boolean boolean89 = comment78.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstNode astNode90 = comment78.getParent();
        node56.setJsDocNode(comment78);
        int int92 = comment78.getLineno();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 136 + "'", int26 == 136);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "136" + "'", str30, "136");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(commentType47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "                  Scope" + "'", str49, "                  Scope");
        org.junit.Assert.assertNull(commentType50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(scope71);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNull(astRoot83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                                                Scope" + "'", str86, "                                                Scope");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "                                              Scope" + "'", str88, "                                              Scope");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(astNode90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test12988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12988");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(10, "60\t  SCRIPT 8 1\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test12989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12989");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("                                              Scope");
        java.lang.String str3 = scriptNode0.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList4 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        scope6.setPosition(2);
        int int12 = scope6.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope13 = scope6.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator14 = scope6.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        int int22 = scope16.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope23 = scope16.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator24 = scope16.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        int int27 = scriptNode25.getBaseLineno();
        java.lang.Object obj28 = scriptNode25.getCompilerData();
        scriptNode25.flattenSymbolTable(false);
        scope6.addChildAfter((com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.Node node32 = scope16.getNext();
        scriptNode0.setParentScope(scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode34.toSource(18);
        int int37 = scriptNode34.getEndLineno();
        int int38 = scriptNode34.getRegexpCount();
        scriptNode34.setEncodedSource("Scope");
        java.lang.Object obj41 = scriptNode34.getCompilerData();
        java.lang.String str43 = scriptNode34.toSource(161);
        java.lang.Object obj45 = scriptNode34.getProp(934127539);
        // The following exception was thrown during execution in test generation
        try {
            scope16.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(symbolList4);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNotNull(nodeSpliterator14);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNotNull(nodeSpliterator24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "                                    {\n                                    }\n" + "'", str36, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                                                                                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                                                                                  }\n" + "'", str43, "                                                                                                                                                                                                                                                                                                                                  {\n                                                                                                                                                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test12990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12990");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        java.lang.String str14 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        int int22 = scope16.getLineno();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-51), (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = scriptNode1.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator24.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str14, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test12991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12991");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEndLineno(14);
        boolean boolean10 = scriptNode1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap51 = null;
        scriptNode38.setSymbolTable(strMap51);
        java.lang.Object obj54 = scriptNode38.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode38.getChildScopes();
        int int56 = scriptNode38.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        int int60 = scope59.depth();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope59, 8);
        scope59.setLength(908331048);
        java.lang.String str65 = scope59.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        int int77 = scriptNode66.getIntProp(6, 2);
        int int78 = scriptNode66.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str80 = scriptNode79.getEncodedSource();
        int int81 = scriptNode79.getBaseLineno();
        java.lang.String str82 = scriptNode79.getNextTempName();
        scriptNode66.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        com.google.javascript.rhino.head.ast.Scope scope86 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int87 = scope86.depth();
        scriptNode66.replaceWith(scope86);
        com.google.javascript.rhino.head.Token.CommentType commentType91 = null;
        com.google.javascript.rhino.head.ast.Comment comment93 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType91, "Scope");
        java.lang.String str94 = comment93.getValue();
        scriptNode66.setJsDocNode(comment93);
        int int96 = scriptNode66.getPosition();
        com.google.javascript.rhino.head.Node node97 = new com.google.javascript.rhino.head.Node(371991955, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope59, (com.google.javascript.rhino.head.Node) scriptNode66);
        int int98 = scope59.getType();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "$0" + "'", str82, "$0");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Scope" + "'", str94, "Scope");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-53) + "'", int96 == (-53));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 129 + "'", int98 == 129);
    }

    @Test
    public void test12992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12992");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(213295120);
    }

    @Test
    public void test12993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12993");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        scope3.setPosition(2);
        scope3.setLength((int) (byte) 1);
        java.lang.Object obj12 = scope3.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope3);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        java.lang.String str21 = scope15.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = scope15.getSymbolTable();
        boolean boolean23 = scope15.hasChildren();
        com.google.javascript.rhino.head.Node node24 = scope15.getNext();
        scope3.addChildrenToFront((com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.Node node26 = scope3.getNext();
        java.lang.String str27 = scope3.shortName();
        int int28 = scope3.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope32 = scope30.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node33 = scope30.target;
        scope30.setPosition(2);
        java.lang.String str36 = scope30.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = scope30.getSymbolTable();
        boolean boolean38 = scope30.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = scriptNode39.getTop();
        scope30.target = scriptNode39;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode39.getFunctions();
        int int51 = scriptNode39.getRegexpCount();
        com.google.javascript.rhino.head.Node node52 = scriptNode39.getLastSibling();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((-399411339), (com.google.javascript.rhino.head.Node) scope3, node52, 135381063);
        com.google.javascript.rhino.head.Node node55 = scope3.target;
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n}\n" + "'", str21, "{\n}\n");
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Scope" + "'", str27, "Scope");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{\n}\n" + "'", str36, "{\n}\n");
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(node55);
    }

    @Test
    public void test12994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12994");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        scriptNode1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) scriptNode1, 19);
        scriptNode1.putIntProp(53, (int) (byte) 100);
        scriptNode1.setPosition(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getRegexpCount();
        scriptNode13.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode13.setLineno((int) '#');
        int int30 = scriptNode13.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode31 = scriptNode13.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment35 = scriptNode34.getJsDocNode();
        scriptNode34.flattenSymbolTable(true);
        scriptNode34.setEncodedSourceStart(100);
        scriptNode34.clearParentScope();
        scriptNode13.putProp((-389829193), (java.lang.Object) scriptNode34);
        scriptNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.setLength((int) (byte) 1);
        int int52 = scope44.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str63 = scriptNode54.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator64 = scriptNode54.new NodeIterator();
        java.lang.String str65 = scriptNode54.shortName();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray66 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList67, symbolArray66);
        scriptNode54.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList67);
        scriptNode54.flattenSymbolTable(false);
        int int72 = scriptNode54.getParamAndVarCount();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope76 = scope74.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node77 = scope74.target;
        scope74.setPosition(2);
        java.lang.String str80 = scope74.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap81 = scope74.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope83 = scope74.getDefiningScope("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode54, scope74);
        java.lang.Class<?> wildcardClass85 = scriptNode54.getClass();
        scope44.putProp(51, (java.lang.Object) wildcardClass85);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode34, scope44);
        com.google.javascript.rhino.head.Node node88 = scriptNode34.target;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
        org.junit.Assert.assertNull(functionNode31);
        org.junit.Assert.assertNull(comment35);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ScriptNode" + "'", str65, "ScriptNode");
        org.junit.Assert.assertNotNull(symbolArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{\n}\n" + "'", str80, "{\n}\n");
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(scope83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNull(node88);
    }

    @Test
    public void test12995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12995");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.lang.String str10 = scriptNode0.getSourceName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = null;
        scriptNode0.setSymbolTable(strMap11);
        scriptNode0.setRelative(371991955);
        int int15 = scriptNode0.depth();
        java.lang.Object obj17 = scriptNode0.getProp((-706949563));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test12996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12996");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-42), 6, commentType2, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n-1\tSCRIPT -1 35\n2\t  BLOCK 3 32\n");
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor5 = comment4.iterator();
        org.junit.Assert.assertNotNull(nodeItor5);
    }

    @Test
    public void test12997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12997");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = scriptNode1.getTop();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.labelId(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode2);
    }

    @Test
    public void test12998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12998");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str30 = scriptNode28.debugPrint();
        int int31 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        scriptNode41.setLineno((int) (byte) 1);
        scriptNode33.setCompilerData((java.lang.Object) (byte) 1);
        int int45 = scriptNode33.depth();
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        java.lang.String str47 = scriptNode28.getEncodedSource();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "22\tSCRIPT 22 1\n" + "'", str30, "22\tSCRIPT 22 1\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test12999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12999");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int37 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(874571570, (com.google.javascript.rhino.head.Node) scriptNode28);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test13000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test13000");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int40 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        scriptNode39.target = scriptNode41;
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scriptNode50.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str59 = scriptNode50.getSourceName();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode50, 26);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node46, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        int int74 = scriptNode63.getIntProp(6, 2);
        scriptNode63.setEndLineno(18);
        scriptNode50.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode50.flattenSymbolTable(false);
        scriptNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        boolean boolean81 = scriptNode10.hasSideEffects();
        int int82 = scriptNode10.depth();
        java.lang.String str83 = scriptNode10.getSourceName();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList84 = scriptNode10.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int87 = scriptNode86.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str89 = scriptNode88.getEncodedSource();
        scriptNode88.setEncodedSourceEnd(18);
        scriptNode86.target = scriptNode88;
        scriptNode88.setEncodedSourceBounds((int) (byte) -1, 11);
        scriptNode10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode88);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode88.setDouble((double) 845940331);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(scopeList84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(str89);
    }
}

