import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest23 {

    public static boolean debug = false;

    @Test
    public void test11501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11501");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        java.lang.String str15 = scriptNode0.getEncodedSource();
        java.lang.String str16 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.Node node17 = scriptNode0.target;
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0\tBLOCK 0 1\n" + "'", str15, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test11502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11502");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        boolean boolean5 = scriptNode1.hasSideEffects();
        com.google.javascript.rhino.head.Node node6 = scriptNode1.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scriptNode30.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        scriptNode34.target = scriptNode36;
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        int int54 = scriptNode43.getIntProp(6, 2);
        int int55 = scriptNode43.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope59 = scope57.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node60 = scope57.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scope57.setJsDocNode(comment66);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList76 = scriptNode69.getSymbols();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scope57, (com.google.javascript.rhino.head.Node) scriptNode69);
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope82 = scope80.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node83 = scope80.target;
        scope80.setPosition(2);
        scope80.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope80);
        int int89 = scriptNode36.getEncodedSourceStart();
        java.lang.String str91 = scriptNode36.toSource(26);
        com.google.javascript.rhino.head.Node node92 = scriptNode36.getLastSibling();
        com.google.javascript.rhino.head.Node node94 = node92.setType(0);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setFinally(node94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(symbolList76);
        org.junit.Assert.assertNull(scope82);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "                                                    {\n                                                    }\n" + "'", str91, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(node92);
        org.junit.Assert.assertNotNull(node94);
    }

    @Test
    public void test11503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11503");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        scriptNode17.putIntProp((-1), 13);
        int int63 = scriptNode17.getEncodedSourceEnd();
        scriptNode17.setLength(19);
        boolean boolean66 = scriptNode17.hasConsistentReturnUsage();
        scriptNode17.clearParentScope();
        scriptNode17.setEndLineno(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scriptNode71.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = scriptNode71.getTop();
        scriptNode80.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int85 = scriptNode84.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode86.getEncodedSource();
        scriptNode86.setEncodedSourceEnd(18);
        scriptNode84.target = scriptNode86;
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode80, (com.google.javascript.rhino.head.Node) scriptNode86);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList92 = null;
        scriptNode86.setSymbols(symbolList92);
        java.lang.String str94 = scriptNode86.getJsDoc();
        com.google.javascript.rhino.head.Node node95 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode86);
        scriptNode86.removeProp(960854933);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 18 + "'", int63 == 18);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test11504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11504");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode2.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode39.getSymbols();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope27, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setPosition((int) (byte) 0);
        scriptNode39.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str53 = scriptNode39.makeIndent(0);
        java.lang.String str54 = scriptNode2.toStringTree(scriptNode39);
        java.lang.String str56 = scriptNode39.makeIndent(12);
        java.lang.String str57 = scriptNode39.getSourceName();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        scriptNode39.removeChildren();
        scriptNode39.setPosition(14);
        scriptNode39.setEncodedSource("                                                                                                      6\tSCRIPT 6 1\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                        " + "'", str56, "                        ");
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test11505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11505");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        boolean boolean11 = scriptNode6.hasSideEffects();
        java.lang.String str12 = scriptNode6.getEncodedSource();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode6);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = scriptNode6.getSymbolTable();
        scriptNode6.setRelative(3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test11506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11506");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        scriptNode1.setEncodedSourceEnd(18);
        java.lang.String str6 = scriptNode1.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        boolean boolean17 = scriptNode1.hasSideEffects();
        java.lang.String str18 = scriptNode1.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode19.getIntProp(6, 2);
        int int31 = scriptNode19.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getParamCount();
        scriptNode19.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope47.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        scriptNode77.setPosition((int) (byte) 0);
        scope47.setTop(scriptNode77);
        scriptNode32.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node(34756133, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode77, (-42));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump92 = scriptNode1.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                      " + "'", str6, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
    }

    @Test
    public void test11507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11507");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        java.lang.String str20 = scriptNode13.toSource((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode21.getEncodedSourceStart();
        scriptNode21.setLineno(1);
        scriptNode13.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str34 = scriptNode13.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj37 = scriptNode36.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode13, (com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        scriptNode36.putIntProp((int) (short) 10, 0);
        java.lang.String str45 = scriptNode36.getSourceName();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str18, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "  {\n  }\n" + "'", str20, "  {\n  }\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test11508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11508");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList9 = scriptNode2.getSymbols();
        java.lang.String str10 = scriptNode2.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node49 = scriptNode38.target;
        scriptNode38.setBounds(16, 13);
        scriptNode38.clearParentScope();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode38, 3);
        com.google.javascript.rhino.head.Node node56 = scriptNode38.getNext();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setBounds(34, 21);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope61 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str10, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node56);
    }

    @Test
    public void test11509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11509");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        java.lang.String str11 = scriptNode10.shortName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = scriptNode10.getFunctions();
        scriptNode10.setLength(1784707759);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str18 = scope16.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str31 = scriptNode22.getSourceName();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode22, 26);
        scriptNode20.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode22);
        java.lang.String str35 = scriptNode20.getNextTempName();
        scope16.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        boolean boolean37 = scriptNode20.hasChildren();
        scriptNode20.setLineno(16);
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(1278533831, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode41 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int42 = scriptNode10.addFunction(functionNode41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "$0" + "'", str35, "$0");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test11510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11510");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(113267976, 2018070520, commentType2, "16\tBLOCK 16 1\n");
    }

    @Test
    public void test11511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11511");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.Node node2 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scriptNode4.getTop();
        scriptNode13.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int18 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        scriptNode17.target = scriptNode19;
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        scriptNode26.setSymbols(symbolList69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode26.getSymbols();
        scriptNode26.setPosition(18);
        int int76 = scriptNode26.getIntProp(129, (int) (short) 100);
        scriptNode26.setBaseLineno((int) (byte) 10);
        java.lang.String str79 = scriptNode26.getNextTempName();
        scope1.setTop(scriptNode26);
        int int81 = scriptNode26.getEndLineno();
        scriptNode26.setSourceName("                                                                      ");
        java.lang.String str84 = scriptNode26.getSourceName();
        scriptNode26.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator87 = scriptNode26.new NodeIterator();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "$0" + "'", str79, "$0");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "                                                                      " + "'", str84, "                                                                      ");
    }

    @Test
    public void test11512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11512");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = scriptNode27.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setEndLineno(20);
        scriptNode39.removeProp((int) 'a');
        scriptNode27.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope47.setPosition(100);
        com.google.javascript.rhino.head.Node node50 = scope47.getLastSibling();
        node50.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = node50.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = scriptNode54.getTop();
        scriptNode63.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int68 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getEncodedSource();
        scriptNode69.setEncodedSourceEnd(18);
        scriptNode67.target = scriptNode69;
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = null;
        scriptNode69.setSymbols(symbolList75);
        node50.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        scriptNode69.putIntProp(136, 35);
        scriptNode27.target = scriptNode69;
        int int82 = scriptNode27.getBaseLineno();
        scriptNode27.setEncodedSourceEnd(35);
        java.lang.String str85 = scriptNode27.getSourceName();
        int int86 = scriptNode27.getPosition();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList87 = scriptNode27.getSymbols();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-53) + "'", int86 == (-53));
        org.junit.Assert.assertNotNull(symbolList87);
    }

    @Test
    public void test11513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11513");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.Node node39 = scriptNode17.getFirstChild();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(node39);
    }

    @Test
    public void test11514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11514");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray31 = scriptNode11.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test11515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11515");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        comment10.setPosition((-1));
        comment10.setBounds(20, 5);
        int int20 = comment10.getIntProp((int) '4', 34);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 34 + "'", int20 == 34);
    }

    @Test
    public void test11516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11516");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(11, 213295120, commentType2, "1");
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = comment4.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode6.getSymbols();
        java.lang.String str14 = scriptNode6.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getEncodedSource();
        com.google.javascript.rhino.head.Node node17 = scriptNode15.getLastSibling();
        scriptNode15.setEncodedSource("Scope");
        scriptNode15.setEndLineno(100);
        scriptNode6.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope24.putProp(25, (java.lang.Object) 100L);
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) scope24);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope33 = scope31.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node34 = scope31.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scope31.setJsDocNode(comment40);
        java.lang.String str44 = comment40.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment40);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = node45.new NodeIterator();
        com.google.javascript.rhino.head.Node node47 = nodeIterator46.next();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        int int59 = scriptNode48.getIntProp(6, 2);
        int int60 = scriptNode48.getRegexpCount();
        java.lang.String str61 = scriptNode48.getSourceName();
        java.lang.String str62 = node47.toStringTree(scriptNode48);
        scriptNode48.flattenSymbolTable(true);
        scope24.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        java.lang.String str66 = scriptNode48.shortName();
        com.google.javascript.rhino.head.Node node67 = scriptNode48.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            astRoot5.addChildToBack(node67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astRoot5);
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str14, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                    Scope" + "'", str44, "                    Scope");
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ScriptNode" + "'", str66, "ScriptNode");
        org.junit.Assert.assertNotNull(node67);
    }

    @Test
    public void test11517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11517");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        int int19 = scriptNode14.getType();
        java.lang.String str20 = scriptNode14.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode14.getSymbols();
        int int22 = scriptNode14.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        int int38 = scriptNode36.getBaseLineno();
        java.lang.String str39 = scriptNode36.getNextTempName();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode36);
        java.lang.Object obj43 = scriptNode36.getCompilerData();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 136 + "'", int19 == 136);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str20, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str41, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test11518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11518");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope1.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = scope1.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.getLastSibling();
        scriptNode6.setEncodedSourceEnd(136);
        boolean boolean11 = scriptNode6.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode13.getIntProp(23, (int) (short) 1);
        boolean boolean17 = scriptNode13.hasSideEffects();
        int int18 = scriptNode13.depth();
        int int19 = scriptNode13.getFunctionCount();
        int int20 = scriptNode13.getEncodedSourceEnd();
        java.lang.String str22 = scriptNode13.toSource((-547629399));
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str24 = scope1.toStringTree(scriptNode13);
        java.lang.String str25 = scriptNode13.getJsDoc();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scriptNode13.spliterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = scriptNode13.iterator();
        scriptNode13.flattenSymbolTable(true);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode13.getChildScopes();
        int int31 = scriptNode13.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope32 = scriptNode13.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(scopeList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test11519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11519");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        scriptNode1.target = scriptNode3;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        scriptNode9.setLineno((int) (byte) 1);
        scriptNode1.setCompilerData((java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str48 = scriptNode39.getSourceName();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode39, 26);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node35, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        scriptNode52.setEndLineno(18);
        scriptNode39.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode39.setLength((int) (short) 100);
        java.lang.Object obj69 = scriptNode39.getCompilerData();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode1.setBounds(754207379, (-613442063));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test11520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11520");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        scriptNode13.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor29 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.visit(nodeVisitor29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test11521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11521");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.lang.String str22 = node21.getJsDoc();
        node21.removeProp((int) (byte) 1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator25 = node21.new NodeIterator();
        com.google.javascript.rhino.head.Node node26 = node21.getNext();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(node26);
    }

    @Test
    public void test11522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11522");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("                                                    {\n                                                    }\n");
        java.lang.String str4 = scriptNode1.toSource();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        scope19.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node27 = scope19.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        java.lang.String str33 = scriptNode28.makeIndent((int) '#');
        scope19.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope6, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope6.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        int int52 = scriptNode50.getBaseLineno();
        java.lang.String str53 = scriptNode50.getNextTempName();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        int int55 = scriptNode37.getEndLineno();
        scope6.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode1.setEncodedSourceBounds(1487440611, 180367011);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{\n}\n" + "'", str4, "{\n}\n");
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                      " + "'", str33, "                                                                      ");
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test11523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11523");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        int int24 = scriptNode16.getFunctionCount();
        java.lang.String str26 = scriptNode16.makeIndent(6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode27 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int28 = scriptNode16.addFunction(functionNode27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "            " + "'", str26, "            ");
    }

    @Test
    public void test11524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11524");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(9);
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope6 = scope4.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node7 = scope4.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scope4.setJsDocNode(comment13);
        java.lang.String str17 = comment13.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment13);
        java.lang.Object obj20 = comment13.getProp((int) (short) -1);
        java.lang.String str22 = comment13.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        comment13.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        int int52 = scriptNode50.getBaseLineno();
        java.lang.String str53 = scriptNode50.getNextTempName();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        java.lang.String str55 = scriptNode50.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = scriptNode56.getSymbols();
        scriptNode50.setSymbols(symbolList63);
        comment13.putProp(23, (java.lang.Object) symbolList63);
        scriptNode1.setSymbols(symbolList63);
        com.google.javascript.rhino.head.Node node67 = scriptNode1.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope68 = scriptNode1.getEnclosingScope();
        scriptNode1.setBaseLineno(754207379);
        java.lang.Object obj71 = scriptNode1.getCompilerData();
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                    Scope" + "'", str17, "                    Scope");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str55, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList63);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test11525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11525");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope14.setPosition(100);
        com.google.javascript.rhino.head.Node node17 = scope14.getLastSibling();
        node17.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = node17.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scriptNode30.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        scriptNode34.target = scriptNode36;
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = null;
        scriptNode36.setSymbols(symbolList42);
        node17.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        java.lang.String str45 = scriptNode12.toStringTree(scriptNode36);
        int int46 = scriptNode12.getFunctionCount();
        scriptNode12.setPosition(19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scriptNode50.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str59 = scriptNode50.getSourceName();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode50, 26);
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str68 = scriptNode67.getEncodedSource();
        scriptNode67.setEncodedSourceEnd(18);
        java.lang.String str71 = comment66.toStringTree(scriptNode67);
        int int72 = comment66.getType();
        java.lang.String str73 = comment66.getValue();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) comment66);
        java.lang.String str75 = scriptNode0.toStringTree(scriptNode12);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 161 + "'", int72 == 161);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Scope" + "'", str73, "Scope");
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test11526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11526");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(1487440633);
        // The following exception was thrown during execution in test generation
        try {
            node1.setDouble((double) (-992272926));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11527");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode23.getStatements();
        int int32 = scriptNode23.depth();
        scriptNode23.setEndLineno(135381063);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        scope37.setPosition(2);
        int int43 = scope37.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope44 = scope37.getEnclosingScope();
        java.lang.String str46 = scope37.makeIndent(0);
        int int47 = scope37.getLength();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node48 = scriptNode23.getChildBefore((com.google.javascript.rhino.head.Node) scope37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test11528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11528");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getEncodedSource();
        int int17 = scriptNode15.getBaseLineno();
        java.lang.String str18 = scriptNode15.getNextTempName();
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        java.lang.String str20 = scriptNode15.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = scriptNode21.getSymbols();
        scriptNode15.setSymbols(symbolList28);
        int int30 = scriptNode15.getRegexpCount();
        int int31 = scriptNode15.depth();
        scriptNode15.setEncodedSourceStart((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = scriptNode37.getTop();
        scriptNode46.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int51 = scriptNode50.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        scriptNode52.setEncodedSourceEnd(18);
        scriptNode50.target = scriptNode52;
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str70 = scriptNode61.getSourceName();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode61, 26);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node57, (com.google.javascript.rhino.head.Node) scriptNode58, (com.google.javascript.rhino.head.Node) scriptNode61);
        com.google.javascript.rhino.head.Node node74 = node57.getLastSibling();
        scriptNode15.putProp(0, (java.lang.Object) node57);
        // The following exception was thrown during execution in test generation
        try {
            scope1.removeChild(node57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str20, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(node74);
    }

    @Test
    public void test11529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11529");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str23 = node22.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(23, node22, (com.google.javascript.rhino.head.Node) scope25, (int) (byte) 1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator31 = node22.new NodeIterator();
        boolean boolean32 = nodeIterator31.hasNext();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test11530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11530");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        comment10.setPosition((-1));
        java.lang.String str15 = comment10.toSource();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        comment10.setCommentType(commentType16);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        comment10.setCommentType(commentType18);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Scope" + "'", str15, "Scope");
    }

    @Test
    public void test11531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11531");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setRelative((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            int int16 = scriptNode0.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test11532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11532");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = scriptNode0.getSymbolTable();
        int int29 = scriptNode0.getEndLineno();
        scriptNode0.setEndLineno((int) (byte) 10);
        int int32 = scriptNode0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.Object obj36 = scriptNode33.getCompilerData();
        scriptNode33.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList40 = scriptNode33.getStatements();
        scriptNode33.setEncodedSourceBounds((-51), (int) (short) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        int int54 = scriptNode44.getFunctionCount();
        int int55 = scriptNode44.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode57.getEncodedSourceStart();
        java.lang.String str67 = scriptNode57.getSourceName();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scriptNode57);
        scriptNode57.setEncodedSourceEnd(17);
        scriptNode44.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode57);
        java.lang.String str72 = scriptNode57.toSource();
        int int73 = scriptNode57.getParamCount();
        scriptNode33.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode57);
        scriptNode0.target = scriptNode57;
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap76 = scriptNode57.getSymbolTable();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(astNodeList40);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{\n}\n" + "'", str72, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(strMap76);
    }

    @Test
    public void test11533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11533");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode3, 26);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode3);
        com.google.javascript.rhino.head.Node node17 = scriptNode1.setType(701595233);
        scriptNode1.setLength(161);
        int int20 = scriptNode1.getAbsolutePosition();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 6 + "'", int20 == 6);
    }

    @Test
    public void test11534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11534");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        java.lang.Object obj10 = scope1.getProp((int) 'a');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = scope1.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getParamCount();
        scriptNode12.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode12.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList40 = scriptNode12.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment41 = scriptNode12.getJsDocNode();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int43 = scope1.depth();
        scope1.removeChildren();
        int int45 = scope1.getType();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertNotNull(astNodeList40);
        org.junit.Assert.assertNull(comment41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 129 + "'", int45 == 129);
    }

    @Test
    public void test11535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11535");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.clearParentScope();
        scriptNode29.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode31);
        java.lang.String str40 = scriptNode31.toSource();
        scriptNode31.setEncodedSourceStart(13);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = scriptNode31.new NodeIterator();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(845940331, (com.google.javascript.rhino.head.Node) scriptNode31, (int) 'a');
        java.lang.String str46 = scriptNode31.getSourceName();
        int int47 = scriptNode31.getFunctionCount();
        int int48 = scriptNode31.getEncodedSourceEnd();
        int int49 = scriptNode31.getPosition();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-53) + "'", int49 == (-53));
    }

    @Test
    public void test11536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11536");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("                                                    {\n                                                    }\n");
        java.lang.String str4 = scriptNode1.debugPrint();
        java.lang.String str5 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.getNext();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope10.getParentScope();
        scriptNode6.addChildScope(scope10);
        int int16 = scriptNode6.getBaseLineno();
        java.lang.String str17 = scriptNode1.toStringTree(scriptNode6);
        scriptNode6.setPosition((-389829193));
        com.google.javascript.rhino.head.ast.Scope scope21 = scriptNode6.getDefiningScope("6\tSCRIPT 6 1\n");
        scriptNode6.setEncodedSourceBounds((int) (short) 0, 1);
        java.lang.Object obj26 = scriptNode6.getProp((-674152164));
        scriptNode6.setSourceName("                                              Scope");
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0\tSCRIPT 0 1\n" + "'", str4, "0\tSCRIPT 0 1\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ScriptNode" + "'", str5, "ScriptNode");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test11537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11537");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(412649354);
    }

    @Test
    public void test11538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11538");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        int int72 = scriptNode70.getBaseLineno();
        java.lang.Object obj73 = scriptNode70.getCompilerData();
        scriptNode70.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        com.google.javascript.rhino.head.ast.Comment comment87 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType85, "Scope");
        scriptNode82.setParent((com.google.javascript.rhino.head.ast.AstNode) comment87);
        scope78.setJsDocNode(comment87);
        java.lang.String str91 = comment87.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment87);
        comment87.setLength(0);
        scriptNode23.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) comment87);
        java.lang.String str96 = comment87.getValue();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor97 = comment87.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType98 = comment87.getCommentType();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "                    Scope" + "'", str91, "                    Scope");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Scope" + "'", str96, "Scope");
        org.junit.Assert.assertNotNull(nodeItor97);
        org.junit.Assert.assertNull(commentType98);
    }

    @Test
    public void test11539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11539");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 5, commentType2, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        comment4.setPosition(16);
        comment4.setBounds((int) 'a', 3);
        comment4.setLength(0);
    }

    @Test
    public void test11540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11540");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getLineno();
        java.lang.String str11 = scriptNode0.getSourceName();
        int int12 = scriptNode0.getEncodedSourceEnd();
        int int13 = scriptNode0.getFunctionCount();
        int int14 = scriptNode0.getLineno();
        scriptNode0.removeChildren();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test11541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11541");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        boolean boolean14 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        java.lang.String str22 = scope16.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = scope16.getSymbolTable();
        boolean boolean24 = scope16.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = scriptNode25.getTop();
        scope16.target = scriptNode25;
        com.google.javascript.rhino.head.Node node36 = scriptNode25.target;
        scriptNode25.setBaseLineno(10);
        scriptNode25.setEncodedSourceEnd((int) (short) -1);
        int int41 = scriptNode25.getParamCount();
        java.lang.String str42 = scriptNode25.getSourceName();
        java.lang.String str44 = scriptNode25.makeIndent(16);
        int int45 = scriptNode25.depth();
        scriptNode25.flattenSymbolTable(false);
        scriptNode25.setLineno(6);
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        scriptNode61.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int66 = scriptNode65.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str68 = scriptNode67.getEncodedSource();
        scriptNode67.setEncodedSourceEnd(18);
        scriptNode65.target = scriptNode67;
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode67.setEncodedSourceStart((int) ' ');
        scriptNode67.setEndLineno(23);
        scriptNode67.setEncodedSourceStart((int) '#');
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((-1072816741), (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode67);
        com.google.javascript.rhino.head.ast.Scope scope82 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int83 = scope82.getLength();
        boolean boolean84 = scope82.hasSideEffects();
        com.google.javascript.rhino.head.Node node85 = scope82.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode25.setContinue(node85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                                " + "'", str44, "                                ");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(node85);
    }

    @Test
    public void test11542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11542");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        java.lang.String str4 = scriptNode0.toString();
        java.lang.String str5 = scriptNode0.getNextTempName();
        scriptNode0.removeChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = scriptNode0.getAstRoot();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertNull(astRoot7);
    }

    @Test
    public void test11543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11543");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        int int43 = scriptNode2.getLineno();
        java.lang.String str44 = scriptNode2.getEncodedSource();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = scriptNode2.new NodeIterator();
        com.google.javascript.rhino.head.Node node46 = scriptNode2.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            int int48 = node46.getExistingIntProp(15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(node46);
    }

    @Test
    public void test11544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11544");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = scriptNode48.getTop();
        scriptNode57.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode61.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getEncodedSource();
        scriptNode63.setEncodedSourceEnd(18);
        scriptNode61.target = scriptNode63;
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode63.setEncodedSourceStart((int) ' ');
        scriptNode63.setEndLineno(23);
        scriptNode63.setEncodedSourceStart((int) '#');
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode2, node46, (com.google.javascript.rhino.head.Node) scriptNode63, 24);
        java.lang.String str77 = scriptNode63.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode63.labelId(440593346);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test11545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11545");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode13 = scriptNode1.getParent();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor14 = scriptNode1.iterator();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(98666588, (com.google.javascript.rhino.head.Node) scriptNode1, (int) (short) -1);
        scriptNode1.setEncodedSourceBounds(135381063, (int) (short) -1);
        scriptNode1.setLineno(18);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(astNode13);
        org.junit.Assert.assertNotNull(nodeItor14);
    }

    @Test
    public void test11546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11546");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        scriptNode23.setPosition(18);
        scriptNode23.setSourceName("161");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str74 = scriptNode73.getEncodedSource();
        int int75 = scriptNode73.getBaseLineno();
        java.lang.Object obj76 = scriptNode73.getCompilerData();
        java.lang.String str77 = scriptNode23.toStringTree(scriptNode73);
        scriptNode73.setEncodedSource("                                                                                                                                                                                                                                                                                                                                  Scope");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node80 = scriptNode73.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test11547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11547");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        scriptNode1.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode34.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str38 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scope40.iterator();
        boolean boolean53 = scope40.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope40, 8);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = scriptNode34.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int68 = scriptNode57.getIntProp(6, 2);
        int int69 = scriptNode57.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scriptNode70.setEncodedSourceStart((int) (byte) 100);
        int int81 = scriptNode70.getIntProp(6, 2);
        int int82 = scriptNode70.getParamCount();
        scriptNode57.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode70.setEncodedSourceStart((int) (byte) 1);
        scriptNode70.setEncodedSource("                                                                                                                                                                                                        Scope");
        int int88 = scriptNode70.getPosition();
        scriptNode34.setTop(scriptNode70);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope90 = scriptNode34.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ScriptNode" + "'", str38, "ScriptNode");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-53) + "'", int88 == (-53));
    }

    @Test
    public void test11548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11548");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        int int5 = scriptNode1.getEncodedSourceEnd();
        int int6 = scriptNode1.getEndLineno();
        int int7 = scriptNode1.getPosition();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 11 + "'", int7 == 11);
    }

    @Test
    public void test11549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11549");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray40 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList41, symbolArray40);
        scriptNode27.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList41);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        java.lang.String str52 = scope46.toSource();
        com.google.javascript.rhino.head.Node node53 = scope46.getLastChild();
        int int54 = scope46.depth();
        scriptNode27.setParentScope(scope46);
        int int58 = scriptNode27.getIntProp(371991955, 58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.clearParentScope();
        scriptNode59.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node70 = scriptNode59.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getEncodedSource();
        scriptNode71.setEncodedSourceEnd(18);
        java.lang.String str76 = scriptNode71.makeIndent((int) '#');
        int int79 = scriptNode71.getIntProp((int) '4', 4);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator80 = scriptNode71.spliterator();
        int int81 = scriptNode59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        int int82 = scriptNode59.getPosition();
        scriptNode59.setEncodedSource("                                      Scope");
        scriptNode27.setTop(scriptNode59);
        int int86 = scriptNode27.getEndLineno();
        java.lang.String str87 = scriptNode27.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = scriptNode27.getParamOrVarName(371991955);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(symbolArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 58 + "'", int58 == 58);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "                                                                      " + "'", str76, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 4 + "'", int79 == 4);
        org.junit.Assert.assertNotNull(nodeSpliterator80);
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-458295355) + "'", int81 == (-458295355));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-53) + "'", int82 == (-53));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test11550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11550");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope(0);
        java.lang.Object obj14 = scope12.getProp((-243114478));
        int int15 = scope12.getLength();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope12, 701595233);
        boolean boolean18 = node17.hasChildren();
        scope1.addChildrenToBack(node17);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test11551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11551");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        java.lang.String str7 = scope1.debugPrint();
        com.google.javascript.rhino.head.Node node8 = scope1.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        scope10.setPosition(2);
        java.lang.String str16 = scope10.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = scope10.getSymbolTable();
        boolean boolean18 = scope10.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scope10.target = scriptNode19;
        com.google.javascript.rhino.head.Node node30 = scriptNode19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode33.getTop();
        scriptNode42.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int47 = scriptNode46.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        scriptNode48.setEncodedSourceEnd(18);
        scriptNode46.target = scriptNode48;
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str66 = scriptNode57.getSourceName();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode57, 26);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node53, (com.google.javascript.rhino.head.Node) scriptNode54, (com.google.javascript.rhino.head.Node) scriptNode57);
        com.google.javascript.rhino.head.Node node70 = scriptNode57.getLastSibling();
        boolean boolean71 = scriptNode57.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        int int84 = scriptNode73.getIntProp(6, 2);
        scriptNode57.putProp((int) (byte) 0, (java.lang.Object) int84);
        com.google.javascript.rhino.head.Node node86 = scriptNode57.target;
        scriptNode57.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node89 = scriptNode57.getLastSibling();
        scriptNode19.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList91 = scriptNode57.getStatements();
        scope1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode57);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int94 = scriptNode57.addFunction(functionNode93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0\tBLOCK 0 1\n" + "'", str7, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNull(node86);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNotNull(astNodeList91);
    }

    @Test
    public void test11552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11552");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        int int16 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        scriptNode44.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray57 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList58, symbolArray57);
        scriptNode44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        scriptNode0.setBounds((int) (byte) -1, 0);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = scriptNode0.getEnclosingFunction();
        scriptNode0.setSourceName("                    Scope");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNotNull(symbolArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(functionNode65);
    }

    @Test
    public void test11553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11553");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope2.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scope20.setJsDocNode(comment29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode32);
        scriptNode32.setPosition((int) (byte) 0);
        scope2.setTop(scriptNode32);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode32);
        boolean boolean45 = scriptNode32.hasSideEffects();
        int int46 = scriptNode32.getRegexpCount();
        int int47 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node48 = scriptNode32.target;
        com.google.javascript.rhino.head.Node node49 = scriptNode32.getFirstChild();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node49);
    }

    @Test
    public void test11554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11554");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump2 = scope1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11555");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        scriptNode27.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope(14);
        java.lang.String str62 = scope61.toSource();
        scope61.clearParentScope();
        int int64 = scope61.getPosition();
        scriptNode27.addChildToFront((com.google.javascript.rhino.head.Node) scope61);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{\n}\n" + "'", str62, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 14 + "'", int64 == 14);
    }

    @Test
    public void test11556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11556");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setPosition(2);
        java.lang.String str18 = scope12.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = scope12.getSymbolTable();
        boolean boolean20 = scope12.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scope12.target = scriptNode21;
        com.google.javascript.rhino.head.Node node32 = scriptNode21.target;
        scriptNode21.setBounds((int) (byte) 1, 845940331);
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        java.lang.String str37 = scriptNode21.debugPrint();
        scriptNode21.setBounds(170200694, 180367011);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "53\t  SCRIPT 1 845940330\n" + "'", str37, "53\t  SCRIPT 1 845940330\n");
    }

    @Test
    public void test11557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11557");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode13.getType();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = scriptNode13.getStatements();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor20 = scriptNode13.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        int int32 = scriptNode21.getIntProp(6, 2);
        int int33 = scriptNode21.getRegexpCount();
        scriptNode21.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode21.setLineno((int) '#');
        int int38 = scriptNode21.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = scriptNode21.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList40 = scriptNode21.getStatements();
        scriptNode21.removeProp(1);
        java.lang.String str43 = scriptNode21.getNextTempName();
        java.lang.String str44 = scriptNode21.getEncodedSource();
        java.lang.String str45 = scriptNode13.toStringTree(scriptNode21);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertNotNull(nodeItor20);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 35 + "'", int38 == 35);
        org.junit.Assert.assertNull(functionNode39);
        org.junit.Assert.assertNotNull(astNodeList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "0\tBLOCK 0 1\n" + "'", str44, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test11558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11558");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode6.getTop();
        scriptNode15.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        scope78.setPosition(2);
        scope78.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope78);
        node4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        java.lang.String str88 = scriptNode34.getNextTempName();
        java.lang.Object obj90 = scriptNode34.getProp((int) (byte) 1);
        java.lang.String str91 = scriptNode34.debugPrint();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "$0" + "'", str88, "$0");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str91, "51\t    SCRIPT 52 1\n");
    }

    @Test
    public void test11559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11559");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-6), 437347576);
    }

    @Test
    public void test11560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11560");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.Comment comment23 = null;
        scriptNode20.setJsDocNode(comment23);
        boolean boolean25 = scriptNode20.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList26 = scriptNode20.getStatements();
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(astNodeList26);
    }

    @Test
    public void test11561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11561");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        java.lang.String str52 = scriptNode38.getNextTempName();
        int int53 = scriptNode38.getType();
        com.google.javascript.rhino.head.Node node54 = scriptNode38.getLastSibling();
        int int55 = scriptNode38.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope59 = scope57.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node60 = scope57.target;
        scope57.setPosition(2);
        java.lang.String str63 = scope57.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap64 = scope57.getSymbolTable();
        boolean boolean65 = scope57.hasChildren();
        com.google.javascript.rhino.head.Node node66 = scope57.getNext();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope70 = scope68.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node71 = scope68.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        scope68.setJsDocNode(comment77);
        java.lang.String str81 = comment77.toSource((int) (short) 10);
        scope57.setJsDocNode(comment77);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator83 = comment77.spliterator();
        com.google.javascript.rhino.head.ast.AstNode astNode84 = comment77.getParent();
        scriptNode38.target = astNode84;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "$0" + "'", str52, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 136 + "'", int53 == 136);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{\n}\n" + "'", str63, "{\n}\n");
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(scope70);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "                    Scope" + "'", str81, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator83);
        org.junit.Assert.assertNull(astNode84);
    }

    @Test
    public void test11562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11562");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        int int39 = scriptNode28.getIntProp(6, 2);
        int int40 = scriptNode28.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope44 = scope42.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node45 = scope42.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scope42.setJsDocNode(comment51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode54.getSymbols();
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scope42, (com.google.javascript.rhino.head.Node) scriptNode54);
        scriptNode54.setPosition((int) (byte) 0);
        scriptNode54.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        scriptNode67.setEncodedSourceStart((int) (byte) 100);
        int int78 = scriptNode67.getIntProp(6, 2);
        int int79 = scriptNode67.getParamCount();
        java.lang.String str80 = scriptNode67.debugPrint();
        int int83 = scriptNode67.getIntProp(17, 10);
        scriptNode54.setTop(scriptNode67);
        scriptNode54.setEncodedSourceEnd(9);
        scriptNode20.setCompilerData((java.lang.Object) scriptNode54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = scriptNode20.getTop();
        java.lang.String str89 = scriptNode88.toString();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(symbolList61);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str80, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "136" + "'", str89, "136");
    }

    @Test
    public void test11563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11563");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope10 = scope8.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node11 = scope8.target;
        scope8.setPosition(2);
        java.lang.String str14 = scope8.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap15 = scope8.getSymbolTable();
        boolean boolean16 = scope8.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = scriptNode17.getTop();
        scope8.target = scriptNode17;
        com.google.javascript.rhino.head.Node node28 = scriptNode17.target;
        scriptNode17.setBaseLineno(10);
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        int int34 = scriptNode32.getBaseLineno();
        java.lang.Object obj35 = scriptNode32.getCompilerData();
        scriptNode32.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        scriptNode17.setSymbols(symbolList39);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{\n}\n" + "'", str14, "{\n}\n");
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(symbolList39);
    }

    @Test
    public void test11564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11564");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        scriptNode9.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        com.google.javascript.rhino.head.Node node28 = scriptNode9.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        java.lang.String str37 = scriptNode29.debugPrint();
        java.lang.String str38 = scriptNode29.getEncodedSource();
        scriptNode9.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList40 = scriptNode9.getStatements();
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str37, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(astNodeList40);
    }

    @Test
    public void test11565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11565");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node16 = scriptNode6.getLastChild();
        int int17 = scriptNode6.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int22 = scope21.getLength();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        java.lang.String str38 = comment34.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment34);
        java.lang.Object obj41 = comment34.getProp((int) (short) -1);
        java.lang.String str43 = comment34.makeIndent((int) (short) -1);
        scope21.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode46.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope51.setPosition(100);
        com.google.javascript.rhino.head.Node node54 = scope51.getLastSibling();
        node54.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = node54.spliterator();
        scriptNode46.setCompilerData((java.lang.Object) node54);
        java.lang.String str58 = scriptNode46.getSourceName();
        int int59 = scriptNode46.getEncodedSourceStart();
        scriptNode46.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        scriptNode68.setEncodedSourceEnd(18);
        java.lang.String str72 = comment67.toStringTree(scriptNode68);
        com.google.javascript.rhino.head.Node node74 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode68, node74);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scriptNode68);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator77 = scriptNode46.new NodeIterator();
        java.lang.String str78 = scriptNode6.toStringTree(scriptNode46);
        int int79 = scriptNode46.depth();
        com.google.javascript.rhino.head.ast.Scope scope81 = scriptNode46.getDefiningScope("                        {\n}\n");
        int int82 = scriptNode46.getParamCount();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                    Scope" + "'", str38, "                    Scope");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(scope81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test11566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11566");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        comment21.setCommentType(commentType24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = comment21.getAstRoot();
        scriptNode0.setJsDocNode(comment21);
        java.lang.String str29 = scriptNode0.makeIndent(0);
        scriptNode0.setLineno(23);
        java.lang.String str33 = scriptNode0.makeIndent(35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        int int36 = scriptNode34.getBaseLineno();
        java.lang.Object obj37 = scriptNode34.getCompilerData();
        scriptNode34.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = null;
        scriptNode34.setSymbolTable(strMap40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode34.getTop();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str44 = scriptNode0.getSourceName();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(astRoot26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                      " + "'", str33, "                                                                      ");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test11567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11567");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-547629399));
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("0\tCOMMENT 0 6\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode5.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope10.setPosition(100);
        com.google.javascript.rhino.head.Node node13 = scope10.getLastSibling();
        node13.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = node13.spliterator();
        scriptNode5.setCompilerData((java.lang.Object) node13);
        java.lang.String str18 = scriptNode5.toSource(21);
        int int19 = scriptNode5.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node20 = scriptNode5.getNext();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = scriptNode5.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                                          {\n                                          }\n" + "'", str18, "                                          {\n                                          }\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(astRoot21);
    }

    @Test
    public void test11568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11568");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        int int16 = scriptNode0.getParamCount();
        scriptNode0.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int23 = scriptNode20.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope25.setPosition(100);
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        node28.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = node28.spliterator();
        scriptNode20.setCompilerData((java.lang.Object) node28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) comment59);
        java.lang.String str61 = scriptNode20.toStringTree(scriptNode43);
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        com.google.javascript.rhino.head.ast.AstNode astNode63 = scriptNode43.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode43.getSymbols();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(astNode63);
        org.junit.Assert.assertNotNull(symbolList64);
    }

    @Test
    public void test11569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11569");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.ast.AstNode astNode27 = scope1.getParent();
        astNode27.removeChildren();
        astNode27.setRelative(24);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertNotNull(astNode27);
    }

    @Test
    public void test11570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11570");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        int int14 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode0.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = scriptNode0.getTop();
        scriptNode16.setEncodedSourceBounds(1, 1583199871);
        boolean boolean20 = scriptNode16.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11571");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        boolean boolean9 = scriptNode0.hasConsistentReturnUsage();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = scriptNode0.getSymbols();
        java.lang.String str12 = scriptNode0.toSource((int) (short) 100);
        scriptNode0.setEndLineno(701595233);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray15 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n" + "'", str12, "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
    }

    @Test
    public void test11572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11572");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType2, "41");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        int int13 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope7.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope7.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        int int23 = scope17.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope24 = scope17.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope17.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.Object obj29 = scriptNode26.getCompilerData();
        scriptNode26.flattenSymbolTable(false);
        scope7.addChildAfter((com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int33 = scriptNode26.getLength();
        scriptNode26.setEncodedSourceEnd((int) (byte) 0);
        comment4.putProp(9, (java.lang.Object) scriptNode26);
        int int39 = scriptNode26.getIntProp(960854933, (-2));
        int int40 = scriptNode26.getPosition();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap41 = scriptNode26.getSymbolTable();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode26.setEndLineno((-1273350820));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-2) + "'", int39 == (-2));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(strMap41);
    }

    @Test
    public void test11573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11573");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        int int58 = scriptNode40.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = scriptNode40.getAstRoot();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap60 = null;
        scriptNode40.setSymbolTable(strMap60);
        boolean boolean62 = scriptNode40.hasSideEffects();
        scriptNode40.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        scriptNode78.setEncodedSourceStart((int) (byte) 100);
        int int89 = scriptNode78.getIntProp(6, 2);
        int int90 = scriptNode78.getParamCount();
        scriptNode65.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode78);
        scriptNode78.setEncodedSourceStart((int) (byte) 1);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator94 = scriptNode78.spliterator();
        java.lang.String str95 = scriptNode40.toStringTree(scriptNode78);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList96 = scriptNode40.getSymbols();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNull(astRoot59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNotNull(symbolList96);
    }

    @Test
    public void test11574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11574");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = scope1.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        int int21 = scriptNode10.getIntProp(6, 2);
        int int22 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode36.getSymbols();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setPosition((int) (byte) 0);
        scriptNode36.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str50 = scriptNode36.makeIndent(0);
        boolean boolean51 = scriptNode36.hasSideEffects();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = scriptNode54.getTop();
        scriptNode63.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int68 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getEncodedSource();
        scriptNode69.setEncodedSourceEnd(18);
        scriptNode67.target = scriptNode69;
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = null;
        scriptNode69.setSymbols(symbolList75);
        java.lang.String str77 = scriptNode69.getJsDoc();
        scriptNode69.setBaseLineno((int) (byte) 0);
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode36.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test11575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11575");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode1.getChildScopes();
        scriptNode1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        java.lang.String str32 = scriptNode27.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode34.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope39.setPosition(100);
        com.google.javascript.rhino.head.Node node42 = scope39.getLastSibling();
        node42.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = node42.spliterator();
        scriptNode34.setCompilerData((java.lang.Object) node42);
        java.lang.String str46 = scriptNode34.getSourceName();
        int int47 = scriptNode34.getEncodedSourceStart();
        scriptNode34.setEncodedSourceStart((int) (byte) 0);
        scriptNode27.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        java.lang.Object obj52 = scriptNode27.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode27, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope55 = scriptNode27.getEnclosingScope();
        java.lang.String str57 = scriptNode27.makeIndent(1);
        scriptNode27.removeChildren();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str32, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(scope55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "  " + "'", str57, "  ");
    }

    @Test
    public void test11576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11576");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode5.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope10.setPosition(100);
        com.google.javascript.rhino.head.Node node13 = scope10.getLastSibling();
        node13.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = node13.spliterator();
        scriptNode5.setCompilerData((java.lang.Object) node13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = scriptNode5.toStringTree(scriptNode28);
        java.lang.String str47 = scriptNode28.toString();
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newString(19, "                    Scope");
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, node50, 12);
        com.google.javascript.rhino.head.Node node53 = scriptNode28.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        int int70 = scriptNode68.getBaseLineno();
        java.lang.String str71 = scriptNode68.getNextTempName();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        int int84 = scriptNode73.getIntProp(6, 2);
        scriptNode73.setEndLineno(18);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) scriptNode73, (int) (byte) -1);
        scriptNode73.flattenSymbolTable(true);
        int int91 = scriptNode73.getEncodedSourceStart();
        java.lang.String str93 = scriptNode73.makeIndent((-51));
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        com.google.javascript.rhino.head.Node node95 = scriptNode73.getLastSibling();
        com.google.javascript.rhino.head.Node node96 = node95.getFirstChild();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertNull(node96);
    }

    @Test
    public void test11577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11577");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode52.setPosition((int) (byte) 0);
        scriptNode52.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        java.lang.String str78 = scriptNode65.debugPrint();
        int int81 = scriptNode65.getIntProp(17, 10);
        scriptNode52.setTop(scriptNode65);
        scriptNode52.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node85 = scriptNode52.getLastChild();
        scriptNode9.setTop(scriptNode52);
        scriptNode9.setSourceName("                                              Scope");
        int int89 = scriptNode9.getAbsolutePosition();
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str78, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test11578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11578");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        java.lang.String str25 = scriptNode24.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        java.lang.String str36 = scriptNode35.shortName();
        scriptNode24.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode35);
        java.lang.String str39 = scriptNode24.makeIndent(6);
        scriptNode24.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        scriptNode4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode24);
        int int44 = scriptNode24.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        int int57 = scriptNode45.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getEncodedSource();
        int int60 = scriptNode58.getBaseLineno();
        java.lang.String str61 = scriptNode58.getNextTempName();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        int int63 = scriptNode58.getType();
        int int64 = scriptNode58.getParamCount();
        int int65 = scriptNode58.getLength();
        int int66 = scriptNode58.getFunctionCount();
        java.lang.Object obj67 = scriptNode58.getCompilerData();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        java.lang.String str69 = scriptNode24.shortName();
        boolean boolean70 = scriptNode24.hasChildren();
        int int71 = scriptNode24.getEncodedSourceEnd();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ScriptNode" + "'", str25, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ScriptNode" + "'", str36, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "            " + "'", str39, "            ");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "$0" + "'", str61, "$0");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 136 + "'", int63 == 136);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ScriptNode" + "'", str69, "ScriptNode");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test11579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11579");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        int int16 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        scriptNode44.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray57 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList58, symbolArray57);
        scriptNode44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        java.lang.String str62 = scriptNode0.toSource();
        java.lang.String str63 = scriptNode0.shortName();
        com.google.javascript.rhino.head.ast.Scope scope64 = scriptNode0.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray65 = scriptNode0.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNotNull(symbolArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{\n  {\n  }\n}\n" + "'", str62, "{\n  {\n  }\n}\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ScriptNode" + "'", str63, "ScriptNode");
        org.junit.Assert.assertNull(scope64);
    }

    @Test
    public void test11580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11580");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        scriptNode29.clearParentScope();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
    }

    @Test
    public void test11581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11581");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        comment21.setCommentType(commentType24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = comment21.getAstRoot();
        scriptNode0.setJsDocNode(comment21);
        java.lang.String str29 = scriptNode0.makeIndent(0);
        scriptNode0.setLineno(23);
        java.lang.String str32 = scriptNode0.toSource();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(astRoot26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{\n}\n" + "'", str32, "{\n}\n");
    }

    @Test
    public void test11582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11582");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = scriptNode0.new NodeIterator();
        boolean boolean10 = scriptNode0.hasConsistentReturnUsage();
        java.lang.Object obj11 = scriptNode0.getCompilerData();
        scriptNode0.setRelative((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = scriptNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test11583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11583");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        int int2 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = scriptNode3.getSymbols();
        java.lang.String str11 = scriptNode3.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getEncodedSource();
        com.google.javascript.rhino.head.Node node14 = scriptNode12.getLastSibling();
        scriptNode12.setEncodedSource("Scope");
        scriptNode12.setEndLineno(100);
        scriptNode3.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope21.putProp(25, (java.lang.Object) 100L);
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) scope21);
        java.lang.String str26 = scriptNode3.debugPrint();
        scriptNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode3);
        boolean boolean28 = scriptNode3.hasChildren();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(symbolList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str11, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\t  SCRIPT -1 1\n" + "'", str26, "-1\t  SCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11584");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        scope6.setPosition(2);
        scope6.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node14 = scope6.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getEncodedSource();
        scriptNode15.setEncodedSourceEnd(18);
        java.lang.String str20 = scriptNode15.makeIndent((int) '#');
        scope6.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        scope23.setPosition(2);
        scope23.putIntProp(17, 25);
        scope23.setLength((int) ' ');
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scope23);
        int int35 = scriptNode15.getLength();
        int int36 = scriptNode15.getEndLineno();
        java.lang.String str37 = scriptNode15.toSource();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        scriptNode15.putIntProp(213295120, 220850805);
        com.google.javascript.rhino.head.ast.Comment comment42 = scriptNode15.getJsDocNode();
        com.google.javascript.rhino.head.ast.Comment comment43 = scriptNode15.getJsDocNode();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                      " + "'", str20, "                                                                      ");
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 35 + "'", int35 == 35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{\n  {\n  }\n}\n" + "'", str37, "{\n  {\n  }\n}\n");
        org.junit.Assert.assertNull(comment42);
        org.junit.Assert.assertNull(comment43);
    }

    @Test
    public void test11585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11585");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        int int39 = scriptNode0.getPosition();
        scriptNode0.setSourceName("                                                                      ");
        scriptNode0.setEncodedSourceEnd(19);
        int int44 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = scriptNode45.getTop();
        java.lang.String str55 = scriptNode54.shortName();
        scriptNode54.setSourceName("                    Scope");
        com.google.javascript.rhino.head.Node node58 = scriptNode54.getNext();
        int int59 = scriptNode54.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList60 = scriptNode54.getStatements();
        java.lang.String str61 = scriptNode54.shortName();
        scriptNode54.putIntProp(15, 1487440633);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(scriptNode54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ScriptNode" + "'", str55, "ScriptNode");
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(astNodeList60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ScriptNode" + "'", str61, "ScriptNode");
    }

    @Test
    public void test11586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11586");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        int int17 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode0.getEnclosingFunction();
        int int19 = scriptNode0.getFunctionCount();
        com.google.javascript.rhino.head.Node node20 = scriptNode0.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        scriptNode21.setEncodedSourceEnd(18);
        java.lang.String str26 = scriptNode21.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scriptNode21.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope28 = scriptNode21.getParentScope();
        scriptNode21.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment30 = scriptNode21.getJsDocNode();
        int int31 = scriptNode21.getLength();
        scriptNode0.setCompilerData((java.lang.Object) int31);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = scriptNode0.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator33.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(functionNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                      " + "'", str26, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(comment30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test11587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11587");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType3, "{\n}\n");
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment5, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType8 = comment5.getCommentType();
        int int9 = comment5.getPosition();
        java.lang.String str11 = comment5.toSource(0);
        org.junit.Assert.assertNull(commentType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9 + "'", int9 == 9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
    }

    @Test
    public void test11588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11588");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(6, (int) (short) -1, commentType2, "                    hi!");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = comment4.getCommentType();
        com.google.javascript.rhino.head.Node node6 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment4.addChildToFront(node6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentType5);
    }

    @Test
    public void test11589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11589");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        int int58 = scriptNode40.getEncodedSourceStart();
        java.lang.String str59 = scriptNode40.toString();
        com.google.javascript.rhino.head.Node node60 = scriptNode40.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope61 = scriptNode40.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            scope61.clearParentScope();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "136" + "'", str59, "136");
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(scope61);
    }

    @Test
    public void test11590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11590");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20, (-107359633));
        scope2.removeChildren();
    }

    @Test
    public void test11591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11591");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        comment11.setCommentType(commentType14);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment11, 14);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = comment11.getCommentType();
        comment11.removeChildren();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(commentType18);
    }

    @Test
    public void test11592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11592");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str4 = scope2.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str17 = scriptNode8.getSourceName();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode8, 26);
        scriptNode6.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        java.lang.String str21 = scriptNode6.getNextTempName();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean23 = scriptNode6.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        java.lang.String str37 = scriptNode24.getSourceName();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scriptNode24, 16);
        int int40 = scriptNode24.getLineno();
        scriptNode24.setEncodedSource("                                                                                                                                                                                                        ");
        int int43 = scriptNode24.depth();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode44 = scriptNode24.getEnclosingFunction();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNull(functionNode44);
    }

    @Test
    public void test11593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11593");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str13 = scriptNode1.getSourceName();
        int int14 = scriptNode1.getEncodedSourceStart();
        scriptNode1.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Node node17 = scriptNode1.getFirstChild();
        java.lang.Object obj18 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope34.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node37 = scope34.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scope34.setJsDocNode(comment43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode46.getSymbols();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.lang.String str55 = scriptNode46.getEncodedSource();
        int int56 = scriptNode46.getAbsolutePosition();
        scriptNode46.setEncodedSourceEnd((int) '4');
        scriptNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node60 = scriptNode1.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "129");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "129");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "129");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test11594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11594");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-25), 70);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope3 = scope2.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11595");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = null;
        scope1.setSymbolTable(strMap10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        int int20 = scope14.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope21 = scope14.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope14.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        scope24.setPosition(2);
        int int30 = scope24.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope31 = scope24.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope24.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.Object obj36 = scriptNode33.getCompilerData();
        scriptNode33.flattenSymbolTable(false);
        scope14.addChildAfter((com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int40 = scriptNode33.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str46 = scriptNode41.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        scriptNode41.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        boolean boolean57 = scriptNode41.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = scriptNode41.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        scope1.putProp(161, (java.lang.Object) scriptNode41);
        java.lang.String str62 = scope1.toSource((int) (byte) 10);
        scope1.clearParentScope();
        java.lang.String str64 = scope1.toString();
        com.google.javascript.rhino.head.Node node65 = scope1.getFirstChild();
        com.google.javascript.rhino.head.Node node67 = scope1.setType(966852023);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                      " + "'", str46, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                    {\n                    }\n" + "'", str62, "                    {\n                    }\n");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "129" + "'", str64, "129");
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNotNull(node67);
    }

    @Test
    public void test11596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11596");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode2);
        scriptNode2.setRelative(8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode6.toSource(18);
        java.lang.Object obj9 = scriptNode6.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node48 = scriptNode37.target;
        scriptNode6.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        java.lang.String str50 = scriptNode6.getEncodedSource();
        scriptNode2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode6);
        scriptNode6.setBaseLineno(1487440633);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int58 = scriptNode55.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope60.setPosition(100);
        com.google.javascript.rhino.head.Node node63 = scope60.getLastSibling();
        node63.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator65 = node63.spliterator();
        scriptNode55.setCompilerData((java.lang.Object) node63);
        java.lang.String str68 = scriptNode55.toSource(21);
        int int69 = scriptNode55.getEncodedSourceStart();
        boolean boolean70 = scriptNode55.hasChildren();
        int int71 = scriptNode55.getBaseLineno();
        scriptNode55.removeProp(1487440633);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str75 = scriptNode74.getEncodedSource();
        scriptNode74.setEncodedSourceEnd(18);
        java.lang.String str79 = scriptNode74.makeIndent((int) '#');
        scriptNode74.setLineno(15);
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        scriptNode6.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node((-748421155), (com.google.javascript.rhino.head.Node) scriptNode55, 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                    {\n                                    }\n" + "'", str8, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(nodeSpliterator65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                                          {\n                                          }\n" + "'", str68, "                                          {\n                                          }\n");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "                                                                      " + "'", str79, "                                                                      ");
    }

    @Test
    public void test11597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11597");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray40 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList41, symbolArray40);
        scriptNode27.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList41);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        java.lang.String str52 = scope46.toSource();
        com.google.javascript.rhino.head.Node node53 = scope46.getLastChild();
        int int54 = scope46.depth();
        scriptNode27.setParentScope(scope46);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope59 = scope57.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node60 = scope57.target;
        scope57.setPosition(2);
        java.lang.String str63 = scope57.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap64 = scope57.getSymbolTable();
        boolean boolean65 = scope57.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = scriptNode66.getTop();
        scope57.target = scriptNode66;
        com.google.javascript.rhino.head.Node node77 = scriptNode66.target;
        scriptNode66.setBaseLineno(10);
        scriptNode66.setEncodedSourceEnd((int) (short) -1);
        scope46.setTop(scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope84 = scriptNode66.getDefiningScope("            ");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node85 = scope84.target;
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(symbolArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{\n}\n" + "'", str63, "{\n}\n");
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNull(scope84);
    }

    @Test
    public void test11598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11598");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        int int4 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scope21.setJsDocNode(comment30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode33);
        scriptNode33.setPosition((int) (byte) 0);
        scriptNode33.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getParamCount();
        java.lang.String str59 = scriptNode46.debugPrint();
        int int62 = scriptNode46.getIntProp(17, 10);
        scriptNode33.setTop(scriptNode46);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode33);
        scriptNode33.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode33);
        scriptNode0.setEncodedSourceStart(1487440633);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator70 = scriptNode0.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray71 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(symbolList40);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str59, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNotNull(nodeSpliterator70);
    }

    @Test
    public void test11599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11599");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        scriptNode1.setEncodedSourceEnd(18);
        java.lang.String str6 = scriptNode1.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        boolean boolean17 = scriptNode1.hasSideEffects();
        java.lang.String str18 = scriptNode1.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode19.getIntProp(6, 2);
        int int31 = scriptNode19.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getParamCount();
        scriptNode19.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope47.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        scriptNode77.setPosition((int) (byte) 0);
        scope47.setTop(scriptNode77);
        scriptNode32.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node(34756133, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode77, (-42));
        com.google.javascript.rhino.head.ast.AstRoot astRoot92 = scriptNode77.getAstRoot();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                      " + "'", str6, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNull(astRoot92);
    }

    @Test
    public void test11600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11600");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        boolean boolean13 = scope1.hasChildren();
        java.lang.String str14 = scope1.debugPrint();
        int int15 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode16.getIntProp(6, 2);
        int int28 = scriptNode16.getParamCount();
        java.lang.String str29 = scriptNode16.debugPrint();
        scriptNode16.setPosition(8);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        int int33 = scope1.depth();
        scope1.removeProp(6);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node36 = scope1.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0\tBLOCK 0 1\n" + "'", str14, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str29, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test11601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11601");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode60.getSymbols();
        scriptNode24.setSymbols(symbolList67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode24.getSymbols();
        scriptNode24.setPosition(18);
        int int74 = scriptNode24.getIntProp(129, (int) (short) 100);
        scriptNode24.setBaseLineno((int) (byte) 10);
        java.lang.String str77 = scriptNode24.getNextTempName();
        boolean boolean78 = scriptNode24.hasSideEffects();
        int int79 = scriptNode24.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList80 = scriptNode24.getStatements();
        com.google.javascript.rhino.head.Node node81 = scriptNode24.getLastChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = scriptNode24.getTop();
        scriptNode82.setEndLineno(20);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((-1379055074), (com.google.javascript.rhino.head.Node) scriptNode82, 0);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "$0" + "'", str77, "$0");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertNotNull(astNodeList80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertNotNull(scriptNode82);
    }

    @Test
    public void test11602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11602");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(51160157);
    }

    @Test
    public void test11603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11603");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        boolean boolean44 = scriptNode31.hasSideEffects();
        int int45 = scriptNode31.getAbsolutePosition();
        int int46 = scriptNode31.getParamCount();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test11604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11604");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        java.lang.Object obj10 = scope1.getProp((int) 'a');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap11 = scope1.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getParamCount();
        scriptNode12.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode12.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList40 = scriptNode12.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment41 = scriptNode12.getJsDocNode();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = scriptNode12.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertNotNull(astNodeList40);
        org.junit.Assert.assertNull(comment41);
    }

    @Test
    public void test11605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11605");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope1.getDefiningScope("");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope26 = com.google.javascript.rhino.head.ast.Scope.splitScope(scope25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(scope25);
    }

    @Test
    public void test11606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11606");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        scriptNode4.setEncodedSource("                  Scope");
        int int17 = scriptNode4.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = scriptNode4.getTop();
        int int19 = scriptNode18.getLineno();
        boolean boolean20 = scriptNode18.hasSideEffects();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11607");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(3);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = scope1.new NodeIterator();
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newString("5");
        node4.removeProp(272356811);
        int int9 = node4.getIntProp(24, (-1805289491));
        scope1.addChildToFront(node4);
        com.google.javascript.rhino.head.ast.Symbol symbol11 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope1.putSymbol(symbol11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1805289491) + "'", int9 == (-1805289491));
    }

    @Test
    public void test11608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11608");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getRegexpCount();
        java.lang.String str22 = scriptNode9.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        scope37.setPosition(2);
        scope37.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node45 = scope37.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getEncodedSource();
        scriptNode46.setEncodedSourceEnd(18);
        java.lang.String str51 = scriptNode46.makeIndent((int) '#');
        scope37.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope24, (com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope scope54 = scope24.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        int int70 = scriptNode68.getBaseLineno();
        java.lang.String str71 = scriptNode68.getNextTempName();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        int int73 = scriptNode55.getEndLineno();
        scope24.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode55);
        scriptNode9.addChildScope(scope24);
        scope24.setPosition((-53));
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList78 = scope24.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        com.google.javascript.rhino.head.Token.CommentType commentType86 = null;
        comment84.setCommentType(commentType86);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) comment84);
        java.lang.String str89 = comment84.getValue();
        java.lang.Object obj91 = comment84.getProp(19);
        com.google.javascript.rhino.head.Token.CommentType commentType92 = null;
        comment84.setCommentType(commentType92);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                                      " + "'", str51, "                                                                      ");
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(astNodeList78);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Scope" + "'", str89, "Scope");
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test11609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11609");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode26.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = scriptNode61.getTop();
        scriptNode70.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int75 = scriptNode74.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str77 = scriptNode76.getEncodedSource();
        scriptNode76.setEncodedSourceEnd(18);
        scriptNode74.target = scriptNode76;
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) scriptNode76);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = null;
        scriptNode76.setSymbols(symbolList82);
        java.lang.String str84 = scriptNode76.getJsDoc();
        java.lang.String str85 = scriptNode76.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str87 = scriptNode86.getEncodedSource();
        int int88 = scriptNode86.getBaseLineno();
        java.lang.Object obj89 = scriptNode86.getCompilerData();
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode76, (com.google.javascript.rhino.head.Node) scriptNode86, (-51));
        int int92 = scriptNode76.getBaseLineno();
        scriptNode26.setTop(scriptNode76);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode94 = scriptNode76.getEnclosingFunction();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNotNull(scriptNode70);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNull(functionNode94);
    }

    @Test
    public void test11610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11610");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setRelative(8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(18);
        java.lang.Object obj8 = scriptNode5.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        int int21 = scriptNode10.getIntProp(6, 2);
        int int22 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode36.getSymbols();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node47 = scriptNode36.target;
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
        java.lang.String str49 = scriptNode5.getEncodedSource();
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        java.lang.String str51 = scriptNode1.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope53 = scriptNode1.getDefiningScope("                                                Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scriptNode56.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = scriptNode56.getTop();
        scriptNode65.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int70 = scriptNode69.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getEncodedSource();
        scriptNode71.setEncodedSourceEnd(18);
        scriptNode69.target = scriptNode71;
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode65, (com.google.javascript.rhino.head.Node) scriptNode71);
        com.google.javascript.rhino.head.Node node77 = scriptNode65.getLastSibling();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode65, 1487440633);
        // The following exception was thrown during execution in test generation
        try {
            scope53.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                    {\n                                    }\n" + "'", str7, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(node77);
    }

    @Test
    public void test11611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11611");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(1487440611, (-824625719));
    }

    @Test
    public void test11612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11612");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor16 = scriptNode0.iterator();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = scriptNode0.getSymbol("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope34.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node37 = scope34.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scope34.setJsDocNode(comment43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode46.getSymbols();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) scriptNode46);
        scriptNode46.setPosition((int) (byte) 0);
        scriptNode46.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str59 = scriptNode46.getSourceName();
        scriptNode46.setSourceName("{\n{\n}\n}\n");
        java.lang.String str62 = scriptNode46.getJsDoc();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNotNull(nodeItor16);
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test11613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11613");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.getLastSibling();
        node0.addChildrenToBack(node5);
        com.google.javascript.rhino.head.Node node7 = node0.getLastSibling();
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(node7);
    }

    @Test
    public void test11614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11614");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        boolean boolean24 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        boolean boolean26 = nodeIterator17.hasNext();
        boolean boolean27 = nodeIterator17.hasNext();
        boolean boolean28 = nodeIterator17.hasNext();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test11615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11615");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        scriptNode6.setBaseLineno(23);
        int int18 = scriptNode6.getEndLineno();
        int int19 = scriptNode6.getRegexpCount();
        scriptNode6.setEncodedSourceBounds(70, (int) (byte) 1);
        scriptNode6.removeChildren();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test11616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11616");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.Node node13 = scope1.target;
        java.lang.String str14 = scope1.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        int int37 = scriptNode31.getLength();
        int int38 = scriptNode31.getEncodedSourceStart();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        int int40 = scope1.depth();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList48 = scriptNode41.getSymbols();
        java.lang.String str49 = scriptNode41.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        com.google.javascript.rhino.head.Node node52 = scriptNode50.getLastSibling();
        scriptNode50.setEncodedSource("Scope");
        scriptNode50.setEndLineno(100);
        scriptNode41.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope59.putProp(25, (java.lang.Object) 100L);
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) scope59);
        com.google.javascript.rhino.head.Node node64 = scriptNode41.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str79 = scriptNode78.getEncodedSource();
        int int80 = scriptNode78.getBaseLineno();
        java.lang.String str81 = scriptNode78.getNextTempName();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode78);
        scriptNode78.setEncodedSource("                        ");
        int int85 = scriptNode78.getLineno();
        scriptNode41.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode78);
        int int87 = scriptNode41.getLineno();
        int int88 = scriptNode41.getRegexpCount();
        scriptNode41.setEncodedSourceStart((-613442063));
        java.lang.String str91 = scriptNode41.toString();
        java.lang.String str92 = scriptNode41.getEncodedSource();
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode41);
        scope1.removeChildren();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0\tBLOCK 0 1\n" + "'", str14, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(symbolList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str49, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "$0" + "'", str81, "$0");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "136" + "'", str91, "136");
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test11617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11617");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getPosition();
        int int23 = scriptNode10.getFunctionCount();
        java.lang.String str25 = scriptNode10.toSource(17);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode10.getSymbols();
        java.lang.Class<?> wildcardClass27 = scriptNode10.getClass();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-53) + "'", int22 == (-53));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                                  {\n                                  }\n" + "'", str25, "                                  {\n                                  }\n");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test11618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11618");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.lang.String str22 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType26, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        java.lang.String str34 = scriptNode29.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment28, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        comment28.setCommentType(commentType36);
        scriptNode16.target = comment28;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        scriptNode39.setEncodedSourceEnd(18);
        java.lang.String str44 = scriptNode39.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = scriptNode47.getTop();
        scriptNode56.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int61 = scriptNode60.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getEncodedSource();
        scriptNode62.setEncodedSourceEnd(18);
        scriptNode60.target = scriptNode62;
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) comment72);
        int int74 = scriptNode56.depth();
        int int75 = scriptNode56.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor76 = scriptNode56.iterator();
        scriptNode39.setTop(scriptNode56);
        com.google.javascript.rhino.head.ast.Scope scope79 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope81 = scope79.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node82 = scope79.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType86 = null;
        com.google.javascript.rhino.head.ast.Comment comment88 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType86, "Scope");
        scriptNode83.setParent((com.google.javascript.rhino.head.ast.AstNode) comment88);
        scope79.setJsDocNode(comment88);
        com.google.javascript.rhino.head.Node node91 = comment88.getFirstChild();
        scriptNode56.setJsDocNode(comment88);
        int int93 = scriptNode56.getBaseLineno();
        java.lang.String str94 = scriptNode56.shortName();
        scriptNode16.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode96 = scriptNode56.getTop();
        int int97 = scriptNode96.getLineno();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                      " + "'", str34, "                                                                      ");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                                                                      " + "'", str44, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(nodeItor76);
        org.junit.Assert.assertNull(scope81);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNull(node91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "ScriptNode" + "'", str94, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test11619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11619");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList28 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment29 = scriptNode0.getJsDocNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        scriptNode34.setEncodedSourceBounds((int) (byte) -1, 11);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str46 = scope44.toSource(12);
        scope44.setRelative(1);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope44);
        scriptNode0.addChildScope(scope44);
        int int51 = scriptNode0.getLength();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(astNodeList28);
        org.junit.Assert.assertNull(comment29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                        {\n                        }\n" + "'", str46, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test11620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11620");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        java.lang.String str4 = scriptNode0.toString();
        java.lang.String str5 = scriptNode0.getNextTempName();
        scriptNode0.removeChildren();
        int int7 = scriptNode0.getBaseLineno();
        scriptNode0.setEncodedSourceBounds(11, (-769830162));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "136" + "'", str4, "136");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "$0" + "'", str5, "$0");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test11621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11621");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 1);
        scriptNode1.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getParamCount();
        java.lang.String str16 = scriptNode3.debugPrint();
        scriptNode3.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int28 = scriptNode19.getEncodedSourceStart();
        scriptNode19.setLineno(1);
        int int31 = scriptNode19.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode33.getTop();
        scriptNode42.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int47 = scriptNode46.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        scriptNode48.setEncodedSourceEnd(18);
        scriptNode46.target = scriptNode48;
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope71 = scope69.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node72 = scope69.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scope69.setJsDocNode(comment78);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        com.google.javascript.rhino.head.ast.Comment comment86 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType84, "Scope");
        scriptNode81.setParent((com.google.javascript.rhino.head.ast.AstNode) comment86);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList88 = scriptNode81.getSymbols();
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scope69, (com.google.javascript.rhino.head.Node) scriptNode81);
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList91 = scriptNode55.getSymbols();
        scriptNode19.setSymbols(symbolList91);
        scriptNode3.setSymbols(symbolList91);
        scriptNode1.setSymbols(symbolList91);
        int int95 = scriptNode1.getLineno();
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str16, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(scope71);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(symbolList88);
        org.junit.Assert.assertNotNull(symbolList91);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test11622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11622");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        scriptNode36.target = scriptNode38;
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        int int57 = scriptNode45.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope61 = scope59.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node62 = scope59.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scope59.setJsDocNode(comment68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = scriptNode71.getSymbols();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scope59, (com.google.javascript.rhino.head.Node) scriptNode71);
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope82 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope84 = scope82.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node85 = scope82.target;
        scope82.setPosition(2);
        scope82.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope82);
        int int91 = scriptNode38.getEncodedSourceStart();
        java.lang.String str93 = scriptNode38.toSource(26);
        com.google.javascript.rhino.head.Node node94 = scriptNode38.getLastSibling();
        scriptNode0.setTop(scriptNode38);
        java.lang.String str97 = scriptNode0.makeIndent(58);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator98 = scriptNode0.spliterator();
        java.lang.Object obj99 = scriptNode0.getCompilerData();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(scope61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(symbolList78);
        org.junit.Assert.assertNull(scope84);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "                                                    {\n                                                    }\n" + "'", str93, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "                                                                                                                    " + "'", str97, "                                                                                                                    ");
        org.junit.Assert.assertNotNull(nodeSpliterator98);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test11623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11623");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node12 = scriptNode5.setType(16);
        scriptNode5.setBaseLineno(97);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList15 = scriptNode5.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode(21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode19.getIntProp(6, 2);
        scriptNode19.setEndLineno(18);
        int int33 = scriptNode19.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope34 = scriptNode19.getParentScope();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator35 = scriptNode19.new NodeIterator();
        boolean boolean36 = nodeIterator35.hasNext();
        boolean boolean37 = nodeIterator35.hasNext();
        scriptNode17.putProp((int) (byte) 10, (java.lang.Object) nodeIterator35);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList39 = scriptNode17.getStatements();
        scriptNode5.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(astNodeList15);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(astNodeList39);
    }

    @Test
    public void test11624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11624");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode52.setPosition((int) (byte) 0);
        scriptNode52.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        java.lang.String str78 = scriptNode65.debugPrint();
        int int81 = scriptNode65.getIntProp(17, 10);
        scriptNode52.setTop(scriptNode65);
        scriptNode52.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node85 = scriptNode52.getLastChild();
        scriptNode9.setTop(scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList87 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope88 = scriptNode9.getEnclosingScope();
        scriptNode9.setEncodedSourceStart((int) ' ');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode91 = scriptNode9.getTop();
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str78, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNotNull(symbolList87);
        org.junit.Assert.assertNull(scope88);
        org.junit.Assert.assertNotNull(scriptNode91);
    }

    @Test
    public void test11625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11625");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        scope1.setPosition(180367011);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope19 = scope1.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
    }

    @Test
    public void test11626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11626");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        java.lang.String str8 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode13.getTop();
        scriptNode22.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        scriptNode26.target = scriptNode28;
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str34 = node33.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope38 = scope36.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node39 = scope36.getLastSibling();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(23, node33, (com.google.javascript.rhino.head.Node) scope36, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode42.getSymbols();
        java.lang.String str50 = scriptNode42.debugPrint();
        scriptNode42.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        scope54.setPosition(2);
        scope54.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap63 = null;
        scope54.setSymbolTable(strMap63);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scope54);
        int int66 = scriptNode42.getLineno();
        scriptNode42.setEncodedSourceStart(19);
        com.google.javascript.rhino.head.ast.Scope scope70 = scriptNode42.getDefiningScope("/");
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode42, 11);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newString((int) (short) 1, "                                                                                                        ");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode42.setFinally(node76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str50, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scope70);
        org.junit.Assert.assertNotNull(node76);
    }

    @Test
    public void test11627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11627");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType2, "{\n}\n");
        java.lang.String str5 = comment4.getValue();
        comment4.setLength(129);
        java.lang.String str9 = comment4.toSource(5);
        java.lang.String str10 = comment4.getValue();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{\n}\n" + "'", str5, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "          {\n}\n" + "'", str9, "          {\n}\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\n}\n" + "'", str10, "{\n}\n");
    }

    @Test
    public void test11628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11628");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        int int11 = scriptNode0.getLength();
        java.lang.String str12 = scriptNode0.getNextTempName();
        java.lang.String str13 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope14 = scriptNode0.getParentScope();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode0.getSymbol("                Scope");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = scriptNode0.getParamOrVarName(272356811);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(symbol16);
    }

    @Test
    public void test11629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11629");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode0.setParentScope(scope17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode21.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope26.setPosition(100);
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        node29.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = node29.spliterator();
        scriptNode21.setCompilerData((java.lang.Object) node29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) comment60);
        java.lang.String str62 = scriptNode21.toStringTree(scriptNode44);
        int int63 = scriptNode44.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode64.setEndLineno(18);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode64);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.Node node80 = scriptNode64.target;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = scriptNode64.getRegexpString(1034180762);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test11630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11630");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode1.getSymbols();
        scriptNode1.setEncodedSourceBounds((int) (byte) 10, (int) (short) 1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.Node node19 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.Scope scope21 = scriptNode1.getParentScope();
        int int22 = scriptNode1.getRegexpCount();
        int int23 = scriptNode1.getEncodedSourceStart();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertNotNull(symbolList18);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
    }

    @Test
    public void test11631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11631");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 100, 15);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("                                        {\n                                        }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource(18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        java.lang.String str16 = scriptNode8.toSource(26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap17 = null;
        scriptNode8.setSymbolTable(strMap17);
        int int19 = scriptNode5.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        int int20 = scriptNode5.getEncodedSourceStart();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        java.lang.String str22 = scope2.toSource();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                    {\n                                    }\n" + "'", str7, "                                    {\n                                    }\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                                                    {\n                                                    }\n" + "'", str16, "                                                    {\n                                                    }\n");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-220138142) + "'", int19 == (-220138142));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n  {\n  }\n}\n" + "'", str22, "{\n  {\n  }\n}\n");
    }

    @Test
    public void test11632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11632");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean2 = scope1.hasSideEffects();
        scope1.setRelative(16);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scope1.spliterator();
        int int6 = scope1.getLineno();
        int int7 = scope1.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = scriptNode9.getTop();
        scriptNode18.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        int int55 = scriptNode44.getIntProp(6, 2);
        int int56 = scriptNode44.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scope58.setJsDocNode(comment67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode70.getSymbols();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope58, (com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope83 = scope81.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node84 = scope81.target;
        scope81.setPosition(2);
        scope81.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope81);
        scriptNode18.setLineno((-1));
        java.lang.Object obj92 = scriptNode18.getCompilerData();
        scriptNode18.flattenSymbolTable(true);
        scriptNode18.setEncodedSourceBounds(21, 97);
        // The following exception was thrown during execution in test generation
        try {
            scope1.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-7) + "'", int7 == (-7));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertNull(scope83);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test11633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11633");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.Object obj72 = scriptNode23.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node73 = scriptNode23.getLastChild();
        int int74 = scriptNode23.getFunctionCount();
        com.google.javascript.rhino.head.ast.AstNode astNode75 = scriptNode23.getParent();
        scriptNode23.setBounds(25, (-927222420));
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(astNode75);
    }

    @Test
    public void test11634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11634");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (byte) 100);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test11635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11635");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.Node node52 = comment49.getFirstChild();
        scriptNode17.setJsDocNode(comment49);
        int int54 = scriptNode17.getBaseLineno();
        scriptNode17.setRelative(5);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test11636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11636");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(69);
    }

    @Test
    public void test11637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11637");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode17.setEncodedSourceEnd(11);
        java.lang.String str25 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator29 = node28.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        java.lang.String str36 = comment34.toSource(19);
        node28.setJsDocNode(comment34);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        comment34.setCommentType(commentType38);
        java.lang.String str40 = comment34.getValue();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(nodeSpliterator29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "                                      Scope" + "'", str36, "                                      Scope");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Scope" + "'", str40, "Scope");
    }

    @Test
    public void test11638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11638");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(22, (int) '4', commentType2, "{\n{\n}\n}\n");
        int int5 = comment4.getLength();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
    }

    @Test
    public void test11639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11639");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(170200694);
        scope1.clearParentScope();
        scope1.clearParentScope();
    }

    @Test
    public void test11640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11640");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        comment10.setCommentType(commentType13);
        java.lang.String str15 = comment10.getValue();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = comment10.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator16.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Scope" + "'", str15, "Scope");
    }

    @Test
    public void test11641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11641");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope7 = scope5.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node8 = scope5.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scope5.setJsDocNode(comment14);
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scope5);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList18 = scope5.getStatements();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = scope5.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = functionNode19.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(astNodeList18);
        org.junit.Assert.assertNull(functionNode19);
    }

    @Test
    public void test11642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11642");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        java.lang.String str10 = scriptNode0.getJsDoc();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor11 = scriptNode0.iterator();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(nodeItor11);
    }

    @Test
    public void test11643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11643");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment10 = scriptNode2.getJsDocNode();
        int int11 = scriptNode2.getRegexpCount();
        java.lang.String str12 = scriptNode2.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.String str29 = scriptNode26.getNextTempName();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.lang.String str31 = scriptNode26.debugPrint();
        java.lang.String str33 = scriptNode26.toSource((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode34.getEncodedSourceStart();
        scriptNode34.setLineno(1);
        scriptNode26.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode34);
        java.lang.String str47 = scriptNode26.getEncodedSource();
        scriptNode26.setLineno((-51));
        scriptNode2.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode26);
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode2);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator52 = scriptNode2.new NodeIterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor53 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode2.visit(nodeVisitor53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(comment10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str31, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "  {\n  }\n" + "'", str33, "  {\n  }\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test11644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11644");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.Node node52 = comment49.getFirstChild();
        scriptNode17.setJsDocNode(comment49);
        scriptNode17.setEncodedSourceBounds((int) ' ', 0);
        java.lang.Object obj58 = scriptNode17.getProp(22);
        scriptNode17.setLength(0);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode17.labelId(845940331);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test11645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11645");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 10);
        scriptNode1.setEndLineno(23);
        java.lang.String str4 = scriptNode1.debugPrint();
        int int5 = scriptNode1.getBaseLineno();
        int int6 = scriptNode1.getRegexpCount();
        java.lang.String str8 = scriptNode1.makeIndent((-107359633));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "10\tSCRIPT 10 1\n" + "'", str4, "10\tSCRIPT 10 1\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test11646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11646");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode(9);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        java.lang.Object obj23 = comment16.getProp((int) (short) -1);
        java.lang.String str25 = comment16.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        comment16.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        int int55 = scriptNode53.getBaseLineno();
        java.lang.String str56 = scriptNode53.getNextTempName();
        scriptNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        java.lang.String str58 = scriptNode53.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode53.setSymbols(symbolList66);
        comment16.putProp(23, (java.lang.Object) symbolList66);
        scriptNode4.setSymbols(symbolList66);
        com.google.javascript.rhino.head.Node node70 = scriptNode4.getLastChild();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(1487440633, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode4);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str58, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNull(node70);
    }

    @Test
    public void test11647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11647");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 1);
        int int2 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        java.lang.String str8 = scriptNode3.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scriptNode20.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int25 = scriptNode24.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        scriptNode26.setEncodedSourceEnd(18);
        scriptNode24.target = scriptNode26;
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) comment36);
        int int38 = scriptNode20.depth();
        int int39 = scriptNode20.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor40 = scriptNode20.iterator();
        scriptNode3.setTop(scriptNode20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getParamCount();
        java.lang.String str55 = scriptNode42.debugPrint();
        scriptNode42.setPosition(8);
        int int58 = scriptNode42.getParamCount();
        scriptNode42.setPosition((int) (byte) 10);
        scriptNode20.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode42);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode20);
        java.lang.String str63 = scriptNode1.debugPrint();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                                      " + "'", str8, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(nodeItor40);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str55, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1\tSCRIPT 1 1\n" + "'", str63, "1\tSCRIPT 1 1\n");
    }

    @Test
    public void test11648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11648");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        java.lang.String str52 = scriptNode39.debugPrint();
        scriptNode39.setPosition(8);
        int int55 = scriptNode39.getParamCount();
        scriptNode39.setPosition((int) (byte) 10);
        scriptNode17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode17.removeProp(10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str52, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test11649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11649");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType3, "{\n}\n");
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment5, (-53));
        com.google.javascript.rhino.head.ast.Scope scope8 = comment5.getEnclosingScope();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        comment5.setCommentType(commentType9);
        org.junit.Assert.assertNull(scope8);
    }

    @Test
    public void test11650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11650");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node11 = scriptNode0.getNext();
        scriptNode0.setSourceName("-1\t  SCRIPT -53 1\n");
        boolean boolean14 = scriptNode0.hasSideEffects();
        java.lang.String str15 = scriptNode0.getNextTempName();
        scriptNode0.setPosition(727575172);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "$0" + "'", str15, "$0");
    }

    @Test
    public void test11651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11651");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode19.getSymbols();
        scriptNode13.setSymbols(symbolList26);
        int int28 = scriptNode13.getRegexpCount();
        int int29 = scriptNode13.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        int int41 = scriptNode30.getIntProp(6, 2);
        int int42 = scriptNode30.getRegexpCount();
        scriptNode30.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode30.setLineno((int) '#');
        int int47 = scriptNode30.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = scriptNode30.getEnclosingFunction();
        int int49 = scriptNode30.getFunctionCount();
        scriptNode13.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        scriptNode30.removeProp(1278533831);
        boolean boolean53 = scriptNode30.hasConsistentReturnUsage();
        int int54 = scriptNode30.getEncodedSourceStart();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str18, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 35 + "'", int47 == 35);
        org.junit.Assert.assertNull(functionNode48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
    }

    @Test
    public void test11652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11652");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol5 = scope3.getSymbol("$0");
        int int6 = scope3.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        java.lang.String str25 = scriptNode20.debugPrint();
        scope3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        int int29 = scriptNode20.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        int int41 = scriptNode30.getIntProp(6, 2);
        int int42 = scriptNode30.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        int int54 = scriptNode43.getIntProp(6, 2);
        int int55 = scriptNode43.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        int int58 = scriptNode56.getBaseLineno();
        java.lang.String str59 = scriptNode56.getNextTempName();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        int int61 = scriptNode56.getType();
        java.lang.String str62 = scriptNode56.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = scriptNode56.getSymbols();
        java.lang.String str64 = scriptNode30.toStringTree(scriptNode56);
        com.google.javascript.rhino.head.Node node65 = scriptNode30.getNext();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode30, 97);
        scriptNode30.setPosition((int) (short) 100);
        com.google.javascript.rhino.head.Node node70 = scriptNode30.getLastChild();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor71 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode30.visit(nodeVisitor71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 129 + "'", int6 == 129);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str25, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 136 + "'", int61 == 136);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str62, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNull(node70);
    }

    @Test
    public void test11653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11653");
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newString((int) '4', "129");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        int int38 = scriptNode27.getIntProp(6, 2);
        int int39 = scriptNode27.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode53.getSymbols();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) scriptNode53);
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode63.getSymbols();
        scriptNode27.setSymbols(symbolList70);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode27.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList73 = scriptNode27.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList74 = scriptNode27.getChildScopes();
        java.lang.String str76 = scriptNode27.toSource((-53));
        int int77 = scriptNode27.getRegexpCount();
        int int80 = scriptNode27.getIntProp((-243114478), (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = scriptNode27.getTop();
        int int82 = scriptNode81.getParamCount();
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node((int) (short) -1, node3, (com.google.javascript.rhino.head.Node) scriptNode81, 22);
        com.google.javascript.rhino.head.Token.CommentType commentType87 = null;
        com.google.javascript.rhino.head.ast.Comment comment89 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType87, "{\n}\n");
        java.lang.String str90 = comment89.getValue();
        comment89.setLength(17);
        scriptNode81.setJsDocNode(comment89);
        java.lang.String str94 = scriptNode81.getEncodedSource();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertNotNull(functionNodeList73);
        org.junit.Assert.assertNull(scopeList74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{\n}\n" + "'", str76, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(scriptNode81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "{\n}\n" + "'", str90, "{\n}\n");
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test11654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11654");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode13.getType();
        int int19 = scriptNode13.getParamCount();
        com.google.javascript.rhino.head.Node node21 = scriptNode13.setType((int) '#');
        int int22 = scriptNode13.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol27 = scope25.getSymbol("$0");
        int int28 = scope25.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.setScope(scope25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(symbol27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test11655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11655");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        scriptNode20.clearParentScope();
        int int28 = scriptNode20.getFunctionCount();
        java.lang.String str29 = scriptNode20.toString();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scriptNode20.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        java.lang.String str41 = comment36.toStringTree(scriptNode37);
        int int42 = comment36.getType();
        java.lang.String str43 = comment36.getValue();
        java.lang.Object obj45 = comment36.getProp(220850805);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) comment36);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = scriptNode20.getIndexForNameNode((com.google.javascript.rhino.head.Node) comment36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Comment cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "136" + "'", str29, "136");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 161 + "'", int42 == 161);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Scope" + "'", str43, "Scope");
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test11656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11656");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.Node node52 = comment49.getFirstChild();
        scriptNode17.setJsDocNode(comment49);
        scriptNode17.setEncodedSourceBounds((int) ' ', 0);
        java.lang.Object obj58 = scriptNode17.getProp(22);
        scriptNode17.setLength(0);
        boolean boolean61 = scriptNode17.hasChildren();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test11657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11657");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        java.lang.String str27 = scriptNode10.getSourceName();
        java.lang.String str29 = scriptNode10.makeIndent(16);
        int int30 = scriptNode10.depth();
        scriptNode10.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node34 = scriptNode10.setType((-992272926));
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                " + "'", str29, "                                ");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(node34);
    }

    @Test
    public void test11658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11658");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceStart((int) ' ');
        scriptNode16.clearParentScope();
        int int25 = scriptNode16.depth();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test11659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11659");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("-1\tGT -1 1\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test11660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11660");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(21, 35, commentType2, "-1\t  SCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment4.visit(nodeVisitor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11661");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((-53), 97);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator4 = node3.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj7 = scriptNode6.getCompilerData();
        scriptNode6.setLineno(53);
        int int10 = scriptNode6.getType();
        com.google.javascript.rhino.head.Node node11 = new com.google.javascript.rhino.head.Node((int) '4', node3, (com.google.javascript.rhino.head.Node) scriptNode6);
        java.lang.String str12 = scriptNode6.shortName();
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 136 + "'", int10 == 136);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ScriptNode" + "'", str12, "ScriptNode");
    }

    @Test
    public void test11662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11662");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = null;
        scope3.setTop(scriptNode7);
        scriptNode1.target = scope3;
        java.lang.String str11 = scriptNode1.toSource((int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        java.lang.String str23 = comment18.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.Node node25 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode19, node25);
        scriptNode19.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = scriptNode30.getTop();
        scriptNode39.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int44 = scriptNode43.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        scriptNode45.setEncodedSourceEnd(18);
        scriptNode43.target = scriptNode45;
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode78.getSymbols();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope66, (com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.Node node88 = scriptNode52.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.lang.String str91 = scriptNode1.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = scriptNode1.getTop();
        com.google.javascript.rhino.head.Node node93 = new com.google.javascript.rhino.head.Node((-1), (com.google.javascript.rhino.head.Node) scriptNode92);
        com.google.javascript.rhino.head.Node node94 = node93.getLastChild();
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str11, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "136" + "'", str91, "136");
        org.junit.Assert.assertNotNull(scriptNode92);
        org.junit.Assert.assertNotNull(node94);
    }

    @Test
    public void test11663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11663");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.Node node55 = scriptNode26.target;
        scriptNode26.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope61 = scope59.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node62 = scope59.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scope59.setJsDocNode(comment68);
        com.google.javascript.rhino.head.Node node71 = scope59.target;
        java.lang.String str72 = scope59.debugPrint();
        scope59.clearParentScope();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(8, 20);
        scope59.addChildToFront(node76);
        scriptNode26.replaceWith(scope59);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 0);
        boolean boolean81 = scope80.hasConsistentReturnUsage();
        scope59.setParentScope(scope80);
        java.lang.String str83 = scope80.getJsDoc();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(scope61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "0\tBLOCK 0 1\n" + "'", str72, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test11664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11664");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        int int16 = scriptNode0.getRegexpCount();
        java.lang.String str17 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str23 = scriptNode18.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator24 = scriptNode18.spliterator();
        int int25 = scriptNode18.getEndLineno();
        java.lang.String str26 = scriptNode0.toStringTree(scriptNode18);
        scriptNode18.setRelative(26);
        scriptNode18.setPosition((int) '#');
        scriptNode18.clearParentScope();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                                                                      " + "'", str23, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test11665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11665");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        scriptNode20.flattenSymbolTable(true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test11666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11666");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode17.setEncodedSourceEnd(11);
        java.lang.String str25 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str29 = scriptNode17.getEncodedSource();
        com.google.javascript.rhino.head.Node node30 = scriptNode17.target;
        int int31 = scriptNode17.getEndLineno();
        java.lang.Object obj32 = scriptNode17.getCompilerData();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = scriptNode17.getRegexpFlags((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str29, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test11667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11667");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1278533831);
    }

    @Test
    public void test11668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11668");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        java.lang.String str43 = scriptNode24.toString();
        int int44 = scriptNode24.getEncodedSourceStart();
        java.lang.String str46 = scriptNode24.toSource(25);
        scriptNode24.setEncodedSourceEnd((-25));
        int int49 = scriptNode24.getEncodedSourceEnd();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "136" + "'", str43, "136");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                  {\n                                                  }\n" + "'", str46, "                                                  {\n                                                  }\n");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-25) + "'", int49 == (-25));
    }

    @Test
    public void test11669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11669");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str40 = scriptNode27.getSourceName();
        scriptNode27.setSourceName("{\n{\n}\n}\n");
        scriptNode27.setEncodedSourceEnd(136);
        int int45 = scriptNode27.getLength();
        scriptNode27.removeProp(734000496);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test11670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11670");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        int int43 = scriptNode24.getEndLineno();
        scriptNode24.setPosition(15);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = scriptNode24.spliterator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator46);
    }

    @Test
    public void test11671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11671");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.setEncodedSourceEnd((int) (byte) 0);
        java.lang.String str30 = scriptNode20.shortName();
        java.lang.Object obj31 = scriptNode20.getCompilerData();
        java.lang.String str32 = scriptNode20.getSourceName();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ScriptNode" + "'", str30, "ScriptNode");
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test11672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11672");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope2.setPosition(100);
        com.google.javascript.rhino.head.Node node5 = scope2.getLastSibling();
        node5.removeChildren();
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(12, node5);
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node12 = scope9.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scope9.setJsDocNode(comment18);
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        comment18.setCommentType(commentType21);
        java.lang.String str23 = comment18.getValue();
        java.lang.String str24 = comment18.getJsDoc();
        node7.setJsDocNode(comment18);
        java.lang.String str26 = node7.getJsDoc();
        com.google.javascript.rhino.head.Node node27 = node7.getLastSibling();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Scope" + "'", str23, "Scope");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Scope" + "'", str26, "Scope");
        org.junit.Assert.assertNotNull(node27);
    }

    @Test
    public void test11673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11673");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        java.lang.String str3 = scriptNode0.shortName();
        boolean boolean4 = scriptNode0.hasChildren();
        java.lang.String str5 = scriptNode0.debugPrint();
        java.lang.String str6 = scriptNode0.shortName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ScriptNode" + "'", str3, "ScriptNode");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ScriptNode" + "'", str6, "ScriptNode");
    }

    @Test
    public void test11674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11674");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        scriptNode37.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str51 = scriptNode37.makeIndent(0);
        java.lang.String str52 = scriptNode0.toStringTree(scriptNode37);
        java.lang.String str54 = scriptNode37.makeIndent(12);
        java.lang.String str55 = scriptNode37.getSourceName();
        scriptNode37.setEncodedSourceEnd(17);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode37.setDouble(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                        " + "'", str54, "                        ");
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test11675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11675");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        java.lang.String str7 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = scriptNode9.getTop();
        java.lang.String str19 = scriptNode18.shortName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode18.getFunctions();
        scriptNode18.setLength(1784707759);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str26 = scope24.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str39 = scriptNode30.getSourceName();
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode30, 26);
        scriptNode28.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode30);
        java.lang.String str43 = scriptNode28.getNextTempName();
        scope24.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        boolean boolean45 = scriptNode28.hasChildren();
        scriptNode28.setLineno(16);
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(1278533831, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str49 = scriptNode0.toStringTree(scriptNode28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ScriptNode" + "'", str19, "ScriptNode");
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test11676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11676");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        java.lang.String str43 = scriptNode2.toSource();
        java.lang.String str44 = scriptNode2.debugPrint();
        int int45 = scriptNode2.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj48 = scriptNode47.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = scriptNode47.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode2.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\t  ASSIGN_DIV -53 1\n" + "'", str44, "-1\t  ASSIGN_DIV -53 1\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(symbolList52);
    }

    @Test
    public void test11677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11677");
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int5 = scope4.getLength();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope10 = scope8.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node11 = scope8.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scope8.setJsDocNode(comment17);
        java.lang.String str21 = comment17.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment17);
        java.lang.Object obj24 = comment17.getProp((int) (short) -1);
        java.lang.String str26 = comment17.makeIndent((int) (short) -1);
        scope4.setJsDocNode(comment17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode29.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope34.setPosition(100);
        com.google.javascript.rhino.head.Node node37 = scope34.getLastSibling();
        node37.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator39 = node37.spliterator();
        scriptNode29.setCompilerData((java.lang.Object) node37);
        java.lang.String str41 = scriptNode29.getSourceName();
        int int42 = scriptNode29.getEncodedSourceStart();
        scriptNode29.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getEncodedSource();
        scriptNode51.setEncodedSourceEnd(18);
        java.lang.String str55 = comment50.toStringTree(scriptNode51);
        com.google.javascript.rhino.head.Node node57 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode51, node57);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope4, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode51);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(19, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.Node node61 = scriptNode29.getNext();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList62 = scriptNode29.getStatements();
        com.google.javascript.rhino.head.Node node63 = scriptNode29.target;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                    Scope" + "'", str21, "                    Scope");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(nodeSpliterator39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(astNodeList62);
        org.junit.Assert.assertNull(node63);
    }

    @Test
    public void test11678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11678");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int22 = scope21.depth();
        scriptNode1.replaceWith(scope21);
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        java.lang.String str29 = comment28.getValue();
        scriptNode1.setJsDocNode(comment28);
        java.lang.String str32 = comment28.toSource((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol37 = scope35.getSymbol("$0");
        int int38 = scope35.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        int int54 = scriptNode52.getBaseLineno();
        java.lang.String str55 = scriptNode52.getNextTempName();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.lang.String str57 = scriptNode52.debugPrint();
        scope35.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode52.setSourceName("41");
        boolean boolean61 = scriptNode52.hasSideEffects();
        int int62 = scriptNode52.getParamCount();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) comment28, (com.google.javascript.rhino.head.Node) scriptNode52);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope64 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode52);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Scope" + "'", str29, "Scope");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    Scope" + "'", str32, "                    Scope");
        org.junit.Assert.assertNull(symbol37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 129 + "'", int38 == 129);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str57, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test11679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11679");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = scriptNode31.getAstRoot();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode31.getSymbols();
        int int47 = scriptNode31.getLength();
        int int48 = scriptNode31.getPosition();
        int int49 = scriptNode31.getLineno();
        com.google.javascript.rhino.head.ast.AstNode astNode50 = scriptNode31.getParent();
        // The following exception was thrown during execution in test generation
        try {
            int int51 = scriptNode31.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(astRoot45);
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(astNode50);
    }

    @Test
    public void test11680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11680");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.Node node23 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        scriptNode37.setEncodedSource("                        ");
        int int44 = scriptNode37.getLineno();
        scriptNode0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        int int46 = scriptNode0.getLineno();
        int int47 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSourceStart((-613442063));
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList50 = scriptNode0.getStatements();
        java.lang.String str51 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        int int65 = scriptNode54.getIntProp(6, 2);
        int int66 = scriptNode54.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope68 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope70 = scope68.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node71 = scope68.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        scope68.setJsDocNode(comment77);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType83, "Scope");
        scriptNode80.setParent((com.google.javascript.rhino.head.ast.AstNode) comment85);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList87 = scriptNode80.getSymbols();
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode54, (com.google.javascript.rhino.head.Node) scope68, (com.google.javascript.rhino.head.Node) scriptNode80);
        scriptNode80.setPosition((int) (byte) 0);
        scriptNode80.clearParentScope();
        int int92 = scriptNode80.getEncodedSourceStart();
        scriptNode80.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setCompilerData((java.lang.Object) scriptNode80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(astNodeList50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(scope70);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNotNull(symbolList87);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test11681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11681");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1072816741));
        scriptNode1.clearParentScope();
    }

    @Test
    public void test11682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11682");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        scriptNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        int int13 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        scope15.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        java.lang.String str37 = comment33.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = comment33.getAstRoot();
        scope15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        int int55 = scriptNode53.getBaseLineno();
        java.lang.String str56 = scriptNode53.getNextTempName();
        scriptNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scope7, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode53, 136);
        java.lang.Object obj60 = scriptNode53.getCompilerData();
        scriptNode0.target = scriptNode53;
        int int62 = scriptNode0.getParamAndVarCount();
        scriptNode0.setSourceName("{\n{\n}\n}\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                    Scope" + "'", str37, "                    Scope");
        org.junit.Assert.assertNull(astRoot38);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test11683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11683");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(69);
    }

    @Test
    public void test11684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11684");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        int int37 = scriptNode27.getAbsolutePosition();
        scriptNode27.setEncodedSourceEnd((int) '4');
        scriptNode27.setEncodedSource("13");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        java.lang.String str52 = scope46.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = scope46.getSymbolTable();
        boolean boolean54 = scope46.hasChildren();
        com.google.javascript.rhino.head.Node node55 = scope46.getNext();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope59 = scope57.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node60 = scope57.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scope57.setJsDocNode(comment66);
        java.lang.String str70 = comment66.toSource((int) (short) 10);
        scope46.setJsDocNode(comment66);
        scriptNode43.replaceWith(scope46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode27, (com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                    Scope" + "'", str70, "                    Scope");
    }

    @Test
    public void test11685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11685");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.clearParentScope();
        scriptNode28.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode39.toSource(18);
        java.lang.Object obj42 = scriptNode39.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        int int55 = scriptNode44.getIntProp(6, 2);
        int int56 = scriptNode44.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scope58.setJsDocNode(comment67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode70.getSymbols();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope58, (com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode70.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node81 = scriptNode70.target;
        scriptNode39.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode70);
        boolean boolean83 = scriptNode70.hasSideEffects();
        java.lang.String str84 = scriptNode30.toStringTree(scriptNode70);
        scriptNode70.setRelative(16);
        boolean boolean87 = scriptNode70.hasConsistentReturnUsage();
        scriptNode70.setBounds(1246415336, 934127539);
        boolean boolean91 = scriptNode70.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                    {\n                                    }\n" + "'", str41, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test11686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11686");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope3.setPosition(100);
        com.google.javascript.rhino.head.Node node6 = scope3.getLastSibling();
        node6.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = node6.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = null;
        scriptNode25.setSymbols(symbolList31);
        node6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str34 = scriptNode1.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        int int50 = scriptNode48.getBaseLineno();
        java.lang.String str51 = scriptNode48.getNextTempName();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode25, (com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        scope55.setPosition(2);
        java.lang.String str61 = scope55.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap62 = scope55.getSymbolTable();
        boolean boolean63 = scope55.hasChildren();
        com.google.javascript.rhino.head.Node node64 = scope55.getNext();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        java.lang.String str79 = comment75.toSource((int) (short) 10);
        scope55.setJsDocNode(comment75);
        scriptNode25.addChildToBack((com.google.javascript.rhino.head.Node) comment75);
        java.lang.String str82 = comment75.debugPrint();
        comment75.setBounds(21, 97);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator86 = comment75.spliterator();
        java.lang.String str88 = comment75.toSource(25);
        int int89 = comment75.getLineno();
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "                    Scope" + "'", str79, "                    Scope");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str82, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNotNull(nodeSpliterator86);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "                                                  Scope" + "'", str88, "                                                  Scope");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test11687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11687");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scriptNode0.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        int int26 = scriptNode23.getParamCount();
        astNode12.putProp((-769830162), (java.lang.Object) scriptNode23);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator28 = scriptNode23.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node29 = nodeIterator28.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(astNode12);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test11688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11688");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope1.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        int int47 = scriptNode45.getBaseLineno();
        java.lang.String str48 = scriptNode45.getNextTempName();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        int int50 = scriptNode32.getEndLineno();
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope scope53 = scriptNode32.getDefiningScope("            ");
        com.google.javascript.rhino.head.ast.Scope scope54 = scriptNode32.getEnclosingScope();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList55 = scriptNode32.getFunctions();
        scriptNode32.removeChildren();
        boolean boolean57 = scriptNode32.hasChildren();
        com.google.javascript.rhino.head.Node node58 = scriptNode32.getLastChild();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertNotNull(functionNodeList55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(node58);
    }

    @Test
    public void test11689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11689");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        scriptNode1.setBaseLineno((int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode4.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        int int26 = scriptNode15.getIntProp(6, 2);
        int int27 = scriptNode15.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scope29.setJsDocNode(comment38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList48 = scriptNode41.getSymbols();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scope29, (com.google.javascript.rhino.head.Node) scriptNode41);
        scriptNode41.setPosition((int) (byte) 0);
        scriptNode41.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str55 = scriptNode41.makeIndent(0);
        java.lang.String str56 = scriptNode4.toStringTree(scriptNode41);
        java.lang.String str58 = scriptNode41.makeIndent(12);
        java.lang.String str59 = scriptNode41.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode60.toSource(18);
        int int63 = scriptNode60.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment64 = scriptNode60.getJsDocNode();
        int int65 = scriptNode60.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode60.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol71 = scope69.getSymbol("$0");
        boolean boolean72 = scope69.hasSideEffects();
        boolean boolean73 = scope69.hasChildren();
        scriptNode60.addChildToFront((com.google.javascript.rhino.head.Node) scope69);
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        scriptNode1.setCompilerData((java.lang.Object) scriptNode41);
        java.lang.String str77 = scriptNode1.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.labelId(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNotNull(symbolList48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                        " + "'", str58, "                        ");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                                    {\n                                    }\n" + "'", str62, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(comment64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertNull(symbol71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test11690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11690");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scriptNode0.new NodeIterator();
        int int13 = scriptNode0.getIntProp(19, (int) '4');
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = scriptNode0.getStatements();
        scriptNode0.setEndLineno(180367011);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(astNodeList14);
    }

    @Test
    public void test11691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11691");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol56 = scope54.getSymbol("$0");
        int int57 = scope54.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        int int69 = scriptNode58.getIntProp(6, 2);
        int int70 = scriptNode58.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getEncodedSource();
        int int73 = scriptNode71.getBaseLineno();
        java.lang.String str74 = scriptNode71.getNextTempName();
        scriptNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.lang.String str76 = scriptNode71.debugPrint();
        scope54.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode71);
        scriptNode38.setTop(scriptNode71);
        int int79 = scriptNode38.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = scriptNode38.getTop();
        int int81 = scriptNode80.depth();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(symbol56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 129 + "'", int57 == 129);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "$0" + "'", str74, "$0");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str76, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(scriptNode80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
    }

    @Test
    public void test11692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11692");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        java.lang.String str62 = scriptNode61.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = scriptNode63.getTop();
        java.lang.String str73 = scriptNode72.shortName();
        scriptNode61.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        java.lang.String str75 = scope1.toStringTree(scriptNode61);
        java.lang.Object obj76 = scriptNode61.getCompilerData();
        java.lang.String str77 = scriptNode61.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = scriptNode61.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = scriptNode61.getFunctionNode(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ScriptNode" + "'", str62, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ScriptNode" + "'", str73, "ScriptNode");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(symbolList78);
    }

    @Test
    public void test11693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11693");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        int int14 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode0.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = scriptNode0.getTop();
        com.google.javascript.rhino.head.Node node19 = com.google.javascript.rhino.head.Node.newString((int) (byte) 1, "                                                                                                                                                                                                        ");
        scriptNode0.setCompilerData((java.lang.Object) node19);
        java.lang.Object obj22 = scriptNode0.getProp(371991955);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump23 = scriptNode0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertNotNull(scriptNode16);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test11694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11694");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        scriptNode51.setEndLineno(18);
        scriptNode38.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int67 = scriptNode0.getEncodedSourceEnd();
        scriptNode0.putIntProp((-51), (-1));
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator71 = scriptNode0.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node72 = scriptNode0.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator71);
    }

    @Test
    public void test11695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11695");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node38 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int39 = scriptNode27.getIndexForNameNode(node38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
    }

    @Test
    public void test11696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11696");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        scope3.setPosition(2);
        scope3.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node11 = scope3.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode12.getEncodedSource();
        scriptNode12.setEncodedSourceEnd(18);
        java.lang.String str17 = scriptNode12.makeIndent((int) '#');
        scope3.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode12);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        scope20.setPosition(2);
        scope20.putIntProp(17, 25);
        scope20.setLength((int) ' ');
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scope20);
        java.lang.String str32 = scriptNode12.getEncodedSource();
        java.lang.String str33 = scriptNode12.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope(7, 8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str46 = scriptNode37.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor47 = scriptNode37.iterator();
        java.lang.String str48 = scriptNode37.debugPrint();
        java.lang.String str49 = scriptNode37.getSourceName();
        boolean boolean50 = scriptNode37.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = scriptNode37.getTop();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(1278533831, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) scriptNode51, 4);
        com.google.javascript.rhino.head.Node node55 = scriptNode51.setType((-388664030));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scriptNode56.setEncodedSourceStart((int) (byte) 100);
        int int67 = scriptNode56.getIntProp(6, 2);
        java.lang.String str69 = scriptNode56.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((-399411339), node55, (com.google.javascript.rhino.head.Node) scriptNode56, 917696443);
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                                                      " + "'", str17, "                                                                      ");
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(nodeItor47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str48, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(scriptNode51);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "                    {\n                    }\n" + "'", str69, "                    {\n                    }\n");
    }

    @Test
    public void test11697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11697");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.Object obj24 = scriptNode21.getCompilerData();
        scriptNode21.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = null;
        scriptNode21.setSymbolTable(strMap27);
        java.lang.String str30 = scriptNode21.toSource((int) 'a');
        scriptNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        int int32 = scriptNode21.getEndLineno();
        boolean boolean33 = scriptNode21.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope35 = scriptNode21.getDefiningScope("          {\n          }\n");
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str30, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(scope35);
    }

    @Test
    public void test11698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11698");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        java.lang.String str23 = scope17.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = scope17.getSymbolTable();
        boolean boolean25 = scope17.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scope17.target = scriptNode26;
        com.google.javascript.rhino.head.Node node37 = scriptNode26.target;
        int int38 = scriptNode26.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        int int54 = scriptNode52.getBaseLineno();
        java.lang.String str55 = scriptNode52.getNextTempName();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.lang.String str57 = scriptNode52.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str63 = scope61.toSource(12);
        scope61.setRelative(1);
        scriptNode52.putProp(17, (java.lang.Object) 1);
        scriptNode26.target = scriptNode52;
        int int68 = scriptNode26.getEncodedSourceEnd();
        java.lang.Object obj69 = scriptNode26.getCompilerData();
        java.lang.String str70 = scriptNode26.shortName();
        scriptNode0.setTop(scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope73 = scriptNode0.getDefiningScope("                                                                                                                                                                                                                                                                                                                                  Scope");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str57, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                        {\n                        }\n" + "'", str63, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ScriptNode" + "'", str70, "ScriptNode");
        org.junit.Assert.assertNull(scope73);
    }

    @Test
    public void test11699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11699");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setEncodedSourceStart(25);
        boolean boolean16 = scriptNode6.hasSideEffects();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11700");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        scope18.putIntProp(17, 25);
        scope18.setLength((int) ' ');
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.Object obj33 = scriptNode30.getCompilerData();
        scriptNode30.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode30.getSymbols();
        scope18.setTop(scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode39.toSource(18);
        scope18.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        // The following exception was thrown during execution in test generation
        try {
            scope18.labelId((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(symbolList37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                    {\n                                    }\n" + "'", str41, "                                    {\n                                    }\n");
    }

    @Test
    public void test11701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11701");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-1850081477));
    }

    @Test
    public void test11702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11702");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.Node node60 = scriptNode25.target;
        java.lang.String str61 = scriptNode25.toSource();
        com.google.javascript.rhino.head.ast.Scope scope63 = scriptNode25.getDefiningScope("!=");
        scriptNode25.setEncodedSource("69\t  SCRIPT 17 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = scriptNode66.getTop();
        int int76 = scriptNode25.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        java.lang.String str77 = scriptNode25.getSourceName();
        int int78 = scriptNode25.depth();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test11703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11703");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 401277611);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test11704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11704");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.Node node13 = scope1.target;
        java.lang.String str14 = scope1.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        int int37 = scriptNode31.getLength();
        int int38 = scriptNode31.getEncodedSourceStart();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        int int42 = scriptNode31.getIntProp((int) (byte) -1, 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        java.lang.String str48 = scriptNode43.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        scriptNode43.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = scriptNode60.getTop();
        scriptNode69.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int74 = scriptNode73.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode75.getEncodedSource();
        scriptNode75.setEncodedSourceEnd(18);
        scriptNode73.target = scriptNode75;
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode69, (com.google.javascript.rhino.head.Node) scriptNode75);
        int int81 = scriptNode75.getLength();
        java.lang.String str82 = scriptNode75.getJsDoc();
        com.google.javascript.rhino.head.ast.Symbol symbol84 = scriptNode75.getSymbol("  ");
        scriptNode43.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode75);
        scriptNode43.removeChildren();
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        scriptNode31.setCompilerData((java.lang.Object) scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope90 = scriptNode31.getParentScope();
        java.lang.String str92 = scriptNode31.toSource((-1072816741));
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0\tBLOCK 0 1\n" + "'", str14, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "                                                                      " + "'", str48, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(symbol84);
        org.junit.Assert.assertNotNull(scope90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "{\n}\n" + "'", str92, "{\n}\n");
    }

    @Test
    public void test11705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11705");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        java.lang.String str59 = scriptNode41.shortName();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.Node node62 = node60.setType(412649354);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ScriptNode" + "'", str59, "ScriptNode");
        org.junit.Assert.assertNotNull(node62);
    }

    @Test
    public void test11706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11706");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-388664030), 220850805);
    }

    @Test
    public void test11707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11707");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode24.getTop();
        scriptNode33.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int38 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        scriptNode39.setEncodedSourceEnd(18);
        scriptNode37.target = scriptNode39;
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str57 = scriptNode48.getSourceName();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode48, 26);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node44, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Node node61 = scriptNode48.getLastSibling();
        boolean boolean62 = scriptNode48.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode48.putProp((int) (byte) 0, (java.lang.Object) int75);
        com.google.javascript.rhino.head.Node node77 = scriptNode48.target;
        scriptNode48.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node80 = scriptNode48.getLastSibling();
        scriptNode10.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        com.google.javascript.rhino.head.ast.Comment comment86 = new com.google.javascript.rhino.head.ast.Comment(17, 3, commentType84, "                                  Scope");
        scriptNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) comment86);
        scriptNode48.setEncodedSource("");
        int int90 = scriptNode48.getEncodedSourceEnd();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test11708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11708");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-71056744), 1320165685);
    }

    @Test
    public void test11709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11709");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        scriptNode0.setLineno(1);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str48 = scriptNode39.getSourceName();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode39, 26);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node35, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.Scope scope53 = scriptNode39.getDefiningScope("");
        scriptNode39.setSourceName("                                    ");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        java.lang.String str58 = scriptNode0.toSource((-674152164));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{\n}\n" + "'", str58, "{\n}\n");
    }

    @Test
    public void test11710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11710");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.Node node15 = scriptNode4.setType((int) (short) 10);
        int int16 = scriptNode4.getFunctionCount();
        scriptNode4.setLength((-2));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        int int20 = scriptNode19.getLength();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test11711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11711");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode42.setEndLineno(18);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode42, (int) (byte) -1);
        scriptNode16.target = scriptNode42;
        int int59 = scriptNode16.getLineno();
        int int60 = scriptNode16.getLineno();
        java.lang.String str61 = scriptNode16.shortName();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ScriptNode" + "'", str61, "ScriptNode");
    }

    @Test
    public void test11712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11712");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = scriptNode0.iterator();
        java.lang.String str11 = scriptNode0.debugPrint();
        java.lang.String str12 = scriptNode0.getSourceName();
        boolean boolean13 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode0.getSymbol("                                    {\n                                    }\n");
        boolean boolean17 = scriptNode0.hasSideEffects();
        scriptNode0.flattenSymbolTable(true);
        scriptNode0.setEncodedSourceStart((-54843021));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str11, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test11713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11713");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        scriptNode20.putIntProp(12, (int) (byte) 0);
        scriptNode20.setRelative(100);
        int int32 = scriptNode20.getEncodedSourceEnd();
        scriptNode20.setRelative((int) (short) 1);
        int int35 = scriptNode20.getAbsolutePosition();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-102) + "'", int35 == (-102));
    }

    @Test
    public void test11714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11714");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(197839691);
    }

    @Test
    public void test11715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11715");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode12.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope17.setPosition(100);
        com.google.javascript.rhino.head.Node node20 = scope17.getLastSibling();
        node20.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = node20.spliterator();
        scriptNode12.setCompilerData((java.lang.Object) node20);
        java.lang.String str25 = scriptNode12.toSource(21);
        int int26 = scriptNode12.getEncodedSourceStart();
        boolean boolean27 = scriptNode12.hasChildren();
        int int28 = scriptNode12.getBaseLineno();
        scriptNode5.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode12);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                                          {\n                                          }\n" + "'", str25, "                                          {\n                                          }\n");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test11716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11716");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        scriptNode0.clearParentScope();
        java.lang.String str61 = scriptNode0.getJsDoc();
        int int64 = scriptNode0.getIntProp(1, 24);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDouble((double) (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 24 + "'", int64 == 24);
    }

    @Test
    public void test11717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11717");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str13 = scriptNode1.getSourceName();
        int int14 = scriptNode1.getEncodedSourceStart();
        int int15 = scriptNode1.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode16.getIntProp(6, 2);
        int int28 = scriptNode16.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        int int40 = scriptNode29.getIntProp(6, 2);
        int int41 = scriptNode29.getParamCount();
        scriptNode16.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode16.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.clearParentScope();
        scriptNode44.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode46);
        java.lang.String str55 = scriptNode46.toSource();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode46.getSymbols();
        scriptNode1.setSymbols(symbolList56);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 136 + "'", int15 == 136);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n}\n" + "'", str55, "{\n}\n");
        org.junit.Assert.assertNotNull(symbolList56);
    }

    @Test
    public void test11718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11718");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(1246415336);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 1246415336");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11719");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("                                                    {\n                                                    }\n");
        java.lang.String str4 = scriptNode1.debugPrint();
        java.lang.String str5 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.getNext();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope10.getParentScope();
        scriptNode6.addChildScope(scope10);
        int int16 = scriptNode6.getBaseLineno();
        java.lang.String str17 = scriptNode1.toStringTree(scriptNode6);
        scriptNode6.setPosition((-389829193));
        com.google.javascript.rhino.head.ast.Scope scope21 = scriptNode6.getDefiningScope("6\tSCRIPT 6 1\n");
        scriptNode6.setEncodedSourceBounds((int) (short) 0, 1);
        java.lang.Object obj26 = scriptNode6.getProp((-674152164));
        java.lang.String str27 = scriptNode6.toSource();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0\tSCRIPT 0 1\n" + "'", str4, "0\tSCRIPT 0 1\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ScriptNode" + "'", str5, "ScriptNode");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{\n}\n" + "'", str27, "{\n}\n");
    }

    @Test
    public void test11720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11720");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        int int14 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.Node node15 = scriptNode6.getNext();
        java.lang.Object obj16 = scriptNode6.getCompilerData();
        java.lang.String str17 = scriptNode6.toString();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = scriptNode6.getSymbolTable();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "136" + "'", str17, "136");
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test11721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11721");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        int int39 = scriptNode0.getPosition();
        scriptNode0.setSourceName("                                                                      ");
        scriptNode0.setEncodedSourceEnd(19);
        java.lang.String str44 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode46.toSource(18);
        java.lang.Object obj49 = scriptNode46.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        scriptNode77.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node88 = scriptNode77.target;
        scriptNode46.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode77);
        int int90 = scriptNode77.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int93 = scriptNode92.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope95 = scriptNode92.getDefiningScope("51\t    SCRIPT 52 1\n");
        boolean boolean96 = scriptNode92.hasChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor97 = scriptNode92.iterator();
        com.google.javascript.rhino.head.Node node98 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode77, (com.google.javascript.rhino.head.Node) scriptNode92);
        scriptNode0.setTop(scriptNode92);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str44, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "                                    {\n                                    }\n" + "'", str48, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNull(node88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNull(scope95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(nodeItor97);
    }

    @Test
    public void test11722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11722");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(53, (-51), commentType2, "-1\t  ASSIGN_DIV -53 1\n");
        int int5 = comment4.getAbsolutePosition();
        java.lang.Object obj7 = comment4.getProp((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            comment4.setString("-1\t  SCRIPT -1 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Comment cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 53 + "'", int5 == 53);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test11723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11723");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str24 = node23.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(23, node23, (com.google.javascript.rhino.head.Node) scope26, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        java.lang.String str40 = scriptNode32.debugPrint();
        scriptNode32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = null;
        scope44.setSymbolTable(strMap53);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope44);
        int int56 = scriptNode32.getLineno();
        scriptNode32.setEncodedSourceStart(19);
        com.google.javascript.rhino.head.ast.Scope scope60 = scriptNode32.getDefiningScope("/");
        scriptNode32.setBaseLineno(24);
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode32.getSymbol("0\tCOMMENT 0 6\n");
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str40, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(symbol64);
    }

    @Test
    public void test11724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11724");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(440593346);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 440593346");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11725");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setPosition(2);
        java.lang.String str18 = scope12.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap19 = scope12.getSymbolTable();
        boolean boolean20 = scope12.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scope12.target = scriptNode21;
        com.google.javascript.rhino.head.Node node32 = scriptNode21.target;
        scriptNode21.setBounds((int) (byte) 1, 845940331);
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        java.lang.String str37 = scriptNode21.debugPrint();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType41, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        java.lang.String str59 = comment55.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment55);
        comment43.addChildToBack(node60);
        java.lang.String str63 = comment43.toSource((-1));
        java.lang.Object obj65 = comment43.getProp(129);
        com.google.javascript.rhino.head.Node node66 = comment43.getLastChild();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        comment43.setCommentType(commentType67);
        scriptNode21.putProp(0, (java.lang.Object) commentType67);
        int int70 = scriptNode21.getParamCount();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{\n}\n" + "'", str18, "{\n}\n");
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "53\t  SCRIPT 1 845940330\n" + "'", str37, "53\t  SCRIPT 1 845940330\n");
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "                    Scope" + "'", str59, "                    Scope");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test11726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11726");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.Node node13 = scope1.target;
        java.lang.String str14 = scope1.debugPrint();
        scope1.clearParentScope();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(8, 20);
        scope1.addChildToFront(node18);
        java.lang.Object obj21 = scope1.getProp((int) '#');
        int int22 = scope1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int33 = scriptNode24.getEncodedSourceStart();
        java.lang.String str34 = scriptNode24.getSourceName();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scriptNode24);
        scriptNode24.setEncodedSourceEnd(17);
        int int38 = scriptNode24.getEndLineno();
        scriptNode24.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        scriptNode42.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap48 = null;
        scriptNode42.setSymbolTable(strMap48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = scriptNode42.getTop();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, 14);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) scriptNode50, node53, 15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        int int58 = scriptNode56.getBaseLineno();
        java.lang.Object obj59 = scriptNode56.getCompilerData();
        scriptNode56.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap62 = null;
        scriptNode56.setSymbolTable(strMap62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = scriptNode56.getTop();
        node53.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode56);
        com.google.javascript.rhino.head.Node node66 = scriptNode56.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            scope1.replaceChild((com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode56);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0\tBLOCK 0 1\n" + "'", str14, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertNotNull(node66);
    }

    @Test
    public void test11727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11727");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        java.lang.String str29 = scriptNode20.toSource();
        scriptNode20.setEncodedSourceStart((-243114478));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{\n}\n" + "'", str29, "{\n}\n");
    }

    @Test
    public void test11728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11728");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("-1\t  SCRIPT -53 1\n");
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        java.lang.String str19 = comment15.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment15);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator21 = node20.new NodeIterator();
        com.google.javascript.rhino.head.Node node22 = nodeIterator21.next();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        java.lang.String str36 = scriptNode23.getSourceName();
        java.lang.String str37 = node22.toStringTree(scriptNode23);
        scriptNode23.setBounds((-1), 26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        int int56 = scriptNode54.getBaseLineno();
        java.lang.String str57 = scriptNode54.getNextTempName();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        java.lang.String str59 = scriptNode54.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode60.getSymbols();
        scriptNode54.setSymbols(symbolList67);
        int int69 = scriptNode54.getRegexpCount();
        int int70 = scriptNode54.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scriptNode71.setEncodedSourceStart((int) (byte) 100);
        int int82 = scriptNode71.getIntProp(6, 2);
        int int83 = scriptNode71.getRegexpCount();
        scriptNode71.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode71.setLineno((int) '#');
        int int88 = scriptNode71.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = scriptNode71.getEnclosingFunction();
        int int90 = scriptNode71.getFunctionCount();
        scriptNode54.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode71);
        scriptNode23.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode54);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode94 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor95 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                    Scope" + "'", str19, "                    Scope");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str59, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 35 + "'", int88 == 35);
        org.junit.Assert.assertNull(functionNode89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(scriptNode94);
    }

    @Test
    public void test11729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11729");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(329985155, 136);
    }

    @Test
    public void test11730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11730");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope1.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        int int47 = scriptNode45.getBaseLineno();
        java.lang.String str48 = scriptNode45.getNextTempName();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        int int50 = scriptNode32.getEndLineno();
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str66 = scriptNode65.getEncodedSource();
        int int67 = scriptNode65.getBaseLineno();
        java.lang.String str68 = scriptNode65.getNextTempName();
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode65);
        int int70 = scriptNode65.getType();
        int int71 = scriptNode65.getParamCount();
        int int72 = scriptNode65.getLength();
        int int73 = scriptNode65.getFunctionCount();
        scriptNode32.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode65);
        java.lang.String str75 = scriptNode65.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = scriptNode65.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 136 + "'", int70 == 136);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str75, "51\t    SCRIPT 52 1\n");
    }

    @Test
    public void test11731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11731");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        comment10.setPosition(0);
        com.google.javascript.rhino.head.Token.CommentType commentType15 = comment10.getCommentType();
        java.lang.String str17 = comment10.toSource(9);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = comment10.getCommentType();
        comment10.setRelative(1278533831);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator21 = comment10.new NodeIterator();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(commentType15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                  Scope" + "'", str17, "                  Scope");
        org.junit.Assert.assertNull(commentType18);
    }

    @Test
    public void test11732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11732");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 1);
        scriptNode1.clearParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        org.junit.Assert.assertNull(scopeList3);
    }

    @Test
    public void test11733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11733");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode42.setEndLineno(18);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode42, (int) (byte) -1);
        scriptNode16.target = scriptNode42;
        scriptNode42.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = scriptNode42.getAstRoot();
        java.lang.String str61 = scriptNode42.toSource();
        scriptNode42.setBounds((int) (short) 10, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.AstNode astNode65 = null;
        scriptNode42.setParent(astNode65);
        scriptNode42.setLineno(0);
        int int69 = scriptNode42.getLength();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode42.setDouble((double) (-613442063));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(astRoot60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-10) + "'", int69 == (-10));
    }

    @Test
    public void test11734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11734");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int3 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode2.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode2.setSourceName("");
        int int8 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(22, (com.google.javascript.rhino.head.Node) scriptNode2);
        com.google.javascript.rhino.head.Node node10 = scriptNode2.getNext();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test11735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11735");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope1.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = scope1.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        com.google.javascript.rhino.head.Node node8 = scriptNode6.getLastSibling();
        scriptNode6.setEncodedSourceEnd(136);
        boolean boolean11 = scriptNode6.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode13.getIntProp(23, (int) (short) 1);
        boolean boolean17 = scriptNode13.hasSideEffects();
        int int18 = scriptNode13.depth();
        int int19 = scriptNode13.getFunctionCount();
        int int20 = scriptNode13.getEncodedSourceEnd();
        java.lang.String str22 = scriptNode13.toSource((-547629399));
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str24 = scope1.toStringTree(scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.clearParentScope();
        scriptNode25.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node36 = scriptNode25.target;
        scriptNode25.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        java.lang.String str43 = scriptNode38.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        scriptNode38.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode25, (com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap55 = scriptNode38.getSymbolTable();
        scope1.setSymbolTable(strMap55);
        scope1.setRelative((-399411339));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(scopeList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                                                                      " + "'", str43, "                                                                      ");
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test11736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11736");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        int int3 = scriptNode1.getBaseLineno();
        java.lang.Object obj4 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        java.lang.String str13 = scriptNode5.toSource(26);
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        scriptNode5.clearParentScope();
        int int16 = scriptNode5.getPosition();
        java.lang.String str17 = scriptNode5.toSource();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(1168207406, (com.google.javascript.rhino.head.Node) scriptNode5, 15);
        java.lang.String str20 = scriptNode5.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump21 = scriptNode5.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                    {\n                                                    }\n" + "'", str13, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "136" + "'", str20, "136");
    }

    @Test
    public void test11737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11737");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode3.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope30 = scope28.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node31 = scope28.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scope28.setJsDocNode(comment37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode40.getSymbols();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scope28, (com.google.javascript.rhino.head.Node) scriptNode40);
        scriptNode40.setPosition((int) (byte) 0);
        scriptNode40.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str54 = scriptNode40.makeIndent(0);
        java.lang.String str55 = scriptNode3.toStringTree(scriptNode40);
        java.lang.String str57 = scriptNode40.makeIndent(12);
        java.lang.String str58 = scriptNode40.getSourceName();
        scriptNode2.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        com.google.javascript.rhino.head.Node node61 = scriptNode2.setType((int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap62 = scriptNode2.getSymbolTable();
        int int63 = scriptNode2.getPosition();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(220850805, (com.google.javascript.rhino.head.Node) scriptNode2, 16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot66 = scriptNode2.getAstRoot();
        scriptNode2.setEncodedSource("5");
        scriptNode2.setPosition(1558149202);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "                        " + "'", str57, "                        ");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(astRoot66);
    }

    @Test
    public void test11738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11738");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        scriptNode4.clearParentScope();
        int int15 = scriptNode4.getPosition();
        boolean boolean16 = scriptNode4.hasSideEffects();
        boolean boolean17 = scriptNode4.hasChildren();
        boolean boolean18 = scriptNode4.hasSideEffects();
        int int21 = scriptNode4.getIntProp(1558149202, (-1850081477));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1850081477) + "'", int21 == (-1850081477));
    }

    @Test
    public void test11739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11739");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(4, 18);
        scope2.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            scope2.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11740");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.lang.Object obj10 = scope1.getProp(17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode11.toSource(18);
        java.lang.Object obj14 = scriptNode11.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode16.getIntProp(6, 2);
        int int28 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope32 = scope30.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node33 = scope30.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scope30.setJsDocNode(comment39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode42.getSymbols();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scope30, (com.google.javascript.rhino.head.Node) scriptNode42);
        scriptNode42.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node53 = scriptNode42.target;
        scriptNode11.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        java.lang.String str55 = scriptNode11.getEncodedSource();
        int int56 = scriptNode11.getLineno();
        scriptNode11.setEncodedSourceStart(0);
        scriptNode11.setEncodedSource("          {\n}\n");
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        scope1.setPosition(3);
        java.lang.String str64 = scope1.toString();
        com.google.javascript.rhino.head.Node node66 = scope1.setType(1034180762);
        java.lang.Object obj68 = scope1.getProp(16);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                    {\n                                    }\n" + "'", str13, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "129" + "'", str64, "129");
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test11741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11741");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        int int8 = scriptNode0.getIntProp((int) '4', 4);
        scriptNode0.setRelative(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode12.getIntProp(23, (int) (short) 1);
        boolean boolean16 = scriptNode12.hasSideEffects();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        scriptNode0.setBounds(727575172, (int) (short) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test11742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11742");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        java.lang.String str43 = scriptNode2.toSource();
        java.lang.String str44 = scriptNode2.debugPrint();
        int int45 = scriptNode2.getFunctionCount();
        scriptNode2.clearParentScope();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "-1\t  ASSIGN_DIV -53 1\n" + "'", str44, "-1\t  ASSIGN_DIV -53 1\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test11743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11743");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str30 = scriptNode0.getEncodedSource();
        scriptNode0.flattenSymbolTable(false);
        scriptNode0.setRelative(329985155);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test11744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11744");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        scriptNode20.setBaseLineno(23);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        comment35.setCommentType(commentType38);
        java.lang.String str40 = comment35.getValue();
        java.lang.String str41 = comment35.toSource();
        com.google.javascript.rhino.head.Node node42 = comment35.getNext();
        com.google.javascript.rhino.head.Node node43 = comment35.getFirstChild();
        scriptNode20.addChildrenToFront((com.google.javascript.rhino.head.Node) comment35);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        scope46.setLength((int) (byte) 1);
        java.lang.Object obj55 = scope46.getProp((int) 'a');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = scope46.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int68 = scriptNode57.getIntProp(6, 2);
        int int69 = scriptNode57.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scriptNode70.setEncodedSourceStart((int) (byte) 100);
        int int81 = scriptNode70.getIntProp(6, 2);
        int int82 = scriptNode70.getParamCount();
        scriptNode57.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode70);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList84 = scriptNode57.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList85 = scriptNode57.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment86 = scriptNode57.getJsDocNode();
        scope46.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        int int88 = scriptNode57.getEncodedSourceStart();
        scriptNode20.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Scope" + "'", str40, "Scope");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Scope" + "'", str41, "Scope");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(functionNodeList84);
        org.junit.Assert.assertNotNull(astNodeList85);
        org.junit.Assert.assertNull(comment86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
    }

    @Test
    public void test11745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11745");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setEndLineno(20);
        scriptNode1.removeProp((int) 'a');
        int int7 = scriptNode1.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test11746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11746");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode0.getTop();
        java.lang.String str62 = scriptNode61.shortName();
        int int63 = scriptNode61.getEncodedSourceEnd();
        int int64 = scriptNode61.getEndLineno();
        scriptNode61.setEncodedSource("      {\n      }\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ScriptNode" + "'", str62, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test11747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11747");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 0, 21, commentType2, "");
        comment4.setRelative(3);
        // The following exception was thrown during execution in test generation
        try {
            comment4.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11748");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        scriptNode1.setEncodedSourceEnd(18);
        java.lang.Object obj5 = scriptNode1.getCompilerData();
        scriptNode1.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = null;
        scriptNode23.setSymbols(symbolList29);
        java.lang.String str31 = scriptNode23.getJsDoc();
        java.lang.String str32 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceBounds(17, 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode23.getSymbols();
        com.google.javascript.rhino.head.Node node37 = scriptNode23.getLastSibling();
        boolean boolean38 = node37.hasChildren();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode1, node37);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode1.getParentScope();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(symbolList36);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(scope40);
    }

    @Test
    public void test11749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11749");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        node4.removeChildren();
        java.lang.String str6 = node4.getJsDoc();
        com.google.javascript.rhino.head.ast.Comment comment7 = node4.getJsDocNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int12 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        scriptNode13.setEncodedSourceEnd(18);
        scriptNode11.target = scriptNode13;
        scriptNode13.setEncodedSourceBounds((int) (byte) -1, 11);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str25 = scope23.toSource(12);
        scope23.setRelative(1);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope23);
        scope23.setLineno(19);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope23.spliterator();
        node4.putProp(1500056961, (java.lang.Object) scope23);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(comment7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                        {\n                        }\n" + "'", str25, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(nodeSpliterator31);
    }

    @Test
    public void test11750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11750");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        comment21.setCommentType(commentType24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = comment21.getAstRoot();
        scriptNode0.setJsDocNode(comment21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = scriptNode0.getParamOrVarName(19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(astRoot26);
    }

    @Test
    public void test11751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11751");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = scriptNode48.getTop();
        scriptNode57.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode61.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getEncodedSource();
        scriptNode63.setEncodedSourceEnd(18);
        scriptNode61.target = scriptNode63;
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode63.setEncodedSourceStart((int) ' ');
        scriptNode63.setEndLineno(23);
        scriptNode63.setEncodedSourceStart((int) '#');
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode2, node46, (com.google.javascript.rhino.head.Node) scriptNode63, 24);
        scriptNode2.setEncodedSource("in");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = scriptNode2.getTop();
        java.lang.Object obj81 = scriptNode2.getProp(17);
        com.google.javascript.rhino.head.Node node82 = scriptNode2.getNext();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(scriptNode79);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(node82);
    }

    @Test
    public void test11752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11752");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.lang.String str10 = scriptNode0.getSourceName();
        java.lang.String str11 = scriptNode0.getJsDoc();
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.Symbol symbol14 = scriptNode0.getSymbol("                    Scope");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(symbol14);
    }

    @Test
    public void test11753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11753");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int12 = scriptNode9.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope14.setPosition(100);
        com.google.javascript.rhino.head.Node node17 = scope14.getLastSibling();
        node17.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = node17.spliterator();
        scriptNode9.setCompilerData((java.lang.Object) node17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        scriptNode36.target = scriptNode38;
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment48);
        java.lang.String str50 = scriptNode9.toStringTree(scriptNode32);
        scope1.setTop(scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        scriptNode52.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode65);
        scriptNode65.flattenSymbolTable(false);
        scriptNode32.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode65);
        com.google.javascript.rhino.head.Node node82 = scriptNode32.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode84 = scriptNode32.getFunctionNode((-927222420));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(node82);
    }

    @Test
    public void test11754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11754");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        node21.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope25.setPosition(100);
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        node28.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = node28.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = scriptNode32.getTop();
        scriptNode41.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int46 = scriptNode45.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getEncodedSource();
        scriptNode47.setEncodedSourceEnd(18);
        scriptNode45.target = scriptNode47;
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = null;
        scriptNode47.setSymbols(symbolList53);
        node28.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope59 = scope57.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node60 = scope57.target;
        scope57.setPosition(2);
        scope57.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node65 = scope57.getFirstChild();
        node21.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope57);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = scriptNode47.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode(26);
        scriptNode69.setEncodedSourceStart((-547629399));
        com.google.javascript.rhino.head.ast.Comment comment72 = scriptNode69.getJsDocNode();
        scriptNode47.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNull(scopeList67);
        org.junit.Assert.assertNull(comment72);
    }

    @Test
    public void test11755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11755");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        java.lang.String str44 = scriptNode31.makeIndent((int) (short) 100);
        int int45 = scriptNode31.getFunctionCount();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType49, "{\n}\n");
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment51, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        comment51.setCommentType(commentType54);
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        comment51.setCommentType(commentType56);
        scriptNode31.setJsDocNode(comment51);
        java.lang.String str59 = comment51.shortName();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                                                                                                                                                                                                        " + "'", str44, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Comment" + "'", str59, "Comment");
    }

    @Test
    public void test11756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11756");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(412649354, "51\t    SCRIPT 52 19\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test11757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11757");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = scriptNode27.getStatements();
        java.lang.String str39 = scriptNode27.makeIndent((int) (byte) 100);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = scriptNode27.getSymbolTable();
        com.google.javascript.rhino.head.Node node41 = scriptNode27.getLastChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        com.google.javascript.rhino.head.Node node44 = scriptNode42.getLastSibling();
        java.lang.String str45 = scriptNode42.shortName();
        // The following exception was thrown during execution in test generation
        try {
            int int46 = scriptNode27.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                                                                                                                                                                                                        " + "'", str39, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ScriptNode" + "'", str45, "ScriptNode");
    }

    @Test
    public void test11758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11758");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        scriptNode13.setEncodedSource("                        ");
        int int20 = scriptNode13.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode22.getEncodedSourceStart();
        int int32 = scriptNode22.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope34.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node37 = scope34.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scope34.setJsDocNode(comment43);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        comment43.setCommentType(commentType46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = comment43.getAstRoot();
        scriptNode22.setJsDocNode(comment43);
        java.lang.String str51 = comment43.toSource(24);
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        comment43.setCommentType(commentType52);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(845940331, (com.google.javascript.rhino.head.Node) comment43, 53);
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getEncodedSource();
        scriptNode63.setEncodedSourceEnd(18);
        java.lang.String str67 = comment62.toStringTree(scriptNode63);
        com.google.javascript.rhino.head.Node node69 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode63, node69);
        scriptNode63.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str82 = scriptNode73.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope84 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope84.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode73, (com.google.javascript.rhino.head.Node) scope84, (int) (byte) 10);
        scriptNode63.setEndLineno(845940331);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode13.replaceChild((com.google.javascript.rhino.head.Node) comment43, (com.google.javascript.rhino.head.Node) scriptNode63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(astRoot48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                Scope" + "'", str51, "                                                Scope");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test11759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11759");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(24, (-25));
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor3 = node2.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeItor3);
    }

    @Test
    public void test11760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11760");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        scriptNode0.setSourceName("                                                                                                        Scope");
        scriptNode0.clearParentScope();
        java.lang.String str12 = scriptNode0.getEncodedSource();
        int int13 = scriptNode0.getRegexpCount();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test11761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11761");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str23 = node22.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(23, node22, (com.google.javascript.rhino.head.Node) scope25, (int) (byte) 1);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment(0, 5, commentType33, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        comment35.setPosition(16);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = comment35.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getParamCount();
        scriptNode39.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode39.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode67);
        java.lang.String str69 = scriptNode39.getEncodedSource();
        node30.addChildAfter((com.google.javascript.rhino.head.Node) comment35, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.Comment comment71 = scriptNode39.getJsDocNode();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode39.getSymbols();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(commentType38);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(comment71);
        org.junit.Assert.assertNotNull(symbolList72);
    }

    @Test
    public void test11762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11762");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode5.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope10.setPosition(100);
        com.google.javascript.rhino.head.Node node13 = scope10.getLastSibling();
        node13.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = node13.spliterator();
        scriptNode5.setCompilerData((java.lang.Object) node13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = scriptNode5.toStringTree(scriptNode28);
        java.lang.String str47 = scriptNode28.toString();
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newString(19, "                    Scope");
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, node50, 12);
        int int53 = scriptNode28.getLineno();
        scriptNode28.removeProp(13);
        int int56 = scriptNode28.depth();
        com.google.javascript.rhino.head.ast.Symbol symbol57 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.putSymbol(symbol57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test11763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11763");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope1.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        int int47 = scriptNode45.getBaseLineno();
        java.lang.String str48 = scriptNode45.getNextTempName();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        int int50 = scriptNode32.getEndLineno();
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str66 = scriptNode65.getEncodedSource();
        int int67 = scriptNode65.getBaseLineno();
        java.lang.String str68 = scriptNode65.getNextTempName();
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode65);
        int int70 = scriptNode65.getType();
        int int71 = scriptNode65.getParamCount();
        int int72 = scriptNode65.getLength();
        int int73 = scriptNode65.getFunctionCount();
        scriptNode32.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode65);
        boolean boolean75 = scriptNode65.hasSideEffects();
        scriptNode65.setBaseLineno(595467506);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int79 = scriptNode65.addFunction(functionNode78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 136 + "'", int70 == 136);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test11764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11764");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        scriptNode27.setBaseLineno(1278533831);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope45 = scope43.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node46 = scope43.target;
        scope43.setPosition(2);
        java.lang.String str49 = scope43.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = scope43.getSymbolTable();
        boolean boolean51 = scope43.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        scope43.target = scriptNode52;
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList63 = scriptNode52.getFunctions();
        int int64 = scriptNode52.getRegexpCount();
        int int65 = scriptNode52.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode52.setCompilerData((java.lang.Object) scope66);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scope66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{\n}\n" + "'", str49, "{\n}\n");
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertNotNull(functionNodeList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test11765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11765");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        java.lang.String str44 = scriptNode31.makeIndent((int) (short) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str54 = scriptNode45.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = scriptNode45.new NodeIterator();
        java.lang.String str56 = scriptNode45.shortName();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray57 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList58, symbolArray57);
        scriptNode45.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        scriptNode45.flattenSymbolTable(false);
        scriptNode45.putIntProp(4, 97);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str68 = scope67.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode75.getEncodedSource();
        scriptNode75.setEncodedSourceEnd(18);
        java.lang.String str79 = comment74.toStringTree(scriptNode75);
        com.google.javascript.rhino.head.Node node81 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode75, node81);
        scriptNode75.setSourceName("hi!");
        scope67.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode75);
        java.lang.Object obj86 = scriptNode75.getCompilerData();
        int int87 = scriptNode75.getEndLineno();
        java.lang.Object obj89 = scriptNode75.getProp(15);
        int int92 = scriptNode75.getIntProp(6, 18);
        int int95 = scriptNode75.getIntProp(22, 24);
        int int96 = scriptNode45.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        scriptNode31.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode75);
        int int98 = scriptNode75.getParamCount();
        com.google.javascript.rhino.head.Node node99 = scriptNode75.getNext();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                                                                                                                                                                                                        " + "'", str44, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ScriptNode" + "'", str56, "ScriptNode");
        org.junit.Assert.assertNotNull(symbolArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Scope" + "'", str68, "Scope");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 18 + "'", int92 == 18);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 24 + "'", int95 == 24);
// flaky:         org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1324633820) + "'", int96 == (-1324633820));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
        org.junit.Assert.assertNull(node99);
    }

    @Test
    public void test11766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11766");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode0.getChildScopes();
        java.lang.String str12 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        scriptNode24.putProp(1784707759, (java.lang.Object) "/");
        int int46 = scriptNode24.depth();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope50 = scope48.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node51 = scope48.target;
        scope48.setPosition(2);
        java.lang.String str54 = scope48.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap55 = scope48.getSymbolTable();
        boolean boolean56 = scope48.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = scriptNode57.getTop();
        scope48.target = scriptNode57;
        com.google.javascript.rhino.head.Node node68 = scriptNode57.target;
        int int69 = scriptNode57.getAbsolutePosition();
        boolean boolean70 = scriptNode57.hasSideEffects();
        scriptNode24.setTop(scriptNode57);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = scriptNode57.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                      " + "'", str12, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNull(scope50);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{\n}\n" + "'", str54, "{\n}\n");
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test11767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11767");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        java.lang.Object obj11 = scope2.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope2);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        java.lang.String str20 = scope14.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = scope14.getSymbolTable();
        boolean boolean22 = scope14.hasChildren();
        com.google.javascript.rhino.head.Node node23 = scope14.getNext();
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope14);
        com.google.javascript.rhino.head.Node node25 = scope2.getNext();
        java.lang.String str26 = scope2.shortName();
        int int27 = scope2.getLength();
        scope2.setLineno(908331048);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        int int42 = scriptNode31.getIntProp(6, 2);
        int int43 = scriptNode31.getRegexpCount();
        scriptNode31.setEncodedSource("0\tBLOCK 0 1\n");
        java.lang.String str46 = scriptNode31.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        int int59 = scriptNode47.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str61 = scriptNode60.getEncodedSource();
        int int62 = scriptNode60.getBaseLineno();
        java.lang.String str63 = scriptNode60.getNextTempName();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        java.lang.String str65 = scriptNode60.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        scriptNode60.setSymbols(symbolList73);
        scriptNode31.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        java.lang.Object obj77 = scriptNode60.getProp(845940331);
        int int78 = scriptNode60.getEncodedSourceEnd();
        boolean boolean79 = scriptNode60.hasChildren();
        scope2.putProp(0, (java.lang.Object) scriptNode60);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Scope" + "'", str26, "Scope");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0\tBLOCK 0 1\n" + "'", str46, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str65, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test11768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11768");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Symbol symbol11 = scope1.getSymbol("{\n{\n}\n}\n");
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = null;
        scope1.setSymbolTable(strMap12);
        com.google.javascript.rhino.head.ast.Symbol symbol15 = scope1.getSymbol("{\n}\n");
        com.google.javascript.rhino.head.Node node16 = scope1.getNext();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(symbol11);
        org.junit.Assert.assertNull(symbol15);
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test11769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11769");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment8 = scriptNode0.getJsDocNode();
        int int9 = scriptNode0.getRegexpCount();
        int int10 = scriptNode0.getLength();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor11 = scriptNode0.iterator();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scriptNode0.spliterator();
        scriptNode0.setLength(1320165685);
        org.junit.Assert.assertNull(comment8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(nodeItor11);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
    }

    @Test
    public void test11770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11770");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        com.google.javascript.rhino.head.ast.Comment comment5 = scope2.getJsDocNode();
        scope2.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope7 = scope2.getParentScope();
        scope2.setLength((int) (short) 0);
        java.lang.String str10 = scope2.shortName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode11 = scope2.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.Scope scope12 = scope2.getParentScope();
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertNull(comment5);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Scope" + "'", str10, "Scope");
        org.junit.Assert.assertNull(functionNode11);
        org.junit.Assert.assertNull(scope12);
    }

    @Test
    public void test11771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11771");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        scope1.setPosition(5);
        int int26 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope38 = scope36.getDefiningScope("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = scriptNode41.getTop();
        scriptNode50.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int55 = scriptNode54.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        scriptNode56.setEncodedSourceEnd(18);
        scriptNode54.target = scriptNode56;
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scriptNode56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str74 = scriptNode65.getSourceName();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode65, 26);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node61, (com.google.javascript.rhino.head.Node) scriptNode62, (com.google.javascript.rhino.head.Node) scriptNode65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        scriptNode78.setEncodedSourceStart((int) (byte) 100);
        int int89 = scriptNode78.getIntProp(6, 2);
        scriptNode78.setEndLineno(18);
        scriptNode65.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode78);
        scriptNode27.addChildAfter((com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) scriptNode65);
        int int94 = scriptNode65.depth();
        scope1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode65);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode65.setDouble((double) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test11772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11772");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode24.getTop();
        scriptNode33.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int38 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        scriptNode39.setEncodedSourceEnd(18);
        scriptNode37.target = scriptNode39;
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str57 = scriptNode48.getSourceName();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode48, 26);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node44, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Node node61 = scriptNode48.getLastSibling();
        boolean boolean62 = scriptNode48.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode48.putProp((int) (byte) 0, (java.lang.Object) int75);
        com.google.javascript.rhino.head.Node node77 = scriptNode48.target;
        scriptNode48.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node80 = scriptNode48.getLastSibling();
        scriptNode10.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str83 = scriptNode82.getEncodedSource();
        int int84 = scriptNode82.getBaseLineno();
        java.lang.Object obj85 = scriptNode82.getCompilerData();
        scriptNode82.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap88 = null;
        scriptNode82.setSymbolTable(strMap88);
        scriptNode10.setTop(scriptNode82);
        java.lang.String str91 = scriptNode82.shortName();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump92 = scriptNode82.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "ScriptNode" + "'", str91, "ScriptNode");
    }

    @Test
    public void test11773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11773");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        java.lang.String str13 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope30 = scope28.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node31 = scope28.target;
        scope28.setPosition(2);
        scope28.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node36 = scope28.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        java.lang.String str42 = scriptNode37.makeIndent((int) '#');
        scope28.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope15, (com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope45 = scope15.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode59.getEncodedSource();
        int int61 = scriptNode59.getBaseLineno();
        java.lang.String str62 = scriptNode59.getNextTempName();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        int int64 = scriptNode46.getEndLineno();
        scope15.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode46);
        scriptNode0.addChildScope(scope15);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = scope15.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node68 = functionNode67.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                      " + "'", str42, "                                                                      ");
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(functionNode67);
    }

    @Test
    public void test11774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11774");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode0.getEnclosingScope();
        java.lang.String str18 = scriptNode0.getNextTempName();
        int int21 = scriptNode0.getIntProp(20, (int) (byte) 100);
        int int22 = scriptNode0.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = scriptNode0.getParamOrVarName((-366869103));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test11775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11775");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(16, 0, commentType2, "                                                                                                        ");
        int int5 = comment4.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = comment4.getCommentType();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(commentType6);
    }

    @Test
    public void test11776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11776");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(161, 6, commentType2, "                  Scope");
        com.google.javascript.rhino.head.ast.AstNode astNode5 = comment4.getParent();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor6 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment4.visit(nodeVisitor6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astNode5);
    }

    @Test
    public void test11777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11777");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.Node node10 = scope1.getNext();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        java.lang.String str25 = comment21.toSource((int) (short) 10);
        scope1.setJsDocNode(comment21);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = comment21.spliterator();
        java.lang.String str28 = comment21.getValue();
        java.lang.String str29 = comment21.toString();
        int int30 = comment21.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        comment21.setCommentType(commentType31);
        comment21.removeChildren();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    Scope" + "'", str25, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Scope" + "'", str28, "Scope");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "161" + "'", str29, "161");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test11778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11778");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(1583199871, "                                                                                                                                                                                                                                                                  hi!");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test11779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11779");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        java.lang.String str45 = scriptNode31.getEncodedSource();
        com.google.javascript.rhino.head.Node node47 = scriptNode31.setType(136);
        java.lang.String str48 = scriptNode31.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str52 = scope50.makeIndent(0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope50.getParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scope50.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.Node node57 = scriptNode55.getLastSibling();
        scriptNode55.setEncodedSourceEnd(136);
        boolean boolean60 = scriptNode55.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int65 = scriptNode62.getIntProp(23, (int) (short) 1);
        boolean boolean66 = scriptNode62.hasSideEffects();
        int int67 = scriptNode62.depth();
        int int68 = scriptNode62.getFunctionCount();
        int int69 = scriptNode62.getEncodedSourceEnd();
        java.lang.String str71 = scriptNode62.toSource((-547629399));
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode62);
        java.lang.String str73 = scope50.toStringTree(scriptNode62);
        java.lang.String str74 = scriptNode62.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList75 = scriptNode62.getChildScopes();
        scriptNode62.setEncodedSourceEnd(701595233);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode31.setFinally((com.google.javascript.rhino.head.Node) scriptNode62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{\n}\n" + "'", str71, "{\n}\n");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(scopeList75);
    }

    @Test
    public void test11780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11780");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.setEndLineno(5);
        int int11 = scriptNode0.getRegexpCount();
        java.lang.String str13 = scriptNode0.toSource(3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "      {\n      }\n" + "'", str13, "      {\n      }\n");
    }

    @Test
    public void test11781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11781");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.Node node13 = scope1.target;
        java.lang.String str14 = scope1.debugPrint();
        scope1.clearParentScope();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(8, 20);
        scope1.addChildToFront(node18);
        boolean boolean20 = scope1.hasConsistentReturnUsage();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0\tBLOCK 0 1\n" + "'", str14, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11782");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int3 = scope2.getLength();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        java.lang.String str19 = comment15.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment15);
        java.lang.Object obj22 = comment15.getProp((int) (short) -1);
        java.lang.String str24 = comment15.makeIndent((int) (short) -1);
        scope2.setJsDocNode(comment15);
        com.google.javascript.rhino.head.Node node26 = comment15.getLastSibling();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        comment15.setCommentType(commentType27);
        comment15.setPosition(24);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        comment15.setCommentType(commentType31);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = comment15.getCommentType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                    Scope" + "'", str19, "                    Scope");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNull(commentType33);
    }

    @Test
    public void test11783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11783");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("                                                                                                                                                                                                  Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int9 = scriptNode6.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope11.setPosition(100);
        com.google.javascript.rhino.head.Node node14 = scope11.getLastSibling();
        node14.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = node14.spliterator();
        scriptNode6.setCompilerData((java.lang.Object) node14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) comment45);
        java.lang.String str47 = scriptNode6.toStringTree(scriptNode29);
        com.google.javascript.rhino.head.Node node48 = scriptNode6.target;
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode6.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope50 = scriptNode6.getEnclosingScope();
        int int51 = scriptNode6.getPosition();
        int int52 = scope2.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.lang.Object obj54 = scope2.getProp(371991955);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertNull(scope50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 11 + "'", int51 == 11);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test11784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11784");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode19.getIntProp(6, 2);
        scriptNode19.setEndLineno(18);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode19, (int) (byte) -1);
        java.lang.String str35 = scriptNode14.debugPrint();
        scriptNode14.setLength(701595233);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str35, "51\t    SCRIPT 52 1\n");
    }

    @Test
    public void test11785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11785");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = scope1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node7 = scope1.setType(6);
        scope1.setBounds(5, (int) (short) 0);
        scope1.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        int int27 = scriptNode25.getBaseLineno();
        java.lang.String str28 = scriptNode25.getNextTempName();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        java.lang.String str30 = scriptNode25.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode32.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope37.setPosition(100);
        com.google.javascript.rhino.head.Node node40 = scope37.getLastSibling();
        node40.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = node40.spliterator();
        scriptNode32.setCompilerData((java.lang.Object) node40);
        java.lang.String str44 = scriptNode32.getSourceName();
        int int45 = scriptNode32.getEncodedSourceStart();
        scriptNode32.setEncodedSourceStart((int) (byte) 0);
        scriptNode25.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        java.lang.String str54 = scriptNode49.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator55 = scriptNode49.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope56 = scriptNode49.getParentScope();
        scriptNode49.clearParentScope();
        scriptNode32.target = scriptNode49;
        scope1.setTop(scriptNode49);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap60 = scope1.getSymbolTable();
        scope1.setPosition((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope63 = com.google.javascript.rhino.head.ast.Scope.splitScope(scope1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(functionNode5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str30, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                                                                      " + "'", str54, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator55);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(strMap60);
    }

    @Test
    public void test11786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11786");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node11 = scriptNode0.target;
        com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode0.getParentScope();
        int int13 = scriptNode0.getParamCount();
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test11787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11787");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        scriptNode20.clearParentScope();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator28 = scriptNode20.new NodeIterator();
        java.lang.Object obj30 = scriptNode20.getProp(135381063);
        int int31 = scriptNode20.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Scope scope32 = scriptNode20.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope33 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scope32);
    }

    @Test
    public void test11788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11788");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode2.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode39.getSymbols();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope27, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setPosition((int) (byte) 0);
        scriptNode39.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str53 = scriptNode39.makeIndent(0);
        java.lang.String str54 = scriptNode2.toStringTree(scriptNode39);
        java.lang.String str56 = scriptNode39.makeIndent(12);
        java.lang.String str57 = scriptNode39.getSourceName();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.Node node60 = scriptNode1.setType((int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = scriptNode1.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor63 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionNode62.visit(nodeVisitor63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                        " + "'", str56, "                        ");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(functionNode62);
    }

    @Test
    public void test11789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11789");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.Node node55 = scriptNode26.target;
        scriptNode26.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope61 = scope59.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node62 = scope59.target;
        scope59.setPosition(2);
        java.lang.String str65 = scope59.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap66 = scope59.getSymbolTable();
        boolean boolean67 = scope59.hasChildren();
        com.google.javascript.rhino.head.Node node68 = scope59.getNext();
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope72 = scope70.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node73 = scope70.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        scope70.setJsDocNode(comment79);
        java.lang.String str83 = comment79.toSource((int) (short) 10);
        scope59.setJsDocNode(comment79);
        java.lang.String str85 = comment79.getValue();
        int int86 = comment79.depth();
        scriptNode26.setJsDocNode(comment79);
        com.google.javascript.rhino.head.ast.AstRoot astRoot88 = comment79.getAstRoot();
        comment79.setPosition(213295120);
        java.lang.String str91 = comment79.debugPrint();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(scope61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{\n}\n" + "'", str65, "{\n}\n");
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNull(scope72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "                    Scope" + "'", str83, "                    Scope");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Scope" + "'", str85, "Scope");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNull(astRoot88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "213295120\tCOMMENT 213295120 6\n" + "'", str91, "213295120\tCOMMENT 213295120 6\n");
    }

    @Test
    public void test11790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11790");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        boolean boolean11 = scriptNode6.hasSideEffects();
        java.lang.String str12 = scriptNode6.getEncodedSource();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode6);
        int int14 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = scriptNode17.getTop();
        scriptNode26.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode30.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        scriptNode32.setEncodedSourceEnd(18);
        scriptNode30.target = scriptNode32;
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str50 = scriptNode41.getSourceName();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode41, 26);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node37, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        int int65 = scriptNode54.getIntProp(6, 2);
        scriptNode54.setEndLineno(18);
        scriptNode41.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode54);
        scriptNode41.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = scriptNode41.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode41.getSymbols();
        scriptNode6.setSymbols(symbolList72);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode(21);
        java.lang.String str77 = scriptNode75.toSource((int) (byte) 100);
        scriptNode6.setTop(scriptNode75);
        scriptNode75.setEncodedSourceEnd(70);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n" + "'", str77, "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
    }

    @Test
    public void test11791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11791");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        scope23.setPosition(2);
        int int29 = scope23.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope30 = scope23.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope23.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        int int39 = scope33.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope40 = scope33.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scope33.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        scriptNode42.flattenSymbolTable(false);
        scope23.addChildAfter((com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str50 = scriptNode42.makeIndent((-1));
        scope1.target = scriptNode42;
        scriptNode42.flattenSymbolTable(false);
        int int54 = scriptNode42.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode42.getChildScopes();
        java.lang.String str56 = scriptNode42.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str58 = scriptNode57.getEncodedSource();
        int int59 = scriptNode57.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope63 = scope61.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node64 = scope61.getNext();
        com.google.javascript.rhino.head.ast.Scope scope65 = scope61.getParentScope();
        scriptNode57.addChildScope(scope61);
        int int67 = scriptNode57.getBaseLineno();
        scriptNode42.target = scriptNode57;
        java.lang.String str69 = scriptNode42.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap70 = scriptNode42.getSymbolTable();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ScriptNode" + "'", str56, "ScriptNode");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(scope65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{\n}\n" + "'", str69, "{\n}\n");
        org.junit.Assert.assertNull(strMap70);
    }

    @Test
    public void test11792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11792");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.setEncodedSourceBounds((int) '4', 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        int int41 = scriptNode30.getIntProp(6, 2);
        int int42 = scriptNode30.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scope44.setJsDocNode(comment53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = scriptNode56.getSymbols();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope44, (com.google.javascript.rhino.head.Node) scriptNode56);
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        scriptNode30.setSymbols(symbolList73);
        scriptNode0.setSymbols(symbolList73);
        scriptNode0.setSourceName("52\t  SCRIPT 0 1\n");
        scriptNode0.setBounds((-1), 226035720);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList81 = scriptNode0.getChildScopes();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNotNull(symbolList63);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNull(scopeList81);
    }

    @Test
    public void test11793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11793");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        scriptNode1.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode34.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str38 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scope40.iterator();
        boolean boolean53 = scope40.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope40, 8);
        int int56 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode(16);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        int int60 = scriptNode58.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scriptNode62.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = scriptNode62.getTop();
        scriptNode71.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int76 = scriptNode75.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str78 = scriptNode77.getEncodedSource();
        scriptNode77.setEncodedSourceEnd(18);
        scriptNode75.target = scriptNode77;
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode71, (com.google.javascript.rhino.head.Node) scriptNode77);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList83 = null;
        scriptNode77.setSymbols(symbolList83);
        int int85 = scriptNode77.getParamCount();
        scriptNode58.setTop(scriptNode77);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = scriptNode77.getTop();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ScriptNode" + "'", str38, "ScriptNode");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(scriptNode71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(scriptNode87);
    }

    @Test
    public void test11794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11794");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        int int23 = scriptNode0.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        scope26.setPosition(2);
        scope26.putIntProp(17, 25);
        scope26.setLength((int) ' ');
        scriptNode0.replaceWith(scope26);
        scriptNode0.setEndLineno((int) '#');
        scriptNode0.setRelative(1558149202);
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
    }

    @Test
    public void test11795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11795");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.Object obj72 = scriptNode23.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node73 = scriptNode23.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope74 = scriptNode23.getParentScope();
        int int75 = scriptNode23.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode23, scope77);
        scope77.setLineno(34);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNull(scope74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test11796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11796");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(960854933);
        // The following exception was thrown during execution in test generation
        try {
            node1.labelId(15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11797");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        int int26 = scriptNode15.getIntProp(6, 2);
        int int27 = scriptNode15.getParamCount();
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = scriptNode2.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap30 = scriptNode2.getSymbolTable();
        scriptNode2.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope38 = scriptNode35.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str39 = scriptNode35.shortName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor53 = scope41.iterator();
        boolean boolean54 = scope41.hasSideEffects();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scope41, 8);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(1168207406, (com.google.javascript.rhino.head.Node) scriptNode2);
        boolean boolean58 = node57.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ScriptNode" + "'", str39, "ScriptNode");
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(nodeItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test11798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11798");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode3, 26);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode3);
        java.lang.String str16 = scriptNode1.getNextTempName();
        scriptNode1.setEncodedSourceStart(5);
        scriptNode1.setLineno(52);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scope23.setJsDocNode(comment32);
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        comment32.setCommentType(commentType35);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment32, 14);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = comment32.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        comment32.setCommentType(commentType40);
        comment32.setPosition(1);
        java.lang.String str45 = comment32.toSource(2);
        scriptNode1.addChildToFront((com.google.javascript.rhino.head.Node) comment32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        int int59 = scriptNode47.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str61 = scriptNode60.getEncodedSource();
        int int62 = scriptNode60.getBaseLineno();
        java.lang.String str63 = scriptNode60.getNextTempName();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int68 = scope67.depth();
        scriptNode47.replaceWith(scope67);
        com.google.javascript.rhino.head.ast.Symbol symbol71 = scriptNode47.getSymbol("                                      Scope");
        int int72 = scriptNode47.getLineno();
        int int73 = scriptNode47.getLength();
        int int74 = scriptNode47.getBaseLineno();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.Node node76 = scriptNode47.getFirstChild();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(commentType39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "    Scope" + "'", str45, "    Scope");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(symbol71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 53 + "'", int73 == 53);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(node76);
    }

    @Test
    public void test11799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11799");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        boolean boolean14 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        java.lang.String str22 = scope16.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = scope16.getSymbolTable();
        boolean boolean24 = scope16.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = scriptNode25.getTop();
        scope16.target = scriptNode25;
        com.google.javascript.rhino.head.Node node36 = scriptNode25.target;
        scriptNode25.setBaseLineno(10);
        scriptNode25.setEncodedSourceEnd((int) (short) -1);
        int int41 = scriptNode25.getParamCount();
        java.lang.String str42 = scriptNode25.getSourceName();
        java.lang.String str44 = scriptNode25.makeIndent(16);
        int int45 = scriptNode25.depth();
        scriptNode25.flattenSymbolTable(false);
        scriptNode25.setLineno(6);
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        scriptNode61.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int66 = scriptNode65.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str68 = scriptNode67.getEncodedSource();
        scriptNode67.setEncodedSourceEnd(18);
        scriptNode65.target = scriptNode67;
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode67.setEncodedSourceStart((int) ' ');
        scriptNode67.setEndLineno(23);
        scriptNode67.setEncodedSourceStart((int) '#');
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node((-1072816741), (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode67);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node80 = scriptNode25.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                                " + "'", str44, "                                ");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test11800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11800");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode4.getSymbol("/");
        int int17 = scriptNode4.getEncodedSourceEnd();
        boolean boolean18 = scriptNode4.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        scriptNode35.setEncodedSourceEnd(11);
        int int43 = scriptNode35.getEncodedSourceStart();
        int int44 = scriptNode35.getRegexpCount();
        java.lang.String str45 = scriptNode4.toStringTree(scriptNode35);
        scriptNode35.clearParentScope();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test11801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11801");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-53635080));
    }

    @Test
    public void test11802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11802");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        int int19 = scriptNode14.getType();
        int int20 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.Node node22 = scriptNode14.setType((int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = scriptNode14.getAstRoot();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) scriptNode14, (-1324633820));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 136 + "'", int19 == 136);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNull(astRoot23);
    }

    @Test
    public void test11803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11803");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = null;
        scriptNode0.setSymbolTable(strMap6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.Symbol symbol10 = scriptNode0.getSymbol("          {\n}\n");
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str14 = scope12.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str27 = scriptNode18.getSourceName();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode18, 26);
        scriptNode16.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        java.lang.String str31 = scriptNode16.getNextTempName();
        scope12.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode16);
        int int33 = scriptNode16.getFunctionCount();
        scriptNode0.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode16);
        int int35 = scriptNode0.getPosition();
        scriptNode0.removeChildren();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        comment47.setCommentType(commentType50);
        java.lang.String str52 = comment47.getValue();
        java.lang.String str53 = comment47.toSource();
        com.google.javascript.rhino.head.Node node54 = comment47.getNext();
        com.google.javascript.rhino.head.Node node55 = comment47.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setFinally(node55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNull(symbol10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Scope" + "'", str52, "Scope");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Scope" + "'", str53, "Scope");
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node55);
    }

    @Test
    public void test11804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11804");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList6 = scriptNode0.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = scriptNode0.getFunctions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(astNodeList6);
        org.junit.Assert.assertNotNull(functionNodeList7);
    }

    @Test
    public void test11805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11805");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        int int4 = scriptNode0.getBaseLineno();
        boolean boolean5 = scriptNode0.hasChildren();
        java.lang.String str6 = scriptNode0.getSourceName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = null;
        scriptNode0.setSymbolTable(strMap7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.clearParentScope();
        scriptNode9.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node20 = scriptNode9.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        scriptNode21.setEncodedSourceEnd(18);
        java.lang.String str26 = scriptNode21.makeIndent((int) '#');
        int int29 = scriptNode21.getIntProp((int) '4', 4);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scriptNode21.spliterator();
        int int31 = scriptNode9.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDefault((com.google.javascript.rhino.head.Node) scriptNode9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                      " + "'", str26, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 474085636 + "'", int31 == 474085636);
    }

    @Test
    public void test11806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11806");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(13);
        int int4 = scriptNode1.getIntProp(161, (int) (byte) -1);
        scriptNode1.setEncodedSourceBounds(727575172, (-613442063));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode1.getChildScopes();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(scopeList8);
    }

    @Test
    public void test11807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11807");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.Object obj4 = scriptNode0.getCompilerData();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = scriptNode0.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getDefiningScope("                                                    Scope");
        scriptNode0.setLineno(136);
        com.google.javascript.rhino.head.Node node10 = scriptNode0.target;
        java.lang.String str11 = scriptNode0.getEncodedSource();
        scriptNode0.removeChildren();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test11808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11808");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        java.lang.Object obj11 = scope2.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope2);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        java.lang.String str20 = scope14.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = scope14.getSymbolTable();
        boolean boolean22 = scope14.hasChildren();
        com.google.javascript.rhino.head.Node node23 = scope14.getNext();
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope14);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope(0);
        java.lang.Object obj28 = scope26.getProp((-243114478));
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType32, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        java.lang.String str40 = scriptNode35.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment34, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int42 = scriptNode35.depth();
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope26, (com.google.javascript.rhino.head.ast.Scope) scriptNode35);
        int int46 = scope26.getIntProp(13, 14);
        int int47 = scope26.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            scope14.setContinue((com.google.javascript.rhino.head.Node) scope26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                                                      " + "'", str40, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 14 + "'", int46 == 14);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test11809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11809");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList8 = scriptNode1.getSymbols();
        java.lang.String str9 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node48 = scriptNode37.target;
        scriptNode37.setBounds(16, 13);
        scriptNode37.clearParentScope();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode37, 3);
        com.google.javascript.rhino.head.Node node55 = scriptNode37.getNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node56 = scriptNode37.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str9, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node55);
    }

    @Test
    public void test11810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11810");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        boolean boolean45 = scriptNode31.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode59.getEncodedSource();
        int int61 = scriptNode59.getBaseLineno();
        java.lang.String str62 = scriptNode59.getNextTempName();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        int int64 = scriptNode59.getType();
        java.lang.String str65 = scriptNode59.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode59.flattenSymbolTable(true);
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        com.google.javascript.rhino.head.ast.AstNode astNode70 = scriptNode59.getParent();
        scriptNode59.flattenSymbolTable(true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 136 + "'", int64 == 136);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str65, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(astNode70);
    }

    @Test
    public void test11811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11811");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        java.lang.String str62 = scriptNode61.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = scriptNode63.getTop();
        java.lang.String str73 = scriptNode72.shortName();
        scriptNode61.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        java.lang.String str75 = scope1.toStringTree(scriptNode61);
        java.lang.Object obj76 = scriptNode61.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope77 = scriptNode61.getEnclosingScope();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ScriptNode" + "'", str62, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ScriptNode" + "'", str73, "ScriptNode");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(scope77);
    }

    @Test
    public void test11812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11812");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        java.lang.String str23 = scope17.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = scope17.getSymbolTable();
        boolean boolean25 = scope17.hasChildren();
        com.google.javascript.rhino.head.Node node26 = scope17.getNext();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope30 = scope28.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node31 = scope28.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scope28.setJsDocNode(comment37);
        java.lang.String str41 = comment37.toSource((int) (short) 10);
        scope17.setJsDocNode(comment37);
        comment37.setRelative(4);
        scriptNode6.setJsDocNode(comment37);
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType49, "{\n}\n");
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment51, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        comment51.setCommentType(commentType54);
        scriptNode6.setJsDocNode(comment51);
        com.google.javascript.rhino.head.Token.CommentType commentType57 = comment51.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = comment51.getCommentType();
        comment51.putIntProp(272356811, 98666588);
        com.google.javascript.rhino.head.Node node63 = comment51.setType(1558149202);
        int int64 = comment51.getLineno();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                    Scope" + "'", str41, "                    Scope");
        org.junit.Assert.assertNull(commentType57);
        org.junit.Assert.assertNull(commentType58);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
    }

    @Test
    public void test11813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11813");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode1.getSymbols();
        int int15 = scriptNode1.getEncodedSourceEnd();
        java.lang.String str16 = scriptNode1.getJsDoc();
        com.google.javascript.rhino.head.Node node17 = scriptNode1.target;
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scriptNode1.spliterator();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scriptNode1.spliterator();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
    }

    @Test
    public void test11814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11814");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        scriptNode23.setPosition(18);
        int int73 = scriptNode23.getIntProp(129, (int) (short) 100);
        scriptNode23.setBaseLineno((int) (byte) 10);
        scriptNode23.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope78 = scriptNode23.getParentScope();
        scriptNode23.setLength(22);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertNull(scope78);
    }

    @Test
    public void test11815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11815");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        scriptNode9.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        int int28 = scriptNode9.getType();
        scriptNode9.clearParentScope();
        scriptNode9.setEncodedSourceBounds(412649354, (-1072816741));
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 136 + "'", int28 == 136);
    }

    @Test
    public void test11816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11816");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        scriptNode0.flattenSymbolTable(true);
        java.lang.Object obj12 = scriptNode0.getCompilerData();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test11817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11817");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        boolean boolean58 = scriptNode26.hasConsistentReturnUsage();
        scriptNode26.setLineno(754207379);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj63 = scriptNode62.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode62.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode65);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode62);
        com.google.javascript.rhino.head.Node node68 = scriptNode62.target;
        // The following exception was thrown during execution in test generation
        try {
            int int69 = scriptNode62.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(node68);
    }

    @Test
    public void test11818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11818");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(213295120, 2);
        int int3 = scope2.getType();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 129 + "'", int3 == 129);
    }

    @Test
    public void test11819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11819");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.ast.Symbol symbol10 = scriptNode0.getSymbol("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.setSourceName("                                              Scope");
        java.lang.String str15 = scriptNode12.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = scriptNode17.getTop();
        scriptNode26.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode30.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        scriptNode32.setEncodedSourceEnd(18);
        scriptNode30.target = scriptNode32;
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope41 = scope39.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node42 = scope39.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scope39.setJsDocNode(comment48);
        boolean boolean51 = scope39.hasChildren();
        scriptNode12.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope39);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(845940331, (com.google.javascript.rhino.head.Node) scriptNode32, 35);
        com.google.javascript.rhino.head.ast.Scope scope56 = scriptNode32.getDefiningScope("                              {\n                              }\n");
        java.lang.Object obj57 = scriptNode32.getCompilerData();
        int int58 = scriptNode32.getFunctionCount();
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        scriptNode32.setLength(18);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNull(symbol10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(scriptNode26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test11820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11820");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        boolean boolean29 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        comment27.setCommentType(commentType30);
        java.lang.String str33 = comment27.toSource(3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource(18);
        scriptNode36.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) scriptNode36, 19);
        comment27.putProp(14, (java.lang.Object) node42);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator44 = node42.new NodeIterator();
        com.google.javascript.rhino.head.Node node45 = nodeIterator44.next();
        boolean boolean46 = nodeIterator44.hasNext();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "      Scope" + "'", str33, "      Scope");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                    {\n                                    }\n" + "'", str38, "                                    {\n                                    }\n");
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test11821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11821");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node16 = scriptNode6.getLastChild();
        int int17 = scriptNode6.getEndLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol19 = scriptNode6.getSymbol("100\tIFEQ 100 1\n");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor20 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode6.visit(nodeVisitor20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(symbol19);
    }

    @Test
    public void test11822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11822");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        scope3.setPosition(2);
        int int9 = scope3.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = scope3.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = scope3.spliterator();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scope3, 15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        int int28 = scriptNode17.getIntProp(6, 2);
        int int29 = scriptNode17.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope33 = scope31.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node34 = scope31.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scope31.setJsDocNode(comment40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList50 = scriptNode43.getSymbols();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scope31, (com.google.javascript.rhino.head.Node) scriptNode43);
        scriptNode43.setPosition((int) (byte) 0);
        scriptNode43.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scriptNode56.setEncodedSourceStart((int) (byte) 100);
        int int67 = scriptNode56.getIntProp(6, 2);
        int int68 = scriptNode56.getParamCount();
        java.lang.String str69 = scriptNode56.debugPrint();
        int int72 = scriptNode56.getIntProp(17, 10);
        scriptNode43.setTop(scriptNode56);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode43);
        scriptNode43.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        scriptNode77.setEncodedSourceStart((int) (byte) 100);
        int int86 = scriptNode77.getEncodedSourceStart();
        scriptNode77.setLineno(1);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode77, (int) '#');
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator92 = scriptNode43.new NodeIterator();
        boolean boolean93 = nodeIterator92.hasNext();
        boolean boolean94 = nodeIterator92.hasNext();
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(symbolList50);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str69, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test11823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11823");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList79 = scriptNode72.getSymbols();
        scriptNode36.setSymbols(symbolList79);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList81 = scriptNode36.getSymbols();
        scriptNode36.setPosition(18);
        comment10.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.Node node85 = comment10.getFirstChild();
        boolean boolean86 = node85.hasSideEffects();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNotNull(symbolList79);
        org.junit.Assert.assertNotNull(symbolList81);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test11824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11824");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str30 = scriptNode28.debugPrint();
        int int31 = scriptNode28.getBaseLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope32 = scriptNode28.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "22\tSCRIPT 22 1\n" + "'", str30, "22\tSCRIPT 22 1\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test11825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11825");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str11 = scriptNode0.getEncodedSource();
        java.lang.String str12 = scriptNode0.toSource();
        com.google.javascript.rhino.head.ast.Scope scope14 = scriptNode0.getDefiningScope("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        scriptNode0.flattenSymbolTable(false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{\n}\n" + "'", str12, "{\n}\n");
        org.junit.Assert.assertNull(scope14);
    }

    @Test
    public void test11826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11826");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getPosition();
        int int23 = scriptNode10.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        scriptNode37.setEncodedSource("                        ");
        int int44 = scriptNode37.getLineno();
        java.lang.String str45 = scriptNode10.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 0, 21, commentType48, "");
        comment50.setRelative(3);
        scriptNode10.setCompilerData((java.lang.Object) comment50);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode54 = scriptNode10.getEnclosingFunction();
        int int55 = scriptNode10.getEncodedSourceStart();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = scriptNode10.getSymbolTable();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-53) + "'", int22 == (-53));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(functionNode54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNull(strMap56);
    }

    @Test
    public void test11827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11827");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode26.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList40 = scriptNode26.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray41 = scriptNode26.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertNotNull(astNodeList40);
    }

    @Test
    public void test11828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11828");
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newNumber((double) 12);
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node(6, node4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode19.toSource(18);
        java.lang.Object obj22 = scriptNode19.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode50.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node61 = scriptNode50.target;
        scriptNode19.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        int int63 = scriptNode50.getLineno();
        scriptNode6.setCompilerData((java.lang.Object) scriptNode50);
        scriptNode6.setRelative((int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap67 = scriptNode6.getSymbolTable();
        com.google.javascript.rhino.head.Node node68 = scriptNode6.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        int int71 = scriptNode70.getAbsolutePosition();
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode70);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(100, node4, (com.google.javascript.rhino.head.Node) scriptNode70);
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol78 = scope76.getSymbol("$0");
        int int79 = scope76.getPosition();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = scope76.getEnclosingFunction();
        boolean boolean81 = scope76.hasChildren();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap82 = scope76.getSymbolTable();
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((-700164298), node73, (com.google.javascript.rhino.head.Node) scope76);
        com.google.javascript.rhino.head.Node node84 = scope76.getNext();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                    {\n                                    }\n" + "'", str21, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 6 + "'", int71 == 6);
        org.junit.Assert.assertNull(symbol78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(functionNode80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(node84);
    }

    @Test
    public void test11829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11829");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scope2.getSymbolTable();
        boolean boolean10 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scope2.target = scriptNode11;
        com.google.javascript.rhino.head.Node node22 = scriptNode11.target;
        scriptNode11.setBaseLineno(10);
        scriptNode11.setEncodedSourceEnd((int) (short) -1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = null;
        scriptNode11.setSymbolTable(strMap27);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(22, (com.google.javascript.rhino.head.Node) scriptNode11, 11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        int int33 = scriptNode31.getBaseLineno();
        java.lang.Object obj34 = scriptNode31.getCompilerData();
        scriptNode31.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = null;
        scriptNode31.setSymbolTable(strMap37);
        scriptNode11.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Node node40 = scriptNode31.getFirstChild();
        scriptNode31.setLength(1500056961);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(node40);
    }

    @Test
    public void test11830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11830");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str26 = scriptNode17.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scope28, (int) (byte) 10);
        java.lang.String str34 = scriptNode7.shortName();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = scriptNode7.getParent();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral36 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.addRegExp(regExpLiteral36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ScriptNode" + "'", str34, "ScriptNode");
        org.junit.Assert.assertNull(astNode35);
    }

    @Test
    public void test11831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11831");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode4.getSymbol("/");
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode4.getParentScope();
        scriptNode4.setSourceName("                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
        java.lang.String str20 = scriptNode4.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(16);
        scriptNode4.setCompilerData((java.lang.Object) 16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        java.lang.String str37 = scriptNode24.debugPrint();
        scriptNode24.setRelative((int) '4');
        java.lang.String str41 = scriptNode24.toSource(18);
        com.google.javascript.rhino.head.Node node42 = scriptNode24.getNext();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = null;
        scriptNode24.setSymbols(symbolList43);
        com.google.javascript.rhino.head.ast.AstNode astNode45 = scriptNode24.getParent();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ScriptNode" + "'", str20, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str37, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                    {\n                                    }\n" + "'", str41, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(astNode45);
    }

    @Test
    public void test11832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11832");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        int int8 = scope2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope9 = scope2.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scope2.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setPosition(2);
        int int18 = scope12.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope19 = scope12.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope12.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.Object obj24 = scriptNode21.getCompilerData();
        scriptNode21.flattenSymbolTable(false);
        scope2.addChildAfter((com.google.javascript.rhino.head.Node) scope12, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int28 = scriptNode21.getLength();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(1487440633, (com.google.javascript.rhino.head.Node) scriptNode21);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test11833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11833");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int39 = node22.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope41.setPosition(100);
        com.google.javascript.rhino.head.Node node44 = scope41.getLastSibling();
        node44.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = node44.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = scriptNode48.getTop();
        scriptNode57.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode61.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getEncodedSource();
        scriptNode63.setEncodedSourceEnd(18);
        scriptNode61.target = scriptNode63;
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = null;
        scriptNode63.setSymbols(symbolList69);
        node44.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode63.setBaseLineno(26);
        node22.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.ast.Scope scope75 = scriptNode63.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node77 = scope75.setType((-53));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(nodeSpliterator46);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(scope75);
    }

    @Test
    public void test11834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11834");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode0.getTop();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray13 = scriptNode12.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(scriptNode12);
    }

    @Test
    public void test11835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11835");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        int int21 = scriptNode19.getBaseLineno();
        java.lang.String str22 = scriptNode19.getNextTempName();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int27 = scope26.depth();
        scriptNode6.replaceWith(scope26);
        com.google.javascript.rhino.head.ast.Symbol symbol30 = scriptNode6.getSymbol("                                      Scope");
        scriptNode0.setTop(scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope33 = scriptNode6.getDefiningScope("41");
        scriptNode6.setEncodedSourceStart(51160157);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(symbol30);
        org.junit.Assert.assertNull(scope33);
    }

    @Test
    public void test11836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11836");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        scriptNode0.setEncodedSourceBounds(3, 272356811);
        int int42 = scriptNode0.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.labelId((-1379055074));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test11837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11837");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        scriptNode1.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode34.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str38 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scope40.iterator();
        boolean boolean53 = scope40.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope40, 8);
        int int56 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode(16);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        int int60 = scriptNode1.getEncodedSourceStart();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.Node node62 = scriptNode1.getNext();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ScriptNode" + "'", str38, "ScriptNode");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(node62);
    }

    @Test
    public void test11838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11838");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        boolean boolean9 = scope1.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = null;
        scope1.setSymbolTable(strMap10);
        com.google.javascript.rhino.head.ast.Symbol symbol13 = scope1.getSymbol("            ");
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scope1.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList15 = scope1.getStatements();
        com.google.javascript.rhino.head.ast.Symbol symbol17 = scope1.getSymbol("                                    {\n                                    }\n");
        // The following exception was thrown during execution in test generation
        try {
            scope1.labelId((-927222420));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(symbol13);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertNotNull(astNodeList15);
        org.junit.Assert.assertNull(symbol17);
    }

    @Test
    public void test11839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11839");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getEncodedSource();
        int int4 = scriptNode2.getBaseLineno();
        java.lang.Object obj5 = scriptNode2.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        java.lang.String str14 = scriptNode6.toSource(26);
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode6.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = scriptNode18.getTop();
        scriptNode27.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        scriptNode33.setEncodedSourceEnd(18);
        scriptNode31.target = scriptNode33;
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode33);
        node38.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope42.setPosition(100);
        com.google.javascript.rhino.head.Node node45 = scope42.getLastSibling();
        node45.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = node45.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode49.getTop();
        scriptNode58.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int63 = scriptNode62.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode64.getEncodedSource();
        scriptNode64.setEncodedSourceEnd(18);
        scriptNode62.target = scriptNode64;
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode58, (com.google.javascript.rhino.head.Node) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = null;
        scriptNode64.setSymbols(symbolList70);
        node45.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope76 = scope74.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node77 = scope74.target;
        scope74.setPosition(2);
        scope74.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node82 = scope74.getFirstChild();
        node38.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode64, (com.google.javascript.rhino.head.Node) scope74);
        scriptNode6.target = scriptNode64;
        int int85 = scriptNode64.getEncodedSourceStart();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                                    {\n                                                    }\n" + "'", str14, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test11840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11840");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode3, 26);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode3);
        java.lang.String str16 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int23 = scriptNode20.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope25.setPosition(100);
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        node28.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = node28.spliterator();
        scriptNode20.setCompilerData((java.lang.Object) node28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) comment59);
        java.lang.String str61 = scriptNode20.toStringTree(scriptNode43);
        int int62 = scriptNode43.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        int int74 = scriptNode63.getIntProp(6, 2);
        scriptNode63.setEndLineno(18);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode63);
        int int78 = scriptNode63.getEncodedSourceStart();
        java.lang.String str80 = scriptNode63.makeIndent((-547629399));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode((int) '4');
        com.google.javascript.rhino.head.Node node83 = scriptNode82.getLastChild();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(1487440633, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode82, (int) (byte) 1);
        java.lang.String str87 = scriptNode82.toSource((int) (short) 0);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode82);
        int int89 = scriptNode82.getLineno();
        com.google.javascript.rhino.head.ast.AstNode astNode90 = scriptNode82.getParent();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{\n}\n" + "'", str87, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(astNode90);
    }

    @Test
    public void test11841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11841");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode39 = scriptNode27.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        int int55 = scriptNode53.getBaseLineno();
        java.lang.String str56 = scriptNode53.getNextTempName();
        scriptNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        int int58 = scriptNode53.getType();
        java.lang.String str59 = scriptNode53.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode53.getSymbols();
        scriptNode53.setBounds(1, 26);
        com.google.javascript.rhino.head.ast.Symbol symbol65 = scriptNode53.getSymbol(">>>");
        scriptNode27.setCompilerData((java.lang.Object) ">>>");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertNull(functionNode39);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "$0" + "'", str56, "$0");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 136 + "'", int58 == 136);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str59, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNull(symbol65);
    }

    @Test
    public void test11842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11842");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        int int38 = scriptNode36.getBaseLineno();
        java.lang.String str39 = scriptNode36.getNextTempName();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str47 = scope45.toSource(12);
        scope45.setRelative(1);
        scriptNode36.putProp(17, (java.lang.Object) 1);
        scriptNode10.target = scriptNode36;
        int int52 = scriptNode10.getEncodedSourceEnd();
        int int53 = scriptNode10.getBaseLineno();
        scriptNode10.setEncodedSourceStart(22);
        java.lang.String str57 = scriptNode10.makeIndent((-25));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = null;
        scope60.setTop(scriptNode64);
        scriptNode58.target = scope60;
        java.lang.String str68 = scriptNode58.toSource((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope72 = scope70.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node73 = scope70.target;
        scope70.setPosition(2);
        java.lang.String str76 = scope70.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap77 = scope70.getSymbolTable();
        boolean boolean78 = scope70.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        scriptNode79.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = scriptNode79.getTop();
        scope70.target = scriptNode79;
        com.google.javascript.rhino.head.Node node90 = scriptNode79.target;
        scriptNode79.setBounds((int) (byte) 1, 845940331);
        scriptNode58.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode79);
        scriptNode10.setCompilerData((java.lang.Object) scriptNode79);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode97 = scriptNode10.getFunctionNode(170200694);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str41, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                        {\n                        }\n" + "'", str47, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str68, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(scope72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{\n}\n" + "'", str76, "{\n}\n");
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertNull(node90);
    }

    @Test
    public void test11843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11843");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = null;
        scope3.setTop(scriptNode7);
        scriptNode1.target = scope3;
        java.lang.String str11 = scriptNode1.toSource((int) 'a');
        int int12 = scriptNode1.getPosition();
        scriptNode1.setEncodedSourceEnd(6);
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((-1805289491), (com.google.javascript.rhino.head.Node) scriptNode1);
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str11, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test11844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11844");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray40 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList41, symbolArray40);
        scriptNode27.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList41);
        int int44 = scriptNode27.depth();
        com.google.javascript.rhino.head.Node node45 = scriptNode27.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope(35);
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newString("                                                                                                          {\n                                                                                                          }\n");
        com.google.javascript.rhino.head.Node node51 = node50.getLastSibling();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scope48, node51);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.setDefault(node51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(symbolArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
    }

    @Test
    public void test11845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11845");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1784707759);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = scope1.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11846");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.lang.String str30 = scriptNode0.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = scriptNode0.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node32 = scriptNode0.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(symbolList31);
    }

    @Test
    public void test11847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11847");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList2 = scriptNode1.getStatements();
        scriptNode1.setRelative((-613442063));
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        java.lang.Object obj23 = comment16.getProp((int) (short) -1);
        java.lang.String str25 = comment16.makeIndent((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setContinue((com.google.javascript.rhino.head.Node) comment16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeList2);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test11848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11848");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = null;
        scriptNode16.setSymbols(symbolList22);
        int int24 = scriptNode16.getType();
        int int25 = scriptNode16.getEndLineno();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 136 + "'", int24 == 136);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test11849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11849");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode2.toSource(18);
        int int5 = scriptNode2.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment6 = scriptNode2.getJsDocNode();
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode2, 2);
        scriptNode2.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType13, "41");
        java.lang.String str16 = comment15.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        comment15.setCommentType(commentType17);
        int int19 = comment15.getLineno();
        boolean boolean20 = comment15.hasSideEffects();
        scriptNode2.setJsDocNode(comment15);
        com.google.javascript.rhino.head.Node node22 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode2, node22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "                                    {\n                                    }\n" + "'", str4, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(comment6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "41" + "'", str16, "41");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11850");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.lang.String str19 = scriptNode14.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) comment47);
        int int49 = scriptNode31.depth();
        int int50 = scriptNode31.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor51 = scriptNode31.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int61 = scriptNode52.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode52, 23);
        java.lang.String str64 = scriptNode52.getSourceName();
        int int65 = scriptNode52.getBaseLineno();
        int int66 = scriptNode52.getEndLineno();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(nodeItor51);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test11851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11851");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.lang.String str19 = scriptNode14.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) comment47);
        int int49 = scriptNode31.depth();
        int int50 = scriptNode31.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor51 = scriptNode31.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int61 = scriptNode52.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode52, 23);
        int int64 = scriptNode14.getEndLineno();
        int int65 = scriptNode14.getRegexpCount();
        int int66 = scriptNode14.getEncodedSourceStart();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(nodeItor51);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test11852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11852");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode13 = scriptNode1.getParent();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor14 = scriptNode1.iterator();
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(98666588, (com.google.javascript.rhino.head.Node) scriptNode1, (int) (short) -1);
        com.google.javascript.rhino.head.Node node18 = com.google.javascript.rhino.head.Node.newString("                                hi!");
        scriptNode1.addChildrenToFront(node18);
        java.lang.String str20 = scriptNode1.shortName();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(astNode13);
        org.junit.Assert.assertNotNull(nodeItor14);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ScriptNode" + "'", str20, "ScriptNode");
    }

    @Test
    public void test11853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11853");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(226035720, 180367011);
    }

    @Test
    public void test11854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11854");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int60 = scriptNode25.getRegexpCount();
        scriptNode25.setEncodedSource("                  Scope");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test11855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11855");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        scriptNode16.setLength(19);
        boolean boolean65 = scriptNode16.hasConsistentReturnUsage();
        scriptNode16.flattenSymbolTable(true);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test11856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11856");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        int int37 = scriptNode27.getAbsolutePosition();
        int int38 = scriptNode27.getLineno();
        java.lang.String str39 = scriptNode27.getEncodedSource();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = scriptNode27.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode27.getFunctions();
        scriptNode27.setSourceName("16\tBLOCK 16 1\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(functionNode40);
        org.junit.Assert.assertNotNull(functionNodeList41);
    }

    @Test
    public void test11857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11857");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.removeProp(6);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(13, 8);
        scriptNode20.addChildToBack(node32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        java.lang.String str39 = scriptNode34.makeIndent((int) '#');
        node32.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator41 = scriptNode34.new NodeIterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor42 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode34.visit(nodeVisitor42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                                                                      " + "'", str39, "                                                                      ");
    }

    @Test
    public void test11858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11858");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.setEndLineno(5);
        java.lang.Object obj12 = scriptNode0.getProp((int) (short) 10);
        int int13 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope14 = scriptNode0.getEnclosingScope();
        java.lang.String str15 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node16 = scriptNode0.getNext();
        int int17 = scriptNode0.depth();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        scriptNode35.setEncodedSourceEnd(11);
        java.lang.String str43 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode35);
        java.lang.String str47 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.Node node48 = scriptNode35.target;
        int int49 = scriptNode35.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = null;
        scriptNode35.setSymbolTable(strMap50);
        com.google.javascript.rhino.head.Node node52 = scriptNode35.getNext();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str47, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(node52);
    }

    @Test
    public void test11859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11859");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str23 = node22.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(23, node22, (com.google.javascript.rhino.head.Node) scope25, (int) (byte) 1);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment(0, 5, commentType33, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        comment35.setPosition(16);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = comment35.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getParamCount();
        scriptNode39.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode39.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode67);
        java.lang.String str69 = scriptNode39.getEncodedSource();
        node30.addChildAfter((com.google.javascript.rhino.head.Node) comment35, (com.google.javascript.rhino.head.Node) scriptNode39);
        int int71 = comment35.getType();
        comment35.removeChildren();
        java.lang.String str74 = comment35.toSource(3);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(commentType38);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 161 + "'", int71 == 161);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "      -1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n" + "'", str74, "      -1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test11860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11860");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.removeProp(6);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(13, 8);
        scriptNode20.addChildToBack(node32);
        int int34 = scriptNode20.getBaseLineno();
        scriptNode20.setBaseLineno(20);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test11861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11861");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        boolean boolean12 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        scope15.setLength((int) (byte) 1);
        java.lang.Object obj24 = scope15.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        scope27.setPosition(2);
        java.lang.String str33 = scope27.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap34 = scope27.getSymbolTable();
        boolean boolean35 = scope27.hasChildren();
        com.google.javascript.rhino.head.Node node36 = scope27.getNext();
        scope15.addChildrenToFront((com.google.javascript.rhino.head.Node) scope27);
        scriptNode0.addChildScope(scope15);
        scriptNode0.putIntProp((int) (byte) 0, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{\n}\n" + "'", str33, "{\n}\n");
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(node36);
    }

    @Test
    public void test11862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11862");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        scriptNode51.setEndLineno(18);
        scriptNode38.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int67 = scriptNode38.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList68 = scriptNode38.getChildScopes();
        boolean boolean69 = scriptNode38.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode38.setString("3\tBLOCK 3 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertNull(scopeList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test11863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11863");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.lang.String str14 = comment10.toSource((int) (byte) 100);
        comment10.setRelative(18);
        com.google.javascript.rhino.head.ast.Scope scope17 = comment10.getEnclosingScope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        int int25 = scope19.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope26 = scope19.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope19.spliterator();
        com.google.javascript.rhino.head.ast.Symbol symbol29 = scope19.getSymbol("{\n{\n}\n}\n");
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap30 = null;
        scope19.setSymbolTable(strMap30);
        int int32 = scope19.depth();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str68 = scriptNode59.getSourceName();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode59, 26);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node55, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope73 = scriptNode59.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode59.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode75);
        scriptNode75.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Node node79 = scriptNode75.target;
        com.google.javascript.rhino.head.Node node80 = scriptNode75.getFirstChild();
        java.lang.String str81 = scriptNode75.toSource();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator82 = scriptNode75.new NodeIterator();
        comment10.addChildAfter((com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode75);
        comment10.setRelative((int) (short) -1);
        java.lang.String str86 = comment10.getValue();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str14, "                                                                                                                                                                                                        Scope");
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(symbol29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(scope73);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{\n}\n" + "'", str81, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Scope" + "'", str86, "Scope");
    }

    @Test
    public void test11864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11864");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int3 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode2.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode2.setSourceName("");
        int int8 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(22, (com.google.javascript.rhino.head.Node) scriptNode2);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = scriptNode2.iterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(nodeItor10);
    }

    @Test
    public void test11865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11865");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        scriptNode13.setEncodedSource("                        ");
        int int20 = scriptNode13.getLineno();
        com.google.javascript.rhino.head.Node node21 = scriptNode13.getNext();
        scriptNode13.setBounds(26, 24);
        com.google.javascript.rhino.head.Node node25 = scriptNode13.getLastSibling();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node25);
    }

    @Test
    public void test11866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11866");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        scriptNode37.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str51 = scriptNode37.makeIndent(0);
        java.lang.String str52 = scriptNode0.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.Node node53 = scriptNode37.target;
        scriptNode37.setEncodedSource("Comment");
        scriptNode37.putIntProp(13, 24);
        com.google.javascript.rhino.head.Node node59 = scriptNode37.getFirstChild();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node59);
    }

    @Test
    public void test11867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11867");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        java.lang.Object obj4 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scope20.setJsDocNode(comment29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode32);
        scriptNode32.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node43 = scriptNode32.target;
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        java.lang.String str45 = scriptNode1.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope49 = scope47.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node50 = scope47.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int55 = scriptNode52.getIntProp(23, (int) (short) 1);
        boolean boolean56 = scriptNode52.hasSideEffects();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope47, (com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.AstNode astNode58 = scope47.getParent();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = astNode58.getPosition();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(scope49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(astNode58);
    }

    @Test
    public void test11868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11868");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(0, "            {\n            }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test11869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11869");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(7, (-1), commentType2, "52\t  SCRIPT 0 1\n");
        int int5 = comment4.depth();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test11870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11870");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        java.lang.String str8 = scriptNode0.toString();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode0.getChildScopes();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertNull(scopeList9);
    }

    @Test
    public void test11871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11871");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scope17.setJsDocNode(comment26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode29.setPosition((int) (byte) 0);
        scriptNode29.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getParamCount();
        java.lang.String str55 = scriptNode42.debugPrint();
        int int58 = scriptNode42.getIntProp(17, 10);
        scriptNode29.setTop(scriptNode42);
        scriptNode29.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node62 = scriptNode29.getLastChild();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode29.getSymbol("");
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope66.setPosition(100);
        com.google.javascript.rhino.head.Node node70 = scope66.setType((int) (byte) 0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode29, node70);
        int int72 = scriptNode29.getType();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode29.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str55, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 136 + "'", int72 == 136);
    }

    @Test
    public void test11872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11872");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode17.setEncodedSourceEnd(11);
        java.lang.String str25 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str29 = scriptNode17.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        java.lang.String str35 = scriptNode30.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        scriptNode30.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        int int46 = scriptNode30.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        int int59 = scriptNode48.getIntProp(6, 2);
        int int60 = scriptNode48.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope64 = scope62.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node65 = scope62.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scope62.setJsDocNode(comment71);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList81 = scriptNode74.getSymbols();
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode48, (com.google.javascript.rhino.head.Node) scope62, (com.google.javascript.rhino.head.Node) scriptNode74);
        scriptNode74.setPosition((int) (byte) 0);
        scriptNode74.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray87 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList88 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList88, symbolArray87);
        scriptNode74.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList88);
        scriptNode30.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList88);
        scriptNode17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList88);
        com.google.javascript.rhino.head.ast.Symbol symbol94 = scriptNode17.getSymbol("0\tBLOCK 0 1\n");
        scriptNode17.setEndLineno(1404628457);
        scriptNode17.setBaseLineno(0);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str29, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                      " + "'", str35, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(scope64);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNotNull(symbolList81);
        org.junit.Assert.assertNotNull(symbolArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(symbol94);
    }

    @Test
    public void test11873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11873");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        scriptNode23.setPosition(18);
        int int73 = scriptNode23.getIntProp(129, (int) (short) 100);
        scriptNode23.setBaseLineno((int) (byte) 10);
        int int76 = scriptNode23.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray77 = scriptNode23.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test11874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11874");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(24, (-296494744), commentType2, "<=");
    }

    @Test
    public void test11875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11875");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = scriptNode13.getSymbolTable();
        int int28 = scriptNode13.depth();
        int int29 = scriptNode13.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node30 = scriptNode13.target;
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = scriptNode13.getAstRoot();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(astRoot31);
    }

    @Test
    public void test11876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11876");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        java.lang.String str13 = comment8.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode9, node15);
        scriptNode9.setSourceName("hi!");
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.Object obj20 = scriptNode9.getCompilerData();
        scriptNode9.setEncodedSourceEnd((int) (byte) 100);
        int int23 = scriptNode9.getLineno();
        java.lang.String str24 = scriptNode9.getJsDoc();
        java.lang.String str26 = scriptNode9.toSource(136);
        int int27 = scriptNode9.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        int int30 = scriptNode28.getBaseLineno();
        java.lang.Object obj31 = scriptNode28.getCompilerData();
        scriptNode28.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap34 = null;
        scriptNode28.setSymbolTable(strMap34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = scriptNode28.getTop();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode28.iterator();
        scriptNode9.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        scriptNode39.setEncodedSourceEnd(18);
        java.lang.String str44 = scriptNode39.makeIndent((int) '#');
        int int47 = scriptNode39.getIntProp((int) '4', 4);
        scriptNode39.setRelative(5);
        java.lang.Object obj50 = scriptNode39.getCompilerData();
        int int51 = scriptNode39.getLength();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode9, (com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        scriptNode9.putIntProp((-366869103), 1487440611);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor56 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode9.visit(nodeVisitor56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                                                                                                                                                                                                                                {\n                                                                                                                                                                                                                                                                                }\n" + "'", str26, "                                                                                                                                                                                                                                                                                {\n                                                                                                                                                                                                                                                                                }\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(scriptNode36);
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                                                                      " + "'", str44, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test11877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11877");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int18 = scope17.depth();
        scriptNode0.target = scope17;
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = scriptNode0.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = scriptNode0.getRegexpString(2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test11878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11878");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str24 = node23.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(23, node23, (com.google.javascript.rhino.head.Node) scope26, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        java.lang.String str40 = scriptNode32.debugPrint();
        scriptNode32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = null;
        scope44.setSymbolTable(strMap53);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope44);
        int int56 = scriptNode32.getLineno();
        scriptNode32.setEncodedSourceStart(19);
        int int59 = scriptNode32.depth();
        scriptNode32.setEncodedSourceBounds(17, 6);
        boolean boolean63 = scriptNode32.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node65 = scriptNode32.setType(5);
        int int66 = scriptNode32.getEncodedSourceStart();
        java.lang.String str67 = scriptNode32.debugPrint();
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str40, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 17 + "'", int66 == 17);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "-1\t  GOTO -53 1\n" + "'", str67, "-1\t  GOTO -53 1\n");
    }

    @Test
    public void test11879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11879");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = null;
        scope1.setSymbolTable(strMap10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        int int20 = scope14.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope21 = scope14.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope14.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        scope24.setPosition(2);
        int int30 = scope24.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope31 = scope24.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope24.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.Object obj36 = scriptNode33.getCompilerData();
        scriptNode33.flattenSymbolTable(false);
        scope14.addChildAfter((com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int40 = scriptNode33.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str46 = scriptNode41.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        scriptNode41.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        boolean boolean57 = scriptNode41.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = scriptNode41.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        scope1.putProp(161, (java.lang.Object) scriptNode41);
        java.lang.String str62 = scope1.toSource((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            scope1.labelId(1320165685);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                      " + "'", str46, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                    {\n                    }\n" + "'", str62, "                    {\n                    }\n");
    }

    @Test
    public void test11880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11880");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.clearParentScope();
        scriptNode28.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode39.toSource(18);
        java.lang.Object obj42 = scriptNode39.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        int int55 = scriptNode44.getIntProp(6, 2);
        int int56 = scriptNode44.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scope58.setJsDocNode(comment67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode70.getSymbols();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope58, (com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode70.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node81 = scriptNode70.target;
        scriptNode39.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode70);
        boolean boolean83 = scriptNode70.hasSideEffects();
        java.lang.String str84 = scriptNode30.toStringTree(scriptNode70);
        scriptNode70.setRelative(16);
        boolean boolean87 = scriptNode70.hasConsistentReturnUsage();
        scriptNode70.setBounds(1246415336, 934127539);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = scriptNode70.getParamOrVarName((-674152164));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                    {\n                                    }\n" + "'", str41, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test11881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11881");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        java.lang.String str14 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        int int22 = scope16.getLineno();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-51), (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = scriptNode1.new NodeIterator();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scriptNode1.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = scriptNode1.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str14, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator25);
    }

    @Test
    public void test11882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11882");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode24.getTop();
        scriptNode33.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int38 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        scriptNode39.setEncodedSourceEnd(18);
        scriptNode37.target = scriptNode39;
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str57 = scriptNode48.getSourceName();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode48, 26);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node44, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Node node61 = scriptNode48.getLastSibling();
        boolean boolean62 = scriptNode48.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode48.putProp((int) (byte) 0, (java.lang.Object) int75);
        com.google.javascript.rhino.head.Node node77 = scriptNode48.target;
        scriptNode48.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node80 = scriptNode48.getLastSibling();
        scriptNode10.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        com.google.javascript.rhino.head.ast.Comment comment86 = new com.google.javascript.rhino.head.ast.Comment(17, 3, commentType84, "                                  Scope");
        scriptNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) comment86);
        java.lang.String str88 = scriptNode48.getEncodedSource();
        int int89 = scriptNode48.getFunctionCount();
        java.lang.String str90 = scriptNode48.getSourceName();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test11883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11883");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceStart((int) ' ');
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode16.getChildScopes();
        scriptNode16.clearParentScope();
        java.lang.Object obj26 = scriptNode16.getCompilerData();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test11884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11884");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        java.lang.String str11 = scriptNode10.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = scriptNode12.getTop();
        java.lang.String str22 = scriptNode21.shortName();
        scriptNode10.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        com.google.javascript.rhino.head.ast.Comment comment24 = null;
        scriptNode21.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope27, 10);
        int int30 = scope27.getLength();
        java.lang.String str31 = scope27.toString();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ScriptNode" + "'", str22, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "129" + "'", str31, "129");
    }

    @Test
    public void test11885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11885");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(0, 136);
        java.lang.String str4 = scope2.toSource(53);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "                                                                                                          {\n                                                                                                          }\n" + "'", str4, "                                                                                                          {\n                                                                                                          }\n");
    }

    @Test
    public void test11886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11886");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        scriptNode0.setLineno(15);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor8 = scriptNode0.iterator();
        java.lang.String str9 = scriptNode0.toSource();
        int int10 = scriptNode0.getLineno();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeItor8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 15 + "'", int10 == 15);
    }

    @Test
    public void test11887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11887");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str13 = scriptNode4.getSourceName();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode4, 26);
        scriptNode2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode4);
        java.lang.String str17 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        scope20.setPosition(2);
        scope20.setLength((int) (byte) 1);
        java.lang.Object obj29 = scope20.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope20);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        scope32.setPosition(2);
        java.lang.String str38 = scope32.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = scope32.getSymbolTable();
        boolean boolean40 = scope32.hasChildren();
        com.google.javascript.rhino.head.Node node41 = scope32.getNext();
        scope20.addChildrenToFront((com.google.javascript.rhino.head.Node) scope32);
        scriptNode2.addChildToBack((com.google.javascript.rhino.head.Node) scope32);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope32, 129);
        boolean boolean46 = scope32.hasSideEffects();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator47 = scope32.new NodeIterator();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap48 = scope32.getSymbolTable();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator49 = scope32.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator49.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(strMap48);
    }

    @Test
    public void test11888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11888");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        int int17 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode0.getEnclosingFunction();
        int int19 = scriptNode0.getFunctionCount();
        int int20 = scriptNode0.getEncodedSourceStart();
        java.lang.String str21 = scriptNode0.getSourceName();
        scriptNode0.removeChildren();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(functionNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test11889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11889");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        scriptNode9.setPosition(6);
        int int12 = scriptNode9.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scriptNode9.getTop();
        int int14 = scriptNode9.getFunctionCount();
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test11890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11890");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        int int37 = scriptNode27.getAbsolutePosition();
        scriptNode27.setPosition(17);
        scriptNode27.removeChildren();
        java.lang.String str41 = scriptNode27.debugPrint();
        java.lang.String str42 = scriptNode27.shortName();
        java.lang.Object obj43 = scriptNode27.getCompilerData();
        scriptNode27.setEncodedSource("==");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "69\t  SCRIPT 17 1\n" + "'", str41, "69\t  SCRIPT 17 1\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ScriptNode" + "'", str42, "ScriptNode");
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test11891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11891");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str4 = scope2.makeIndent(0);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope6);
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment(53, 53, commentType21, "                  Scope");
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment(8, 0, commentType26, "                        {\n                        }\n");
        comment23.addChildToBack((com.google.javascript.rhino.head.Node) comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.Object obj33 = scriptNode30.getCompilerData();
        scriptNode30.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap36 = null;
        scriptNode30.setSymbolTable(strMap36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode38.toSource(18);
        int int41 = scriptNode38.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment42 = scriptNode38.getJsDocNode();
        int int43 = scriptNode38.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode38.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol49 = scope47.getSymbol("$0");
        boolean boolean50 = scope47.hasSideEffects();
        boolean boolean51 = scope47.hasChildren();
        scriptNode38.addChildToFront((com.google.javascript.rhino.head.Node) scope47);
        scriptNode30.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode38);
        int int54 = scriptNode38.getLineno();
        scriptNode38.setEncodedSource("                                                                                                                                                                                                  Scope");
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) comment28, (com.google.javascript.rhino.head.Node) scriptNode38, (-243114478));
        com.google.javascript.rhino.head.ast.Scope scope60 = scriptNode38.getDefiningScope("+=");
        scriptNode38.setEndLineno((int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                    {\n                                    }\n" + "'", str40, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(comment42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertNull(symbol49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(scope60);
    }

    @Test
    public void test11892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11892");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(161, 1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor3 = scope2.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeItor3);
    }

    @Test
    public void test11893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11893");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.lang.String str14 = comment10.toSource((int) (byte) 100);
        com.google.javascript.rhino.head.Token.CommentType commentType15 = comment10.getCommentType();
        comment10.removeProp(10);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = comment10.getExistingIntProp((-474135938));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str14, "                                                                                                                                                                                                        Scope");
        org.junit.Assert.assertNull(commentType15);
    }

    @Test
    public void test11894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11894");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        java.lang.Object obj18 = comment11.getProp((int) (short) -1);
        java.lang.String str20 = comment11.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scriptNode30.setPosition(6);
        comment11.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        int int50 = scriptNode48.getBaseLineno();
        java.lang.String str51 = scriptNode48.getNextTempName();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        java.lang.String str53 = scriptNode48.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode54.getSymbols();
        scriptNode48.setSymbols(symbolList61);
        comment11.putProp(23, (java.lang.Object) symbolList61);
        com.google.javascript.rhino.head.Token.CommentType commentType64 = comment11.getCommentType();
        com.google.javascript.rhino.head.Node node65 = comment11.getNext();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = comment11.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        comment11.setCommentType(commentType67);
        com.google.javascript.rhino.head.Token.CommentType commentType69 = comment11.getCommentType();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str53, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList61);
        org.junit.Assert.assertNull(commentType64);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNull(commentType66);
        org.junit.Assert.assertNull(commentType69);
    }

    @Test
    public void test11895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11895");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        boolean boolean10 = scriptNode5.hasSideEffects();
        com.google.javascript.rhino.head.Node node12 = scriptNode5.setType(16);
        scriptNode5.setBaseLineno(97);
        int int15 = scriptNode5.getParamCount();
        scriptNode5.setPosition(11);
        int int18 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = scriptNode5.getDefiningScope("                                                                                                      6\tSCRIPT 6 1\n");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope20);
    }

    @Test
    public void test11896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11896");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        boolean boolean9 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        java.lang.String str17 = scope11.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = scope11.getSymbolTable();
        boolean boolean19 = scope11.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scope11.target = scriptNode20;
        com.google.javascript.rhino.head.Node node31 = scriptNode20.target;
        int int32 = scriptNode20.getPosition();
        int int33 = scriptNode20.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        int int45 = scriptNode34.getIntProp(6, 2);
        int int46 = scriptNode34.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getEncodedSource();
        int int49 = scriptNode47.getBaseLineno();
        java.lang.String str50 = scriptNode47.getNextTempName();
        scriptNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        scriptNode47.setEncodedSource("                        ");
        int int54 = scriptNode47.getLineno();
        java.lang.String str55 = scriptNode20.toStringTree(scriptNode47);
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        com.google.javascript.rhino.head.Node node58 = scope1.setType(35);
        java.lang.String str59 = scope1.shortName();
        boolean boolean60 = scope1.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node61 = scope1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{\n}\n" + "'", str17, "{\n}\n");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-53) + "'", int32 == (-53));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Scope" + "'", str59, "Scope");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test11897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11897");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        scriptNode0.setSourceName("                                                                                                        Scope");
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int21 = scriptNode12.getEncodedSourceStart();
        int int22 = scriptNode12.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        comment33.setCommentType(commentType36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = comment33.getAstRoot();
        scriptNode12.setJsDocNode(comment33);
        scriptNode0.setCompilerData((java.lang.Object) scriptNode12);
        int int41 = scriptNode12.getEncodedSourceEnd();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(astRoot38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test11898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11898");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        int int25 = scriptNode0.getLineno();
        int int26 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = null;
        scope29.setTop(scriptNode33);
        scriptNode27.target = scope29;
        int int36 = scriptNode27.getEncodedSourceStart();
        int int37 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        scriptNode0.putIntProp((int) (byte) 1, 24);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scriptNode0.spliterator();
        int int42 = scriptNode0.depth();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 53 + "'", int26 == 53);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test11899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11899");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        com.google.javascript.rhino.head.Node node8 = scope1.getLastChild();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = scope1.getEnclosingFunction();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scope1.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node11 = nodeIterator10.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(functionNode9);
    }

    @Test
    public void test11900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11900");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(8);
        scriptNode1.setLineno((-1));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode4 = scriptNode1.getEnclosingFunction();
        org.junit.Assert.assertNull(functionNode4);
    }

    @Test
    public void test11901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11901");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("                                                    {\n                                                    }\n");
        java.lang.String str4 = scriptNode1.toSource();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        scope19.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node27 = scope19.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        java.lang.String str33 = scriptNode28.makeIndent((int) '#');
        scope19.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope6, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope6.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        int int52 = scriptNode50.getBaseLineno();
        java.lang.String str53 = scriptNode50.getNextTempName();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        int int55 = scriptNode37.getEndLineno();
        scope6.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str67 = scriptNode66.getEncodedSource();
        scriptNode66.setEncodedSourceEnd(18);
        java.lang.String str70 = comment65.toStringTree(scriptNode66);
        com.google.javascript.rhino.head.Node node72 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode66, node72);
        scriptNode66.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType79, "Scope");
        scriptNode76.setParent((com.google.javascript.rhino.head.ast.AstNode) comment81);
        scriptNode76.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str85 = scriptNode76.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope87 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope87.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode66, (com.google.javascript.rhino.head.Node) scriptNode76, (com.google.javascript.rhino.head.Node) scope87, (int) (byte) 10);
        scriptNode76.setEndLineno(136);
        com.google.javascript.rhino.head.Node node96 = new com.google.javascript.rhino.head.Node((-547629399), (com.google.javascript.rhino.head.Node) scriptNode76, 1278533831);
        scriptNode1.addChildrenToBack(node96);
        scriptNode1.flattenSymbolTable(false);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{\n}\n" + "'", str4, "{\n}\n");
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                      " + "'", str33, "                                                                      ");
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "$0" + "'", str53, "$0");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test11902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11902");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.String str2 = scriptNode1.getSourceName();
        scriptNode1.setSourceName("-1\tGT -1 1\n");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setBaseLineno((-54843021));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test11903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11903");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = scriptNode27.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setEndLineno(20);
        scriptNode39.removeProp((int) 'a');
        scriptNode27.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        scriptNode39.setEncodedSourceBounds(16, 52);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = scriptNode39.getSymbolTable();
        int int50 = scriptNode39.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList51 = scriptNode39.getFunctions();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 20 + "'", int50 == 20);
        org.junit.Assert.assertNotNull(functionNodeList51);
    }

    @Test
    public void test11904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11904");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode0.getTop();
        scriptNode0.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node63 = scriptNode0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(scriptNode61);
    }

    @Test
    public void test11905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11905");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str10 = scriptNode1.toSource();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode1, 5);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node13 = scriptNode1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{\n}\n" + "'", str10, "{\n}\n");
    }

    @Test
    public void test11906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11906");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        node4.removeChildren();
        node4.putIntProp(97, (-53));
        org.junit.Assert.assertNotNull(node4);
    }

    @Test
    public void test11907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11907");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        node21.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope25.setPosition(100);
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        node28.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = node28.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = scriptNode32.getTop();
        scriptNode41.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int46 = scriptNode45.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getEncodedSource();
        scriptNode47.setEncodedSourceEnd(18);
        scriptNode45.target = scriptNode47;
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = null;
        scriptNode47.setSymbols(symbolList53);
        node28.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope59 = scope57.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node60 = scope57.target;
        scope57.setPosition(2);
        scope57.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node65 = scope57.getFirstChild();
        node21.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope57);
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment(8, 1, commentType69, "$0");
        scriptNode47.setJsDocNode(comment71);
        java.lang.String str74 = comment71.toSource(11);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                      $0" + "'", str74, "                      $0");
    }

    @Test
    public void test11908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11908");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        scriptNode27.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node60 = scriptNode27.getLastChild();
        java.lang.String str61 = scriptNode27.getJsDoc();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int65 = scriptNode64.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str67 = scriptNode66.getEncodedSource();
        scriptNode66.setEncodedSourceEnd(18);
        scriptNode64.target = scriptNode66;
        com.google.javascript.rhino.head.Node node71 = scriptNode66.getFirstChild();
        scriptNode27.setTop(scriptNode66);
        int int73 = scriptNode27.getType();
        boolean boolean74 = scriptNode27.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType78 = null;
        com.google.javascript.rhino.head.ast.Comment comment80 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType78, "Scope");
        scriptNode75.setParent((com.google.javascript.rhino.head.ast.AstNode) comment80);
        scriptNode75.setEncodedSourceStart((int) (byte) 100);
        int int86 = scriptNode75.getIntProp(6, 2);
        boolean boolean87 = scriptNode75.hasChildren();
        scriptNode75.setLineno(17);
        int int90 = scriptNode75.getFunctionCount();
        java.lang.String str91 = scriptNode75.getSourceName();
        java.lang.String str92 = scriptNode75.debugPrint();
        java.lang.String str93 = scriptNode27.toStringTree(scriptNode75);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 136 + "'", int73 == 136);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str92, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test11909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11909");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(25, 1583199871);
    }

    @Test
    public void test11910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11910");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        java.lang.Object obj43 = scriptNode2.getCompilerData();
        int int44 = scriptNode2.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test11911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11911");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        java.lang.String str76 = scriptNode67.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList77 = scriptNode67.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode79);
        scriptNode79.setEndLineno(20);
        scriptNode79.removeProp((int) 'a');
        scriptNode67.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode79);
        scriptNode79.setEncodedSourceBounds(16, 52);
        scriptNode79.setEncodedSource("2\tBLOCK 2 1\n");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        com.google.javascript.rhino.head.Node node92 = scriptNode27.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope93 = scriptNode27.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(astNodeList77);
        org.junit.Assert.assertNull(node92);
    }

    @Test
    public void test11912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11912");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Node node3 = scope1.getLastChild();
        int int4 = scope1.depth();
        com.google.javascript.rhino.head.Node node5 = scope1.target;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node5);
    }

    @Test
    public void test11913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11913");
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node5 = scope4.getLastSibling();
        boolean boolean6 = node5.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node((int) 'a', node5, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode9.getSymbols();
        java.lang.String str17 = scriptNode9.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        com.google.javascript.rhino.head.Node node20 = scriptNode18.getLastSibling();
        scriptNode18.setEncodedSource("Scope");
        scriptNode18.setEndLineno(100);
        scriptNode9.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope27.putProp(25, (java.lang.Object) 100L);
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) scope27);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 1, node5, (com.google.javascript.rhino.head.Node) scope27, 52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        int int45 = scriptNode34.getIntProp(6, 2);
        int int46 = scriptNode34.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getEncodedSource();
        int int49 = scriptNode47.getBaseLineno();
        java.lang.String str50 = scriptNode47.getNextTempName();
        scriptNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        int int52 = scriptNode47.getType();
        java.lang.String str53 = scriptNode47.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode47.getSymbols();
        int int55 = scriptNode47.getFunctionCount();
        int int56 = scriptNode47.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            scope27.removeChild((com.google.javascript.rhino.head.Node) scriptNode47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str17, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "$0" + "'", str50, "$0");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 136 + "'", int52 == 136);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str53, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test11914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11914");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode11.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scope33.setJsDocNode(comment42);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        comment42.setCommentType(commentType45);
        scriptNode11.setJsDocNode(comment42);
        java.lang.String str48 = comment42.getValue();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        java.lang.String str54 = scriptNode49.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        scriptNode49.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode55);
        int int65 = scriptNode49.getRegexpCount();
        java.lang.String str66 = scriptNode49.getSourceName();
        java.lang.String str67 = scriptNode49.getNextTempName();
        java.lang.String str68 = scriptNode49.toSource();
        scriptNode49.flattenSymbolTable(false);
        comment42.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode49);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Scope" + "'", str48, "Scope");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                                                                      " + "'", str54, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "$0" + "'", str67, "$0");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{\n  {\n  }\n}\n" + "'", str68, "{\n  {\n  }\n}\n");
    }

    @Test
    public void test11915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11915");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.String str23 = scriptNode20.getNextTempName();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int25 = scriptNode20.getType();
        int int26 = scriptNode20.getParamCount();
        int int27 = scriptNode20.getLength();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.Node node29 = scriptNode20.target;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(node29);
    }

    @Test
    public void test11916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11916");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getEncodedSource();
        int int17 = scriptNode15.getBaseLineno();
        java.lang.String str18 = scriptNode15.getNextTempName();
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        int int20 = scriptNode2.getEndLineno();
        int int21 = scriptNode2.getEncodedSourceEnd();
        java.lang.String str23 = scriptNode2.toSource((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode25);
        scriptNode25.setRelative(8);
        int int29 = scriptNode25.getBaseLineno();
        scriptNode2.setTop(scriptNode25);
        int int31 = scriptNode2.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(440593346, node1, (com.google.javascript.rhino.head.Node) scriptNode2, 98666588);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "$0" + "'", str18, "$0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n{\n}\n}\n" + "'", str23, "{\n{\n}\n}\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test11917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11917");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        java.lang.String str59 = scriptNode41.shortName();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode41);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode41.getFunctions();
        scriptNode41.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.Node node64 = scriptNode41.target;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = scriptNode41.getRegexpString(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ScriptNode" + "'", str59, "ScriptNode");
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertNull(node64);
    }

    @Test
    public void test11918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11918");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        int int26 = scriptNode15.getIntProp(6, 2);
        int int27 = scriptNode15.getParamCount();
        scriptNode2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = scriptNode2.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap30 = scriptNode2.getSymbolTable();
        scriptNode2.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope38 = scriptNode35.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str39 = scriptNode35.shortName();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor53 = scope41.iterator();
        boolean boolean54 = scope41.hasSideEffects();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scope41, 8);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator57 = scriptNode35.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((-389829193), (int) (byte) 1, commentType60, "                                                                                                                                                                                                  {\n}\n");
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) comment62);
        java.lang.Object obj65 = comment62.getProp(9);
        com.google.javascript.rhino.head.Node node66 = comment62.getFirstChild();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ScriptNode" + "'", str39, "ScriptNode");
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(nodeItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator57);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(node66);
    }

    @Test
    public void test11919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11919");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        scriptNode1.setEncodedSourceEnd(18);
        java.lang.String str6 = scriptNode1.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator7 = scriptNode1.spliterator();
        int int8 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode9.getSymbols();
        java.lang.String str17 = scriptNode9.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        com.google.javascript.rhino.head.Node node20 = scriptNode18.getLastSibling();
        scriptNode18.setEncodedSource("Scope");
        scriptNode18.setEndLineno(100);
        scriptNode9.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope27.putProp(25, (java.lang.Object) 100L);
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) scope27);
        int int32 = scriptNode9.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode9.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope37 = scope35.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node38 = scope35.target;
        scope35.setPosition(2);
        scope35.putIntProp(17, 25);
        scope35.setLength((int) ' ');
        scriptNode9.replaceWith(scope35);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, scope35);
        scriptNode1.removeProp(213295120);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode78.getSymbols();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope66, (com.google.javascript.rhino.head.Node) scriptNode78);
        scriptNode78.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node89 = scriptNode78.target;
        boolean boolean90 = scriptNode78.hasChildren();
        com.google.javascript.rhino.head.Node node91 = new com.google.javascript.rhino.head.Node((-26522106), (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode78);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                      " + "'", str6, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str17, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(symbolList33);
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertNull(node89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test11920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11920");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        boolean boolean10 = scope2.hasSideEffects();
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("$0");
        node13.putIntProp(25, 1);
        com.google.javascript.rhino.head.Node node17 = node13.getFirstChild();
        scope2.putProp((int) (short) 100, (java.lang.Object) node13);
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType22, "{\n}\n");
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment24, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType27 = comment24.getCommentType();
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(9, node13, (com.google.javascript.rhino.head.Node) comment24, 17);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = comment24.new NodeIterator();
        com.google.javascript.rhino.head.Node node31 = comment24.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 100, 15);
        scope34.setPosition((int) (short) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode37.toSource(18);
        int int40 = scriptNode37.getEndLineno();
        int int41 = scriptNode37.getRegexpCount();
        scriptNode37.setEncodedSource("Scope");
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator44 = scriptNode37.new NodeIterator();
        java.lang.String str45 = scriptNode37.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        int int59 = scriptNode47.getParamCount();
        java.lang.String str60 = scriptNode47.debugPrint();
        scriptNode47.setRelative((int) '4');
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.Node node65 = com.google.javascript.rhino.head.Node.newNumber((double) 100L);
        scriptNode47.addChildToBack(node65);
        scriptNode37.setTop(scriptNode47);
        scope34.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        // The following exception was thrown during execution in test generation
        try {
            comment24.setScope(scope34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(commentType27);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                                    {\n                                    }\n" + "'", str39, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str60, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNotNull(node65);
    }

    @Test
    public void test11921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11921");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope3.setPosition(100);
        com.google.javascript.rhino.head.Node node6 = scope3.getLastSibling();
        node6.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = node6.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = null;
        scriptNode25.setSymbols(symbolList31);
        node6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str34 = scriptNode1.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        int int50 = scriptNode48.getBaseLineno();
        java.lang.String str51 = scriptNode48.getNextTempName();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode25, (com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        boolean boolean54 = scriptNode25.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode25.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode57.getEncodedSourceStart();
        scriptNode57.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode57.getSymbols();
        int int71 = scriptNode57.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode57.getSymbols();
        scriptNode25.setSymbols(symbolList72);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(symbolList55);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(symbolList72);
    }

    @Test
    public void test11922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11922");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList28 = scriptNode0.getStatements();
        java.lang.String str29 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = scriptNode32.getTop();
        scriptNode41.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int46 = scriptNode45.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getEncodedSource();
        scriptNode47.setEncodedSourceEnd(18);
        scriptNode45.target = scriptNode47;
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scriptNode56.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str65 = scriptNode56.getSourceName();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode56, 26);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node52, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scriptNode56);
        com.google.javascript.rhino.head.Node node69 = scriptNode56.getLastSibling();
        boolean boolean70 = scriptNode56.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        scriptNode72.setEncodedSourceStart((int) (byte) 100);
        int int83 = scriptNode72.getIntProp(6, 2);
        scriptNode56.putProp((int) (byte) 0, (java.lang.Object) int83);
        com.google.javascript.rhino.head.ast.AstNode astNode85 = scriptNode56.getParent();
        int int86 = scriptNode56.getEncodedSourceStart();
        java.lang.String str87 = scriptNode56.getEncodedSource();
        scriptNode56.setSourceName("129");
        int int90 = scriptNode56.getEncodedSourceEnd();
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode56);
        boolean boolean92 = scriptNode0.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(astNodeList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(astNode85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test11923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11923");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        comment5.setCommentType(commentType6);
        boolean boolean8 = comment5.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        scope10.setPosition(2);
        scope10.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        java.lang.String str32 = comment28.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = comment28.getAstRoot();
        scope10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator35 = scope10.new NodeIterator();
        com.google.javascript.rhino.head.ast.AstNode astNode36 = scope10.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int40 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        scriptNode39.target = scriptNode41;
        int int46 = scriptNode41.getParamCount();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor47 = scriptNode41.iterator();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode41, (int) (byte) 10);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(1487440611, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) scriptNode41, 1404628457);
        scriptNode41.setEncodedSourceBounds(14, 908331048);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode55.toSource(18);
        int int58 = scriptNode55.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment59 = scriptNode55.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode41.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                    Scope" + "'", str32, "                    Scope");
        org.junit.Assert.assertNull(astRoot33);
        org.junit.Assert.assertNotNull(astNode36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(nodeItor47);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "                                    {\n                                    }\n" + "'", str57, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(comment59);
    }

    @Test
    public void test11924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11924");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList28 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.Comment comment29 = scriptNode0.getJsDocNode();
        int int30 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        scope33.setLength((int) (byte) 1);
        java.lang.Object obj42 = scope33.getProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node52 = scope44.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        scriptNode53.setEncodedSourceEnd(18);
        java.lang.String str58 = scriptNode53.makeIndent((int) '#');
        scope44.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode53);
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope63 = scope61.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node64 = scope61.target;
        scope61.setPosition(2);
        scope61.putIntProp(17, 25);
        scope61.setLength((int) ' ');
        scriptNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) scope61);
        int int73 = scriptNode53.getLength();
        int int74 = scriptNode53.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 1);
        scriptNode77.clearParentScope();
        scriptNode53.putProp(0, (java.lang.Object) scriptNode77);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(51, (com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) scriptNode77, (-53));
        scriptNode0.target = scriptNode77;
        com.google.javascript.rhino.head.ast.Symbol symbol83 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.putSymbol(symbol83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(astNodeList28);
        org.junit.Assert.assertNull(comment29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                                                      " + "'", str58, "                                                                      ");
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 35 + "'", int73 == 35);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test11925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11925");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(13, 845940331);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("!");
        int int5 = scope2.depth();
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test11926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11926");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope41 = scope39.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node42 = scope39.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scope39.setJsDocNode(comment48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode51.getSymbols();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope39, (com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        scriptNode18.putIntProp((-1), 13);
        int int64 = scriptNode18.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol66 = scriptNode18.getSymbol("                                                                                                                                                                                                        Scope");
        int int67 = scriptNode18.getFunctionCount();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap68 = scriptNode18.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj72 = scriptNode71.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        int int77 = scriptNode74.getBaseLineno();
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 18 + "'", int64 == 18);
        org.junit.Assert.assertNull(symbol66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test11927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11927");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        comment27.setLength(12);
        com.google.javascript.rhino.head.Node node32 = comment27.setType(2);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(node32);
    }

    @Test
    public void test11928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11928");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        int int4 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setBounds(22, 1487440633);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = scriptNode0.getExistingIntProp(934127539);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test11929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11929");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSourceEnd(136);
        boolean boolean5 = scriptNode0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int10 = scriptNode7.getIntProp(23, (int) (short) 1);
        boolean boolean11 = scriptNode7.hasSideEffects();
        int int12 = scriptNode7.depth();
        int int13 = scriptNode7.getFunctionCount();
        int int14 = scriptNode7.getEncodedSourceEnd();
        java.lang.String str16 = scriptNode7.toSource((-547629399));
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        scriptNode0.setLineno(170200694);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
    }

    @Test
    public void test11930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11930");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode1.setSourceName("");
        java.lang.String str7 = scriptNode1.getEncodedSource();
        scriptNode1.setRelative((int) (short) 100);
        int int10 = scriptNode1.getParamCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test11931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11931");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        int int37 = scriptNode27.getAbsolutePosition();
        scriptNode27.setPosition(17);
        scriptNode27.removeChildren();
        java.lang.String str41 = scriptNode27.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode27.getTop();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope47 = scope45.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node48 = scope45.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scope45.setJsDocNode(comment54);
        java.lang.String str58 = comment54.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment54);
        java.lang.Object obj61 = comment54.getProp((int) (short) -1);
        java.lang.String str63 = comment54.makeIndent((int) (short) -1);
        java.lang.String str65 = comment54.toSource(2);
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        comment54.setCommentType(commentType66);
        scriptNode42.setJsDocNode(comment54);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode42.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "69\t  SCRIPT 17 1\n" + "'", str41, "69\t  SCRIPT 17 1\n");
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                    Scope" + "'", str58, "                    Scope");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "    Scope" + "'", str65, "    Scope");
    }

    @Test
    public void test11932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11932");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(98666588);
    }

    @Test
    public void test11933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11933");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        int int8 = scope2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope9 = scope2.getEnclosingScope();
        java.lang.String str11 = scope2.makeIndent(0);
        java.lang.String str12 = scope2.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope30 = scope28.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node31 = scope28.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scope28.setJsDocNode(comment37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode40.getSymbols();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scope28, (com.google.javascript.rhino.head.Node) scriptNode40);
        scriptNode40.setPosition((int) (byte) 0);
        scriptNode40.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scriptNode53.setEncodedSourceStart((int) (byte) 100);
        int int64 = scriptNode53.getIntProp(6, 2);
        int int65 = scriptNode53.getParamCount();
        java.lang.String str66 = scriptNode53.debugPrint();
        int int69 = scriptNode53.getIntProp(17, 10);
        scriptNode40.setTop(scriptNode53);
        int int71 = scriptNode53.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode53.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode53.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode53);
        java.lang.Object obj76 = scriptNode53.getProp(10);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "129" + "'", str12, "129");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str66, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test11934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11934");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        boolean boolean13 = scope1.hasChildren();
        java.lang.String str14 = scope1.debugPrint();
        int int15 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int20 = scriptNode17.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope22.setPosition(100);
        com.google.javascript.rhino.head.Node node25 = scope22.getLastSibling();
        node25.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = node25.spliterator();
        scriptNode17.setCompilerData((java.lang.Object) node25);
        java.lang.String str29 = scriptNode17.getSourceName();
        int int30 = scriptNode17.getEncodedSourceStart();
        scriptNode17.setEncodedSourceStart((int) (byte) 0);
        scriptNode17.setLength((int) (byte) 0);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope(2, 8);
        scriptNode17.replaceWith(scope37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        int int41 = scriptNode39.getBaseLineno();
        java.lang.Object obj42 = scriptNode39.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        java.lang.String str51 = scriptNode43.toSource(26);
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode43);
        java.lang.String str53 = scriptNode43.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol55 = scriptNode43.getSymbol("/");
        com.google.javascript.rhino.head.ast.Scope scope56 = scriptNode43.getParentScope();
        scriptNode43.setSourceName("                                        {\n                                        }\n");
        int int59 = scriptNode43.getParamCount();
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode43);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node61 = scope1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0\tBLOCK 0 1\n" + "'", str14, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                    {\n                                                    }\n" + "'", str51, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "136" + "'", str53, "136");
        org.junit.Assert.assertNull(symbol55);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test11935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11935");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        scope1.setPosition(0);
        scope1.setLength(13);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList14 = scope1.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        int int26 = scriptNode15.getIntProp(6, 2);
        int int27 = scriptNode15.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        int int39 = scriptNode28.getIntProp(6, 2);
        int int40 = scriptNode28.getParamCount();
        scriptNode15.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode15.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap43 = scriptNode15.getSymbolTable();
        int int44 = scriptNode15.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node45 = scope1.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(astNodeList14);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
    }

    @Test
    public void test11936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11936");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        int int11 = comment5.getType();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        java.lang.String str23 = comment18.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.Node node25 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode19, node25);
        scriptNode19.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = scriptNode30.getTop();
        scriptNode39.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int44 = scriptNode43.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        scriptNode45.setEncodedSourceEnd(18);
        scriptNode43.target = scriptNode45;
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode78.getSymbols();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope66, (com.google.javascript.rhino.head.Node) scriptNode78);
        com.google.javascript.rhino.head.Node node88 = scriptNode52.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scriptNode52);
        comment5.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.Token.CommentType commentType91 = comment5.getCommentType();
        java.lang.String str92 = comment5.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType93 = comment5.getCommentType();
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) comment5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 161 + "'", int11 == 161);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertNull(commentType91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Comment" + "'", str92, "Comment");
        org.junit.Assert.assertNull(commentType93);
    }

    @Test
    public void test11937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11937");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getLineno();
        java.lang.String str11 = scriptNode0.getSourceName();
        int int12 = scriptNode0.getEncodedSourceEnd();
        int int13 = scriptNode0.getRegexpCount();
        scriptNode0.setBaseLineno((int) (short) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        int int28 = scriptNode17.getIntProp(6, 2);
        int int29 = scriptNode17.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        int int41 = scriptNode30.getIntProp(6, 2);
        int int42 = scriptNode30.getParamCount();
        scriptNode17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode17.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap45 = scriptNode17.getSymbolTable();
        scriptNode17.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int51 = scriptNode50.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope53 = scriptNode50.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str54 = scriptNode50.shortName();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope58 = scope56.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node59 = scope56.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scope56.setJsDocNode(comment65);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor68 = scope56.iterator();
        boolean boolean69 = scope56.hasSideEffects();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scope56, 8);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator72 = scriptNode50.spliterator();
        int int73 = scriptNode50.getRegexpCount();
        java.lang.String str74 = scriptNode50.getJsDoc();
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        java.lang.String str76 = scriptNode0.getSourceName();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ScriptNode" + "'", str54, "ScriptNode");
        org.junit.Assert.assertNull(scope58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(nodeItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test11938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11938");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        int int8 = scope2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope9 = scope2.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scope2.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        scope12.setPosition(2);
        int int18 = scope12.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope19 = scope12.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope12.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.Object obj24 = scriptNode21.getCompilerData();
        scriptNode21.flattenSymbolTable(false);
        scope2.addChildAfter((com.google.javascript.rhino.head.Node) scope12, (com.google.javascript.rhino.head.Node) scriptNode21);
        int int28 = scriptNode21.getLength();
        scriptNode21.removeProp(6);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(13, 8);
        scriptNode21.addChildToBack(node33);
        int int35 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope38.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope58 = scope56.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node59 = scope56.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scope56.setJsDocNode(comment65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = scriptNode68.getSymbols();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scope56, (com.google.javascript.rhino.head.Node) scriptNode68);
        scriptNode68.setPosition((int) (byte) 0);
        scope38.setTop(scriptNode68);
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode68);
        scriptNode21.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode68);
        com.google.javascript.rhino.head.ast.AstNode astNode82 = scriptNode68.getParent();
        com.google.javascript.rhino.head.ast.Symbol symbol84 = scriptNode68.getSymbol("  Scope");
        java.lang.Object obj85 = scriptNode68.getCompilerData();
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode68, 934127539);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(scope58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(symbolList75);
        org.junit.Assert.assertNotNull(astNode82);
        org.junit.Assert.assertNull(symbol84);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test11939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11939");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.Node node25 = scriptNode16.setType((int) (byte) 10);
        scriptNode16.clearParentScope();
        boolean boolean27 = scriptNode16.hasChildren();
        scriptNode16.setSourceName("                                                                                                                                                                                                        ");
        int int30 = scriptNode16.getParamCount();
        int int31 = scriptNode16.depth();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test11940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11940");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 100, 8);
        boolean boolean3 = scope2.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            scope2.labelId(51160157);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test11941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11941");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str13 = scriptNode4.getSourceName();
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode4, 26);
        scriptNode2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode4);
        java.lang.String str17 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        scope20.setPosition(2);
        scope20.setLength((int) (byte) 1);
        java.lang.Object obj29 = scope20.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope20);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        scope32.setPosition(2);
        java.lang.String str38 = scope32.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = scope32.getSymbolTable();
        boolean boolean40 = scope32.hasChildren();
        com.google.javascript.rhino.head.Node node41 = scope32.getNext();
        scope20.addChildrenToFront((com.google.javascript.rhino.head.Node) scope32);
        scriptNode2.addChildToBack((com.google.javascript.rhino.head.Node) scope32);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) scope32, 129);
        boolean boolean46 = scope32.hasSideEffects();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator47 = scope32.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator47.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test11942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11942");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 4");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11943");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str5 = scope3.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str18 = scriptNode9.getSourceName();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode9, 26);
        scriptNode7.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode9);
        java.lang.String str22 = scriptNode7.getNextTempName();
        scope3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        boolean boolean24 = scriptNode7.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getRegexpCount();
        java.lang.String str38 = scriptNode25.getSourceName();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode25, 16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = scriptNode25.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(161, (com.google.javascript.rhino.head.Node) astRoot41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(astRoot41);
    }

    @Test
    public void test11944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11944");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.Node node60 = scriptNode45.getLastChild();
        scriptNode45.setBaseLineno(26);
        java.lang.String str64 = scriptNode45.makeIndent(24);
        com.google.javascript.rhino.head.ast.Comment comment65 = scriptNode45.getJsDocNode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                                " + "'", str64, "                                                ");
        org.junit.Assert.assertNull(comment65);
    }

    @Test
    public void test11945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11945");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scriptNode1.getSymbol("^");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        com.google.javascript.rhino.head.Node node7 = scriptNode5.getLastSibling();
        scriptNode5.setEncodedSource("Scope");
        scriptNode5.setEndLineno(100);
        scriptNode5.putIntProp(14, 3);
        java.lang.String str15 = scriptNode1.toStringTree(scriptNode5);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor16 = scriptNode1.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str52 = scriptNode43.getSourceName();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode43, 26);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node39, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.Node node56 = scriptNode43.getLastSibling();
        boolean boolean57 = scriptNode43.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.setEncodedSourceStart((int) (byte) 100);
        int int70 = scriptNode59.getIntProp(6, 2);
        scriptNode43.putProp((int) (byte) 0, (java.lang.Object) int70);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str73 = scriptNode72.getEncodedSource();
        int int74 = scriptNode72.getBaseLineno();
        java.lang.String str75 = scriptNode72.getNextTempName();
        scriptNode72.setLength((int) 'a');
        int int78 = scriptNode72.depth();
        scriptNode43.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode72);
        scriptNode72.setSourceName("0\tBLOCK 0 1\n-1\tSCRIPT -1 1\n");
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode72);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode72.labelId((-474135938));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(nodeItor16);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "$0" + "'", str75, "$0");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test11946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11946");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        java.lang.String str40 = comment35.toStringTree(scriptNode36);
        boolean boolean41 = scriptNode36.hasSideEffects();
        java.lang.String str42 = scriptNode36.getEncodedSource();
        com.google.javascript.rhino.head.ast.AstNode astNode43 = scriptNode36.getParent();
        scriptNode23.target = scriptNode36;
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 19);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode23.setDefault((com.google.javascript.rhino.head.Node) scope47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(astNode43);
    }

    @Test
    public void test11947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11947");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        boolean boolean13 = scope1.hasChildren();
        boolean boolean14 = scope1.hasChildren();
        com.google.javascript.rhino.head.Node node15 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope17 = scope1.getDefiningScope("22\tSCRIPT 22 1\n");
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor18 = scope1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node19 = nodeItor18.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNotNull(nodeItor18);
    }

    @Test
    public void test11948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11948");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(23, 701595233);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor3 = scope2.iterator();
        org.junit.Assert.assertNotNull(nodeItor3);
    }

    @Test
    public void test11949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11949");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        comment11.setCommentType(commentType14);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment11, 14);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        scope21.setPosition(2);
        scope21.setLength((int) (byte) 1);
        java.lang.Object obj30 = scope21.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope21);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        java.lang.String str39 = scope33.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = scope33.getSymbolTable();
        boolean boolean41 = scope33.hasChildren();
        com.google.javascript.rhino.head.Node node42 = scope33.getNext();
        scope21.addChildrenToFront((com.google.javascript.rhino.head.Node) scope33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = scriptNode44.getTop();
        scriptNode53.setPosition(6);
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType58, "{\n}\n");
        java.lang.String str61 = comment60.getValue();
        comment60.setLength(129);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) scope21, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) comment60);
        comment11.addChildToFront(node64);
        boolean boolean66 = comment11.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scriptNode68.setEncodedSourceStart((int) (byte) 100);
        int int77 = scriptNode68.getEncodedSourceStart();
        scriptNode68.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList81 = scriptNode68.getSymbols();
        scriptNode68.setEncodedSourceBounds((int) (byte) 10, (int) (short) 1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode68.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int89 = scriptNode88.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope91 = scriptNode88.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode88.setSourceName("");
        int int94 = scriptNode88.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node96 = new com.google.javascript.rhino.head.Node((-7), (com.google.javascript.rhino.head.Node) scriptNode88, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            comment11.replaceChild((com.google.javascript.rhino.head.Node) scriptNode68, node96);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{\n}\n" + "'", str39, "{\n}\n");
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(scriptNode53);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertNotNull(symbolList81);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(scope91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test11950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11950");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        scope23.setPosition(2);
        int int29 = scope23.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope30 = scope23.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope23.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        int int39 = scope33.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope40 = scope33.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scope33.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        scriptNode42.flattenSymbolTable(false);
        scope23.addChildAfter((com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str50 = scriptNode42.makeIndent((-1));
        scope1.target = scriptNode42;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode42.setString("5");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test11951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11951");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (short) 1, "129");
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator3 = node2.spliterator();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(nodeSpliterator3);
    }

    @Test
    public void test11952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11952");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.setEndLineno(5);
        java.lang.String str11 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.Symbol symbol12 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.putSymbol(symbol12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test11953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11953");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode13.getType();
        int int19 = scriptNode13.getParamCount();
        int int20 = scriptNode13.getLength();
        int int21 = scriptNode13.getFunctionCount();
        java.lang.Object obj22 = scriptNode13.getCompilerData();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode13.getChildScopes();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(scopeList23);
    }

    @Test
    public void test11954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11954");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList7 = scriptNode0.getStatements();
        int int8 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode21 = scriptNode9.getParent();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        int int35 = scriptNode32.getParamCount();
        astNode21.putProp((-769830162), (java.lang.Object) scriptNode32);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = scriptNode0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(astNodeList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(astNode21);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test11955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11955");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode0.shortName();
        int int15 = scriptNode0.getLength();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = scriptNode0.getFunctionNode(15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ScriptNode" + "'", str14, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-51) + "'", int15 == (-51));
    }

    @Test
    public void test11956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11956");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        int int37 = scriptNode27.getAbsolutePosition();
        scriptNode27.setPosition(17);
        scriptNode27.removeChildren();
        java.lang.String str41 = scriptNode27.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode27.getTop();
        int int43 = scriptNode27.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope47 = scope45.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node48 = scope45.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scope45.setJsDocNode(comment54);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        scope58.setPosition(2);
        scope58.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node66 = scope58.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str68 = scriptNode67.getEncodedSource();
        scriptNode67.setEncodedSourceEnd(18);
        java.lang.String str72 = scriptNode67.makeIndent((int) '#');
        scope58.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode67);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope45, (com.google.javascript.rhino.head.ast.Scope) scriptNode67);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList75 = scriptNode67.getStatements();
        int int76 = scriptNode67.depth();
        scriptNode67.setEndLineno(135381063);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList79 = scriptNode67.getFunctions();
        java.lang.String str80 = scriptNode27.toStringTree(scriptNode67);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "69\t  SCRIPT 17 1\n" + "'", str41, "69\t  SCRIPT 17 1\n");
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                                                                      " + "'", str72, "                                                                      ");
        org.junit.Assert.assertNotNull(astNodeList75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(functionNodeList79);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test11957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11957");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType2, "41");
        comment4.putProp((int) (byte) -1, (java.lang.Object) 100.0d);
        com.google.javascript.rhino.head.Token.CommentType commentType8 = comment4.getCommentType();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        java.lang.String str25 = comment21.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment21);
        java.lang.Object obj28 = comment21.getProp((int) (short) -1);
        java.lang.String str30 = comment21.makeIndent((int) (short) -1);
        java.lang.String str32 = comment21.toSource(2);
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        comment21.setCommentType(commentType33);
        java.lang.Object obj36 = comment21.getProp(0);
        comment4.putProp((-1324633820), (java.lang.Object) 0);
        org.junit.Assert.assertNull(commentType8);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    Scope" + "'", str25, "                    Scope");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "    Scope" + "'", str32, "    Scope");
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test11958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11958");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        java.lang.String str90 = scriptNode0.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol92 = scriptNode0.getSymbol("                                                                                                                                                                                                        Scope");
        int int93 = scriptNode0.getFunctionCount();
        boolean boolean94 = scriptNode0.hasSideEffects();
        java.lang.String str95 = scriptNode0.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope96 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "136" + "'", str90, "136");
        org.junit.Assert.assertNull(symbol92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "$0" + "'", str95, "$0");
    }

    @Test
    public void test11959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11959");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.Node node6 = scriptNode1.setType(0);
        int int7 = scriptNode1.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 11 + "'", int7 == 11);
    }

    @Test
    public void test11960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11960");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        int int11 = scriptNode0.getLength();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = scriptNode0.getExistingIntProp((-1805289491));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test11961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11961");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        scope1.setPosition(5);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor26 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope1.visit(nodeVisitor26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test11962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11962");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = null;
        scriptNode0.setSymbolTable(strMap6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = scriptNode0.getTop();
        com.google.javascript.rhino.head.Node node9 = scriptNode8.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode8.labelId((-51099649));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(node9);
    }

    @Test
    public void test11963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11963");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment9 = scriptNode0.getJsDocNode();
        int int10 = scriptNode0.getLength();
        int int11 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope12 = scriptNode0.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot13 = scope12.getAstRoot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(comment9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(scope12);
    }

    @Test
    public void test11964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11964");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList37 = scriptNode27.getStatements();
        java.lang.String str38 = scriptNode27.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.clearParentScope();
        scriptNode42.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node53 = scriptNode42.target;
        scriptNode42.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        scriptNode55.setEncodedSourceEnd(18);
        java.lang.String str60 = scriptNode55.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        scriptNode55.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode61);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode42, (com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap72 = scriptNode55.getSymbolTable();
        scope41.setSymbolTable(strMap72);
        scriptNode27.setSymbolTable(strMap72);
        int int75 = scriptNode27.getFunctionCount();
        int int76 = scriptNode27.getFunctionCount();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(astNodeList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "                                                                      " + "'", str60, "                                                                      ");
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test11965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11965");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        node21.removeProp(0);
        boolean boolean24 = node21.hasSideEffects();
        int int27 = node21.getIntProp((int) '4', 4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = node21.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 4 + "'", int27 == 4);
    }

    @Test
    public void test11966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11966");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.Object obj42 = scriptNode26.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode26.getChildScopes();
        int int44 = scriptNode26.getFunctionCount();
        int int45 = scriptNode26.getFunctionCount();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test11967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11967");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = scriptNode10.getSymbols();
        int int28 = scriptNode10.getParamCount();
        java.lang.String str29 = scriptNode10.getSourceName();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode10.visit(nodeVisitor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(symbolList27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test11968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11968");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        comment11.setCommentType(commentType14);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment11, 14);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = comment11.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        comment11.setCommentType(commentType19);
        int int21 = comment11.getAbsolutePosition();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(commentType18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
    }

    @Test
    public void test11969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11969");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        java.lang.String str40 = scriptNode26.toSource();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = scriptNode26.getParent();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
        org.junit.Assert.assertNotNull(astNode41);
    }

    @Test
    public void test11970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11970");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        int int37 = scriptNode27.getAbsolutePosition();
        scriptNode27.setPosition(17);
        scriptNode27.removeChildren();
        java.lang.String str41 = scriptNode27.debugPrint();
        java.lang.String str42 = scriptNode27.shortName();
        scriptNode27.setEncodedSourceBounds(12, (-389829193));
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.setEndLineno((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "69\t  SCRIPT 17 1\n" + "'", str41, "69\t  SCRIPT 17 1\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ScriptNode" + "'", str42, "ScriptNode");
    }

    @Test
    public void test11971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11971");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        scriptNode17.putIntProp((-1), 13);
        int int63 = scriptNode17.getEncodedSourceEnd();
        java.lang.String str64 = scriptNode17.shortName();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((-25), (com.google.javascript.rhino.head.Node) scriptNode17);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 18 + "'", int63 == 18);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ScriptNode" + "'", str64, "ScriptNode");
    }

    @Test
    public void test11972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11972");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(226035720);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope7 = scope5.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node8 = scope5.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = null;
        scope5.setTop(scriptNode9);
        scriptNode3.target = scope5;
        java.lang.String str13 = scriptNode3.toSource((int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType16, "41");
        java.lang.String str19 = comment18.getValue();
        scriptNode3.setJsDocNode(comment18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        int int33 = scriptNode22.getIntProp(6, 2);
        int int34 = scriptNode22.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        scriptNode22.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode35);
        scriptNode35.setEncodedSourceStart((int) (byte) 1);
        scriptNode35.setEncodedSource("                                                                                                                                                                                                        Scope");
        int int53 = scriptNode35.depth();
        scriptNode35.setEncodedSourceEnd((int) (byte) 0);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(34756133, (com.google.javascript.rhino.head.Node) scriptNode35, 20);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(845940330, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode3, node57, 180367011);
        com.google.javascript.rhino.head.ast.Symbol symbol61 = scriptNode3.getSymbol("        {\n        }\n");
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str13, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "41" + "'", str19, "41");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNull(symbol61);
    }

    @Test
    public void test11973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11973");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scriptNode0.getParent();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scriptNode0.iterator();
        boolean boolean14 = nodeItor13.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node15 = nodeItor13.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(astNode12);
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test11974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11974");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode26.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        scriptNode42.clearParentScope();
        com.google.javascript.rhino.head.ast.AstNode astNode45 = scriptNode42.getParent();
        // The following exception was thrown during execution in test generation
        try {
            int int46 = astNode45.getLength();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(astNode45);
    }

    @Test
    public void test11975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11975");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        scriptNode37.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str51 = scriptNode37.makeIndent(0);
        java.lang.String str52 = scriptNode0.toStringTree(scriptNode37);
        java.lang.String str54 = scriptNode37.makeIndent(12);
        int int55 = scriptNode37.getParamCount();
        scriptNode37.removeProp(100);
        int int58 = scriptNode37.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                        " + "'", str54, "                        ");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test11976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11976");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        scriptNode20.setBaseLineno(23);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList25 = scriptNode20.getStatements();
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertNotNull(astNodeList25);
    }

    @Test
    public void test11977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11977");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        scriptNode28.setEncodedSourceStart(7);
        boolean boolean64 = scriptNode28.hasChildren();
        com.google.javascript.rhino.head.ast.Symbol symbol66 = scriptNode28.getSymbol("                                  {\n                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = scriptNode28.getTop();
        scriptNode67.setBaseLineno(272356811);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(symbol66);
        org.junit.Assert.assertNotNull(scriptNode67);
    }

    @Test
    public void test11978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11978");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scope2.getSymbolTable();
        boolean boolean10 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scope2.target = scriptNode11;
        com.google.javascript.rhino.head.Node node22 = scriptNode11.target;
        scriptNode11.setBaseLineno(10);
        scriptNode11.setEncodedSourceEnd((int) (short) -1);
        int int27 = scriptNode11.getParamCount();
        com.google.javascript.rhino.head.Node node29 = scriptNode11.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.Object obj33 = scriptNode30.getCompilerData();
        scriptNode30.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap36 = null;
        scriptNode30.setSymbolTable(strMap36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode30.getTop();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int40 = scriptNode30.getLineno();
        boolean boolean41 = scriptNode30.hasChildren();
        scriptNode30.setEncodedSource("in");
        com.google.javascript.rhino.head.ast.Scope scope45 = scriptNode30.getDefiningScope("                                      {\n                                        {\n                                        }\n                                      }\n");
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scope45);
    }

    @Test
    public void test11979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11979");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        scriptNode4.clearParentScope();
        int int15 = scriptNode4.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode17.getSymbols();
        java.lang.String str25 = scriptNode17.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        int int38 = scriptNode27.getIntProp(6, 2);
        int int39 = scriptNode27.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode53.getSymbols();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) scriptNode53);
        scriptNode53.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node64 = scriptNode53.target;
        scriptNode53.setBounds(16, 13);
        scriptNode53.clearParentScope();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode53, 3);
        int int71 = scriptNode17.depth();
        scriptNode4.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        boolean boolean73 = scriptNode17.hasChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator74 = scriptNode17.spliterator();
        com.google.javascript.rhino.head.Node node75 = scriptNode17.getLastSibling();
        java.lang.Object obj77 = node75.getProp((-51));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str25, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test11980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11980");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode1.setLineno(12);
        java.lang.String str38 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode40.getSymbols();
        java.lang.String str48 = scriptNode40.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scriptNode50.setEncodedSourceStart((int) (byte) 100);
        int int61 = scriptNode50.getIntProp(6, 2);
        int int62 = scriptNode50.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope66 = scope64.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node67 = scope64.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scope64.setJsDocNode(comment73);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType79, "Scope");
        scriptNode76.setParent((com.google.javascript.rhino.head.ast.AstNode) comment81);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList83 = scriptNode76.getSymbols();
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scope64, (com.google.javascript.rhino.head.Node) scriptNode76);
        scriptNode76.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node87 = scriptNode76.target;
        scriptNode76.setBounds(16, 13);
        scriptNode76.clearParentScope();
        com.google.javascript.rhino.head.Node node93 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scriptNode76, 3);
        com.google.javascript.rhino.head.Node node94 = scriptNode76.getNext();
        scriptNode1.setTop(scriptNode76);
        int int96 = scriptNode1.getLineno();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "$0" + "'", str38, "$0");
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str48, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(scope66);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNotNull(symbolList83);
        org.junit.Assert.assertNull(node87);
        org.junit.Assert.assertNull(node94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 12 + "'", int96 == 12);
    }

    @Test
    public void test11981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11981");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        scriptNode51.setEndLineno(18);
        scriptNode38.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int67 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str68 = scriptNode0.debugPrint();
        java.lang.String str69 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node node70 = scriptNode0.target;
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str68, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(node70);
    }

    @Test
    public void test11982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11982");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = scriptNode0.new NodeIterator();
        boolean boolean10 = scriptNode0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node11 = scriptNode0.getLastChild();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test11983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11983");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        scriptNode1.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode1.setLineno((int) '#');
        com.google.javascript.rhino.head.ast.Scope scope18 = scriptNode1.getEnclosingScope();
        java.lang.String str19 = scriptNode1.getNextTempName();
        int int20 = scriptNode1.getFunctionCount();
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scriptNode1, 16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int32 = scriptNode23.getEncodedSourceStart();
        scriptNode23.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = scriptNode23.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.removeChild((com.google.javascript.rhino.head.Node) scriptNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNull(functionNode35);
    }

    @Test
    public void test11984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11984");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        int int2 = scriptNode1.getAbsolutePosition();
        int int3 = scriptNode1.getLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 6 + "'", int2 == 6);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test11985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11985");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("                                                    {\n                                                    }\n");
        java.lang.String str4 = scriptNode1.debugPrint();
        java.lang.String str5 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.getNext();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope10.getParentScope();
        scriptNode6.addChildScope(scope10);
        int int16 = scriptNode6.getBaseLineno();
        java.lang.String str17 = scriptNode1.toStringTree(scriptNode6);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap18 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str55 = scriptNode46.getSourceName();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode46, 26);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node42, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap59 = null;
        scriptNode46.setSymbolTable(strMap59);
        java.lang.Object obj62 = scriptNode46.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList63 = scriptNode46.getChildScopes();
        int int64 = scriptNode46.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        int int68 = scope67.depth();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope67, 8);
        scriptNode46.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.AstNode astNode73 = scriptNode46.getParent();
        java.lang.String str74 = scriptNode1.toStringTree(scriptNode46);
        scriptNode46.flattenSymbolTable(false);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0\tSCRIPT 0 1\n" + "'", str4, "0\tSCRIPT 0 1\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ScriptNode" + "'", str5, "ScriptNode");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(scopeList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(astNode73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test11986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11986");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(754207379);
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newNumber((double) 5);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode7.getEncodedSourceStart();
        int int17 = scriptNode7.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        int int33 = scriptNode31.getBaseLineno();
        java.lang.String str34 = scriptNode31.getNextTempName();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = scriptNode38.getTop();
        scriptNode47.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int52 = scriptNode51.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        scriptNode53.setEncodedSourceEnd(18);
        scriptNode51.target = scriptNode53;
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode59.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scriptNode62.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str71 = scriptNode62.getSourceName();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode62, 26);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node58, (com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scriptNode62);
        node74.setLineno(5);
        scriptNode18.setCompilerData((java.lang.Object) node74);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope6, (com.google.javascript.rhino.head.Node) scriptNode7, node74);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope82 = scope80.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node83 = scope80.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType87 = null;
        com.google.javascript.rhino.head.ast.Comment comment89 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType87, "Scope");
        scriptNode84.setParent((com.google.javascript.rhino.head.ast.AstNode) comment89);
        scope80.setJsDocNode(comment89);
        com.google.javascript.rhino.head.Token.CommentType commentType92 = null;
        comment89.setCommentType(commentType92);
        com.google.javascript.rhino.head.ast.AstRoot astRoot94 = comment89.getAstRoot();
        scope6.setJsDocNode(comment89);
        boolean boolean96 = comment89.hasConsistentReturnUsage();
        node3.setJsDocNode(comment89);
        java.lang.String str98 = comment89.debugPrint();
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) comment89);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "$0" + "'", str34, "$0");
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(scope82);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertNull(astRoot94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str98, "52\tCOMMENT 52 6\n");
    }

    @Test
    public void test11987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11987");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        scriptNode0.flattenSymbolTable(false);
        java.lang.String str5 = scriptNode0.shortName();
        scriptNode0.setEncodedSource("                  {\n                  }\n");
        com.google.javascript.rhino.head.ast.Symbol symbol8 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.putSymbol(symbol8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ScriptNode" + "'", str5, "ScriptNode");
    }

    @Test
    public void test11988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11988");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        int int56 = scriptNode26.getEncodedSourceStart();
        java.lang.String str57 = scriptNode26.getEncodedSource();
        scriptNode26.setSourceName("129");
        com.google.javascript.rhino.head.ast.AstNode astNode60 = scriptNode26.getParent();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(astNode60);
    }

    @Test
    public void test11989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11989");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (byte) 10, "                {\n                }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        int int5 = scriptNode3.getBaseLineno();
        java.lang.Object obj6 = scriptNode3.getCompilerData();
        scriptNode3.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = null;
        scriptNode3.setSymbolTable(strMap9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str13 = scriptNode11.toSource(18);
        int int14 = scriptNode11.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment15 = scriptNode11.getJsDocNode();
        int int16 = scriptNode11.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol22 = scope20.getSymbol("$0");
        boolean boolean23 = scope20.hasSideEffects();
        boolean boolean24 = scope20.hasChildren();
        scriptNode11.addChildToFront((com.google.javascript.rhino.head.Node) scope20);
        scriptNode3.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        int int27 = scriptNode11.getLineno();
        scriptNode11.setEncodedSource("                                                                                                                                                                                                  Scope");
        node2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        int int31 = scriptNode11.getRegexpCount();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                    {\n                                    }\n" + "'", str13, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(comment15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertNull(symbol22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test11990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11990");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.clearParentScope();
        java.lang.String[] strArray29 = scriptNode20.getParamAndVarNames();
        java.lang.Object obj30 = scriptNode20.getCompilerData();
        java.lang.String str31 = scriptNode20.shortName();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ScriptNode" + "'", str31, "ScriptNode");
    }

    @Test
    public void test11991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11991");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        java.lang.String str13 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope30 = scope28.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node31 = scope28.target;
        scope28.setPosition(2);
        scope28.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node36 = scope28.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        java.lang.String str42 = scriptNode37.makeIndent((int) '#');
        scope28.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope15, (com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope45 = scope15.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode59.getEncodedSource();
        int int61 = scriptNode59.getBaseLineno();
        java.lang.String str62 = scriptNode59.getNextTempName();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        int int64 = scriptNode46.getEndLineno();
        scope15.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode46);
        scriptNode0.addChildScope(scope15);
        scriptNode0.setEncodedSourceEnd(53);
        int int69 = scriptNode0.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            double double70 = scriptNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                      " + "'", str42, "                                                                      ");
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 53 + "'", int69 == 53);
    }

    @Test
    public void test11992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11992");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        boolean boolean12 = scriptNode0.hasChildren();
        scriptNode0.setLineno(17);
        java.lang.String str16 = scriptNode0.toSource((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, scope19);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode0.getSymbols();
        java.lang.String str23 = scriptNode0.toSource(9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                  {\n                  }\n" + "'", str23, "                  {\n                  }\n");
    }

    @Test
    public void test11993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11993");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.Symbol symbol40 = scriptNode0.getSymbol("                        {\n                        }\n");
        java.lang.String str41 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        int int57 = scriptNode55.getBaseLineno();
        java.lang.String str58 = scriptNode55.getNextTempName();
        scriptNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        int int60 = scriptNode55.getType();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode55.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scriptNode62.setEncodedSourceStart((int) (byte) 100);
        int int73 = scriptNode62.getIntProp(6, 2);
        int int74 = scriptNode62.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str76 = scriptNode75.getEncodedSource();
        int int77 = scriptNode75.getBaseLineno();
        java.lang.String str78 = scriptNode75.getNextTempName();
        scriptNode62.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        java.lang.String str80 = scriptNode75.toSource();
        scriptNode55.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode75);
        scriptNode55.setLineno((int) (byte) 1);
        boolean boolean84 = scriptNode55.hasSideEffects();
        scriptNode0.setTop(scriptNode55);
        scriptNode55.setEncodedSource("                                                                                                                                                                                                  ");
        java.lang.String str88 = scriptNode55.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(symbol40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 136 + "'", int60 == 136);
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$0" + "'", str78, "$0");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "{\n}\n" + "'", str80, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "136" + "'", str88, "136");
    }

    @Test
    public void test11994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11994");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        int int5 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = scriptNode6.getSymbols();
        java.lang.String str14 = scriptNode6.debugPrint();
        scriptNode6.setBaseLineno((int) (byte) 10);
        java.lang.String str17 = scriptNode6.getSourceName();
        java.lang.String str18 = scriptNode6.getEncodedSource();
        scriptNode0.target = scriptNode6;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode20.toSource(18);
        int int23 = scriptNode20.getEndLineno();
        int int24 = scriptNode20.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        int int38 = scriptNode27.getIntProp(6, 2);
        int int39 = scriptNode27.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode53.getSymbols();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) scriptNode53);
        scriptNode53.setPosition((int) (byte) 0);
        scriptNode53.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        int int77 = scriptNode66.getIntProp(6, 2);
        int int78 = scriptNode66.getParamCount();
        java.lang.String str79 = scriptNode66.debugPrint();
        int int82 = scriptNode66.getIntProp(17, 10);
        scriptNode53.setTop(scriptNode66);
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode53);
        scriptNode53.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        scriptNode20.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList88 = scriptNode53.getStatements();
        int int89 = scriptNode53.getFunctionCount();
        scriptNode0.setCompilerData((java.lang.Object) int89);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setString("21\tBLOCK 21 -73\n-1\t  SCRIPT -22 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(symbolList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str14, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                    {\n                                    }\n" + "'", str22, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str79, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertNotNull(astNodeList88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test11995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11995");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean22 = scriptNode5.hasChildren();
        scriptNode5.setBaseLineno(4);
        java.lang.String str25 = scriptNode5.getNextTempName();
        int int26 = scriptNode5.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = scriptNode5.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope28 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$1" + "'", str25, "$1");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(astRoot27);
    }

    @Test
    public void test11996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11996");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = scriptNode18.getTop();
        scriptNode27.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        scriptNode33.setEncodedSourceEnd(18);
        scriptNode31.target = scriptNode33;
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node76 = scriptNode40.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.Node node78 = scriptNode40.target;
        scriptNode40.setEncodedSourceStart(0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(node78);
    }

    @Test
    public void test11997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11997");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        com.google.javascript.rhino.head.ast.Comment comment5 = scope2.getJsDocNode();
        scope2.clearParentScope();
        int int7 = scope2.getLineno();
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertNull(comment5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test11998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11998");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        java.lang.String str43 = scriptNode2.getNextTempName();
        java.lang.String str45 = scriptNode2.toSource(23);
        com.google.javascript.rhino.head.ast.Scope scope47 = scriptNode2.getDefiningScope("                                                                                                          ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                                              {\n                                              }\n" + "'", str45, "                                              {\n                                              }\n");
        org.junit.Assert.assertNull(scope47);
    }

    @Test
    public void test11999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11999");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = null;
        scope1.setTop(scriptNode5);
        scope1.setBounds(7, 17);
        com.google.javascript.rhino.head.ast.Scope scope10 = scope1.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node11 = scope10.target;
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope10);
    }

    @Test
    public void test12000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test12000");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scope2.getSymbolTable();
        boolean boolean10 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scope2.target = scriptNode11;
        com.google.javascript.rhino.head.Node node22 = scriptNode11.target;
        int int23 = scriptNode11.getPosition();
        int int24 = scriptNode11.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        int int40 = scriptNode38.getBaseLineno();
        java.lang.String str41 = scriptNode38.getNextTempName();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        scriptNode38.setEncodedSource("                        ");
        int int45 = scriptNode38.getLineno();
        java.lang.String str46 = scriptNode11.toStringTree(scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 0, 21, commentType49, "");
        comment51.setRelative(3);
        scriptNode11.setCompilerData((java.lang.Object) comment51);
        java.lang.String str55 = comment51.shortName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = comment51.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) astRoot56, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-53) + "'", int23 == (-53));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Comment" + "'", str55, "Comment");
        org.junit.Assert.assertNull(astRoot56);
    }
}
