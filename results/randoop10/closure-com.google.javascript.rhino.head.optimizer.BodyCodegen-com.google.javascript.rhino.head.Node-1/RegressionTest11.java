import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest11 {

    public static boolean debug = false;

    @Test
    public void test05501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05501");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType3, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str11 = scriptNode6.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = comment5.getEnclosingFunction();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = comment5.getCommentType();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                                      " + "'", str11, "                                                                      ");
        org.junit.Assert.assertNull(functionNode13);
        org.junit.Assert.assertNull(commentType14);
    }

    @Test
    public void test05502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05502");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType2, "hi!");
        com.google.javascript.rhino.head.Node node5 = comment4.getLastSibling();
        boolean boolean6 = node5.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        int int9 = scriptNode7.getBaseLineno();
        java.lang.Object obj10 = scriptNode7.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        java.lang.String str19 = scriptNode11.toSource(26);
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.lang.String str21 = scriptNode11.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        java.lang.String str32 = scriptNode31.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode33.getTop();
        java.lang.String str43 = scriptNode42.shortName();
        scriptNode31.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str46 = scriptNode31.makeIndent(6);
        scriptNode31.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        scriptNode11.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode31);
        int int51 = scriptNode31.getEncodedSourceEnd();
        scriptNode31.setLineno(35);
        scriptNode31.setEndLineno(0);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scope58.setJsDocNode(comment67);
        java.lang.String str71 = comment67.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment67);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator73 = node72.new NodeIterator();
        int int74 = node72.getType();
        com.google.javascript.rhino.head.Node node75 = node72.getNext();
        com.google.javascript.rhino.head.Node node76 = node72.getLastSibling();
        node5.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode31, node72);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode31.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                    {\n                                                    }\n" + "'", str19, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "136" + "'", str21, "136");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ScriptNode" + "'", str32, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ScriptNode" + "'", str43, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "            " + "'", str46, "            ");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "                    Scope" + "'", str71, "                    Scope");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertNotNull(node76);
    }

    @Test
    public void test05503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05503");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        com.google.javascript.rhino.head.Node node43 = scriptNode1.target;
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode1.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = scriptNode1.getFunctionNode((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList44);
    }

    @Test
    public void test05504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05504");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.Object obj4 = scriptNode0.getCompilerData();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = scriptNode0.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getDefiningScope("                                                    Scope");
        scriptNode0.setLineno(136);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList10 = null;
        scriptNode0.setSymbols(symbolList10);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray12 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(scope7);
    }

    @Test
    public void test05505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05505");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.lang.String str14 = comment10.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = comment10.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = astRoot15.hasSideEffects();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                    Scope" + "'", str14, "                    Scope");
        org.junit.Assert.assertNull(astRoot15);
    }

    @Test
    public void test05506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05506");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode4.getEncodedSourceStart();
        int int14 = scriptNode4.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        int int26 = scriptNode15.getIntProp(6, 2);
        int int27 = scriptNode15.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        int int30 = scriptNode28.getBaseLineno();
        java.lang.String str31 = scriptNode28.getNextTempName();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str68 = scriptNode59.getSourceName();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode59, 26);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node55, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scriptNode59);
        node71.setLineno(5);
        scriptNode15.setCompilerData((java.lang.Object) node71);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode4, node71);
        scriptNode4.setEncodedSource("                        {\n                        }\n");
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope82 = scope80.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node83 = scope80.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType87 = null;
        com.google.javascript.rhino.head.ast.Comment comment89 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType87, "Scope");
        scriptNode84.setParent((com.google.javascript.rhino.head.ast.AstNode) comment89);
        scope80.setJsDocNode(comment89);
        java.lang.String str93 = comment89.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment89);
        java.lang.String str96 = comment89.toSource(100);
        com.google.javascript.rhino.head.Node node98 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode4, (com.google.javascript.rhino.head.Node) comment89, (int) (short) 100);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList99 = scriptNode4.getSymbols();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "$0" + "'", str31, "$0");
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(scope82);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "                    Scope" + "'", str93, "                    Scope");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str96, "                                                                                                                                                                                                        Scope");
        org.junit.Assert.assertNotNull(symbolList99);
    }

    @Test
    public void test05507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05507");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(136, "0\tBLOCK 0 1\n");
        com.google.javascript.rhino.head.ast.Scope scope3 = node2.getScope();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNull(scope3);
    }

    @Test
    public void test05508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05508");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("                                              Scope");
        java.lang.String str3 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        boolean boolean39 = scope27.hasChildren();
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope27);
        scriptNode20.setEncodedSourceEnd((-547629399));
        scriptNode20.setEncodedSourceBounds(51, 97);
        java.lang.String str46 = scriptNode20.toSource();
        int int47 = scriptNode20.getBaseLineno();
        com.google.javascript.rhino.head.Node node48 = scriptNode20.getLastSibling();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{\n}\n" + "'", str46, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(node48);
    }

    @Test
    public void test05509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05509");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        scriptNode1.target = scriptNode3;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        scriptNode9.setLineno((int) (byte) 1);
        scriptNode1.setCompilerData((java.lang.Object) (byte) 1);
        int int13 = scriptNode1.depth();
        int int14 = scriptNode1.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test05510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05510");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.Object obj24 = scriptNode21.getCompilerData();
        scriptNode21.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = null;
        scriptNode21.setSymbolTable(strMap27);
        java.lang.String str30 = scriptNode21.toSource((int) 'a');
        scriptNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        boolean boolean32 = scriptNode21.hasChildren();
        java.lang.String str33 = scriptNode21.getSourceName();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str30, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test05511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05511");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        scope3.setPosition(2);
        scope3.setLength((int) (byte) 1);
        java.lang.Object obj12 = scope3.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope3);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        scope15.setPosition(2);
        java.lang.String str21 = scope15.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = scope15.getSymbolTable();
        boolean boolean23 = scope15.hasChildren();
        com.google.javascript.rhino.head.Node node24 = scope15.getNext();
        scope3.addChildrenToFront((com.google.javascript.rhino.head.Node) scope15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType40, "{\n}\n");
        java.lang.String str43 = comment42.getValue();
        comment42.setLength(129);
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) comment42);
        scriptNode35.setEncodedSourceStart(14);
        com.google.javascript.rhino.head.Node node49 = scriptNode35.getNext();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scope51.setJsDocNode(comment60);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor63 = scope51.iterator();
        scriptNode35.target = scope51;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.Node node68 = scriptNode66.setType(9);
        // The following exception was thrown during execution in test generation
        try {
            scope51.setFinally((com.google.javascript.rhino.head.Node) scriptNode66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n}\n" + "'", str21, "{\n}\n");
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(nodeItor63);
        org.junit.Assert.assertNotNull(node68);
    }

    @Test
    public void test05512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05512");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        scriptNode51.setEndLineno(18);
        scriptNode38.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int67 = scriptNode38.getEncodedSourceStart();
        int int68 = scriptNode38.getEncodedSourceStart();
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
    }

    @Test
    public void test05513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05513");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.Node node10 = scope1.getNext();
        boolean boolean11 = scope1.hasSideEffects();
        scope1.setRelative(52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scope51.setJsDocNode(comment60);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode63.getSymbols();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList80 = scriptNode73.getSymbols();
        scriptNode37.setSymbols(symbolList80);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = scriptNode37.getSymbols();
        scriptNode37.setPosition(18);
        int int87 = scriptNode37.getIntProp(129, (int) (short) 100);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode88 = scriptNode37.getEnclosingFunction();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) functionNode88);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node90 = functionNode88.getFirstChild();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNotNull(symbolList80);
        org.junit.Assert.assertNotNull(symbolList82);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertNull(functionNode88);
    }

    @Test
    public void test05514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05514");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        java.lang.String str43 = scope1.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scope60.setJsDocNode(comment69);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList79 = scriptNode72.getSymbols();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope60, (com.google.javascript.rhino.head.Node) scriptNode72);
        com.google.javascript.rhino.head.Node node82 = scriptNode46.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node84 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode46, node84, 13);
        java.lang.String str87 = scriptNode46.toSource();
        java.lang.String str88 = scriptNode46.debugPrint();
        scope1.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList90 = scope1.getChildScopes();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(symbolList79);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{\n}\n" + "'", str87, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "-1\t  ASSIGN_DIV -53 1\n" + "'", str88, "-1\t  ASSIGN_DIV -53 1\n");
        org.junit.Assert.assertNull(scopeList90);
    }

    @Test
    public void test05515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05515");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 16);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test05516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05516");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int60 = scriptNode45.getEncodedSourceStart();
        int int61 = scriptNode45.getFunctionCount();
        java.lang.String str62 = scriptNode45.toString();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
    }

    @Test
    public void test05517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05517");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(21, 35, commentType2, "-1\t  SCRIPT -1 1\n");
        java.lang.String str5 = comment4.getValue();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\t  SCRIPT -1 1\n" + "'", str5, "-1\t  SCRIPT -1 1\n");
    }

    @Test
    public void test05518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05518");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        scope73.setLineno(26);
        java.lang.String str84 = scope73.shortName();
        com.google.javascript.rhino.head.ast.Scope scope85 = scope73.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            scope85.removeProp(14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Scope" + "'", str84, "Scope");
        org.junit.Assert.assertNull(scope85);
    }

    @Test
    public void test05519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05519");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = scriptNode31.getAstRoot();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode31.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            int int47 = scriptNode31.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(astRoot45);
        org.junit.Assert.assertNotNull(symbolList46);
    }

    @Test
    public void test05520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05520");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = scriptNode6.getTop();
        scriptNode15.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scope55.setJsDocNode(comment64);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType70, "Scope");
        scriptNode67.setParent((com.google.javascript.rhino.head.ast.AstNode) comment72);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode67.getSymbols();
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode67);
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        scope78.setPosition(2);
        scope78.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope78);
        node4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        scriptNode34.setEncodedSourceBounds(14, 24);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator91 = scriptNode34.new NodeIterator();
        boolean boolean92 = nodeIterator91.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node93 = nodeIterator91.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test05521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05521");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode5.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope10.setPosition(100);
        com.google.javascript.rhino.head.Node node13 = scope10.getLastSibling();
        node13.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = node13.spliterator();
        scriptNode5.setCompilerData((java.lang.Object) node13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = scriptNode5.toStringTree(scriptNode28);
        java.lang.String str47 = scriptNode28.toString();
        com.google.javascript.rhino.head.Node node50 = com.google.javascript.rhino.head.Node.newString(19, "                    Scope");
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, node50, 12);
        com.google.javascript.rhino.head.Node node53 = scriptNode28.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        int int70 = scriptNode68.getBaseLineno();
        java.lang.String str71 = scriptNode68.getNextTempName();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        scriptNode73.setEncodedSourceStart((int) (byte) 100);
        int int84 = scriptNode73.getIntProp(6, 2);
        scriptNode73.setEndLineno(18);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) scriptNode73, (int) (byte) -1);
        scriptNode73.flattenSymbolTable(true);
        int int91 = scriptNode73.getEncodedSourceStart();
        java.lang.String str93 = scriptNode73.makeIndent((-51));
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        com.google.javascript.rhino.head.Node node95 = scriptNode73.getLastSibling();
        java.lang.Object obj96 = scriptNode73.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope97 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode73, scope97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "136" + "'", str47, "136");
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test05522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05522");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        java.lang.String str20 = scriptNode13.toSource((int) (short) 1);
        int int21 = scriptNode13.getEndLineno();
        java.lang.String str22 = scriptNode13.debugPrint();
        scriptNode13.setPosition((-388664030));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str18, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "  {\n  }\n" + "'", str20, "  {\n  }\n");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str22, "51\t    SCRIPT 52 1\n");
    }

    @Test
    public void test05523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05523");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scriptNode1.getDefiningScope("                                                    {\n                                                    }\n");
        java.lang.String str4 = scriptNode1.debugPrint();
        java.lang.String str5 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        int int8 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.getNext();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope10.getParentScope();
        scriptNode6.addChildScope(scope10);
        int int16 = scriptNode6.getBaseLineno();
        java.lang.String str17 = scriptNode1.toStringTree(scriptNode6);
        scriptNode6.setPosition((-389829193));
        com.google.javascript.rhino.head.ast.Symbol symbol20 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode6.putSymbol(symbol20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "0\tSCRIPT 0 1\n" + "'", str4, "0\tSCRIPT 0 1\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ScriptNode" + "'", str5, "ScriptNode");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05524");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        scope18.putIntProp(17, 25);
        scope18.setLength((int) ' ');
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        java.lang.String str30 = scriptNode10.getEncodedSource();
        com.google.javascript.rhino.head.Node node31 = scriptNode10.getFirstChild();
        int int32 = scriptNode10.getPosition();
        java.lang.Class<?> wildcardClass33 = scriptNode10.getClass();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test05525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05525");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType2, "hi!");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        comment4.setCommentType(commentType5);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = comment4.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05526");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        scriptNode4.setEncodedSource("                  Scope");
        int int17 = scriptNode4.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = scriptNode4.getTop();
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope23 = scope21.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node24 = scope21.target;
        scope21.setPosition(2);
        java.lang.String str27 = scope21.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode29.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope34.setPosition(100);
        com.google.javascript.rhino.head.Node node37 = scope34.getLastSibling();
        node37.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator39 = node37.spliterator();
        scriptNode29.setCompilerData((java.lang.Object) node37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scriptNode43.getTop();
        scriptNode52.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int57 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getEncodedSource();
        scriptNode58.setEncodedSourceEnd(18);
        scriptNode56.target = scriptNode58;
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scriptNode58);
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) comment68);
        java.lang.String str70 = scriptNode29.toStringTree(scriptNode52);
        scope21.setTop(scriptNode52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = scope21.getTop();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((-243114478), (com.google.javascript.rhino.head.Node) scriptNode72);
        scriptNode4.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode72);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(scriptNode18);
        org.junit.Assert.assertNull(scope23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{\n}\n" + "'", str27, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(nodeSpliterator39);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(scriptNode72);
    }

    @Test
    public void test05527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05527");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList17 = scriptNode10.getSymbols();
        java.lang.String str18 = scriptNode10.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        com.google.javascript.rhino.head.Node node21 = scriptNode19.getLastSibling();
        scriptNode19.setEncodedSource("Scope");
        scriptNode19.setEndLineno(100);
        scriptNode10.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.putProp(25, (java.lang.Object) 100L);
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) scope28);
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scope28);
        com.google.javascript.rhino.head.ast.Comment comment34 = scope28.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump35 = scope28.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(symbolList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str18, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNull(comment34);
    }

    @Test
    public void test05528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05528");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        java.lang.String str8 = scriptNode0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getEncodedSource();
        int int24 = scriptNode22.getBaseLineno();
        java.lang.String str25 = scriptNode22.getNextTempName();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        java.lang.String str27 = scriptNode22.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str33 = scope31.toSource(12);
        scope31.setRelative(1);
        scriptNode22.putProp(17, (java.lang.Object) 1);
        java.lang.String str38 = scriptNode22.toSource(13);
        scriptNode0.target = scriptNode22;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = scriptNode22.getRegexpFlags(4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str27, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                        {\n                        }\n" + "'", str33, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                          {\n                          }\n" + "'", str38, "                          {\n                          }\n");
    }

    @Test
    public void test05529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05529");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        node4.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = node4.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = null;
        scriptNode23.setSymbols(symbolList29);
        node4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        scriptNode23.removeChildren();
        scriptNode23.setEncodedSource("in");
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = scriptNode23.getAstRoot();
        java.lang.String str36 = scriptNode23.getNextTempName();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral37 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode23.addRegExp(regExpLiteral37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(astRoot35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
    }

    @Test
    public void test05530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05530");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node38 = scriptNode27.target;
        scriptNode27.setBounds(16, 13);
        int int42 = scriptNode27.getPosition();
        java.lang.String str43 = scriptNode27.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = scriptNode27.getParamOrVarName((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 16 + "'", int42 == 16);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test05531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05531");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(11, 908331048);
    }

    @Test
    public void test05532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05532");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        scriptNode3.setEndLineno(18);
        int int17 = scriptNode3.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope18 = scriptNode3.getParentScope();
        boolean boolean19 = scriptNode3.hasConsistentReturnUsage();
        java.lang.String str20 = scriptNode3.getJsDoc();
        int int21 = scriptNode3.getLineno();
        int int22 = scriptNode3.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            comment2.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test05533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05533");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(754207379, 1487440633);
    }

    @Test
    public void test05534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05534");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(734000496, 135357821);
    }

    @Test
    public void test05535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05535");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        boolean boolean2 = scope1.hasSideEffects();
        scope1.setBounds((int) (byte) -1, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int8 = scriptNode7.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        scriptNode7.target = scriptNode9;
        com.google.javascript.rhino.head.Node node14 = scriptNode9.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode9.getParentScope();
        scriptNode9.setEndLineno(14);
        scope1.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode9);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = scriptNode9.getExistingIntProp(272356811);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(scope15);
    }

    @Test
    public void test05536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05536");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-547629399), 22);
        java.lang.String str3 = scope2.toSource();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{\n}\n" + "'", str3, "{\n}\n");
    }

    @Test
    public void test05537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05537");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        int int46 = scriptNode44.getBaseLineno();
        java.lang.Object obj47 = scriptNode44.getCompilerData();
        scriptNode44.setEncodedSourceBounds((int) '4', 0);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        java.lang.String str52 = scriptNode0.debugPrint();
        scriptNode0.setEncodedSourceEnd(5);
        int int55 = scriptNode0.getLineno();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str52, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test05538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05538");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment4 = scriptNode0.getJsDocNode();
        int int5 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        java.lang.String str13 = scope7.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = scope7.getSymbolTable();
        boolean boolean15 = scope7.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scope7.target = scriptNode16;
        com.google.javascript.rhino.head.Node node27 = scriptNode16.target;
        scriptNode16.setBaseLineno(10);
        scriptNode16.setEncodedSourceEnd((int) (short) -1);
        int int32 = scriptNode16.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode16.getSymbols();
        scriptNode0.setSymbols(symbolList33);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList35 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int37 = scriptNode0.addFunction(functionNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(comment4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(symbolList33);
        org.junit.Assert.assertNotNull(astNodeList35);
    }

    @Test
    public void test05539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05539");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        scope3.setPosition(2);
        int int9 = scope3.depth();
        int int10 = scope3.getType();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(19, (com.google.javascript.rhino.head.Node) scope3, 17);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) scope3);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump14 = scope3.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 129 + "'", int10 == 129);
    }

    @Test
    public void test05540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05540");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(15, (-243114478));
        java.lang.String str4 = scope2.makeIndent((int) '4');
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "                                                                                                        " + "'", str4, "                                                                                                        ");
    }

    @Test
    public void test05541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05541");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        java.lang.Object obj59 = scriptNode40.getProp(17);
        int int60 = scriptNode40.getFunctionCount();
        boolean boolean61 = scriptNode40.hasSideEffects();
        int int62 = scriptNode40.getType();
        int int63 = scriptNode40.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList64 = scriptNode40.getChildScopes();
        scriptNode40.putIntProp(21, 25);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = scriptNode40.getExistingIntProp(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 136 + "'", int62 == 136);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(scopeList64);
    }

    @Test
    public void test05542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05542");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-51), (-1));
        com.google.javascript.rhino.head.Node node3 = node2.getNext();
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test05543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05543");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        int int16 = scope1.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        int int28 = scriptNode17.getIntProp(6, 2);
        int int29 = scriptNode17.getRegexpCount();
        scriptNode17.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode17.setLineno((int) '#');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap34 = null;
        scriptNode17.setSymbolTable(strMap34);
        java.lang.String str36 = scriptNode17.getJsDoc();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node38 = scriptNode17.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test05544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05544");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope(0);
        java.lang.Object obj24 = scope22.getProp((-243114478));
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType28, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        java.lang.String str36 = scriptNode31.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment30, (com.google.javascript.rhino.head.Node) scriptNode31);
        int int38 = scriptNode31.depth();
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope22, (com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        node19.putProp((int) (short) 1, (java.lang.Object) scope22);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "                                                                      " + "'", str36, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test05545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05545");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        comment21.setCommentType(commentType24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = comment21.getAstRoot();
        scriptNode0.setJsDocNode(comment21);
        java.lang.String str29 = scriptNode0.makeIndent(0);
        scriptNode0.setLineno(23);
        java.lang.String str33 = scriptNode0.makeIndent(35);
        scriptNode0.setEncodedSourceBounds(161, 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(astRoot26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                      " + "'", str33, "                                                                      ");
    }

    @Test
    public void test05546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05546");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        int int7 = scriptNode0.getEndLineno();
        int int8 = scriptNode0.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray9 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test05547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05547");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int13 = scriptNode10.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope15.setPosition(100);
        com.google.javascript.rhino.head.Node node18 = scope15.getLastSibling();
        node18.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = node18.spliterator();
        scriptNode10.setCompilerData((java.lang.Object) node18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode24.getTop();
        scriptNode33.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int38 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        scriptNode39.setEncodedSourceEnd(18);
        scriptNode37.target = scriptNode39;
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) comment49);
        java.lang.String str51 = scriptNode10.toStringTree(scriptNode33);
        scope2.setTop(scriptNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = scope2.getTop();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((-243114478), (com.google.javascript.rhino.head.Node) scriptNode53);
        scriptNode53.removeChildren();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(nodeSpliterator20);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(scriptNode53);
    }

    @Test
    public void test05548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05548");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scope17.setJsDocNode(comment26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode29.setPosition((int) (byte) 0);
        scriptNode29.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getParamCount();
        java.lang.String str55 = scriptNode42.debugPrint();
        int int58 = scriptNode42.getIntProp(17, 10);
        scriptNode29.setTop(scriptNode42);
        scriptNode29.setEncodedSourceEnd(9);
        com.google.javascript.rhino.head.Node node62 = scriptNode29.getLastChild();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode29.getSymbol("");
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope66.setPosition(100);
        com.google.javascript.rhino.head.Node node70 = scope66.setType((int) (byte) 0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode29, node70);
        int int72 = scriptNode29.getType();
        com.google.javascript.rhino.head.ast.Symbol symbol73 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode29.putSymbol(symbol73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str55, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 136 + "'", int72 == 136);
    }

    @Test
    public void test05549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05549");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        java.lang.String str11 = scriptNode3.toSource(26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = null;
        scriptNode3.setSymbolTable(strMap12);
        int int14 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        int int15 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node17 = scriptNode0.setType(5);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray18 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                    {\n                                                    }\n" + "'", str11, "                                                    {\n                                                    }\n");
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 291933865 + "'", int14 == 291933865);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(node17);
    }

    @Test
    public void test05550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05550");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode16.getSymbol("                                                                                                                                                                                                        Scope");
        boolean boolean65 = scriptNode16.hasChildren();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator66 = scriptNode16.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node67 = nodeIterator66.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test05551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05551");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (short) -1, "                                                                Scope");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05552");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str40 = scriptNode27.getSourceName();
        java.lang.String str41 = scriptNode27.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray42 = scriptNode27.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test05553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05553");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setEncodedSourceStart(25);
        int int16 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode6.getParentScope();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(scope17);
    }

    @Test
    public void test05554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05554");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode0.setParentScope(scope17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode21.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope26.setPosition(100);
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        node29.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = node29.spliterator();
        scriptNode21.setCompilerData((java.lang.Object) node29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) comment60);
        java.lang.String str62 = scriptNode21.toStringTree(scriptNode44);
        int int63 = scriptNode44.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode64.setEndLineno(18);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode64);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        int int80 = scriptNode0.getFunctionCount();
        int int83 = scriptNode0.getIntProp(3, (int) (short) 100);
        boolean boolean84 = scriptNode0.hasSideEffects();
        java.lang.String str85 = scriptNode0.toSource();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{\n}\n" + "'", str85, "{\n}\n");
    }

    @Test
    public void test05555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05555");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        int int14 = scriptNode6.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope15 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test05556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05556");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        scope23.setPosition(2);
        int int29 = scope23.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope30 = scope23.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope23.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope35 = scope33.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node36 = scope33.target;
        scope33.setPosition(2);
        int int39 = scope33.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope40 = scope33.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scope33.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        scriptNode42.flattenSymbolTable(false);
        scope23.addChildAfter((com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.String str50 = scriptNode42.makeIndent((-1));
        scope1.target = scriptNode42;
        scriptNode42.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope55 = scriptNode42.getDefiningScope("                                                                                                        Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType59, "Scope");
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment61);
        scriptNode56.setEncodedSourceStart((int) (byte) 100);
        int int67 = scriptNode56.getIntProp(6, 2);
        int int68 = scriptNode56.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scriptNode69.setEncodedSourceStart((int) (byte) 100);
        int int80 = scriptNode69.getIntProp(6, 2);
        int int81 = scriptNode69.getParamCount();
        scriptNode56.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap83 = scriptNode69.getSymbolTable();
        java.lang.String str84 = scriptNode69.getSourceName();
        int int85 = scriptNode69.getBaseLineno();
        scriptNode42.setTop(scriptNode69);
        scriptNode42.setEncodedSourceEnd((-25));
        boolean boolean89 = scriptNode42.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNull(scope35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(scope55);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test05557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05557");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str24 = node23.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(23, node23, (com.google.javascript.rhino.head.Node) scope26, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        java.lang.String str40 = scriptNode32.debugPrint();
        scriptNode32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = null;
        scope44.setSymbolTable(strMap53);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope44);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = scope44.getSymbolTable();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = scope44.getEnclosingFunction();
        int int60 = scope44.getIntProp((-25), 734000496);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str40, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(functionNode57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 734000496 + "'", int60 == 734000496);
    }

    @Test
    public void test05558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05558");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int24 = scriptNode10.getIntProp(2, 100);
        com.google.javascript.rhino.head.Node node25 = scriptNode10.target;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray26 = scriptNode10.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(node25);
    }

    @Test
    public void test05559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05559");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode24.getTop();
        scriptNode33.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int38 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        scriptNode39.setEncodedSourceEnd(18);
        scriptNode37.target = scriptNode39;
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str57 = scriptNode48.getSourceName();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode48, 26);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node44, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Node node61 = scriptNode48.getLastSibling();
        boolean boolean62 = scriptNode48.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode48.putProp((int) (byte) 0, (java.lang.Object) int75);
        com.google.javascript.rhino.head.Node node77 = scriptNode48.target;
        scriptNode48.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node80 = scriptNode48.getLastSibling();
        scriptNode10.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Node node82 = scriptNode10.getFirstChild();
        int int83 = scriptNode10.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope84 = scriptNode10.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test05560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05560");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        int int72 = scriptNode70.getBaseLineno();
        java.lang.Object obj73 = scriptNode70.getCompilerData();
        scriptNode70.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope80 = scope78.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node81 = scope78.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        com.google.javascript.rhino.head.ast.Comment comment87 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType85, "Scope");
        scriptNode82.setParent((com.google.javascript.rhino.head.ast.AstNode) comment87);
        scope78.setJsDocNode(comment87);
        java.lang.String str91 = comment87.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment87);
        comment87.setLength(0);
        scriptNode23.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode70, (com.google.javascript.rhino.head.Node) comment87);
        java.lang.String str96 = comment87.getValue();
        java.lang.String str97 = comment87.getJsDoc();
        java.lang.String str98 = comment87.getValue();
        boolean boolean99 = comment87.hasConsistentReturnUsage();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "                    Scope" + "'", str91, "                    Scope");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Scope" + "'", str96, "Scope");
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Scope" + "'", str98, "Scope");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test05561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05561");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        java.lang.Object obj18 = comment11.getProp((int) (short) -1);
        java.lang.String str20 = comment11.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scriptNode30.setPosition(6);
        comment11.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.Comment comment34 = comment11.getJsDocNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = comment11.getEnclosingFunction();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertNull(comment34);
        org.junit.Assert.assertNull(functionNode35);
    }

    @Test
    public void test05562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05562");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = scriptNode0.addFunction(functionNode19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test05563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05563");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setSourceName("hi!");
        scriptNode6.setSourceName("0\tSCRIPT 0 1\n");
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode6.getEnclosingFunction();
        scriptNode6.setLength(0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(functionNode18);
    }

    @Test
    public void test05564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05564");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.Node node23 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        scriptNode37.setEncodedSource("                        ");
        int int44 = scriptNode37.getLineno();
        scriptNode0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope49 = scope47.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node50 = scope47.target;
        scope47.setPosition(2);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        scope54.setPosition(2);
        java.lang.String str60 = scope54.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scope54.getSymbolTable();
        boolean boolean62 = scope54.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = scriptNode63.getTop();
        scope54.target = scriptNode63;
        com.google.javascript.rhino.head.Node node74 = scriptNode63.target;
        scriptNode63.setBaseLineno(10);
        scope47.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode63);
        java.lang.String str79 = scriptNode37.shortName();
        java.lang.String str80 = scriptNode37.getEncodedSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = scriptNode37.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = astRoot81.toSource();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(scope49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{\n}\n" + "'", str60, "{\n}\n");
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ScriptNode" + "'", str79, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "                        " + "'", str80, "                        ");
        org.junit.Assert.assertNull(astRoot81);
    }

    @Test
    public void test05565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05565");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = null;
        scriptNode17.setSymbols(symbolList23);
        java.lang.String str25 = scriptNode17.getJsDoc();
        java.lang.String str26 = scriptNode17.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.Object obj30 = scriptNode27.getCompilerData();
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode27, (-51));
        int int33 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.Node node34 = scriptNode17.getNext();
        scriptNode17.setEncodedSourceBounds(170200694, 845940330);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(node34);
    }

    @Test
    public void test05566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05566");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(14);
        java.lang.String str2 = scope1.toSource();
        // The following exception was thrown during execution in test generation
        try {
            int int3 = scope1.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{\n}\n" + "'", str2, "{\n}\n");
    }

    @Test
    public void test05567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05567");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        scope24.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        int int41 = scriptNode39.getBaseLineno();
        java.lang.Object obj42 = scriptNode39.getCompilerData();
        scriptNode39.setEncodedSourceBounds((int) '4', 0);
        scope24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        scope24.setPosition(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode49.getTop();
        scriptNode58.setPosition(6);
        scope24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        scriptNode58.setEncodedSourceEnd((int) '#');
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol69 = scope67.getSymbol("$0");
        int int70 = scope67.getPosition();
        int int71 = scriptNode58.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope67);
        int int72 = scriptNode58.getEndLineno();
        boolean boolean73 = scriptNode58.hasConsistentReturnUsage();
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNull(symbol69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test05568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05568");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.String str41 = scriptNode26.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.Object obj45 = scriptNode42.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        java.lang.String str54 = scriptNode46.toSource(26);
        scriptNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.lang.String str56 = scriptNode46.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = scriptNode57.getTop();
        java.lang.String str67 = scriptNode66.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scriptNode68.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = scriptNode68.getTop();
        java.lang.String str78 = scriptNode77.shortName();
        scriptNode66.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        java.lang.String str81 = scriptNode66.makeIndent(6);
        scriptNode66.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        scriptNode46.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode66);
        int int86 = scriptNode66.getEncodedSourceEnd();
        scriptNode26.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope88 = scriptNode26.getEnclosingScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor89 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode26.visit(nodeVisitor89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str41, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                                                    {\n                                                    }\n" + "'", str54, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "136" + "'", str56, "136");
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ScriptNode" + "'", str67, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ScriptNode" + "'", str78, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "            " + "'", str81, "            ");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(scope88);
    }

    @Test
    public void test05569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05569");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        scriptNode37.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str51 = scriptNode37.makeIndent(0);
        java.lang.String str52 = scriptNode0.toStringTree(scriptNode37);
        com.google.javascript.rhino.head.Node node53 = scriptNode37.target;
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode37.getSymbols();
        java.lang.String str55 = scriptNode37.toSource();
        java.lang.String str56 = scriptNode37.shortName();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode57 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int58 = scriptNode37.addFunction(functionNode57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n}\n" + "'", str55, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ScriptNode" + "'", str56, "ScriptNode");
    }

    @Test
    public void test05570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05570");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 5, commentType2, "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor5 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment4.visit(nodeVisitor5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05571");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(845940330);
    }

    @Test
    public void test05572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05572");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode10.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope27 = scriptNode10.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            scope27.setString("                  {\n                  }\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNull(scope27);
    }

    @Test
    public void test05573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05573");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList7 = scriptNode0.getStatements();
        scriptNode0.setEncodedSourceBounds((-51), (int) (short) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str20 = scriptNode11.getSourceName();
        int int21 = scriptNode11.getFunctionCount();
        int int22 = scriptNode11.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int33 = scriptNode24.getEncodedSourceStart();
        java.lang.String str34 = scriptNode24.getSourceName();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) scriptNode24);
        scriptNode24.setEncodedSourceEnd(17);
        scriptNode11.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        java.lang.String str39 = scriptNode24.toSource();
        int int40 = scriptNode24.getParamCount();
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment(17, 3, commentType44, "                                  Scope");
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (short) -1);
        comment46.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        scope49.setBounds((-389829193), 19);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode24.setDefault((com.google.javascript.rhino.head.Node) scope49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(astNodeList7);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{\n}\n" + "'", str39, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test05574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05574");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = scope1.getExistingIntProp(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test05575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05575");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        scriptNode1.flattenSymbolTable(true);
        int int5 = scriptNode1.getLength();
        scriptNode1.setEncodedSourceEnd(23);
        int int8 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.Node node9 = scriptNode1.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump10 = scriptNode1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test05576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05576");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        int int16 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        scriptNode44.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray57 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList58, symbolArray57);
        scriptNode44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node62 = scriptNode0.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNotNull(symbolArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test05577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05577");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                  Scope");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope5 = scope3.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node6 = scope3.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scope3.setJsDocNode(comment12);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        scope16.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node24 = scope16.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        java.lang.String str30 = scriptNode25.makeIndent((int) '#');
        scope16.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope3, (com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        com.google.javascript.rhino.head.Node node34 = scriptNode25.setType((int) (byte) 0);
        node1.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        scriptNode25.setLength(97);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor38 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode25.visit(nodeVisitor38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                      " + "'", str30, "                                                                      ");
        org.junit.Assert.assertNotNull(node34);
    }

    @Test
    public void test05578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05578");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str24 = node23.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(23, node23, (com.google.javascript.rhino.head.Node) scope26, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        java.lang.String str40 = scriptNode32.debugPrint();
        scriptNode32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = null;
        scope44.setSymbolTable(strMap53);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope44);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap56 = scope44.getSymbolTable();
        com.google.javascript.rhino.head.Node node57 = scope44.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        java.lang.String str66 = scriptNode58.debugPrint();
        java.lang.String str67 = scriptNode58.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            scope44.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str40, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str66, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test05579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05579");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode13.getType();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode13.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.String str36 = scriptNode33.getNextTempName();
        scriptNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        java.lang.String str38 = scriptNode33.toSource();
        scriptNode13.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode33);
        scriptNode33.setRelative(11);
        com.google.javascript.rhino.head.ast.Scope scope43 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope43.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        int int59 = scriptNode47.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope63 = scope61.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node64 = scope61.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scope61.setJsDocNode(comment70);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType76 = null;
        com.google.javascript.rhino.head.ast.Comment comment78 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType76, "Scope");
        scriptNode73.setParent((com.google.javascript.rhino.head.ast.AstNode) comment78);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList80 = scriptNode73.getSymbols();
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope61, (com.google.javascript.rhino.head.Node) scriptNode73);
        scriptNode73.setPosition((int) (byte) 0);
        scope43.setTop(scriptNode73);
        int int85 = scriptNode73.getParamCount();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode73);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode87 = scriptNode73.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = scriptNode73.getFunctionNode(908331048);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "$0" + "'", str36, "$0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{\n}\n" + "'", str38, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(symbolList80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(functionNode87);
    }

    @Test
    public void test05580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05580");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope40 = scope38.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node41 = scope38.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scope38.setJsDocNode(comment47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = scriptNode50.getSymbols();
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope38, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode60.getSymbols();
        scriptNode24.setSymbols(symbolList67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode24.getSymbols();
        scriptNode24.setPosition(18);
        int int74 = scriptNode24.getIntProp(129, (int) (short) 100);
        scriptNode24.setBaseLineno((int) (byte) 10);
        java.lang.String str77 = scriptNode24.getNextTempName();
        boolean boolean78 = scriptNode24.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope81 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        scriptNode24.replaceWith(scope81);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((-25), (com.google.javascript.rhino.head.Node) scope81);
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(symbolList57);
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "$0" + "'", str77, "$0");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test05581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05581");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-366869103), 1487440611);
    }

    @Test
    public void test05582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05582");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int60 = scriptNode25.getRegexpCount();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray61 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList62 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList62, symbolArray61);
        scriptNode25.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList62);
        com.google.javascript.rhino.head.Node node65 = scriptNode25.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol66 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode25.putSymbol(symbol66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(symbolArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node65);
    }

    @Test
    public void test05583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05583");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = scope1.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        int int21 = scriptNode10.getIntProp(6, 2);
        int int22 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode36.getSymbols();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setPosition((int) (byte) 0);
        scriptNode36.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str50 = scriptNode36.makeIndent(0);
        boolean boolean51 = scriptNode36.hasSideEffects();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = scriptNode54.getTop();
        scriptNode63.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int68 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getEncodedSource();
        scriptNode69.setEncodedSourceEnd(18);
        scriptNode67.target = scriptNode69;
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = null;
        scriptNode69.setSymbols(symbolList75);
        java.lang.String str77 = scriptNode69.getJsDoc();
        scriptNode69.setBaseLineno((int) (byte) 0);
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        scriptNode36.setLength((-51099649));
        java.lang.String str83 = scriptNode36.getNextTempName();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scriptNode8);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "$0" + "'", str83, "$0");
    }

    @Test
    public void test05584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05584");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray40 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList41, symbolArray40);
        scriptNode27.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList41);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode27.getFunctions();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        java.lang.String str52 = scope46.toSource();
        com.google.javascript.rhino.head.Node node53 = scope46.getLastChild();
        int int54 = scope46.depth();
        scriptNode27.setParentScope(scope46);
        int int58 = scriptNode27.getIntProp(371991955, 58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.clearParentScope();
        scriptNode59.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.Node node70 = scriptNode59.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str72 = scriptNode71.getEncodedSource();
        scriptNode71.setEncodedSourceEnd(18);
        java.lang.String str76 = scriptNode71.makeIndent((int) '#');
        int int79 = scriptNode71.getIntProp((int) '4', 4);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator80 = scriptNode71.spliterator();
        int int81 = scriptNode59.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        int int82 = scriptNode59.getPosition();
        scriptNode59.setEncodedSource("                                      Scope");
        scriptNode27.setTop(scriptNode59);
        java.lang.String str86 = scriptNode59.getJsDoc();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(symbolArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 58 + "'", int58 == 58);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "                                                                      " + "'", str76, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 4 + "'", int79 == 4);
        org.junit.Assert.assertNotNull(nodeSpliterator80);
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 180367011 + "'", int81 == 180367011);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-53) + "'", int82 == (-53));
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test05585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05585");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = null;
        scriptNode0.setSymbols(symbolList13);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode0.setParentScope(scope17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode21.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope26.setPosition(100);
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        node29.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = node29.spliterator();
        scriptNode21.setCompilerData((java.lang.Object) node29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) comment60);
        java.lang.String str62 = scriptNode21.toStringTree(scriptNode44);
        int int63 = scriptNode44.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode64.setEndLineno(18);
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode64);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        int int80 = scriptNode0.getFunctionCount();
        int int83 = scriptNode0.getIntProp(3, (int) (short) 100);
        java.lang.String str84 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator85 = scriptNode0.new NodeIterator();
        boolean boolean86 = nodeIterator85.hasNext();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test05586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05586");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = scriptNode0.getAstRoot();
        int int5 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode0.getLastChild();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(astRoot4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node6);
    }

    @Test
    public void test05587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05587");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType2, "41");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        int int13 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope7.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope7.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        int int23 = scope17.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope24 = scope17.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope17.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.Object obj29 = scriptNode26.getCompilerData();
        scriptNode26.flattenSymbolTable(false);
        scope7.addChildAfter((com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int33 = scriptNode26.getLength();
        scriptNode26.setEncodedSourceEnd((int) (byte) 0);
        comment4.putProp(9, (java.lang.Object) scriptNode26);
        scriptNode26.removeProp((int) (short) -1);
        scriptNode26.setRelative(52);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test05588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05588");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        java.lang.String str22 = scope16.toSource();
        com.google.javascript.rhino.head.Node node23 = scope16.getLastChild();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scope16);
        scriptNode1.target = node24;
        java.lang.String str26 = scriptNode1.toSource();
        com.google.javascript.rhino.head.Node node27 = scriptNode1.getFirstChild();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{\n}\n" + "'", str22, "{\n}\n");
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{\n}\n" + "'", str26, "{\n}\n");
        org.junit.Assert.assertNull(node27);
    }

    @Test
    public void test05589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05589");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        scriptNode23.setPosition(18);
        int int73 = scriptNode23.getIntProp(129, (int) (short) 100);
        scriptNode23.setBaseLineno((int) (byte) 10);
        java.lang.String str76 = scriptNode23.getNextTempName();
        java.lang.String str77 = scriptNode23.toSource();
        java.lang.String str78 = scriptNode23.toString();
        scriptNode23.setEncodedSourceBounds(25, 20);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode23.setDouble((double) 129);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "$0" + "'", str76, "$0");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{\n}\n" + "'", str77, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "136" + "'", str78, "136");
    }

    @Test
    public void test05590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05590");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        scriptNode23.setPosition(18);
        int int73 = scriptNode23.getIntProp(129, (int) (short) 100);
        scriptNode23.setBaseLineno((int) (byte) 10);
        java.lang.String str76 = scriptNode23.getNextTempName();
        boolean boolean77 = scriptNode23.hasSideEffects();
        int int78 = scriptNode23.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList79 = scriptNode23.getStatements();
        com.google.javascript.rhino.head.Node node80 = scriptNode23.getLastChild();
        com.google.javascript.rhino.head.ast.AstNode astNode81 = scriptNode23.getParent();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "$0" + "'", str76, "$0");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(astNodeList79);
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertNotNull(astNode81);
    }

    @Test
    public void test05591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05591");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator82 = scriptNode29.spliterator();
        int int83 = scriptNode29.getLength();
        scriptNode29.setEncodedSource("0\tBLOCK 0 1\n-1\tSCRIPT -1 1\n");
        // The following exception was thrown during execution in test generation
        try {
            int int86 = scriptNode29.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNotNull(nodeSpliterator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test05592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05592");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode58 = scriptNode40.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = scriptNode40.getFunctions();
        com.google.javascript.rhino.head.ast.Symbol symbol60 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode40.putSymbol(symbol60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(functionNode58);
        org.junit.Assert.assertNotNull(functionNodeList59);
    }

    @Test
    public void test05593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05593");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSourceEnd(136);
        boolean boolean5 = scriptNode0.hasConsistentReturnUsage();
        int int6 = scriptNode0.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str9 = scriptNode7.toSource(18);
        java.lang.Object obj10 = scriptNode7.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node49 = scriptNode38.target;
        scriptNode7.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        scriptNode7.flattenSymbolTable(false);
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str55 = scriptNode0.makeIndent((-366869103));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 136 + "'", int6 == 136);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                    {\n                                    }\n" + "'", str9, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test05594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05594");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode13.getType();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = scriptNode13.getStatements();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor20 = scriptNode13.iterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode22 = scriptNode13.getFunctionNode(16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 136 + "'", int18 == 136);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertNotNull(nodeItor20);
    }

    @Test
    public void test05595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05595");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1034180762);
    }

    @Test
    public void test05596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05596");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode17.setEncodedSourceEnd(11);
        java.lang.String str25 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.lang.String str29 = scriptNode17.getEncodedSource();
        com.google.javascript.rhino.head.Node node30 = scriptNode17.target;
        int int31 = scriptNode17.getEndLineno();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap32 = null;
        scriptNode17.setSymbolTable(strMap32);
        boolean boolean34 = scriptNode17.hasSideEffects();
        scriptNode17.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Comment comment37 = scriptNode17.getJsDocNode();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str29, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(comment37);
    }

    @Test
    public void test05597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05597");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        int int14 = scriptNode4.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode15.getEncodedSource();
        scriptNode15.setEncodedSourceEnd(18);
        java.lang.String str20 = scriptNode15.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scriptNode15.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope22 = scriptNode15.getParentScope();
        java.lang.String str23 = scriptNode15.getNextTempName();
        int int24 = scriptNode15.getType();
        com.google.javascript.rhino.head.Node node26 = scriptNode15.setType(0);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = scriptNode4.getIndexForNameNode(node26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 136 + "'", int14 == 136);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                      " + "'", str20, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "$0" + "'", str23, "$0");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 136 + "'", int24 == 136);
        org.junit.Assert.assertNotNull(node26);
    }

    @Test
    public void test05598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05598");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        com.google.javascript.rhino.head.ast.Comment comment68 = scriptNode23.getJsDocNode();
        int int69 = scriptNode23.getType();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNull(comment68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 136 + "'", int69 == 136);
    }

    @Test
    public void test05599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05599");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-1));
        boolean boolean2 = node1.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            node1.setString("53\tCOMMENT 53 53\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test05600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05600");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.lang.String str10 = scope1.makeIndent(0);
        int int11 = scope1.getLength();
        com.google.javascript.rhino.head.Node node13 = scope1.setType(3);
        com.google.javascript.rhino.head.Node node16 = com.google.javascript.rhino.head.Node.newString((int) (byte) 10, "");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        scriptNode28.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int33 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        scriptNode32.target = scriptNode34;
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment44);
        java.lang.String str46 = node16.toStringTree(scriptNode28);
        scope1.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        scriptNode28.putIntProp(18, 10);
        java.lang.String str51 = scriptNode28.getJsDoc();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test05601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05601");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                      Scope");
        int int4 = node1.getIntProp(2, (int) (short) 1);
        java.lang.String str5 = node1.getString();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                      Scope" + "'", str5, "                      Scope");
    }

    @Test
    public void test05602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05602");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        scriptNode0.setCompilerData((java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node5 = scriptNode0.getNext();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        java.lang.String str13 = scope7.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = scope7.getSymbolTable();
        boolean boolean15 = scope7.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scope7.target = scriptNode16;
        com.google.javascript.rhino.head.Node node27 = scriptNode16.target;
        scriptNode16.setBaseLineno(10);
        scriptNode16.setEncodedSourceEnd((int) (short) -1);
        int int32 = scriptNode16.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode16.getSymbols();
        int int34 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, (int) (short) 100, commentType37, "Scope");
        int int40 = comment39.getLength();
        java.lang.String str42 = comment39.makeIndent(53);
        scriptNode16.setJsDocNode(comment39);
        java.lang.String str45 = comment39.toSource((-53));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(symbolList33);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-899539259) + "'", int34 == (-899539259));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                                                          " + "'", str42, "                                                                                                          ");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Scope" + "'", str45, "Scope");
    }

    @Test
    public void test05603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05603");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        int int60 = scriptNode0.getLineno();
        scriptNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node63 = scriptNode0.target;
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(node63);
    }

    @Test
    public void test05604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05604");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scriptNode0.getParent();
        scriptNode0.setBounds(14, 4);
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getEncodedSource();
        scriptNode22.setEncodedSourceEnd(18);
        java.lang.String str26 = comment21.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.Node node28 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node29 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode22, node28);
        scriptNode22.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node32 = scriptNode22.getLastChild();
        boolean boolean33 = scriptNode22.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setFinally((com.google.javascript.rhino.head.Node) scriptNode22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(astNode12);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test05605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05605");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope3.setPosition(100);
        com.google.javascript.rhino.head.Node node6 = scope3.getLastSibling();
        node6.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = node6.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = null;
        scriptNode25.setSymbols(symbolList31);
        node6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str34 = scriptNode1.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        int int50 = scriptNode48.getBaseLineno();
        java.lang.String str51 = scriptNode48.getNextTempName();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode25, (com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        scope55.setPosition(2);
        java.lang.String str61 = scope55.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap62 = scope55.getSymbolTable();
        boolean boolean63 = scope55.hasChildren();
        com.google.javascript.rhino.head.Node node64 = scope55.getNext();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        java.lang.String str79 = comment75.toSource((int) (short) 10);
        scope55.setJsDocNode(comment75);
        scriptNode25.addChildToBack((com.google.javascript.rhino.head.Node) comment75);
        com.google.javascript.rhino.head.Token.CommentType commentType82 = comment75.getCommentType();
        java.lang.String str83 = comment75.debugPrint();
        com.google.javascript.rhino.head.Token.CommentType commentType84 = comment75.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        comment75.setCommentType(commentType85);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator87 = comment75.spliterator();
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "                    Scope" + "'", str79, "                    Scope");
        org.junit.Assert.assertNull(commentType82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "52\tCOMMENT 52 6\n" + "'", str83, "52\tCOMMENT 52 6\n");
        org.junit.Assert.assertNull(commentType84);
        org.junit.Assert.assertNotNull(nodeSpliterator87);
    }

    @Test
    public void test05606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05606");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        int int82 = scriptNode29.getEncodedSourceStart();
        java.lang.String str84 = scriptNode29.toSource(26);
        java.lang.String str86 = scriptNode29.toSource(26);
        int int87 = scriptNode29.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList88 = scriptNode29.getFunctions();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "                                                    {\n                                                    }\n" + "'", str84, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                                                    {\n                                                    }\n" + "'", str86, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList88);
    }

    @Test
    public void test05607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05607");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        java.lang.String str3 = scriptNode1.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList6 = scriptNode5.getStatements();
        int int7 = scriptNode5.getPosition();
        scriptNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode5);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(astNodeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test05608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05608");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        scriptNode25.setEncodedSourceEnd(0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node62 = scriptNode25.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
    }

    @Test
    public void test05609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05609");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        java.lang.String str14 = scriptNode1.getSourceName();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap15 = null;
        scriptNode1.setSymbolTable(strMap15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        java.lang.Object obj21 = scriptNode17.getCompilerData();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap22 = scriptNode17.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope24 = scriptNode17.getDefiningScope("                                                    Scope");
        scriptNode17.setLineno(136);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str30 = scope28.makeIndent(0);
        int int33 = scope28.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope35.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope53 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope55 = scope53.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node56 = scope53.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scope53.setJsDocNode(comment62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode65.getSymbols();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scope53, (com.google.javascript.rhino.head.Node) scriptNode65);
        scriptNode65.setPosition((int) (byte) 0);
        scope35.setTop(scriptNode65);
        int int77 = scriptNode65.getParamCount();
        scope28.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode65);
        java.lang.String str80 = scriptNode65.toSource(7);
        com.google.javascript.rhino.head.ast.Scope scope81 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode65);
        scriptNode17.setCompilerData((java.lang.Object) scriptNode65);
        com.google.javascript.rhino.head.ast.AstNode astNode83 = scriptNode17.getParent();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node(24, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) astNode83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(scope55);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "              {\n              }\n" + "'", str80, "              {\n              }\n");
        org.junit.Assert.assertNotNull(scope81);
        org.junit.Assert.assertNull(astNode83);
    }

    @Test
    public void test05610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05610");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = scriptNode0.new NodeIterator();
        java.lang.String str10 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope52 = scriptNode38.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode38.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        scriptNode0.putProp(0, (java.lang.Object) scriptNode38);
        com.google.javascript.rhino.head.Node node57 = scriptNode38.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode38.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = scriptNode58.getAstRoot();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNull(astRoot59);
    }

    @Test
    public void test05611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05611");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("                                              Scope");
        java.lang.String str3 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        boolean boolean39 = scope27.hasChildren();
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope27);
        int int41 = scriptNode0.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            int int42 = scriptNode0.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test05612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05612");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        scriptNode0.setEndLineno(18);
        scriptNode0.setLineno(34756133);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = scriptNode0.getAstRoot();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(astRoot16);
    }

    @Test
    public void test05613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05613");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(2, "-1\t  SCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05614");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scriptNode37.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) comment53);
        int int55 = scriptNode37.depth();
        int int56 = scriptNode37.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor57 = scriptNode37.iterator();
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Node node60 = scriptNode37.setType((int) (short) 1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode37.getSymbols();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode63 = scriptNode37.getFunctionNode(845940330);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeItor57);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(symbolList61);
    }

    @Test
    public void test05615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05615");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        boolean boolean43 = scriptNode1.hasChildren();
        // The following exception was thrown during execution in test generation
        try {
            double double44 = scriptNode1.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test05616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05616");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode16.getSymbol("                                                                                                                                                                                                        Scope");
        boolean boolean65 = scriptNode16.hasChildren();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator66 = scriptNode16.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = scriptNode16.getParamOrVarName(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test05617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05617");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        com.google.javascript.rhino.head.Node node15 = scriptNode4.setType((int) (short) 10);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList16 = scriptNode4.getStatements();
        int int17 = scriptNode4.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        int int20 = scriptNode18.getBaseLineno();
        java.lang.Object obj21 = scriptNode18.getCompilerData();
        scriptNode18.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList25 = scriptNode18.getStatements();
        int int26 = scriptNode18.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.removeChild((com.google.javascript.rhino.head.Node) scriptNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(astNodeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(astNodeList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test05618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05618");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = null;
        scriptNode16.setSymbols(symbolList22);
        java.lang.String str24 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = scriptNode16.getAstRoot();
        scriptNode16.setEncodedSourceStart(35);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode16.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump29 = scriptNode16.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(astRoot25);
        org.junit.Assert.assertNull(scopeList28);
    }

    @Test
    public void test05619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05619");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str36 = scriptNode27.getSourceName();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode27, 26);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node23, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = null;
        scriptNode27.setSymbolTable(strMap40);
        java.lang.Object obj43 = scriptNode27.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode27.getChildScopes();
        int int45 = scriptNode27.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        int int49 = scope48.depth();
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope48, 8);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope(1, 9);
        scope54.removeChildren();
        scriptNode27.setParentScope(scope54);
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope(5, 5);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope59.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            scope54.setDefault((com.google.javascript.rhino.head.Node) scope60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(scope60);
    }

    @Test
    public void test05620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05620");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str24 = node23.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(23, node23, (com.google.javascript.rhino.head.Node) scope26, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        java.lang.String str40 = scriptNode32.debugPrint();
        scriptNode32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = null;
        scope44.setSymbolTable(strMap53);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope44);
        int int56 = scriptNode32.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        int int68 = scriptNode57.getIntProp(6, 2);
        int int69 = scriptNode57.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        int int72 = scriptNode70.getBaseLineno();
        java.lang.String str73 = scriptNode70.getNextTempName();
        scriptNode57.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode70);
        java.lang.String str75 = scriptNode70.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType79, "Scope");
        scriptNode76.setParent((com.google.javascript.rhino.head.ast.AstNode) comment81);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList83 = scriptNode76.getSymbols();
        scriptNode70.setSymbols(symbolList83);
        scriptNode32.setSymbols(symbolList83);
        scriptNode32.setPosition(15);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str40, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str75, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList83);
    }

    @Test
    public void test05621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05621");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Node node3 = scope1.getLastChild();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        java.lang.String str10 = comment8.toSource(19);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope12.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int27 = scriptNode16.getIntProp(6, 2);
        int int28 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope32 = scope30.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node33 = scope30.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scope30.setJsDocNode(comment39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = scriptNode42.getSymbols();
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scope30, (com.google.javascript.rhino.head.Node) scriptNode42);
        scriptNode42.setPosition((int) (byte) 0);
        scope12.setTop(scriptNode42);
        int int54 = scriptNode42.getParamCount();
        comment8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        scriptNode42.setEncodedSourceEnd(51);
        // The following exception was thrown during execution in test generation
        try {
            scope1.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                      Scope" + "'", str10, "                                      Scope");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(symbolList49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test05622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05622");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        int int44 = scriptNode31.getLineno();
        int int45 = scriptNode31.getEncodedSourceEnd();
        java.lang.Object obj46 = scriptNode31.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = scriptNode31.getAstRoot();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(astRoot47);
    }

    @Test
    public void test05623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05623");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.lang.String str14 = comment10.toSource((int) (byte) 100);
        comment10.setRelative(18);
        com.google.javascript.rhino.head.ast.Scope scope17 = comment10.getEnclosingScope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        int int25 = scope19.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope26 = scope19.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scope19.spliterator();
        com.google.javascript.rhino.head.ast.Symbol symbol29 = scope19.getSymbol("{\n{\n}\n}\n");
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap30 = null;
        scope19.setSymbolTable(strMap30);
        int int32 = scope19.depth();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str57 = scriptNode56.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str68 = scriptNode59.getSourceName();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode59, 26);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node55, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope73 = scriptNode59.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode59.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode75);
        scriptNode75.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Node node79 = scriptNode75.target;
        com.google.javascript.rhino.head.Node node80 = scriptNode75.getFirstChild();
        java.lang.String str81 = scriptNode75.toSource();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator82 = scriptNode75.new NodeIterator();
        comment10.addChildAfter((com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode75);
        boolean boolean84 = scope19.hasChildren();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str14, "                                                                                                                                                                                                        Scope");
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(symbol29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(scope73);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{\n}\n" + "'", str81, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test05624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05624");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(22, "70\t  SCRIPT 18 1\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05625");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(97, "                                                                                                                                                                                                  ");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05626");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(7);
        scope1.putIntProp(4, 6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        int int20 = scriptNode18.getBaseLineno();
        java.lang.String str21 = scriptNode18.getNextTempName();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int26 = scope25.depth();
        scriptNode5.replaceWith(scope25);
        com.google.javascript.rhino.head.ast.Symbol symbol29 = scriptNode5.getSymbol("                                      Scope");
        int int30 = scriptNode5.getLineno();
        int int31 = scriptNode5.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope34.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node37 = scope34.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = null;
        scope34.setTop(scriptNode38);
        scriptNode32.target = scope34;
        int int41 = scriptNode32.getEncodedSourceStart();
        int int42 = scriptNode5.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        scriptNode5.putIntProp((int) (byte) 1, 24);
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope49 = scope47.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node50 = scope47.target;
        scope47.setPosition(2);
        int int53 = scope47.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope54 = scope47.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator55 = scope47.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope59 = scope57.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node60 = scope57.target;
        scope57.setPosition(2);
        int int63 = scope57.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope64 = scope57.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator65 = scope57.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str67 = scriptNode66.getEncodedSource();
        int int68 = scriptNode66.getBaseLineno();
        java.lang.Object obj69 = scriptNode66.getCompilerData();
        scriptNode66.flattenSymbolTable(false);
        scope47.addChildAfter((com.google.javascript.rhino.head.Node) scope57, (com.google.javascript.rhino.head.Node) scriptNode66);
        int int73 = scriptNode66.getLength();
        scriptNode66.setEncodedSourceEnd((int) (byte) 0);
        java.lang.String str76 = scriptNode66.shortName();
        scriptNode5.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        scriptNode5.setRelative(1278533831);
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node81 = scriptNode5.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(symbol29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 53 + "'", int31 == 53);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNull(scope49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertNotNull(nodeSpliterator55);
        org.junit.Assert.assertNull(scope59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(scope64);
        org.junit.Assert.assertNotNull(nodeSpliterator65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ScriptNode" + "'", str76, "ScriptNode");
    }

    @Test
    public void test05627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05627");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol19 = scope17.getSymbol("$0");
        int int20 = scope17.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        int int32 = scriptNode21.getIntProp(6, 2);
        int int33 = scriptNode21.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        int int36 = scriptNode34.getBaseLineno();
        java.lang.String str37 = scriptNode34.getNextTempName();
        scriptNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.lang.String str39 = scriptNode34.debugPrint();
        scope17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        scriptNode34.setEncodedSourceBounds(9, 2);
        java.lang.String str44 = scriptNode34.toString();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator45 = scriptNode34.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = scriptNode34.getEnclosingFunction();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        int int48 = scriptNode1.depth();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = scriptNode1.getParamOrVarName(170200694);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 170200694");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertNull(symbol19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 129 + "'", int20 == 129);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str39, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertNull(functionNode46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
    }

    @Test
    public void test05628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05628");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        com.google.javascript.rhino.head.Node node28 = scriptNode10.setType((int) (short) 10);
        scriptNode10.setEncodedSourceBounds(13, 129);
        boolean boolean32 = scriptNode10.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode10.setBaseLineno(23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test05629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05629");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("-547629399\tBLOCK -547629399 1\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test05630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05630");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(19, 15);
        boolean boolean3 = node2.hasChildren();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test05631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05631");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(18);
        java.lang.Object obj16 = scriptNode13.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node55 = scriptNode44.target;
        scriptNode13.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        int int57 = scriptNode44.getLineno();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode44);
        scriptNode0.setRelative((int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode0.getSymbolTable();
        com.google.javascript.rhino.head.Node node62 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment(53, 53, commentType65, "                  Scope");
        node62.addChildrenToBack((com.google.javascript.rhino.head.Node) comment67);
        com.google.javascript.rhino.head.Node node69 = node62.getFirstChild();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                    {\n                                    }\n" + "'", str15, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(node69);
    }

    @Test
    public void test05632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05632");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = scriptNode30.getEnclosingFunction();
        scriptNode6.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode30);
        int int38 = scriptNode30.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor39 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode30.visit(nodeVisitor39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(functionNode36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 136 + "'", int38 == 136);
    }

    @Test
    public void test05633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05633");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) 'a', "                    hi!");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05634");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        java.lang.Object obj2 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList6 = scriptNode1.getSymbols();
        java.lang.String str7 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        java.lang.String str18 = scriptNode17.shortName();
        scriptNode17.setSourceName("                    Scope");
        com.google.javascript.rhino.head.Node node21 = scriptNode17.getNext();
        int int22 = scriptNode17.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList23 = scriptNode17.getStatements();
        scriptNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode17);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(symbolList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ScriptNode" + "'", str7, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ScriptNode" + "'", str18, "ScriptNode");
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(astNodeList23);
    }

    @Test
    public void test05635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05635");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(8);
        // The following exception was thrown during execution in test generation
        try {
            int int2 = scriptNode1.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05636");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = null;
        scope15.setTop(scriptNode19);
        scriptNode13.target = scope15;
        int int22 = scriptNode13.getEncodedSourceStart();
        scope1.setTop(scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        java.lang.String str33 = scriptNode25.toSource(26);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25);
        scope1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        com.google.javascript.rhino.head.Node node37 = com.google.javascript.rhino.head.Node.newString("129");
        // The following exception was thrown during execution in test generation
        try {
            scope1.setFinally(node37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                    {\n                                                    }\n" + "'", str33, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(node37);
    }

    @Test
    public void test05637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05637");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode27.getSymbols();
        int int39 = scriptNode27.getAbsolutePosition();
        scriptNode27.putIntProp((-53), 845940331);
        java.lang.Object obj43 = scriptNode27.getCompilerData();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test05638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05638");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        int int43 = scriptNode24.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node44 = scriptNode24.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            node44.setString("");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Comment cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertNotNull(node44);
    }

    @Test
    public void test05639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05639");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.clearParentScope();
        scriptNode28.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode39.toSource(18);
        java.lang.Object obj42 = scriptNode39.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        int int55 = scriptNode44.getIntProp(6, 2);
        int int56 = scriptNode44.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scope58.setJsDocNode(comment67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode70.getSymbols();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope58, (com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode70.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node81 = scriptNode70.target;
        scriptNode39.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode70);
        boolean boolean83 = scriptNode70.hasSideEffects();
        java.lang.String str84 = scriptNode30.toStringTree(scriptNode70);
        com.google.javascript.rhino.head.ast.Comment comment85 = scriptNode30.getJsDocNode();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor86 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode30.visit(nodeVisitor86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                    {\n                                    }\n" + "'", str41, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(comment85);
    }

    @Test
    public void test05640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05640");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((int) (byte) 100);
    }

    @Test
    public void test05641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05641");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("                                              Scope");
        java.lang.String str3 = scriptNode0.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        boolean boolean39 = scope27.hasChildren();
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope27);
        // The following exception was thrown during execution in test generation
        try {
            scope27.labelId(1246415336);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test05642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05642");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.Node node55 = scriptNode26.target;
        scriptNode26.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope61 = scope59.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node62 = scope59.target;
        scope59.setPosition(2);
        java.lang.String str65 = scope59.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap66 = scope59.getSymbolTable();
        boolean boolean67 = scope59.hasChildren();
        com.google.javascript.rhino.head.Node node68 = scope59.getNext();
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope72 = scope70.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node73 = scope70.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        scope70.setJsDocNode(comment79);
        java.lang.String str83 = comment79.toSource((int) (short) 10);
        scope59.setJsDocNode(comment79);
        java.lang.String str85 = comment79.getValue();
        int int86 = comment79.depth();
        scriptNode26.setJsDocNode(comment79);
        com.google.javascript.rhino.head.ast.AstRoot astRoot88 = comment79.getAstRoot();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor89 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment79.visit(nodeVisitor89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(scope61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{\n}\n" + "'", str65, "{\n}\n");
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNull(scope72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "                    Scope" + "'", str83, "                    Scope");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Scope" + "'", str85, "Scope");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNull(astRoot88);
    }

    @Test
    public void test05643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05643");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.Node node23 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        scriptNode37.setEncodedSource("                        ");
        int int44 = scriptNode37.getLineno();
        scriptNode0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        int int46 = scriptNode0.getLineno();
        int int47 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSourceStart((-613442063));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        scriptNode77.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList88 = scriptNode77.getFunctions();
        java.lang.String str89 = scriptNode77.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot90 = scriptNode77.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode77);
        com.google.javascript.rhino.head.ast.AstNode astNode92 = scriptNode77.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList93 = scriptNode77.getChildScopes();
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(functionNodeList88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "52\t  SCRIPT 0 1\n" + "'", str89, "52\t  SCRIPT 0 1\n");
        org.junit.Assert.assertNull(astRoot90);
        org.junit.Assert.assertNotNull(astNode92);
        org.junit.Assert.assertNull(scopeList93);
    }

    @Test
    public void test05644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05644");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (short) 1, 14, commentType2, "/");
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str14 = comment9.toStringTree(scriptNode10);
        boolean boolean15 = scriptNode10.hasSideEffects();
        com.google.javascript.rhino.head.Node node17 = scriptNode10.setType(16);
        int int18 = scriptNode10.getLength();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = scope20.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getParamCount();
        java.lang.String str38 = scriptNode25.debugPrint();
        scope20.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        scriptNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode25);
        comment4.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.lang.Object obj43 = scriptNode10.getProp(13);
        com.google.javascript.rhino.head.Node node44 = scriptNode10.target;
        int int45 = scriptNode10.getBaseLineno();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str38, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test05645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05645");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-51), 0);
    }

    @Test
    public void test05646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05646");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getRegexpCount();
        java.lang.String str22 = scriptNode9.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        scope37.setPosition(2);
        scope37.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node45 = scope37.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getEncodedSource();
        scriptNode46.setEncodedSourceEnd(18);
        java.lang.String str51 = scriptNode46.makeIndent((int) '#');
        scope37.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope24, (com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope scope54 = scope24.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        int int70 = scriptNode68.getBaseLineno();
        java.lang.String str71 = scriptNode68.getNextTempName();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        int int73 = scriptNode55.getEndLineno();
        scope24.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode55);
        scriptNode9.addChildScope(scope24);
        scope24.setPosition((-53));
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList78 = scope24.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        com.google.javascript.rhino.head.Token.CommentType commentType86 = null;
        comment84.setCommentType(commentType86);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) comment84);
        java.lang.String str89 = scriptNode0.getJsDoc();
        scriptNode0.setEncodedSourceStart(0);
        int int92 = scriptNode0.getLineno();
        boolean boolean93 = scriptNode0.hasChildren();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                                      " + "'", str51, "                                                                      ");
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(astNodeList78);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test05647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05647");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-547629399), "-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n-1\tSCRIPT -1 35\n2\t  BLOCK 3 32\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05648");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = scriptNode31.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = functionNode45.getParamOrVarName(100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(functionNode45);
    }

    @Test
    public void test05649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05649");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scope2.getSymbolTable();
        boolean boolean10 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scope2.target = scriptNode11;
        com.google.javascript.rhino.head.Node node22 = scriptNode11.target;
        scriptNode11.setBaseLineno(10);
        scriptNode11.setEncodedSourceEnd((int) (short) -1);
        int int27 = scriptNode11.getParamCount();
        com.google.javascript.rhino.head.Node node29 = scriptNode11.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.Object obj33 = scriptNode30.getCompilerData();
        scriptNode30.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap36 = null;
        scriptNode30.setSymbolTable(strMap36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode30.getTop();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode30);
        int int40 = scriptNode30.getLineno();
        boolean boolean41 = scriptNode30.hasChildren();
        scriptNode30.setEncodedSource("in");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope44 = scriptNode30.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test05650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05650");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList23 = scriptNode16.getFunctions();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(functionNodeList23);
    }

    @Test
    public void test05651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05651");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = scope1.new NodeIterator();
        scope1.setBounds(10, 1404628457);
        com.google.javascript.rhino.head.Node node30 = scope1.getNext();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertNull(node30);
    }

    @Test
    public void test05652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05652");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(26, 23);
        boolean boolean3 = node2.hasSideEffects();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test05653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05653");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(8, (int) (short) 10, commentType2, "53\tCOMMENT 53 53\n");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = comment4.getCommentType();
        java.lang.String str7 = comment4.toSource((int) (short) 1);
        org.junit.Assert.assertNull(commentType5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "  53\tCOMMENT 53 53\n" + "'", str7, "  53\tCOMMENT 53 53\n");
    }

    @Test
    public void test05654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05654");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        java.lang.String str9 = scriptNode1.toSource(26);
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode1);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node11 = scriptNode1.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                                    {\n                                                    }\n" + "'", str9, "                                                    {\n                                                    }\n");
    }

    @Test
    public void test05655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05655");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.Node node52 = comment49.getFirstChild();
        scriptNode17.setJsDocNode(comment49);
        scriptNode17.setEncodedSourceBounds((int) ' ', 0);
        java.lang.Object obj58 = scriptNode17.getProp(22);
        scriptNode17.setBounds((int) 'a', (-51));
        scriptNode17.setRelative(129);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test05656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05656");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(7, (-1), commentType2, "52\t  SCRIPT 0 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        comment4.setCommentType(commentType5);
        comment4.setBounds((-389829193), (int) 'a');
        com.google.javascript.rhino.head.Token.CommentType commentType10 = comment4.getCommentType();
        org.junit.Assert.assertNull(commentType10);
    }

    @Test
    public void test05657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05657");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode11.getStatements();
        scriptNode11.flattenSymbolTable(false);
        java.lang.String str34 = scriptNode11.getEncodedSource();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor35 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode11.visit(nodeVisitor35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test05658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05658");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        java.lang.String str15 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.ast.AstNode astNode16 = scriptNode0.getParent();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray17 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0\tBLOCK 0 1\n" + "'", str15, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertNotNull(astNode16);
    }

    @Test
    public void test05659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05659");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        java.lang.String str23 = scope17.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = scope17.getSymbolTable();
        boolean boolean25 = scope17.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scope17.target = scriptNode26;
        com.google.javascript.rhino.head.Node node37 = scriptNode26.target;
        int int38 = scriptNode26.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        int int54 = scriptNode52.getBaseLineno();
        java.lang.String str55 = scriptNode52.getNextTempName();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.lang.String str57 = scriptNode52.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str63 = scope61.toSource(12);
        scope61.setRelative(1);
        scriptNode52.putProp(17, (java.lang.Object) 1);
        scriptNode26.target = scriptNode52;
        int int68 = scriptNode26.getEncodedSourceEnd();
        java.lang.Object obj69 = scriptNode26.getCompilerData();
        java.lang.String str70 = scriptNode26.shortName();
        scriptNode0.setTop(scriptNode26);
        com.google.javascript.rhino.head.Node node72 = scriptNode26.target;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = node72.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str57, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                        {\n                        }\n" + "'", str63, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ScriptNode" + "'", str70, "ScriptNode");
        org.junit.Assert.assertNotNull(node72);
    }

    @Test
    public void test05660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05660");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = scriptNode0.getSymbolTable();
        scriptNode0.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        scriptNode32.setEncodedSourceEnd(18);
        java.lang.String str37 = scriptNode32.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = scriptNode40.getTop();
        scriptNode49.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int54 = scriptNode53.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        scriptNode55.setEncodedSourceEnd(18);
        scriptNode53.target = scriptNode55;
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode49, (com.google.javascript.rhino.head.Node) scriptNode55);
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode49, (com.google.javascript.rhino.head.Node) comment65);
        int int67 = scriptNode49.depth();
        int int68 = scriptNode49.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = scriptNode49.iterator();
        scriptNode32.setTop(scriptNode49);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope74 = scope72.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node75 = scope72.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType79, "Scope");
        scriptNode76.setParent((com.google.javascript.rhino.head.ast.AstNode) comment81);
        scope72.setJsDocNode(comment81);
        com.google.javascript.rhino.head.Node node84 = comment81.getFirstChild();
        scriptNode49.setJsDocNode(comment81);
        int int86 = scriptNode49.getBaseLineno();
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList88 = scriptNode49.getFunctions();
        int int89 = scriptNode49.depth();
        java.lang.String str90 = scriptNode49.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode49.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                      " + "'", str37, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNull(scope74);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test05661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05661");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str12 = scriptNode3.getSourceName();
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode3, 26);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode3);
        java.lang.String str16 = scriptNode1.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int23 = scriptNode20.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope25.setPosition(100);
        com.google.javascript.rhino.head.Node node28 = scope25.getLastSibling();
        node28.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = node28.spliterator();
        scriptNode20.setCompilerData((java.lang.Object) node28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) comment59);
        java.lang.String str61 = scriptNode20.toStringTree(scriptNode43);
        int int62 = scriptNode43.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        int int74 = scriptNode63.getIntProp(6, 2);
        scriptNode63.setEndLineno(18);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode63);
        int int78 = scriptNode63.getEncodedSourceStart();
        java.lang.String str80 = scriptNode63.makeIndent((-547629399));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode((int) '4');
        com.google.javascript.rhino.head.Node node83 = scriptNode82.getLastChild();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(1487440633, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode82, (int) (byte) 1);
        java.lang.String str87 = scriptNode82.toSource((int) (short) 0);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode82);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump89 = scriptNode82.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{\n}\n" + "'", str87, "{\n}\n");
    }

    @Test
    public void test05662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05662");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getFunctionCount();
        int int11 = scriptNode0.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList12 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.String str29 = scriptNode26.getNextTempName();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode33.getTop();
        scriptNode42.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int47 = scriptNode46.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        scriptNode48.setEncodedSourceEnd(18);
        scriptNode46.target = scriptNode48;
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode57.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str66 = scriptNode57.getSourceName();
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode57, 26);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node53, (com.google.javascript.rhino.head.Node) scriptNode54, (com.google.javascript.rhino.head.Node) scriptNode57);
        node69.setLineno(5);
        scriptNode13.setCompilerData((java.lang.Object) node69);
        scriptNode13.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = scriptNode13.getTop();
        java.lang.String str75 = scriptNode13.shortName();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDefault((com.google.javascript.rhino.head.Node) scriptNode13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(astNodeList12);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ScriptNode" + "'", str75, "ScriptNode");
    }

    @Test
    public void test05663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05663");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.lang.String str18 = scriptNode13.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode19.getSymbols();
        scriptNode13.setSymbols(symbolList26);
        int int28 = scriptNode13.getRegexpCount();
        int int29 = scriptNode13.depth();
        scriptNode13.setEncodedSourceStart((int) '4');
        com.google.javascript.rhino.head.ast.AstNode astNode32 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int33 = scriptNode13.compareTo(astNode32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str18, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test05664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05664");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        int int46 = scriptNode44.getBaseLineno();
        java.lang.Object obj47 = scriptNode44.getCompilerData();
        scriptNode44.setEncodedSourceBounds((int) '4', 0);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        java.lang.String str52 = scriptNode0.toSource();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        scope54.setPosition(2);
        scope54.setLength((int) (byte) 1);
        java.lang.Object obj63 = scope54.getProp((int) 'a');
        java.lang.String str64 = scope54.debugPrint();
        scope54.removeChildren();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, scope54);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node67 = scope54.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "2\tBLOCK 2 1\n" + "'", str64, "2\tBLOCK 2 1\n");
    }

    @Test
    public void test05665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05665");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        scope1.removeProp(8);
        scope1.setPosition(6);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test05666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05666");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope3.setPosition(100);
        com.google.javascript.rhino.head.Node node6 = scope3.getLastSibling();
        node6.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = node6.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = null;
        scriptNode25.setSymbols(symbolList31);
        node6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str34 = scriptNode1.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        int int50 = scriptNode48.getBaseLineno();
        java.lang.String str51 = scriptNode48.getNextTempName();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode25, (com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = scriptNode48.getRegexpFlags(1034180762);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
    }

    @Test
    public void test05667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05667");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node38 = scriptNode27.target;
        scriptNode27.setBounds(16, 13);
        int int42 = scriptNode27.getPosition();
        java.lang.String str43 = scriptNode27.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            int int45 = scriptNode27.getExistingIntProp(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 16 + "'", int42 == 16);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test05668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05668");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        boolean boolean14 = scriptNode2.hasChildren();
        scriptNode2.setLineno(17);
        int int17 = scriptNode2.getFunctionCount();
        java.lang.String str18 = scriptNode2.getEncodedSource();
        java.lang.String str19 = scriptNode2.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        java.lang.String str25 = scriptNode20.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scriptNode20.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope27 = scriptNode20.getParentScope();
        java.lang.String str28 = scriptNode20.getNextTempName();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode20, 34756133);
        com.google.javascript.rhino.head.Node node31 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(135357821, (com.google.javascript.rhino.head.Node) scriptNode2, node31, (-1379055074));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                                                                      " + "'", str25, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "$0" + "'", str28, "$0");
    }

    @Test
    public void test05669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05669");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int12 = scriptNode9.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope14.setPosition(100);
        com.google.javascript.rhino.head.Node node17 = scope14.getLastSibling();
        node17.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = node17.spliterator();
        scriptNode9.setCompilerData((java.lang.Object) node17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        scriptNode36.target = scriptNode38;
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment48);
        java.lang.String str50 = scriptNode9.toStringTree(scriptNode32);
        scope1.setTop(scriptNode32);
        scope1.setLineno((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump54 = scope1.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test05670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05670");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        java.lang.Object obj18 = comment11.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        int int32 = scriptNode21.getIntProp(6, 2);
        int int33 = scriptNode21.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope37 = scope35.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node38 = scope35.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scope35.setJsDocNode(comment44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = scriptNode47.getSymbols();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode21, (com.google.javascript.rhino.head.Node) scope35, (com.google.javascript.rhino.head.Node) scriptNode47);
        scriptNode47.setPosition((int) (byte) 0);
        scriptNode47.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        int int71 = scriptNode60.getIntProp(6, 2);
        int int72 = scriptNode60.getParamCount();
        java.lang.String str73 = scriptNode60.debugPrint();
        int int76 = scriptNode60.getIntProp(17, 10);
        scriptNode47.setTop(scriptNode60);
        int int78 = scriptNode60.getEncodedSourceStart();
        java.lang.String str79 = scriptNode60.toString();
        java.lang.Class<?> wildcardClass80 = scriptNode60.getClass();
        comment11.putProp(35, (java.lang.Object) wildcardClass80);
        com.google.javascript.rhino.head.ast.Scope scope83 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope85 = scope83.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node86 = scope83.target;
        scope83.setPosition(2);
        int int89 = scope83.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope90 = scope83.getEnclosingScope();
        java.lang.String str92 = scope83.makeIndent(0);
        java.lang.String str93 = scope83.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol95 = scope83.getSymbol("                                      Scope");
        int int96 = scope83.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope98 = new com.google.javascript.rhino.head.ast.Scope(24);
        comment11.addChildAfter((com.google.javascript.rhino.head.Node) scope83, (com.google.javascript.rhino.head.Node) scope98);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(symbolList54);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str73, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "136" + "'", str79, "136");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNull(scope85);
        org.junit.Assert.assertNull(node86);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "129" + "'", str93, "129");
        org.junit.Assert.assertNull(symbol95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test05671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05671");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str36 = scriptNode27.getSourceName();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode27, 26);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node23, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap40 = null;
        scriptNode27.setSymbolTable(strMap40);
        java.lang.Object obj43 = scriptNode27.getProp((int) (short) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol45 = scriptNode27.getSymbol("                    Scope");
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope47.setPosition(100);
        com.google.javascript.rhino.head.Node node50 = scope47.getLastSibling();
        node50.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = node50.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scriptNode54.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = scriptNode54.getTop();
        scriptNode63.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int68 = scriptNode67.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode69.getEncodedSource();
        scriptNode69.setEncodedSourceEnd(18);
        scriptNode67.target = scriptNode69;
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scriptNode69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = null;
        scriptNode69.setSymbols(symbolList75);
        node50.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode69);
        scriptNode69.setBaseLineno(26);
        int int80 = scriptNode69.getLength();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor81 = scriptNode69.iterator();
        scriptNode27.setTop(scriptNode69);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(1404628457, (com.google.javascript.rhino.head.Node) scriptNode69);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(symbol45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertNotNull(scriptNode63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(nodeItor81);
    }

    @Test
    public void test05672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05672");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = scriptNode24.getTop();
        scriptNode33.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int38 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        scriptNode39.setEncodedSourceEnd(18);
        scriptNode37.target = scriptNode39;
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str57 = scriptNode48.getSourceName();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode48, 26);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node44, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.Node node61 = scriptNode48.getLastSibling();
        boolean boolean62 = scriptNode48.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        scriptNode48.putProp((int) (byte) 0, (java.lang.Object) int75);
        com.google.javascript.rhino.head.Node node77 = scriptNode48.target;
        scriptNode48.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node80 = scriptNode48.getLastSibling();
        scriptNode10.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str83 = scriptNode82.getEncodedSource();
        int int84 = scriptNode82.getBaseLineno();
        java.lang.Object obj85 = scriptNode82.getCompilerData();
        scriptNode82.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap88 = null;
        scriptNode82.setSymbolTable(strMap88);
        scriptNode10.setTop(scriptNode82);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump91 = scriptNode10.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(scriptNode33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test05673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05673");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        scope18.putIntProp(17, 25);
        scope18.setLength((int) ' ');
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.Object obj33 = scriptNode30.getCompilerData();
        scriptNode30.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList37 = scriptNode30.getSymbols();
        scope18.setTop(scriptNode30);
        scriptNode30.setEncodedSourceBounds((int) (short) -1, 19);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor42 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode30.visit(nodeVisitor42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(symbolList37);
    }

    @Test
    public void test05674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05674");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        com.google.javascript.rhino.head.Node node37 = scriptNode1.setType((int) (short) 100);
        boolean boolean38 = node37.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node39 = node37.getFirstChild();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(node39);
    }

    @Test
    public void test05675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05675");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType3, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope10 = scope8.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node11 = scope8.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scope8.setJsDocNode(comment17);
        java.lang.String str21 = comment17.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment17);
        comment5.addChildToBack(node22);
        java.lang.String str24 = comment5.getValue();
        int int27 = comment5.getIntProp((int) (short) 100, (int) (short) 10);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = comment5.spliterator();
        com.google.javascript.rhino.head.Node node30 = comment5.setType(0);
        java.lang.String str32 = comment5.toSource((-2));
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(38914433, (com.google.javascript.rhino.head.Node) comment5);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = comment5.getExistingIntProp(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                    Scope" + "'", str21, "                    Scope");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test05676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05676");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        java.lang.String str23 = scope17.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = scope17.getSymbolTable();
        boolean boolean25 = scope17.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scope17.target = scriptNode26;
        com.google.javascript.rhino.head.Node node37 = scriptNode26.target;
        int int38 = scriptNode26.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        int int54 = scriptNode52.getBaseLineno();
        java.lang.String str55 = scriptNode52.getNextTempName();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.lang.String str57 = scriptNode52.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope61 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str63 = scope61.toSource(12);
        scope61.setRelative(1);
        scriptNode52.putProp(17, (java.lang.Object) 1);
        scriptNode26.target = scriptNode52;
        int int68 = scriptNode26.getEncodedSourceEnd();
        java.lang.Object obj69 = scriptNode26.getCompilerData();
        java.lang.String str70 = scriptNode26.shortName();
        scriptNode0.setTop(scriptNode26);
        com.google.javascript.rhino.head.Node node72 = scriptNode26.target;
        // The following exception was thrown during execution in test generation
        try {
            int int73 = scriptNode26.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "$0" + "'", str55, "$0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str57, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                        {\n                        }\n" + "'", str63, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ScriptNode" + "'", str70, "ScriptNode");
        org.junit.Assert.assertNotNull(node72);
    }

    @Test
    public void test05677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05677");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(1278533831, "                  Scope");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05678");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope8.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scope26.setJsDocNode(comment35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode38.getSymbols();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setPosition((int) (byte) 0);
        scope8.setTop(scriptNode38);
        int int50 = scriptNode38.getParamCount();
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode52.getTop();
        java.lang.String str62 = scriptNode61.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = scriptNode63.getTop();
        java.lang.String str73 = scriptNode72.shortName();
        scriptNode61.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        java.lang.String str75 = scope1.toStringTree(scriptNode61);
        java.lang.Class<?> wildcardClass76 = scope1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ScriptNode" + "'", str62, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ScriptNode" + "'", str73, "ScriptNode");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test05679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05679");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setRelative((int) '4');
        java.lang.String str17 = scriptNode0.toSource(18);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope(21, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(21);
        scope20.setTop(scriptNode22);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = scope20.new NodeIterator();
        scriptNode0.addChildScope(scope20);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node26 = scriptNode0.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                    {\n                                    }\n" + "'", str17, "                                    {\n                                    }\n");
    }

    @Test
    public void test05680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05680");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(24, (int) (byte) 0);
        int int3 = node2.getType();
        boolean boolean4 = node2.hasChildren();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 24 + "'", int3 == 24);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test05681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05681");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setPosition(8);
        int int16 = scriptNode0.getParamCount();
        scriptNode0.setEncodedSource("%");
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode0.getChildScopes();
        int int20 = scriptNode0.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = scriptNode0.getParamOrVarName(98666588);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test05682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05682");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        int int58 = scriptNode40.getLineno();
        int int59 = scriptNode40.getType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor60 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode40.visit(nodeVisitor60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 136 + "'", int59 == 136);
    }

    @Test
    public void test05683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05683");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.Object obj72 = scriptNode23.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node73 = scriptNode23.getLastChild();
        com.google.javascript.rhino.head.ast.Scope scope74 = scriptNode23.getParentScope();
        int int75 = scriptNode23.getAbsolutePosition();
        scriptNode23.removeProp(960854933);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNull(scope74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test05684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05684");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.lang.String str22 = scriptNode16.getNextTempName();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment(15, 52, commentType26, "                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        java.lang.String str34 = scriptNode29.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) comment28, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        comment28.setCommentType(commentType36);
        scriptNode16.target = comment28;
        scriptNode16.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope42 = scriptNode16.getDefiningScope("-1\t  ASSIGN_DIV -53 1\n");
        scriptNode16.setEncodedSourceBounds((int) (byte) -1, 102);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                      " + "'", str34, "                                                                      ");
        org.junit.Assert.assertNull(scope42);
    }

    @Test
    public void test05685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05685");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean16 = scriptNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean20 = scope19.hasSideEffects();
        scriptNode0.putProp((int) (short) 1, (java.lang.Object) boolean20);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor22 = scriptNode0.iterator();
        int int23 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        scriptNode24.setEncodedSourceEnd(18);
        java.lang.String str29 = scriptNode24.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = scriptNode32.getTop();
        scriptNode41.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int46 = scriptNode45.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str48 = scriptNode47.getEncodedSource();
        scriptNode47.setEncodedSourceEnd(18);
        scriptNode45.target = scriptNode47;
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode47);
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) comment57);
        int int59 = scriptNode41.depth();
        int int60 = scriptNode41.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor61 = scriptNode41.iterator();
        scriptNode24.setTop(scriptNode41);
        int int63 = scriptNode24.getParamCount();
        java.lang.String str64 = scriptNode24.debugPrint();
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str67 = scriptNode66.getEncodedSource();
        scriptNode66.setEncodedSourceEnd(18);
        java.lang.String str71 = scriptNode66.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        scriptNode72.setEncodedSourceStart((int) (byte) 100);
        scriptNode66.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode72);
        int int82 = scriptNode66.getRegexpCount();
        int int83 = scriptNode66.getParamCount();
        scriptNode66.setBounds(14, 1404628457);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = scriptNode24.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(nodeItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                                                      " + "'", str29, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(nodeItor61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str64, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "                                                                      " + "'", str71, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test05686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05686");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(4);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope41 = scope39.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node42 = scope39.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scope39.setJsDocNode(comment48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode51.getSymbols();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope39, (com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int63 = scriptNode62.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope65 = scriptNode62.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str66 = scriptNode62.shortName();
        scriptNode25.setCompilerData((java.lang.Object) scriptNode62);
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        int int69 = scriptNode25.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol71 = scriptNode25.getSymbol("                      Scope");
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(scope65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ScriptNode" + "'", str66, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(symbol71);
    }

    @Test
    public void test05687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05687");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scope2.removeProp(13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode5.getSymbols();
        java.lang.String str13 = scriptNode5.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        com.google.javascript.rhino.head.Node node16 = scriptNode14.getLastSibling();
        scriptNode14.setEncodedSource("Scope");
        scriptNode14.setEndLineno(100);
        scriptNode5.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope23.putProp(25, (java.lang.Object) 100L);
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) scope23);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope32 = scope30.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node33 = scope30.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scope30.setJsDocNode(comment39);
        java.lang.String str43 = comment39.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment39);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = node44.new NodeIterator();
        com.google.javascript.rhino.head.Node node46 = nodeIterator45.next();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        int int59 = scriptNode47.getRegexpCount();
        java.lang.String str60 = scriptNode47.getSourceName();
        java.lang.String str61 = node46.toStringTree(scriptNode47);
        scriptNode47.flattenSymbolTable(true);
        scope23.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        // The following exception was thrown during execution in test generation
        try {
            scope2.setContinue((com.google.javascript.rhino.head.Node) scope23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "                    Scope" + "'", str43, "                    Scope");
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test05688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05688");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        scriptNode1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) scriptNode1, 19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode9.toSource(18);
        java.lang.Object obj12 = scriptNode9.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope30 = scope28.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node31 = scope28.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scope28.setJsDocNode(comment37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = scriptNode40.getSymbols();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scope28, (com.google.javascript.rhino.head.Node) scriptNode40);
        scriptNode40.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node51 = scriptNode40.target;
        scriptNode9.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        java.lang.String str53 = scriptNode9.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int63 = scriptNode60.getIntProp(23, (int) (short) 1);
        boolean boolean64 = scriptNode60.hasSideEffects();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) scriptNode60);
        node7.addChildToFront(node65);
        java.lang.Object obj68 = node7.getProp(371991955);
        int int69 = node7.getLineno();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                    {\n                                    }\n" + "'", str11, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNotNull(symbolList47);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 19 + "'", int69 == 19);
    }

    @Test
    public void test05689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05689");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        int int25 = scriptNode0.getLineno();
        int int26 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = null;
        scope29.setTop(scriptNode33);
        scriptNode27.target = scope29;
        int int36 = scriptNode27.getEncodedSourceStart();
        int int37 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        scriptNode0.putIntProp((int) (byte) 1, 24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scriptNode43.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scriptNode43.getTop();
        scriptNode52.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int57 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getEncodedSource();
        scriptNode58.setEncodedSourceEnd(18);
        scriptNode56.target = scriptNode58;
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scriptNode58);
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) comment68);
        int int70 = scriptNode52.depth();
        int int71 = scriptNode52.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList72 = scriptNode52.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope76 = scope74.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node77 = scope74.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        scope74.setJsDocNode(comment83);
        com.google.javascript.rhino.head.Token.CommentType commentType86 = null;
        comment83.setCommentType(commentType86);
        scriptNode52.setJsDocNode(comment83);
        java.lang.Object obj90 = comment83.getProp((int) ' ');
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) comment83);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 53 + "'", int26 == 53);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(astNodeList72);
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test05690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05690");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        comment21.setCommentType(commentType24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = comment21.getAstRoot();
        scriptNode0.setJsDocNode(comment21);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scriptNode0.spliterator();
        java.lang.String str29 = scriptNode0.toString();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(astRoot26);
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "136" + "'", str29, "136");
    }

    @Test
    public void test05691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05691");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        int int4 = scope3.getLength();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        java.lang.Object obj23 = comment16.getProp((int) (short) -1);
        java.lang.String str25 = comment16.makeIndent((int) (short) -1);
        scope3.setJsDocNode(comment16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int31 = scriptNode28.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope33.setPosition(100);
        com.google.javascript.rhino.head.Node node36 = scope33.getLastSibling();
        node36.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator38 = node36.spliterator();
        scriptNode28.setCompilerData((java.lang.Object) node36);
        java.lang.String str40 = scriptNode28.getSourceName();
        int int41 = scriptNode28.getEncodedSourceStart();
        scriptNode28.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        java.lang.String str54 = comment49.toStringTree(scriptNode50);
        com.google.javascript.rhino.head.Node node56 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode50, node56);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode50);
        scriptNode28.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            double double60 = scriptNode28.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeSpliterator38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(node56);
    }

    @Test
    public void test05692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05692");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode1.getParentScope();
        int int6 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        int int21 = scriptNode10.getIntProp(6, 2);
        int int22 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode36.getSymbols();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setPosition((int) (byte) 0);
        scriptNode36.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        int int60 = scriptNode49.getIntProp(6, 2);
        int int61 = scriptNode49.getParamCount();
        java.lang.String str62 = scriptNode49.debugPrint();
        int int65 = scriptNode49.getIntProp(17, 10);
        scriptNode36.setTop(scriptNode49);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scriptNode70.setEncodedSourceStart((int) (byte) 100);
        int int79 = scriptNode70.getEncodedSourceStart();
        scriptNode70.setLineno(1);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode70, (int) '#');
        java.lang.String str84 = scriptNode1.toStringTree(scriptNode36);
        scriptNode36.flattenSymbolTable(true);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap87 = scriptNode36.getSymbolTable();
        // The following exception was thrown during execution in test generation
        try {
            int int88 = scriptNode36.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str62, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(strMap87);
    }

    @Test
    public void test05693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05693");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        java.lang.String str13 = comment8.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode9, node15);
        scriptNode9.setSourceName("hi!");
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.Object obj20 = scriptNode9.getCompilerData();
        java.lang.String str22 = scriptNode9.toSource(23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = scriptNode25.getTop();
        scriptNode34.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int39 = scriptNode38.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getEncodedSource();
        scriptNode40.setEncodedSourceEnd(18);
        scriptNode38.target = scriptNode40;
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) comment50);
        int int52 = scriptNode34.depth();
        int int53 = scriptNode34.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor54 = scriptNode34.iterator();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode9.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                              {\n                                              }\n" + "'", str22, "                                              {\n                                              }\n");
        org.junit.Assert.assertNotNull(scriptNode34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(nodeItor54);
    }

    @Test
    public void test05694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05694");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setEndLineno(20);
        scriptNode1.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node11 = scope10.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        scriptNode12.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        scriptNode12.setEncodedSourceStart((int) (byte) 100);
        int int23 = scriptNode12.getIntProp(6, 2);
        int int24 = scriptNode12.getRegexpCount();
        scriptNode12.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode12.setLineno((int) '#');
        int int29 = scriptNode12.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode30 = scriptNode12.getEnclosingFunction();
        int int31 = scriptNode12.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope36 = scriptNode33.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode33.setSourceName("");
        com.google.javascript.rhino.head.ast.AstNode astNode39 = scriptNode33.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode33.getChildScopes();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(98666588, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode33, (-243114478));
        int int43 = scriptNode33.getEncodedSourceEnd();
        scriptNode1.setCompilerData((java.lang.Object) scriptNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = scriptNode33.getTop();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode45.labelId(15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 35 + "'", int29 == 35);
        org.junit.Assert.assertNull(functionNode30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(astNode39);
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
    }

    @Test
    public void test05695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05695");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        boolean boolean9 = scope1.hasSideEffects();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList10 = scope1.getStatements();
        com.google.javascript.rhino.head.Node node11 = scope1.target;
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(astNodeList10);
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test05696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05696");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        int int57 = scriptNode55.getBaseLineno();
        java.lang.String str58 = scriptNode55.getNextTempName();
        scriptNode55.setLength((int) 'a');
        int int61 = scriptNode55.depth();
        scriptNode26.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node63 = scriptNode26.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test05697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05697");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        java.lang.Object obj18 = comment11.getProp((int) (short) -1);
        java.lang.String str20 = comment11.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scriptNode30.setPosition(6);
        comment11.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        int int50 = scriptNode48.getBaseLineno();
        java.lang.String str51 = scriptNode48.getNextTempName();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        java.lang.String str53 = scriptNode48.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode54.getSymbols();
        scriptNode48.setSymbols(symbolList61);
        comment11.putProp(23, (java.lang.Object) symbolList61);
        boolean boolean64 = comment11.hasConsistentReturnUsage();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str53, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test05698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05698");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = scriptNode0.getAstRoot();
        int int5 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment6 = scriptNode0.getJsDocNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList20 = null;
        scriptNode7.setSymbols(symbolList20);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode7.setParentScope(scope24);
        scope24.setLineno(1784707759);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode28.toSource(18);
        java.lang.Object obj31 = scriptNode28.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scriptNode33.setEncodedSourceStart((int) (byte) 100);
        int int44 = scriptNode33.getIntProp(6, 2);
        int int45 = scriptNode33.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope47 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope49 = scope47.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node50 = scope47.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scope47.setJsDocNode(comment56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scope47, (com.google.javascript.rhino.head.Node) scriptNode59);
        scriptNode59.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node70 = scriptNode59.target;
        scriptNode28.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode59);
        java.lang.String str72 = scriptNode28.getEncodedSource();
        int int73 = scriptNode28.getLineno();
        scriptNode28.setEncodedSourceStart(0);
        scope24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(astRoot4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(comment6);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                    {\n                                    }\n" + "'", str30, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(scope49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test05699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05699");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        boolean boolean5 = scriptNode1.hasChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = scriptNode1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor6.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(nodeItor6);
    }

    @Test
    public void test05700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05700");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        scriptNode51.setEndLineno(18);
        scriptNode38.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode38);
        int int67 = scriptNode0.getEncodedSourceEnd();
        int int68 = scriptNode0.getFunctionCount();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor69 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test05701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05701");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor8 = scope1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node9 = nodeItor8.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(nodeItor8);
    }

    @Test
    public void test05702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05702");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        scriptNode13.setEncodedSource("                        ");
        int int20 = scriptNode13.getLineno();
        com.google.javascript.rhino.head.Node node21 = scriptNode13.getNext();
        scriptNode13.setBounds((int) (byte) 0, (int) (short) -1);
        scriptNode13.setEncodedSourceStart(1487440633);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = scriptNode13.iterator();
        boolean boolean28 = nodeItor27.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node29 = nodeItor27.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test05703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05703");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceEnd(11);
        java.lang.String str24 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope(1, 9);
        scriptNode16.setCompilerData((java.lang.Object) scope29);
        int int31 = scope29.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str34 = scope33.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str45 = comment40.toStringTree(scriptNode41);
        com.google.javascript.rhino.head.Node node47 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode41, node47);
        scriptNode41.setSourceName("hi!");
        scope33.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode41);
        java.lang.Object obj52 = scriptNode41.getCompilerData();
        int int53 = scriptNode41.getEndLineno();
        java.lang.Object obj55 = scriptNode41.getProp(15);
        // The following exception was thrown during execution in test generation
        try {
            scope29.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Scope" + "'", str34, "Scope");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test05704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05704");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode28);
        int int60 = scriptNode28.getRegexpCount();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode28.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.labelId(26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(functionNodeList61);
    }

    @Test
    public void test05705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05705");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getEndLineno();
        int int19 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str21 = scriptNode0.toSource((int) (byte) -1);
        com.google.javascript.rhino.head.Node node22 = scriptNode0.getNext();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = scriptNode0.getSymbolTable();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList24 = scriptNode0.getStatements();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n{\n}\n}\n" + "'", str21, "{\n{\n}\n}\n");
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(astNodeList24);
    }

    @Test
    public void test05706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05706");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node42 = scriptNode31.target;
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        int int46 = scriptNode44.getBaseLineno();
        java.lang.Object obj47 = scriptNode44.getCompilerData();
        scriptNode44.setEncodedSourceBounds((int) '4', 0);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        scriptNode44.setSourceName("                    Scope");
        scriptNode44.setEncodedSource("-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test05707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05707");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) ' ', (-51));
        // The following exception was thrown during execution in test generation
        try {
            double double3 = node2.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.Node cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05708");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(0, 371991955);
    }

    @Test
    public void test05709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05709");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scriptNode0.new NodeIterator();
        boolean boolean11 = nodeIterator10.hasNext();
        boolean boolean12 = nodeIterator10.hasNext();
        boolean boolean13 = nodeIterator10.hasNext();
        boolean boolean14 = nodeIterator10.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node15 = nodeIterator10.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05710");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(6, (int) ' ', commentType2, "69\t  SCRIPT 17 1\n");
        // The following exception was thrown during execution in test generation
        try {
            comment4.setString("                                                                                                      6\tSCRIPT 6 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Comment cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05711");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        int int3 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = scope2.getTop();
        scope2.setLength(26);
        java.lang.String str8 = scope2.toSource(13);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump9 = scope2.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 129 + "'", int3 == 129);
        org.junit.Assert.assertNull(scriptNode4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                          {\n                          }\n" + "'", str8, "                          {\n                          }\n");
    }

    @Test
    public void test05712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05712");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        boolean boolean24 = nodeIterator17.hasNext();
        boolean boolean25 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        boolean boolean27 = nodeIterator17.hasNext();
        boolean boolean28 = nodeIterator17.hasNext();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test05713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05713");
        com.google.javascript.rhino.head.Node node3 = com.google.javascript.rhino.head.Node.newNumber((double) 12);
        com.google.javascript.rhino.head.Node node4 = new com.google.javascript.rhino.head.Node(6, node3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource(18);
        java.lang.Object obj21 = scriptNode18.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode49.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node60 = scriptNode49.target;
        scriptNode18.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode49);
        int int62 = scriptNode49.getLineno();
        scriptNode5.setCompilerData((java.lang.Object) scriptNode49);
        scriptNode5.setRelative((int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap66 = scriptNode5.getSymbolTable();
        com.google.javascript.rhino.head.Node node67 = scriptNode5.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        int int70 = scriptNode69.getAbsolutePosition();
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(100, node3, (com.google.javascript.rhino.head.Node) scriptNode69);
        scriptNode69.flattenSymbolTable(false);
        int int75 = scriptNode69.getRegexpCount();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                    {\n                                    }\n" + "'", str20, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 6 + "'", int70 == 6);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test05714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05714");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node3 = scope2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        int int15 = scriptNode4.getIntProp(6, 2);
        int int16 = scriptNode4.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        int int28 = scriptNode17.getIntProp(6, 2);
        int int29 = scriptNode17.getParamCount();
        scriptNode4.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        scope32.setPosition(2);
        scope32.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node40 = scope32.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str46 = scriptNode41.makeIndent((int) '#');
        scope32.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope51 = scope49.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node52 = scope49.target;
        scope49.setPosition(2);
        scope49.putIntProp(17, 25);
        scope49.setLength((int) ' ');
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scope49);
        scriptNode4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode41);
        scriptNode4.clearParentScope();
        scope2.target = scriptNode4;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode64 = scriptNode4.getEnclosingFunction();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                      " + "'", str46, "                                                                      ");
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(functionNode64);
    }

    @Test
    public void test05715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05715");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap6 = null;
        scriptNode0.setSymbolTable(strMap6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = scriptNode0.getTop();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = scriptNode0.iterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str13 = scope11.makeIndent(0);
        int int16 = scope11.getIntProp((int) (byte) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        int int33 = scriptNode22.getIntProp(6, 2);
        int int34 = scriptNode22.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope38 = scope36.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node39 = scope36.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scope36.setJsDocNode(comment45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = scriptNode48.getSymbols();
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) scriptNode48);
        scriptNode48.setPosition((int) (byte) 0);
        scope18.setTop(scriptNode48);
        int int60 = scriptNode48.getParamCount();
        scope11.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol66 = scope64.getSymbol("$0");
        int int67 = scope64.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        scriptNode68.setEncodedSourceStart((int) (byte) 100);
        int int79 = scriptNode68.getIntProp(6, 2);
        int int80 = scriptNode68.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode81 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str82 = scriptNode81.getEncodedSource();
        int int83 = scriptNode81.getBaseLineno();
        java.lang.String str84 = scriptNode81.getNextTempName();
        scriptNode68.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode81);
        java.lang.String str86 = scriptNode81.debugPrint();
        scope64.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode81);
        scriptNode48.setTop(scriptNode81);
        int int89 = scriptNode48.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setLoop((com.google.javascript.rhino.head.ast.Jump) scriptNode48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(scriptNode8);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(symbolList55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(symbol66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 129 + "'", int67 == 129);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "$0" + "'", str84, "$0");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str86, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test05716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05716");
        com.google.javascript.rhino.head.Node node0 = com.google.javascript.rhino.head.Node.newTarget();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = node0.new NodeIterator();
        boolean boolean2 = nodeIterator1.hasNext();
        boolean boolean3 = nodeIterator1.hasNext();
        boolean boolean4 = nodeIterator1.hasNext();
        boolean boolean5 = nodeIterator1.hasNext();
        boolean boolean6 = nodeIterator1.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test05717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05717");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.setEncodedSourceEnd((int) (byte) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol31 = scriptNode20.getSymbol(">>");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        scriptNode32.setEncodedSourceEnd(18);
        java.lang.Object obj36 = scriptNode32.getCompilerData();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = scriptNode32.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator48 = scriptNode38.new NodeIterator();
        java.lang.String str49 = scriptNode38.shortName();
        int int50 = scriptNode38.getAbsolutePosition();
        scriptNode20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.Node node52 = scriptNode32.getLastChild();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(symbol31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ScriptNode" + "'", str49, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(node52);
    }

    @Test
    public void test05718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05718");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.Node node60 = scriptNode25.target;
        java.lang.String str61 = scriptNode25.toSource();
        com.google.javascript.rhino.head.ast.Scope scope63 = scriptNode25.getDefiningScope("!=");
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType67, "{\n}\n");
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment69, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType72 = comment69.getCommentType();
        int int73 = comment69.getPosition();
        scriptNode25.addChildToBack((com.google.javascript.rhino.head.Node) comment69);
        scriptNode25.setEncodedSource("10\tSCRIPT 10 1\n");
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap77 = scriptNode25.getSymbolTable();
        int int78 = scriptNode25.getPosition();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNull(commentType72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 9 + "'", int73 == 9);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 6 + "'", int78 == 6);
    }

    @Test
    public void test05719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05719");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType2, "41");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        int int13 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope7.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope7.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        int int23 = scope17.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope24 = scope17.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope17.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.Object obj29 = scriptNode26.getCompilerData();
        scriptNode26.flattenSymbolTable(false);
        scope7.addChildAfter((com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int33 = scriptNode26.getLength();
        scriptNode26.setEncodedSourceEnd((int) (byte) 0);
        comment4.putProp(9, (java.lang.Object) scriptNode26);
        scriptNode26.removeProp((int) (short) -1);
        scriptNode26.setSourceName("52\t  SCRIPT 53 1\n");
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test05720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05720");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str40 = scriptNode27.getSourceName();
        java.lang.String str41 = scriptNode27.getNextTempName();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "$0" + "'", str41, "$0");
    }

    @Test
    public void test05721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05721");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node((int) (short) -1, 9);
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str14 = comment9.toStringTree(scriptNode10);
        com.google.javascript.rhino.head.Node node16 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode10, node16);
        scriptNode10.setEncodedSourceStart(25);
        int int20 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope(1, 9);
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(13, node3, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope23, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = scriptNode10.getParamOrVarName(226035720);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test05722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05722");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope6 = scope4.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node7 = scope4.getNext();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope4.getParentScope();
        scriptNode0.addChildScope(scope4);
        java.lang.String str10 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        int int26 = scriptNode24.getBaseLineno();
        java.lang.String str27 = scriptNode24.getNextTempName();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.lang.String str29 = scriptNode24.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode31.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope36.setPosition(100);
        com.google.javascript.rhino.head.Node node39 = scope36.getLastSibling();
        node39.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = node39.spliterator();
        scriptNode31.setCompilerData((java.lang.Object) node39);
        java.lang.String str43 = scriptNode31.getSourceName();
        int int44 = scriptNode31.getEncodedSourceStart();
        scriptNode31.setEncodedSourceStart((int) (byte) 0);
        scriptNode24.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        int int48 = scriptNode24.getEncodedSourceStart();
        int int49 = scriptNode24.getAbsolutePosition();
        java.lang.String str50 = scriptNode24.debugPrint();
        int int51 = scriptNode24.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str10, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "$0" + "'", str27, "$0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str29, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 51 + "'", int49 == 51);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str50, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
    }

    @Test
    public void test05723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05723");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        boolean boolean13 = scriptNode0.hasSideEffects();
        com.google.javascript.rhino.head.Node node14 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode0.getSymbol("%");
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        java.lang.String str25 = scope19.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = scope19.getSymbolTable();
        boolean boolean27 = scope19.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scope19.target = scriptNode28;
        com.google.javascript.rhino.head.Node node39 = scriptNode28.target;
        scriptNode28.setBaseLineno(10);
        scriptNode28.setEncodedSourceEnd((int) (short) -1);
        com.google.javascript.rhino.head.Node node46 = com.google.javascript.rhino.head.Node.newString((int) (short) 1, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope51 = scope49.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node52 = scope49.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scope49.setJsDocNode(comment58);
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        comment58.setCommentType(commentType61);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment58, 14);
        node46.addChildToBack((com.google.javascript.rhino.head.Node) comment58);
        com.google.javascript.rhino.head.ast.AstNode astNode66 = comment58.getParent();
        java.lang.String str67 = comment58.getValue();
        comment58.setRelative((-1));
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(1487440633, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment58, 58);
        com.google.javascript.rhino.head.Node node72 = comment58.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setDefault(node72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(astNode66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Scope" + "'", str67, "Scope");
        org.junit.Assert.assertNull(node72);
    }

    @Test
    public void test05724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05724");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.Node node11 = scriptNode9.getLastSibling();
        scriptNode9.setEncodedSource("Scope");
        scriptNode9.setEndLineno(100);
        scriptNode0.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope18.putProp(25, (java.lang.Object) 100L);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        scope24.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str40 = scriptNode39.getEncodedSource();
        int int41 = scriptNode39.getBaseLineno();
        java.lang.Object obj42 = scriptNode39.getCompilerData();
        scriptNode39.setEncodedSourceBounds((int) '4', 0);
        scope24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        scope24.setPosition(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = scriptNode49.getTop();
        scriptNode58.setPosition(6);
        scope24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode58);
        scriptNode58.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = scriptNode58.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = scriptNode64.getFunctionNode((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(scriptNode58);
        org.junit.Assert.assertNotNull(scriptNode64);
    }

    @Test
    public void test05725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05725");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.Node node25 = scriptNode16.setType((int) (byte) 10);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scriptNode16.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType36, "Scope");
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment38);
        scope29.setJsDocNode(comment38);
        java.lang.String str42 = comment38.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment38);
        java.lang.Object obj45 = comment38.getProp((int) (short) -1);
        java.lang.String str47 = comment38.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = scriptNode48.getTop();
        scriptNode57.setPosition(6);
        comment38.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode57);
        scriptNode57.putIntProp(26, 1);
        scriptNode16.target = scriptNode57;
        scriptNode16.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node66 = scriptNode16.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                    Scope" + "'", str42, "                    Scope");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(scriptNode57);
    }

    @Test
    public void test05726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05726");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        java.lang.String str11 = scriptNode9.toString();
        com.google.javascript.rhino.head.Node node12 = scriptNode9.getLastChild();
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "136" + "'", str11, "136");
        org.junit.Assert.assertNull(node12);
    }

    @Test
    public void test05727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05727");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        java.lang.Object obj59 = scriptNode40.getProp(17);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor60 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode40.visit(nodeVisitor60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test05728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05728");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode28.getFunctions();
        int int40 = scriptNode28.getLength();
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope44 = scope42.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node45 = scope42.target;
        scope42.setPosition(2);
        java.lang.String str48 = scope42.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = scope42.getSymbolTable();
        boolean boolean50 = scope42.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = scriptNode51.getTop();
        scope42.target = scriptNode51;
        com.google.javascript.rhino.head.Node node62 = scriptNode51.target;
        scriptNode51.setBaseLineno(10);
        scriptNode51.setEncodedSourceEnd((int) (short) -1);
        int int67 = scriptNode51.getParamCount();
        java.lang.String str68 = scriptNode51.getSourceName();
        java.lang.String str70 = scriptNode51.makeIndent(16);
        int int71 = scriptNode51.depth();
        scriptNode51.flattenSymbolTable(false);
        java.lang.String str75 = scriptNode51.makeIndent((-613442063));
        int int76 = scriptNode51.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        scriptNode77.setEncodedSourceStart((int) (byte) 100);
        int int88 = scriptNode77.getIntProp(6, 2);
        int int89 = scriptNode77.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str91 = scriptNode90.getEncodedSource();
        int int92 = scriptNode90.getBaseLineno();
        java.lang.String str93 = scriptNode90.getNextTempName();
        scriptNode77.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode90);
        int int95 = scriptNode77.getEndLineno();
        com.google.javascript.rhino.head.Node node97 = new com.google.javascript.rhino.head.Node((-53), (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scriptNode77, 2);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node98 = scriptNode51.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{\n}\n" + "'", str48, "{\n}\n");
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                                " + "'", str70, "                                ");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "$0" + "'", str93, "$0");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test05729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05729");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str26 = scriptNode17.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scope28, (int) (byte) 10);
        java.lang.String str34 = scriptNode7.shortName();
        com.google.javascript.rhino.head.ast.AstNode astNode35 = scriptNode7.getParent();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode36 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int37 = scriptNode7.addFunction(functionNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ScriptNode" + "'", str34, "ScriptNode");
        org.junit.Assert.assertNull(astNode35);
    }

    @Test
    public void test05730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05730");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) 'a');
    }

    @Test
    public void test05731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05731");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        java.lang.String str8 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope10 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "$0" + "'", str8, "$0");
        org.junit.Assert.assertNotNull(scriptNode9);
    }

    @Test
    public void test05732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05732");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str17 = scope15.toSource(12);
        scope15.setRelative(1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        int int55 = scriptNode44.getIntProp(6, 2);
        int int56 = scriptNode44.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        scope58.setJsDocNode(comment67);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode70.getSymbols();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope58, (com.google.javascript.rhino.head.Node) scriptNode70);
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType83, "Scope");
        scriptNode80.setParent((com.google.javascript.rhino.head.ast.AstNode) comment85);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList87 = scriptNode80.getSymbols();
        scriptNode44.setSymbols(symbolList87);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList89 = scriptNode44.getSymbols();
        scope15.putProp(19, (java.lang.Object) symbolList89);
        scriptNode0.setSymbols(symbolList89);
        scriptNode0.clearParentScope();
        int int93 = scriptNode0.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node94 = scriptNode0.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                        {\n                        }\n" + "'", str17, "                        {\n                        }\n");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertNotNull(symbolList87);
        org.junit.Assert.assertNotNull(symbolList89);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test05733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05733");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = scriptNode45.getTop();
        int int61 = scriptNode45.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(scriptNode60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test05734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05734");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        scriptNode39.setEndLineno(18);
        scriptNode26.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode26.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = scriptNode26.getTop();
        // The following exception was thrown during execution in test generation
        try {
            int int58 = scriptNode56.getExistingIntProp((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(scriptNode56);
    }

    @Test
    public void test05735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05735");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        java.lang.String str44 = scriptNode31.makeIndent((int) (short) 100);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList45 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node46 = scriptNode31.getLastSibling();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor47 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode31.visit(nodeVisitor47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                                                                                                                                                                                                        " + "'", str44, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(symbolList45);
        org.junit.Assert.assertNotNull(node46);
    }

    @Test
    public void test05736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05736");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment9 = scriptNode0.getJsDocNode();
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode0.getParentScope();
        java.lang.String str11 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode13.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode13.getParentScope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        java.lang.String str25 = scope19.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = scope19.getSymbolTable();
        boolean boolean27 = scope19.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scope19.target = scriptNode28;
        com.google.javascript.rhino.head.Node node39 = scriptNode28.target;
        int int40 = scriptNode28.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        int int56 = scriptNode54.getBaseLineno();
        java.lang.String str57 = scriptNode54.getNextTempName();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        java.lang.String str59 = scriptNode54.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str65 = scope63.toSource(12);
        scope63.setRelative(1);
        scriptNode54.putProp(17, (java.lang.Object) 1);
        scriptNode28.target = scriptNode54;
        int int70 = scriptNode28.getEncodedSourceEnd();
        java.lang.Object obj71 = scriptNode28.getCompilerData();
        int int72 = scriptNode28.getEndLineno();
        scriptNode13.setTop(scriptNode28);
        scriptNode0.setTop(scriptNode28);
        int int75 = scriptNode28.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str77 = scriptNode28.getParamOrVarName(1034180762);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(comment9);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str59, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                        {\n                        }\n" + "'", str65, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test05737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05737");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scriptNode0.new NodeIterator();
        boolean boolean11 = nodeIterator10.hasNext();
        boolean boolean12 = nodeIterator10.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator10.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05738");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node9 = scope1.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str11 = scriptNode10.getEncodedSource();
        scriptNode10.setEncodedSourceEnd(18);
        java.lang.String str15 = scriptNode10.makeIndent((int) '#');
        scope1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope20 = scope18.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node21 = scope18.target;
        scope18.setPosition(2);
        scope18.putIntProp(17, 25);
        scope18.setLength((int) ' ');
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scope18);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral30 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode10.addRegExp(regExpLiteral30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                      " + "'", str15, "                                                                      ");
        org.junit.Assert.assertNull(scope20);
        org.junit.Assert.assertNull(node21);
    }

    @Test
    public void test05739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05739");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode19.getIntProp(6, 2);
        scriptNode19.setEndLineno(18);
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode19, (int) (byte) -1);
        int int35 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.Symbol symbol36 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode14.putSymbol(symbol36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test05740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05740");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType2, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        comment4.addChildToBack(node21);
        java.lang.String str23 = comment4.getValue();
        int int26 = comment4.getIntProp((int) (short) 100, (int) (short) 10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor27 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment4.visit(nodeVisitor27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
    }

    @Test
    public void test05741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05741");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        int int42 = scriptNode31.getIntProp(6, 2);
        int int43 = scriptNode31.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope47 = scope45.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node48 = scope45.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scope45.setJsDocNode(comment54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode57.getSymbols();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scope45, (com.google.javascript.rhino.head.Node) scriptNode57);
        scriptNode57.setPosition((int) (byte) 0);
        scriptNode57.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scriptNode70.setEncodedSourceStart((int) (byte) 100);
        int int81 = scriptNode70.getIntProp(6, 2);
        int int82 = scriptNode70.getParamCount();
        java.lang.String str83 = scriptNode70.debugPrint();
        int int86 = scriptNode70.getIntProp(17, 10);
        scriptNode57.setTop(scriptNode70);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int89 = scriptNode57.getRegexpCount();
        comment27.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        int int91 = comment27.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str93 = scriptNode92.getEncodedSource();
        scriptNode92.setEncodedSourceEnd(18);
        java.lang.String str97 = scriptNode92.toSource((int) (byte) 10);
        java.lang.String str98 = comment27.toStringTree(scriptNode92);
        int int99 = scriptNode92.getParamCount();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str83, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10 + "'", int86 == 10);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "                    {\n                    }\n" + "'", str97, "                    {\n                    }\n");
        org.junit.Assert.assertNull(str98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test05742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05742");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        scriptNode36.target = scriptNode38;
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        int int57 = scriptNode45.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope61 = scope59.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node62 = scope59.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scope59.setJsDocNode(comment68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList78 = scriptNode71.getSymbols();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scope59, (com.google.javascript.rhino.head.Node) scriptNode71);
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        com.google.javascript.rhino.head.ast.Scope scope82 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope84 = scope82.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node85 = scope82.target;
        scope82.setPosition(2);
        scope82.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scope82);
        int int91 = scriptNode38.getEncodedSourceStart();
        java.lang.String str93 = scriptNode38.toSource(26);
        com.google.javascript.rhino.head.Node node94 = scriptNode38.getLastSibling();
        scriptNode0.setTop(scriptNode38);
        int int96 = scriptNode38.getEncodedSourceEnd();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(scope61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(symbolList78);
        org.junit.Assert.assertNull(scope84);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "                                                    {\n                                                    }\n" + "'", str93, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 18 + "'", int96 == 18);
    }

    @Test
    public void test05743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05743");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scope1.iterator();
        boolean boolean14 = scope1.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode15.toSource(18);
        java.lang.Object obj18 = scriptNode15.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope34.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node37 = scope34.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scope34.setJsDocNode(comment43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = scriptNode46.getSymbols();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) scriptNode46);
        scriptNode46.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node57 = scriptNode46.target;
        scriptNode15.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        int int60 = scope1.getLineno();
        com.google.javascript.rhino.head.Node node61 = scope1.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node62 = scope1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                                    {\n                                    }\n" + "'", str17, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(symbolList53);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(node61);
    }

    @Test
    public void test05744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05744");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean16 = scriptNode0.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean20 = scope19.hasSideEffects();
        scriptNode0.putProp((int) (short) 1, (java.lang.Object) boolean20);
        com.google.javascript.rhino.head.Node node22 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = scriptNode0.new NodeIterator();
        com.google.javascript.rhino.head.Node node24 = nodeIterator23.next();
        java.lang.Object obj26 = null;
        node24.putProp((-243114478), obj26);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(node24);
    }

    @Test
    public void test05745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05745");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-824625719));
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor2 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.visit(nodeVisitor2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05746");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(170200694);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = scope1.iterator();
        org.junit.Assert.assertNotNull(nodeItor2);
    }

    @Test
    public void test05747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05747");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (short) 1, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope7 = scope5.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node8 = scope5.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scope5.setJsDocNode(comment14);
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        comment14.setCommentType(commentType17);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) comment14, 14);
        node2.addChildToBack((com.google.javascript.rhino.head.Node) comment14);
        comment14.setLineno((int) (short) 1);
        comment14.setLineno((int) (short) 1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(node8);
    }

    @Test
    public void test05748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05748");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str25 = scriptNode24.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str36 = scriptNode27.getSourceName();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode27, 26);
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node23, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode27);
        com.google.javascript.rhino.head.Node node40 = scriptNode27.getLastSibling();
        boolean boolean41 = scriptNode27.hasSideEffects();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode27, (-243114478));
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode27.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope45 = scriptNode27.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scopeList44);
    }

    @Test
    public void test05749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05749");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(9, (int) (byte) 10);
    }

    @Test
    public void test05750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05750");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        int int3 = scriptNode1.getBaseLineno();
        java.lang.Object obj4 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        java.lang.String str13 = scriptNode5.toSource(26);
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.lang.String str15 = scriptNode5.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol17 = scriptNode5.getSymbol("/");
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(1487440633, (com.google.javascript.rhino.head.Node) scriptNode5);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                    {\n                                                    }\n" + "'", str13, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "136" + "'", str15, "136");
        org.junit.Assert.assertNull(symbol17);
    }

    @Test
    public void test05751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05751");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        int int3 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = scope2.getTop();
        scope2.setLength(26);
        java.lang.String str8 = scope2.toSource(13);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node9 = scope2.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 129 + "'", int3 == 129);
        org.junit.Assert.assertNull(scriptNode4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                          {\n                          }\n" + "'", str8, "                          {\n                          }\n");
    }

    @Test
    public void test05752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05752");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode2.getEncodedSource();
        int int4 = scriptNode2.getBaseLineno();
        java.lang.Object obj5 = scriptNode2.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        java.lang.String str14 = scriptNode6.toSource(26);
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.lang.String str16 = scriptNode6.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol18 = scriptNode6.getSymbol("/");
        com.google.javascript.rhino.head.ast.Scope scope19 = scriptNode6.getParentScope();
        scriptNode6.setSourceName("                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node(2018070520, node1, (com.google.javascript.rhino.head.Node) scriptNode6, 34756133);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                                    {\n                                                    }\n" + "'", str14, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "136" + "'", str16, "136");
        org.junit.Assert.assertNull(symbol18);
        org.junit.Assert.assertNull(scope19);
    }

    @Test
    public void test05753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05753");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.Node node10 = scope1.getNext();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        java.lang.String str25 = comment21.toSource((int) (short) 10);
        scope1.setJsDocNode(comment21);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = comment21.spliterator();
        com.google.javascript.rhino.head.ast.AstNode astNode28 = comment21.getParent();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = comment21.getCommentType();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment21.visit(nodeVisitor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    Scope" + "'", str25, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNull(astNode28);
        org.junit.Assert.assertNull(commentType29);
    }

    @Test
    public void test05754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05754");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = scriptNode18.getTop();
        scriptNode27.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        scriptNode33.setEncodedSourceEnd(18);
        scriptNode31.target = scriptNode33;
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node76 = scriptNode40.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode40);
        com.google.javascript.rhino.head.Node node79 = scriptNode40.setType((int) 'a');
        com.google.javascript.rhino.head.Node node81 = scriptNode40.setType(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        com.google.javascript.rhino.head.ast.Comment comment87 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType85, "Scope");
        scriptNode82.setParent((com.google.javascript.rhino.head.ast.AstNode) comment87);
        scriptNode82.clearParentScope();
        scriptNode82.setEncodedSourceBounds(9, (int) (short) -1);
        java.lang.String str93 = scriptNode82.getJsDoc();
        scriptNode82.setPosition(10);
        java.lang.String str96 = scriptNode82.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node97 = node81.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test05755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05755");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.lang.String str19 = scriptNode14.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode21.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope26.setPosition(100);
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        node29.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = node29.spliterator();
        scriptNode21.setCompilerData((java.lang.Object) node29);
        java.lang.String str33 = scriptNode21.getSourceName();
        int int34 = scriptNode21.getEncodedSourceStart();
        scriptNode21.setEncodedSourceStart((int) (byte) 0);
        scriptNode14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        int int38 = scriptNode14.getEncodedSourceStart();
        int int39 = scriptNode14.getAbsolutePosition();
        java.lang.String str40 = scriptNode14.debugPrint();
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(19);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope44.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        int int59 = scriptNode48.getIntProp(6, 2);
        int int60 = scriptNode48.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope62 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope64 = scope62.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node65 = scope62.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scope62.setJsDocNode(comment71);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType77, "Scope");
        scriptNode74.setParent((com.google.javascript.rhino.head.ast.AstNode) comment79);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList81 = scriptNode74.getSymbols();
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode48, (com.google.javascript.rhino.head.Node) scope62, (com.google.javascript.rhino.head.Node) scriptNode74);
        scriptNode74.setPosition((int) (byte) 0);
        scope44.setTop(scriptNode74);
        java.lang.String str87 = scriptNode74.makeIndent((int) (short) 100);
        node42.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode74);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node(220850805, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode74, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode14.setDouble((double) (-25));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str19, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 51 + "'", int39 == 51);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str40, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(scope64);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNotNull(symbolList81);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "                                                                                                                                                                                                        " + "'", str87, "                                                                                                                                                                                                        ");
    }

    @Test
    public void test05756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05756");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.Node node4 = com.google.javascript.rhino.head.Node.newString((int) (byte) -1, "                              {\n                              }\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node((-2), node1, node4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
    }

    @Test
    public void test05757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05757");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        int int58 = scriptNode40.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode40.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode40.getChildScopes();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator61 = scriptNode40.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node62 = nodeIterator61.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNull(scopeList60);
    }

    @Test
    public void test05758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05758");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        scriptNode1.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode34.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str38 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scope40.iterator();
        boolean boolean53 = scope40.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope40, 8);
        int int56 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode(16);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray60 = scriptNode58.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ScriptNode" + "'", str38, "ScriptNode");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
    }

    @Test
    public void test05759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05759");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        java.lang.String str8 = scope2.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scope2.getSymbolTable();
        boolean boolean10 = scope2.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        scope2.target = scriptNode11;
        com.google.javascript.rhino.head.Node node22 = scriptNode11.target;
        int int23 = scriptNode11.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int33 = scriptNode24.getEncodedSourceStart();
        int int34 = scriptNode24.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = scriptNode36.getTop();
        scriptNode45.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int50 = scriptNode49.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str52 = scriptNode51.getEncodedSource();
        scriptNode51.setEncodedSourceEnd(18);
        scriptNode49.target = scriptNode51;
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode51);
        int int57 = scriptNode51.getLength();
        int int58 = scriptNode51.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope60 = scriptNode51.getDefiningScope("");
        scriptNode24.setParentScope(scope60);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node((-824625719), (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{\n}\n" + "'", str8, "{\n}\n");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(scriptNode45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(scope60);
    }

    @Test
    public void test05760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05760");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(129, 845940331);
    }

    @Test
    public void test05761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05761");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        int int25 = scriptNode0.getLineno();
        int int26 = scriptNode0.getLength();
        scriptNode0.setEncodedSourceEnd((int) ' ');
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor29 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 53 + "'", int26 == 53);
    }

    @Test
    public void test05762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05762");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = null;
        scriptNode16.setSymbols(symbolList22);
        java.lang.String str24 = scriptNode16.getJsDoc();
        scriptNode16.setBaseLineno((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode16.getFunctions();
        scriptNode16.setEncodedSourceStart(20);
        com.google.javascript.rhino.head.ast.Symbol symbol30 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode16.putSymbol(symbol30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(functionNodeList27);
    }

    @Test
    public void test05763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05763");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.shortName();
        scriptNode27.flattenSymbolTable(false);
        scriptNode27.setBounds((-547629399), 100);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor42 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.visit(nodeVisitor42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ScriptNode" + "'", str36, "ScriptNode");
    }

    @Test
    public void test05764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05764");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        scriptNode14.setEncodedSource("                        ");
        scriptNode14.setRelative(14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode23.getSymbols();
        scriptNode14.setSymbols(symbolList30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) -1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode33.getSymbols();
        com.google.javascript.rhino.head.ast.Symbol symbol36 = scriptNode33.getSymbol("^");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = scriptNode39.getTop();
        scriptNode48.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int53 = scriptNode52.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        scriptNode54.setEncodedSourceEnd(18);
        scriptNode52.target = scriptNode54;
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode48, (com.google.javascript.rhino.head.Node) scriptNode54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str61 = scriptNode60.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str72 = scriptNode63.getSourceName();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode63, 26);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node59, (com.google.javascript.rhino.head.Node) scriptNode60, (com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.Node node76 = scriptNode63.getLastSibling();
        boolean boolean77 = scriptNode63.hasSideEffects();
        java.lang.String str78 = scriptNode63.toSource();
        scriptNode63.setLineno((-613442063));
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node(17, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scriptNode63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = scriptNode63.getRegexpString((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(symbol36);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{\n}\n" + "'", str78, "{\n}\n");
    }

    @Test
    public void test05765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05765");
        java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(14);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<" + "'", str1, "<");
    }

    @Test
    public void test05766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05766");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node11 = scriptNode0.getNext();
        scriptNode0.setSourceName("-1\t  SCRIPT -53 1\n");
        int int14 = scriptNode0.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test05767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05767");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getParamCount();
        java.lang.String str53 = scriptNode40.debugPrint();
        int int56 = scriptNode40.getIntProp(17, 10);
        scriptNode27.setTop(scriptNode40);
        java.lang.Object obj59 = scriptNode40.getProp(17);
        int int60 = scriptNode40.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int63 = scriptNode62.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode64.getEncodedSource();
        scriptNode64.setEncodedSourceEnd(18);
        scriptNode62.target = scriptNode64;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        scriptNode70.setLineno((int) (byte) 1);
        scriptNode62.setCompilerData((java.lang.Object) (byte) 1);
        scriptNode40.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode62);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = scriptNode62.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str53, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test05768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05768");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        java.lang.String str59 = scriptNode41.shortName();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode41);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode41.getFunctions();
        scriptNode41.setEncodedSourceStart(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = scriptNode41.getTop();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ScriptNode" + "'", str59, "ScriptNode");
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertNotNull(scriptNode64);
    }

    @Test
    public void test05769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05769");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        scriptNode0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope6 = scriptNode0.getEnclosingScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        int int18 = scriptNode7.getIntProp(6, 2);
        int int19 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        int int31 = scriptNode20.getIntProp(6, 2);
        int int32 = scriptNode20.getParamCount();
        scriptNode7.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap34 = scriptNode20.getSymbolTable();
        int int35 = scriptNode20.depth();
        int int36 = scriptNode20.getEncodedSourceStart();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral38 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode20.addRegExp(regExpLiteral38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
    }

    @Test
    public void test05770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05770");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(53, 53, commentType2, "                  Scope");
        java.lang.String str5 = comment4.debugPrint();
        java.lang.String str6 = comment4.getValue();
        java.lang.String str8 = comment4.toSource((int) (byte) -1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "53\tCOMMENT 53 53\n" + "'", str5, "53\tCOMMENT 53 53\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                  Scope" + "'", str6, "                  Scope");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                  Scope" + "'", str8, "                  Scope");
    }

    @Test
    public void test05771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05771");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        int int24 = scriptNode16.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = scriptNode16.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = scope25.hasConsistentReturnUsage();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(scope25);
    }

    @Test
    public void test05772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05772");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.Node node60 = scriptNode25.target;
        java.lang.String str61 = scriptNode25.toSource();
        com.google.javascript.rhino.head.ast.Scope scope63 = scriptNode25.getDefiningScope("!=");
        scriptNode25.setEncodedSource("69\t  SCRIPT 17 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        scriptNode66.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = scriptNode66.getTop();
        int int76 = scriptNode25.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node77 = scriptNode25.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(scope63);
        org.junit.Assert.assertNotNull(scriptNode75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
    }

    @Test
    public void test05773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05773");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = scriptNode0.iterator();
        java.lang.String str11 = scriptNode0.debugPrint();
        java.lang.String str12 = scriptNode0.getSourceName();
        boolean boolean13 = scriptNode0.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode0.getTop();
        java.lang.String str16 = scriptNode14.toSource(11);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str11, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                      {\n                      }\n" + "'", str16, "                      {\n                      }\n");
    }

    @Test
    public void test05774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05774");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(53);
    }

    @Test
    public void test05775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05775");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment4 = scriptNode0.getJsDocNode();
        com.google.javascript.rhino.head.Node node5 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        int int30 = scriptNode19.getIntProp(6, 2);
        int int31 = scriptNode19.getParamCount();
        scriptNode6.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope34.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node37 = scope34.target;
        scope34.setPosition(2);
        scope34.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node42 = scope34.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        java.lang.String str48 = scriptNode43.makeIndent((int) '#');
        scope34.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        scope51.setPosition(2);
        scope51.putIntProp(17, 25);
        scope51.setLength((int) ' ');
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scope51);
        scriptNode6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode43);
        int int64 = scriptNode6.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType68, "Scope");
        scriptNode65.setParent((com.google.javascript.rhino.head.ast.AstNode) comment70);
        scriptNode65.setEncodedSourceStart((int) (byte) 100);
        int int76 = scriptNode65.getIntProp(6, 2);
        int int77 = scriptNode65.getParamCount();
        java.lang.String str78 = scriptNode65.debugPrint();
        scriptNode65.setPosition(8);
        scriptNode65.setLength(16);
        java.lang.Object obj83 = scriptNode65.getCompilerData();
        java.lang.String str85 = scriptNode65.makeIndent(26);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scriptNode65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = scriptNode65.getParamOrVarName(135381063);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(comment4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "                                                                      " + "'", str48, "                                                                      ");
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-53) + "'", int64 == (-53));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str78, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "                                                    " + "'", str85, "                                                    ");
    }

    @Test
    public void test05776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05776");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getEndLineno();
        int int19 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str21 = scriptNode0.toSource((int) (byte) -1);
        com.google.javascript.rhino.head.Node node22 = scriptNode0.getNext();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor23 = scriptNode0.iterator();
        java.lang.String str24 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor25 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n{\n}\n}\n" + "'", str21, "{\n{\n}\n}\n");
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(nodeItor23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test05777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05777");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode0.getTop();
        com.google.javascript.rhino.head.Node node12 = scriptNode11.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scriptNode14.getDefiningScope("                                                    {\n                                                    }\n");
        java.lang.String str17 = scriptNode14.debugPrint();
        java.lang.String str18 = scriptNode14.shortName();
        scriptNode14.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = node12.toStringTree(scriptNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "0\tSCRIPT 0 1\n" + "'", str17, "0\tSCRIPT 0 1\n");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ScriptNode" + "'", str18, "ScriptNode");
    }

    @Test
    public void test05778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05778");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        int int48 = scriptNode37.getIntProp(6, 2);
        int int49 = scriptNode37.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scope51.setJsDocNode(comment60);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode63.getSymbols();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope76 = scope74.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node77 = scope74.target;
        scope74.setPosition(2);
        scope74.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope74);
        int int83 = scriptNode30.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType87 = null;
        com.google.javascript.rhino.head.ast.Comment comment89 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType87, "Scope");
        scriptNode84.setParent((com.google.javascript.rhino.head.ast.AstNode) comment89);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList91 = scriptNode84.getSymbols();
        java.lang.String str92 = scriptNode84.debugPrint();
        scriptNode84.setRelative((int) ' ');
        com.google.javascript.rhino.head.Node node96 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scriptNode84, 18);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList97 = scriptNode30.getFunctions();
        java.lang.Class<?> wildcardClass98 = scriptNode30.getClass();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 136 + "'", int83 == 136);
        org.junit.Assert.assertNotNull(symbolList91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str92, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNotNull(functionNodeList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test05779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05779");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1487440611);
    }

    @Test
    public void test05780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05780");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode3.getEncodedSourceStart();
        int int13 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode58, 26);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node54, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode58);
        node70.setLineno(5);
        scriptNode14.setCompilerData((java.lang.Object) node70);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode3, node70);
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope78 = scope76.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node79 = scope76.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType83, "Scope");
        scriptNode80.setParent((com.google.javascript.rhino.head.ast.AstNode) comment85);
        scope76.setJsDocNode(comment85);
        com.google.javascript.rhino.head.Token.CommentType commentType88 = null;
        comment85.setCommentType(commentType88);
        com.google.javascript.rhino.head.ast.AstRoot astRoot90 = comment85.getAstRoot();
        scope2.setJsDocNode(comment85);
        boolean boolean92 = comment85.hasConsistentReturnUsage();
        int int93 = comment85.getAbsolutePosition();
        boolean boolean94 = comment85.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(scope78);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNull(astRoot90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 52 + "'", int93 == 52);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test05781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05781");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getDefiningScope("51\t    SCRIPT 52 1\n");
        boolean boolean5 = scriptNode1.hasSideEffects();
        com.google.javascript.rhino.head.Node node6 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setDefault(node6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05782");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        int int14 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.Node node15 = scriptNode6.getNext();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode6.getChildScopes();
        int int17 = scriptNode6.getRegexpCount();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test05783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05783");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node(1, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = scriptNode5.getTop();
        scriptNode14.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int19 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        scriptNode18.target = scriptNode20;
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scriptNode27.setEncodedSourceStart((int) (byte) 100);
        int int38 = scriptNode27.getIntProp(6, 2);
        int int39 = scriptNode27.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList60 = scriptNode53.getSymbols();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scope41, (com.google.javascript.rhino.head.Node) scriptNode53);
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode63.getSymbols();
        scriptNode27.setSymbols(symbolList70);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = scriptNode27.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList73 = scriptNode27.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList74 = scriptNode27.getChildScopes();
        java.lang.String str76 = scriptNode27.toSource((-53));
        int int77 = scriptNode27.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        scriptNode78.setEncodedSourceStart((int) (byte) 100);
        int int89 = scriptNode78.getIntProp(6, 2);
        int int90 = scriptNode78.getRegexpCount();
        boolean boolean91 = scriptNode78.hasSideEffects();
        com.google.javascript.rhino.head.Node node93 = new com.google.javascript.rhino.head.Node(5, node3, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode78, 15);
        com.google.javascript.rhino.head.ast.Symbol symbol95 = scriptNode27.getSymbol("/");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = scriptNode27.getRegexpString(52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(symbolList60);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNotNull(symbolList72);
        org.junit.Assert.assertNotNull(functionNodeList73);
        org.junit.Assert.assertNull(scopeList74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{\n}\n" + "'", str76, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(symbol95);
    }

    @Test
    public void test05784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05784");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode28.getFunctions();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = scriptNode28.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = scriptNode28.getParent();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        scriptNode48.setEncodedSourceEnd(18);
        java.lang.String str52 = comment47.toStringTree(scriptNode48);
        com.google.javascript.rhino.head.Node node54 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode48, node54);
        int int56 = scriptNode48.getRegexpCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator57 = scriptNode48.spliterator();
        int int58 = scriptNode48.getBaseLineno();
        int int59 = scriptNode48.depth();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(2018070520, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode48, 0);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.setString("      ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertNull(functionNode40);
        org.junit.Assert.assertNotNull(astNode41);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test05785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05785");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scriptNode0.new NodeIterator();
        java.lang.String str11 = scriptNode0.shortName();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray12 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList13, symbolArray12);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList13);
        scriptNode0.flattenSymbolTable(false);
        int int18 = scriptNode0.getParamAndVarCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        scope20.setPosition(2);
        java.lang.String str26 = scope20.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = scope20.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope29 = scope20.getDefiningScope("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, scope20);
        java.lang.String str32 = scriptNode0.toSource((-7));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertNotNull(symbolArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{\n}\n" + "'", str26, "{\n}\n");
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{\n}\n" + "'", str32, "{\n}\n");
    }

    @Test
    public void test05786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05786");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = scriptNode18.getTop();
        scriptNode27.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int32 = scriptNode31.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        scriptNode33.setEncodedSourceEnd(18);
        scriptNode31.target = scriptNode33;
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType43, "Scope");
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment45);
        scriptNode40.setEncodedSourceStart((int) (byte) 100);
        int int51 = scriptNode40.getIntProp(6, 2);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scope54.setJsDocNode(comment63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        scriptNode66.setParent((com.google.javascript.rhino.head.ast.AstNode) comment71);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList73 = scriptNode66.getSymbols();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope54, (com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node76 = scriptNode40.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode40);
        java.lang.String str78 = scriptNode7.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap79 = scriptNode7.getSymbolTable();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList80 = scriptNode7.getSymbols();
        int int81 = scriptNode7.getEncodedSourceStart();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(symbolList73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{\n}\n" + "'", str78, "{\n}\n");
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(symbolList80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test05787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05787");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode1.getEncodedSource();
        int int3 = scriptNode1.getBaseLineno();
        java.lang.Object obj4 = scriptNode1.getCompilerData();
        scriptNode1.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode1.getStatements();
        int int9 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) scriptNode1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        boolean boolean23 = scriptNode11.hasChildren();
        com.google.javascript.rhino.head.Node node27 = com.google.javascript.rhino.head.Node.newString(161, "!=");
        scriptNode11.putProp(23, (java.lang.Object) 161);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        int int40 = scriptNode29.getIntProp(6, 2);
        int int41 = scriptNode29.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        int int57 = scriptNode55.getBaseLineno();
        java.lang.String str58 = scriptNode55.getNextTempName();
        scriptNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        int int60 = scriptNode55.getType();
        java.lang.String str61 = scriptNode55.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList62 = scriptNode55.getSymbols();
        java.lang.String str63 = scriptNode29.toStringTree(scriptNode55);
        scriptNode11.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode55);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode11);
        com.google.javascript.rhino.head.Node node66 = scriptNode1.getFirstChild();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "$0" + "'", str58, "$0");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 136 + "'", int60 == 136);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str61, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(node66);
    }

    @Test
    public void test05788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05788");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        scriptNode4.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scriptNode4.getTop();
        scriptNode13.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int18 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        scriptNode17.target = scriptNode19;
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scriptNode19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        int int37 = scriptNode26.getIntProp(6, 2);
        int int38 = scriptNode26.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode52.getSymbols();
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope40, (com.google.javascript.rhino.head.Node) scriptNode52);
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        scriptNode26.setSymbols(symbolList69);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = scriptNode26.getSymbols();
        scriptNode26.setPosition(18);
        scriptNode26.setSourceName("161");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str77 = scriptNode76.getEncodedSource();
        int int78 = scriptNode76.getBaseLineno();
        java.lang.Object obj79 = scriptNode76.getCompilerData();
        java.lang.String str80 = scriptNode26.toStringTree(scriptNode76);
        boolean boolean81 = scriptNode76.hasConsistentReturnUsage();
        int int82 = scriptNode76.getRegexpCount();
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node((int) (short) -1, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode76);
        // The following exception was thrown during execution in test generation
        try {
            double double84 = scriptNode76.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(symbolList59);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNotNull(symbolList71);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test05789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05789");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = scriptNode0.new NodeIterator();
        boolean boolean10 = scriptNode0.hasConsistentReturnUsage();
        java.lang.Object obj11 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope15 = scope13.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node16 = scope13.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scope13.setJsDocNode(comment22);
        com.google.javascript.rhino.head.Node node25 = scope13.target;
        java.lang.String str26 = scope13.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scriptNode37.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode43);
        int int49 = scriptNode43.getLength();
        int int50 = scriptNode43.getEncodedSourceStart();
        scope13.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        scriptNode0.replaceWith(scope13);
        int int53 = scriptNode0.getType();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0\tBLOCK 0 1\n" + "'", str26, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 136 + "'", int53 == 136);
    }

    @Test
    public void test05790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05790");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setEndLineno(20);
        scriptNode1.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope8 = scriptNode1.getDefiningScope("^");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType53, "Scope");
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment55);
        scope46.setJsDocNode(comment55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = scriptNode58.getSymbols();
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scriptNode58);
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = scriptNode68.getSymbols();
        scriptNode32.setSymbols(symbolList75);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList77 = scriptNode32.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList78 = scriptNode32.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList79 = scriptNode32.getChildScopes();
        java.lang.Object obj81 = scriptNode32.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node82 = scriptNode32.getLastChild();
        int int83 = scriptNode32.getFunctionCount();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator84 = scriptNode32.new NodeIterator();
        java.lang.String str85 = scriptNode1.toStringTree(scriptNode32);
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(symbolList65);
        org.junit.Assert.assertNotNull(symbolList75);
        org.junit.Assert.assertNotNull(symbolList77);
        org.junit.Assert.assertNotNull(functionNodeList78);
        org.junit.Assert.assertNull(scopeList79);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test05791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05791");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(1404628457);
        scriptNode1.setBaseLineno(98666588);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = null;
        scope6.setTop(scriptNode10);
        scriptNode4.target = scope6;
        java.lang.String str14 = scriptNode4.toSource((int) 'a');
        int int15 = scriptNode4.getPosition();
        scriptNode4.setEncodedSourceEnd(6);
        int int18 = scriptNode4.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) (short) 0, 129, commentType21, "");
        scriptNode4.setJsDocNode(comment23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        int int36 = scriptNode26.getFunctionCount();
        java.lang.String str37 = scriptNode26.debugPrint();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(20, (com.google.javascript.rhino.head.Node) scriptNode26, 0);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.addChildBefore((com.google.javascript.rhino.head.Node) comment23, node39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str14, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 6 + "'", int18 == 6);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str37, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test05792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05792");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 100);
        com.google.javascript.rhino.head.Node node3 = node1.setType(845940331);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(node3);
    }

    @Test
    public void test05793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05793");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        java.lang.Object obj12 = scriptNode0.getProp(22);
        scriptNode0.setBounds((int) (short) 1, 21);
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test05794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05794");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode1.getChildScopes();
        scriptNode1.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        java.lang.String str32 = scriptNode27.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode34.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope39.setPosition(100);
        com.google.javascript.rhino.head.Node node42 = scope39.getLastSibling();
        node42.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = node42.spliterator();
        scriptNode34.setCompilerData((java.lang.Object) node42);
        java.lang.String str46 = scriptNode34.getSourceName();
        int int47 = scriptNode34.getEncodedSourceStart();
        scriptNode34.setEncodedSourceStart((int) (byte) 0);
        scriptNode27.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode34);
        java.lang.Object obj52 = scriptNode27.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode27, (int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope55 = scriptNode27.getEnclosingScope();
        java.lang.String str57 = scriptNode27.makeIndent(1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor68 = scriptNode58.iterator();
        int int69 = scriptNode58.getParamCount();
        scriptNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        scriptNode58.clearParentScope();
        int int72 = scriptNode58.getPosition();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap73 = scriptNode58.getSymbolTable();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode58.setDouble((double) 845940331);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str32, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(scope55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "  " + "'", str57, "  ");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(nodeItor68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-53) + "'", int72 == (-53));
        org.junit.Assert.assertNull(strMap73);
    }

    @Test
    public void test05795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05795");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        int int4 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("Scope");
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode0.new NodeIterator();
        int int8 = scriptNode0.getLineno();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test05796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05796");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        com.google.javascript.rhino.head.ast.FunctionNode functionNode2 = scriptNode1.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node3 = scriptNode1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(functionNode2);
    }

    @Test
    public void test05797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05797");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        int int39 = scriptNode0.getPosition();
        com.google.javascript.rhino.head.Node node40 = scriptNode0.getLastSibling();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment(17, 3, commentType43, "                                  Scope");
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (short) -1);
        comment45.addChild((com.google.javascript.rhino.head.ast.AstNode) scope48);
        int int50 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) comment45);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode0.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setBaseLineno((-366869103));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList51);
    }

    @Test
    public void test05798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05798");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str3 = scriptNode1.toSource(18);
        java.lang.Object obj4 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope22 = scope20.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node23 = scope20.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scope20.setJsDocNode(comment29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope20, (com.google.javascript.rhino.head.Node) scriptNode32);
        scriptNode32.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node43 = scriptNode32.target;
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        int int45 = scriptNode32.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope50 = scriptNode47.getDefiningScope("51\t    SCRIPT 52 1\n");
        boolean boolean51 = scriptNode47.hasChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scriptNode47.iterator();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode47);
        scriptNode47.setRelative(20);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "                                    {\n                                    }\n" + "'", str3, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(scope50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(nodeItor52);
    }

    @Test
    public void test05799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05799");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        scriptNode39.setEncodedSourceStart((int) (byte) 100);
        int int50 = scriptNode39.getIntProp(6, 2);
        int int51 = scriptNode39.getParamCount();
        java.lang.String str52 = scriptNode39.debugPrint();
        scriptNode39.setPosition(8);
        int int55 = scriptNode39.getParamCount();
        scriptNode39.setPosition((int) (byte) 10);
        scriptNode17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.clearParentScope();
        scriptNode39.setRelative(4);
        scriptNode39.setEncodedSourceBounds(23, 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList65 = scriptNode39.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node66 = scriptNode39.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str52, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(astNodeList65);
    }

    @Test
    public void test05800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05800");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode3.getEncodedSourceStart();
        int int13 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode58, 26);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node54, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode58);
        node70.setLineno(5);
        scriptNode14.setCompilerData((java.lang.Object) node70);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode3, node70);
        // The following exception was thrown during execution in test generation
        try {
            scope2.setString("15\tCOMMENT 15 52\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test05801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05801");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        boolean boolean45 = scriptNode31.hasChildren();
        int int46 = scriptNode31.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = scriptNode31.getTop();
        com.google.javascript.rhino.head.Node node48 = scriptNode31.target;
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope53 = scope51.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node54 = scope51.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scope51.setJsDocNode(comment60);
        boolean boolean63 = scope51.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean66 = scope65.hasSideEffects();
        java.lang.String str67 = scope65.toSource();
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean70 = scope69.hasSideEffects();
        java.lang.String str71 = scope69.toSource();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) scope51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scope69, 17);
        int int76 = scope65.getIntProp((int) (byte) 1, 8);
        scriptNode31.addChildScope(scope65);
        int int78 = scope65.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{\n}\n" + "'", str67, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{\n}\n" + "'", str71, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 9 + "'", int78 == 9);
    }

    @Test
    public void test05802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05802");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node17 = scriptNode7.getLastChild();
        boolean boolean18 = scriptNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = scriptNode7.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node21 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int26 = scriptNode23.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.setPosition(100);
        com.google.javascript.rhino.head.Node node31 = scope28.getLastSibling();
        node31.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = node31.spliterator();
        scriptNode23.setCompilerData((java.lang.Object) node31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = scriptNode37.getTop();
        scriptNode46.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int51 = scriptNode50.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        scriptNode52.setEncodedSourceEnd(18);
        scriptNode50.target = scriptNode52;
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) comment62);
        java.lang.String str64 = scriptNode23.toStringTree(scriptNode46);
        java.lang.String str65 = scriptNode46.toString();
        int int66 = scriptNode46.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode7, node21, (com.google.javascript.rhino.head.Node) scriptNode46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode69);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor71 = node70.iterator();
        com.google.javascript.rhino.head.Node node72 = nodeItor71.next();
        scriptNode7.addChildToBack(node72);
        java.lang.String str74 = scriptNode7.debugPrint();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(functionNode19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "136" + "'", str65, "136");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertNotNull(nodeItor71);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1\tSCRIPT -1 1\n-1\tSCRIPT -1 1\n" + "'", str74, "-1\tSCRIPT -1 1\n-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test05803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05803");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        int int6 = scope1.getIntProp((int) (byte) 10, (int) (byte) -1);
        java.lang.String str7 = scope1.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        int int19 = scriptNode8.getIntProp(6, 2);
        int int20 = scriptNode8.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        int int32 = scriptNode21.getIntProp(6, 2);
        int int33 = scriptNode21.getParamCount();
        scriptNode8.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode21);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode8.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap36 = scriptNode8.getSymbolTable();
        scriptNode8.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str41 = scriptNode40.getEncodedSource();
        scriptNode40.setEncodedSourceEnd(18);
        java.lang.String str45 = scriptNode40.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = scriptNode48.getTop();
        scriptNode57.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode61.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getEncodedSource();
        scriptNode63.setEncodedSourceEnd(18);
        scriptNode61.target = scriptNode63;
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) comment73);
        int int75 = scriptNode57.depth();
        int int76 = scriptNode57.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor77 = scriptNode57.iterator();
        scriptNode40.setTop(scriptNode57);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope82 = scope80.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node83 = scope80.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType87 = null;
        com.google.javascript.rhino.head.ast.Comment comment89 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType87, "Scope");
        scriptNode84.setParent((com.google.javascript.rhino.head.ast.AstNode) comment89);
        scope80.setJsDocNode(comment89);
        com.google.javascript.rhino.head.Node node92 = comment89.getFirstChild();
        scriptNode57.setJsDocNode(comment89);
        int int94 = scriptNode57.getBaseLineno();
        scriptNode8.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode57);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump97 = scope1.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0\tBLOCK 0 1\n" + "'", str7, "0\tBLOCK 0 1\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                                                                      " + "'", str45, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(nodeItor77);
        org.junit.Assert.assertNull(scope82);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertNull(node92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test05804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05804");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        int int11 = scriptNode0.getPosition();
        scriptNode0.setEncodedSourceEnd(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList21 = scriptNode14.getSymbols();
        java.lang.String str22 = scriptNode14.debugPrint();
        scriptNode14.setBaseLineno((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setContinue((com.google.javascript.rhino.head.Node) scriptNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(symbolList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str22, "-1\t  SCRIPT -53 1\n");
    }

    @Test
    public void test05805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05805");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        scriptNode6.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        java.lang.String str23 = scope17.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = scope17.getSymbolTable();
        boolean boolean25 = scope17.hasChildren();
        com.google.javascript.rhino.head.Node node26 = scope17.getNext();
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope30 = scope28.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node31 = scope28.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scope28.setJsDocNode(comment37);
        java.lang.String str41 = comment37.toSource((int) (short) 10);
        scope17.setJsDocNode(comment37);
        comment37.setRelative(4);
        scriptNode6.setJsDocNode(comment37);
        int int46 = scriptNode6.getParamCount();
        com.google.javascript.rhino.head.ast.Symbol symbol47 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode6.putSymbol(symbol47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                    Scope" + "'", str41, "                    Scope");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test05806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05806");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode0.getChildScopes();
        java.lang.String str12 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.Node node13 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setContinue(node13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                      " + "'", str12, "                                                                      ");
    }

    @Test
    public void test05807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05807");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-613442063));
        com.google.javascript.rhino.head.Node node3 = scriptNode1.setType(6);
        com.google.javascript.rhino.head.ast.Comment comment4 = node3.getJsDocNode();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(comment4);
    }

    @Test
    public void test05808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05808");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope(13, 7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node26 = scope23.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        scope23.setJsDocNode(comment32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = scriptNode35.getSymbols();
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) scope23, (com.google.javascript.rhino.head.Node) scriptNode35);
        scriptNode35.setPosition((int) (byte) 0);
        scriptNode35.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        int int59 = scriptNode48.getIntProp(6, 2);
        int int60 = scriptNode48.getParamCount();
        java.lang.String str61 = scriptNode48.debugPrint();
        int int64 = scriptNode48.getIntProp(17, 10);
        scriptNode35.setTop(scriptNode48);
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode35);
        int int67 = scriptNode35.getRegexpCount();
        com.google.javascript.rhino.head.Node node68 = scriptNode35.getNext();
        scope6.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode35);
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode35);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(scope25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(symbolList42);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str61, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(node68);
    }

    @Test
    public void test05809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05809");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEndLineno(14);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = scriptNode0.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setEndLineno(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(functionNode9);
    }

    @Test
    public void test05810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05810");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = scriptNode31.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            int int46 = astRoot45.getType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(astRoot45);
    }

    @Test
    public void test05811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05811");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-1), 21);
        node2.removeChildren();
        int int4 = node2.getType();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test05812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05812");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        scriptNode0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode0.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap28 = scriptNode0.getSymbolTable();
        int int29 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope(12, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setContinue((com.google.javascript.rhino.head.Node) scope32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
    }

    @Test
    public void test05813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05813");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.Node node25 = scriptNode16.setType((int) (byte) 10);
        scriptNode16.clearParentScope();
        boolean boolean27 = scriptNode16.hasChildren();
        java.lang.String str28 = scriptNode16.toString();
        scriptNode16.setEncodedSourceStart(135381063);
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10" + "'", str28, "10");
    }

    @Test
    public void test05814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05814");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.Node node10 = scope1.getNext();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        java.lang.String str25 = comment21.toSource((int) (short) 10);
        scope1.setJsDocNode(comment21);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = comment21.spliterator();
        java.lang.String str28 = comment21.getValue();
        java.lang.String str29 = comment21.toString();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope33 = scope31.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node34 = scope31.target;
        scope31.setPosition(2);
        scope31.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.lang.String str53 = comment49.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = comment49.getAstRoot();
        scope31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        comment21.setParent((com.google.javascript.rhino.head.ast.AstNode) scope31);
        com.google.javascript.rhino.head.Token.CommentType commentType57 = comment21.getCommentType();
        comment21.setPosition((-42));
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                    Scope" + "'", str25, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Scope" + "'", str28, "Scope");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "161" + "'", str29, "161");
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "                    Scope" + "'", str53, "                    Scope");
        org.junit.Assert.assertNull(astRoot54);
        org.junit.Assert.assertNull(commentType57);
    }

    @Test
    public void test05815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05815");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(35);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap2 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.Node node3 = scriptNode1.getLastChild();
        int int4 = scriptNode1.getFunctionCount();
        scriptNode1.setBaseLineno(220850805);
        int int9 = scriptNode1.getIntProp((-1), 19);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 19 + "'", int9 == 19);
    }

    @Test
    public void test05816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05816");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int60 = scriptNode45.getEncodedSourceStart();
        java.lang.String str62 = scriptNode45.makeIndent((-547629399));
        scriptNode45.setBaseLineno(908331048);
        scriptNode45.setEncodedSourceEnd((-243114478));
        // The following exception was thrown during execution in test generation
        try {
            scriptNode45.setString("                                                                                                      6\tSCRIPT 6 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test05817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05817");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = scriptNode0.getTop();
        java.lang.String str62 = scriptNode0.shortName();
        com.google.javascript.rhino.head.Node node63 = scriptNode0.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump64 = scriptNode0.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(scriptNode61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ScriptNode" + "'", str62, "ScriptNode");
        org.junit.Assert.assertNotNull(node63);
    }

    @Test
    public void test05818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05818");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        int int10 = comment4.getType();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType15, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        java.lang.String str22 = comment17.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.Node node24 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode18, node24);
        scriptNode18.setSourceName("hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = scriptNode29.getTop();
        scriptNode38.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str45 = scriptNode44.getEncodedSource();
        scriptNode44.setEncodedSourceEnd(18);
        scriptNode42.target = scriptNode44;
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        int int63 = scriptNode51.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope67 = scope65.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node68 = scope65.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scope65.setJsDocNode(comment74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType80, "Scope");
        scriptNode77.setParent((com.google.javascript.rhino.head.ast.AstNode) comment82);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode77.getSymbols();
        com.google.javascript.rhino.head.Node node85 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scope65, (com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.Node node87 = scriptNode51.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode51);
        comment4.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        int int90 = scriptNode51.getEncodedSourceEnd();
        int int91 = scriptNode51.getPosition();
        java.lang.String str92 = scriptNode51.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = scriptNode51.getRegexpFlags(23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 161 + "'", int10 == 161);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(scriptNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(scope67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(symbolList84);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-53) + "'", int91 == (-53));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "$0" + "'", str92, "$0");
    }

    @Test
    public void test05819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05819");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType2, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode5.getEncodedSource();
        scriptNode5.setEncodedSourceEnd(18);
        java.lang.String str9 = comment4.toStringTree(scriptNode5);
        int int10 = comment4.getType();
        java.lang.String str12 = comment4.toSource(11);
        java.lang.Object obj14 = comment4.getProp(24);
        java.lang.String str15 = comment4.getValue();
        java.lang.Object obj17 = comment4.getProp((-389829193));
        java.lang.String str19 = comment4.makeIndent(13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scriptNode30.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        scriptNode36.setEncodedSourceEnd(18);
        scriptNode34.target = scriptNode36;
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.Node node45 = scriptNode36.setType((int) (byte) 10);
        scriptNode36.clearParentScope();
        boolean boolean47 = scriptNode36.hasChildren();
        scriptNode36.setSourceName("                                                                                                                                                                                                        ");
        int int50 = scriptNode36.getParamCount();
        int int51 = scriptNode36.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            comment4.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 161 + "'", int10 == 161);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                      Scope" + "'", str12, "                      Scope");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Scope" + "'", str15, "Scope");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                          " + "'", str19, "                          ");
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test05820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05820");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        node4.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = node4.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = null;
        scriptNode23.setSymbols(symbolList29);
        node4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.ast.Symbol symbol33 = scriptNode23.getSymbol("41");
        com.google.javascript.rhino.head.Node node35 = scriptNode23.setType(2);
        node35.putIntProp(98666588, 1246415336);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(symbol33);
        org.junit.Assert.assertNotNull(node35);
    }

    @Test
    public void test05821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05821");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        int int5 = scope2.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        int int21 = scriptNode19.getBaseLineno();
        java.lang.String str22 = scriptNode19.getNextTempName();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.lang.String str24 = scriptNode19.debugPrint();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        scriptNode19.setEncodedSourceBounds(9, 2);
        java.lang.String str29 = scriptNode19.toString();
        java.lang.String str30 = scriptNode19.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = scriptNode19.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node32 = astRoot31.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 129 + "'", int5 == 129);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str24, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "136" + "'", str29, "136");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{\n}\n" + "'", str30, "{\n}\n");
        org.junit.Assert.assertNull(astRoot31);
    }

    @Test
    public void test05822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05822");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getRegexpCount();
        java.lang.String str22 = scriptNode9.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        scope37.setPosition(2);
        scope37.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node45 = scope37.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str47 = scriptNode46.getEncodedSource();
        scriptNode46.setEncodedSourceEnd(18);
        java.lang.String str51 = scriptNode46.makeIndent((int) '#');
        scope37.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope24, (com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope scope54 = scope24.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        int int66 = scriptNode55.getIntProp(6, 2);
        int int67 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode68.getEncodedSource();
        int int70 = scriptNode68.getBaseLineno();
        java.lang.String str71 = scriptNode68.getNextTempName();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        int int73 = scriptNode55.getEndLineno();
        scope24.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode55);
        scriptNode9.addChildScope(scope24);
        scope24.setPosition((-53));
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList78 = scope24.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        com.google.javascript.rhino.head.Token.CommentType commentType86 = null;
        comment84.setCommentType(commentType86);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) comment84);
        java.lang.String str89 = scriptNode0.getJsDoc();
        scriptNode0.setEncodedSourceStart(0);
        int int92 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.Node node94 = scriptNode0.setType((int) (short) -1);
        int int95 = scriptNode0.getLength();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                                      " + "'", str51, "                                                                      ");
        org.junit.Assert.assertNull(scope54);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "$0" + "'", str71, "$0");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(astNodeList78);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test05823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05823");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType2, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        comment4.addChildToBack(node21);
        java.lang.String str24 = comment4.toSource((-1));
        java.lang.Object obj26 = comment4.getProp(129);
        com.google.javascript.rhino.head.Node node27 = comment4.getLastChild();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        comment4.setCommentType(commentType28);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment4.visit(nodeVisitor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(node27);
    }

    @Test
    public void test05824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05824");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode26.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
    }

    @Test
    public void test05825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05825");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        int int43 = scriptNode2.getLineno();
        java.lang.String str44 = scriptNode2.getEncodedSource();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = scriptNode2.new NodeIterator();
        com.google.javascript.rhino.head.Node node46 = scriptNode2.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            node46.setString("                                                                    Scope");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(node46);
    }

    @Test
    public void test05826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05826");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(18);
        java.lang.Object obj16 = scriptNode13.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node55 = scriptNode44.target;
        scriptNode13.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        int int57 = scriptNode44.getLineno();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode44);
        java.lang.String str59 = scriptNode44.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str69 = scriptNode60.getSourceName();
        int int70 = scriptNode60.getAbsolutePosition();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap71 = scriptNode60.getSymbolTable();
        scriptNode60.setEndLineno(15);
        scriptNode44.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope75 = scriptNode44.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                    {\n                                    }\n" + "'", str15, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test05827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05827");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        java.lang.String str8 = scriptNode0.toString();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scriptNode9.setEncodedSourceStart((int) (byte) 100);
        int int20 = scriptNode9.getIntProp(6, 2);
        int int21 = scriptNode9.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getEncodedSource();
        int int24 = scriptNode22.getBaseLineno();
        java.lang.String str25 = scriptNode22.getNextTempName();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        java.lang.String str27 = scriptNode22.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str33 = scope31.toSource(12);
        scope31.setRelative(1);
        scriptNode22.putProp(17, (java.lang.Object) 1);
        java.lang.String str38 = scriptNode22.toSource(13);
        scriptNode0.target = scriptNode22;
        java.lang.String str41 = scriptNode0.toSource(16);
        int int42 = scriptNode0.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray43 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "136" + "'", str8, "136");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$0" + "'", str25, "$0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str27, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                        {\n                        }\n" + "'", str33, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                          {\n                          }\n" + "'", str38, "                          {\n                          }\n");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                {\n                                }\n" + "'", str41, "                                {\n                                }\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test05828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05828");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        scope1.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.Object obj19 = scriptNode16.getCompilerData();
        scriptNode16.setEncodedSourceBounds((int) '4', 0);
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        int int24 = scriptNode16.getFunctionCount();
        java.lang.Object obj26 = scriptNode16.getProp(845940330);
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test05829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05829");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (short) 10, 7, commentType2, "");
        comment4.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int11 = scriptNode8.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope13.setPosition(100);
        com.google.javascript.rhino.head.Node node16 = scope13.getLastSibling();
        node16.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = node16.spliterator();
        scriptNode8.setCompilerData((java.lang.Object) node16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) comment47);
        java.lang.String str49 = scriptNode8.toStringTree(scriptNode31);
        int int50 = scriptNode31.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        scriptNode51.setEndLineno(18);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode51);
        int int66 = scriptNode51.getEncodedSourceStart();
        java.lang.Object obj68 = scriptNode51.getProp(2);
        com.google.javascript.rhino.head.Node node69 = scriptNode51.getLastChild();
        int int70 = comment4.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment(4, 26, commentType73, "                                                                                                                                                                                                                                                                                {\n                                                                                                                                                                                                                                                                                }\n");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode51.setFinally((com.google.javascript.rhino.head.Node) comment75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
    }

    @Test
    public void test05830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05830");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope27 = scope25.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node28 = scope25.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scope25.setJsDocNode(comment34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = scriptNode37.getSymbols();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope25, (com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setPosition((int) (byte) 0);
        scriptNode37.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str51 = scriptNode37.makeIndent(0);
        java.lang.String str52 = scriptNode0.toStringTree(scriptNode37);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str58 = scope57.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str66 = scriptNode65.getEncodedSource();
        scriptNode65.setEncodedSourceEnd(18);
        java.lang.String str69 = comment64.toStringTree(scriptNode65);
        com.google.javascript.rhino.head.Node node71 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode65, node71);
        scriptNode65.setSourceName("hi!");
        scope57.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode65);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scope57);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        scriptNode79.setEndLineno(0);
        node77.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode79);
        scriptNode79.clearParentScope();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode79.getSymbols();
        scriptNode0.setCompilerData((java.lang.Object) symbolList84);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(scope27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(symbolList44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Scope" + "'", str58, "Scope");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(symbolList84);
    }

    @Test
    public void test05831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05831");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        scriptNode14.setEncodedSourceStart((int) (byte) 1);
        scriptNode14.setEncodedSource("                                                                                                                                                                                                        Scope");
        int int32 = scriptNode14.depth();
        com.google.javascript.rhino.head.Node node35 = com.google.javascript.rhino.head.Node.newString((int) (byte) 10, "");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = scriptNode38.getTop();
        scriptNode47.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int52 = scriptNode51.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        scriptNode53.setEncodedSourceEnd(18);
        scriptNode51.target = scriptNode53;
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) comment63);
        java.lang.String str65 = node35.toStringTree(scriptNode47);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode14, node35, 1784707759);
        boolean boolean68 = node35.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(scriptNode47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test05832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05832");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        int int39 = scriptNode0.getPosition();
        scriptNode0.setSourceName("                                                                      ");
        scriptNode0.setEncodedSourceEnd(19);
        int int44 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode45 = scriptNode0.getEnclosingFunction();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(functionNode45);
    }

    @Test
    public void test05833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05833");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode0.setLineno((int) '#');
        int int17 = scriptNode0.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode18 = scriptNode0.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList19 = scriptNode0.getStatements();
        scriptNode0.removeProp(1);
        java.lang.String str22 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str37 = scriptNode36.getEncodedSource();
        int int38 = scriptNode36.getBaseLineno();
        java.lang.String str39 = scriptNode36.getNextTempName();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str41 = scriptNode36.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int46 = scriptNode43.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope48.setPosition(100);
        com.google.javascript.rhino.head.Node node51 = scope48.getLastSibling();
        node51.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator53 = node51.spliterator();
        scriptNode43.setCompilerData((java.lang.Object) node51);
        java.lang.String str55 = scriptNode43.getSourceName();
        int int56 = scriptNode43.getEncodedSourceStart();
        scriptNode43.setEncodedSourceStart((int) (byte) 0);
        scriptNode36.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        java.lang.String str60 = scriptNode43.toString();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        int int62 = scriptNode0.getBaseLineno();
        java.lang.String str63 = scriptNode0.getSourceName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor64 = scriptNode0.iterator();
        java.lang.String str65 = scriptNode0.getJsDoc();
        java.lang.Class<?> wildcardClass66 = scriptNode0.getClass();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNull(functionNode18);
        org.junit.Assert.assertNotNull(astNodeList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "$0" + "'", str39, "$0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str41, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(nodeSpliterator53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "136" + "'", str60, "136");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 35 + "'", int62 == 35);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(nodeItor64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test05834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05834");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        int int21 = scope20.depth();
        scriptNode0.replaceWith(scope20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode0.getSymbol("                                      Scope");
        int int25 = scriptNode0.getLineno();
        int int26 = scriptNode0.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope29.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node32 = scope29.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = null;
        scope29.setTop(scriptNode33);
        scriptNode27.target = scope29;
        int int36 = scriptNode27.getEncodedSourceStart();
        int int37 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.Node node38 = scriptNode0.target;
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor39 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(symbol24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 53 + "'", int26 == 53);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNull(node38);
    }

    @Test
    public void test05835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05835");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = scriptNode0.getSymbols();
        java.lang.String str8 = scriptNode0.debugPrint();
        scriptNode0.setBaseLineno((int) (byte) 10);
        com.google.javascript.rhino.head.Node node11 = scriptNode0.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray12 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str8, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNotNull(node11);
    }

    @Test
    public void test05836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05836");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.Node node13 = comment10.getFirstChild();
        java.lang.String str14 = comment10.getValue();
        com.google.javascript.rhino.head.Node node15 = comment10.getFirstChild();
        java.lang.String str17 = comment10.makeIndent(9);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = comment10.getCommentType();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Scope" + "'", str14, "Scope");
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "                  " + "'", str17, "                  ");
        org.junit.Assert.assertNull(commentType18);
    }

    @Test
    public void test05837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05837");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        java.lang.String str14 = scriptNode1.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        scope16.setPosition(2);
        int int22 = scope16.getLineno();
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((-51), (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType28, "Scope");
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment30);
        scriptNode25.setEncodedSourceStart((int) (byte) 100);
        int int36 = scriptNode25.getIntProp(6, 2);
        int int37 = scriptNode25.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope41 = scope39.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node42 = scope39.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment48);
        scope39.setJsDocNode(comment48);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = scriptNode51.getSymbols();
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scope39, (com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode51.setPosition((int) (byte) 0);
        scriptNode51.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scriptNode64.setEncodedSourceStart((int) (byte) 100);
        int int75 = scriptNode64.getIntProp(6, 2);
        int int76 = scriptNode64.getParamCount();
        java.lang.String str77 = scriptNode64.debugPrint();
        int int80 = scriptNode64.getIntProp(17, 10);
        scriptNode51.setTop(scriptNode64);
        int int82 = scriptNode64.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList83 = scriptNode64.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = scriptNode64.getSymbols();
        scriptNode1.setSymbols(symbolList84);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node86 = scriptNode1.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str14, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(symbolList58);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str77, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(symbolList83);
        org.junit.Assert.assertNotNull(symbolList84);
    }

    @Test
    public void test05838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05838");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = null;
        scope2.setTop(scriptNode6);
        scriptNode0.target = scope2;
        java.lang.String str10 = scriptNode0.toSource((int) 'a');
        java.lang.Object obj12 = scriptNode0.getProp(22);
        com.google.javascript.rhino.head.Node node14 = com.google.javascript.rhino.head.Node.newString("                                      Scope");
        java.lang.String str15 = node14.getString();
        scriptNode0.addChildToFront(node14);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = node14.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str10, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                      Scope" + "'", str15, "                                      Scope");
    }

    @Test
    public void test05839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05839");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope14 = scope12.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node15 = scope12.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scope12.setJsDocNode(comment21);
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        comment21.setCommentType(commentType24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = comment21.getAstRoot();
        scriptNode0.setJsDocNode(comment21);
        boolean boolean28 = scriptNode0.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray29 = scriptNode0.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(astRoot26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test05840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05840");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode59.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope64.setPosition(100);
        com.google.javascript.rhino.head.Node node67 = scope64.getLastSibling();
        node67.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator69 = node67.spliterator();
        scriptNode59.setCompilerData((java.lang.Object) node67);
        java.lang.String str71 = scriptNode59.getSourceName();
        int int72 = scriptNode59.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope75 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str77 = scope75.toSource(12);
        scope75.setRelative(1);
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scope75);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor81 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode59.visit(nodeVisitor81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(nodeSpliterator69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "                        {\n                        }\n" + "'", str77, "                        {\n                        }\n");
    }

    @Test
    public void test05841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05841");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        com.google.javascript.rhino.head.Node node60 = scriptNode0.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        int int72 = scriptNode61.getIntProp(6, 2);
        int int73 = scriptNode61.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = null;
        scriptNode61.setSymbols(symbolList74);
        com.google.javascript.rhino.head.ast.Scope scope78 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode61.setParentScope(scope78);
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) scope78);
        java.lang.String str81 = scriptNode0.toString();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "136" + "'", str81, "136");
    }

    @Test
    public void test05842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05842");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        scriptNode10.setBaseLineno(10);
        scriptNode10.setEncodedSourceEnd((int) (short) -1);
        int int26 = scriptNode10.getParamCount();
        java.lang.String str27 = scriptNode10.getSourceName();
        java.lang.String str29 = scriptNode10.makeIndent(16);
        com.google.javascript.rhino.head.Node node30 = scriptNode10.getLastSibling();
        com.google.javascript.rhino.head.ast.Symbol symbol32 = scriptNode10.getSymbol("                        ");
        scriptNode10.removeChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        int int45 = scriptNode34.getIntProp(6, 2);
        int int46 = scriptNode34.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode47.toSource(18);
        java.lang.Object obj50 = scriptNode47.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode78.getSymbols();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope66, (com.google.javascript.rhino.head.Node) scriptNode78);
        scriptNode78.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node89 = scriptNode78.target;
        scriptNode47.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode78);
        int int91 = scriptNode78.getLineno();
        scriptNode34.setCompilerData((java.lang.Object) scriptNode78);
        scriptNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode78);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList94 = scriptNode10.getSymbols();
        java.lang.String str95 = scriptNode10.toString();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                " + "'", str29, "                                ");
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNull(symbol32);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "                                    {\n                                    }\n" + "'", str49, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertNull(node89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(symbolList94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "136" + "'", str95, "136");
    }

    @Test
    public void test05843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05843");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                                                                                                                                                                                                                                                                                {\n                                                                                                                                                                                                                                                                                }\n");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test05844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05844");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str14 = scriptNode1.toSource(21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        scriptNode15.setEndLineno(5);
        java.lang.Object obj27 = scriptNode15.getProp((int) (short) 10);
        int int28 = scriptNode15.getParamCount();
        scriptNode1.setTop(scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(18);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap32 = null;
        scriptNode31.setSymbolTable(strMap32);
        scriptNode15.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope(26, (int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        int int40 = scriptNode38.getBaseLineno();
        java.lang.Object obj41 = scriptNode38.getCompilerData();
        scriptNode38.setEncodedSourceBounds((int) '4', 0);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList45 = scriptNode38.getStatements();
        scriptNode38.removeProp(100);
        scope37.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode38);
        scriptNode38.setEncodedSourceEnd(129);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode15.removeChild((com.google.javascript.rhino.head.Node) scriptNode38);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                          {\n                                          }\n" + "'", str14, "                                          {\n                                          }\n");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(astNodeList45);
    }

    @Test
    public void test05845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05845");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = null;
        scriptNode17.setSymbols(symbolList23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = scriptNode26.getTop();
        scriptNode35.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int40 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        scriptNode39.target = scriptNode41;
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode41);
        com.google.javascript.rhino.head.Node node47 = scriptNode35.getLastSibling();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(754207379, (com.google.javascript.rhino.head.Node) scriptNode17, node47, 51);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump50 = scriptNode17.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(scriptNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(node47);
    }

    @Test
    public void test05846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05846");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        scriptNode4.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        node36.removeProp(0);
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope40.setPosition(100);
        com.google.javascript.rhino.head.Node node43 = scope40.getLastSibling();
        node43.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator45 = node43.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = scriptNode47.getTop();
        scriptNode56.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int61 = scriptNode60.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str63 = scriptNode62.getEncodedSource();
        scriptNode62.setEncodedSourceEnd(18);
        scriptNode60.target = scriptNode62;
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode56, (com.google.javascript.rhino.head.Node) scriptNode62);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = null;
        scriptNode62.setSymbols(symbolList68);
        node43.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope74 = scope72.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node75 = scope72.target;
        scope72.setPosition(2);
        scope72.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node80 = scope72.getFirstChild();
        node36.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode62, (com.google.javascript.rhino.head.Node) scope72);
        scriptNode4.target = scriptNode62;
        scriptNode62.removeChildren();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertNotNull(scriptNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(scope74);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test05847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05847");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = scriptNode0.getParamOrVarName(1583199871);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test05848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05848");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode1.getParentScope();
        int int6 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        int int21 = scriptNode10.getIntProp(6, 2);
        int int22 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scope24.setJsDocNode(comment33);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode36.getSymbols();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setPosition((int) (byte) 0);
        scriptNode36.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scriptNode49.setEncodedSourceStart((int) (byte) 100);
        int int60 = scriptNode49.getIntProp(6, 2);
        int int61 = scriptNode49.getParamCount();
        java.lang.String str62 = scriptNode49.debugPrint();
        int int65 = scriptNode49.getIntProp(17, 10);
        scriptNode36.setTop(scriptNode49);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode36);
        scriptNode36.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scriptNode70.setEncodedSourceStart((int) (byte) 100);
        int int79 = scriptNode70.getEncodedSourceStart();
        scriptNode70.setLineno(1);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scriptNode70, (int) '#');
        java.lang.String str84 = scriptNode1.toStringTree(scriptNode36);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor85 = scriptNode36.iterator();
        scriptNode36.setLength(8);
        java.lang.Class<?> wildcardClass88 = scriptNode36.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(scope5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(symbolList43);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str62, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(nodeItor85);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test05849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05849");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.String str72 = scriptNode23.toSource((-53));
        int int73 = scriptNode23.getRegexpCount();
        int int76 = scriptNode23.getIntProp((-243114478), (int) (byte) -1);
        com.google.javascript.rhino.head.ast.Symbol symbol77 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode23.putSymbol(symbol77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{\n}\n" + "'", str72, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test05850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05850");
        java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString((int) ' ');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "typeof" + "'", str1, "typeof");
    }

    @Test
    public void test05851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05851");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int12 = scriptNode9.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope14.setPosition(100);
        com.google.javascript.rhino.head.Node node17 = scope14.getLastSibling();
        node17.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = node17.spliterator();
        scriptNode9.setCompilerData((java.lang.Object) node17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        scriptNode36.target = scriptNode38;
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment48);
        java.lang.String str50 = scriptNode9.toStringTree(scriptNode32);
        scope1.setTop(scriptNode32);
        scope1.setLineno((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump54 = scope1.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test05852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05852");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        java.lang.String str40 = scriptNode26.getEncodedSource();
        com.google.javascript.rhino.head.Node node42 = scriptNode26.setType(8);
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        scope46.setLength((int) (byte) 1);
        java.lang.Object obj55 = scope46.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope46);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope60 = scope58.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node61 = scope58.target;
        scope58.setPosition(2);
        java.lang.String str64 = scope58.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap65 = scope58.getSymbolTable();
        boolean boolean66 = scope58.hasChildren();
        com.google.javascript.rhino.head.Node node67 = scope58.getNext();
        scope46.addChildrenToFront((com.google.javascript.rhino.head.Node) scope58);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType72, "Scope");
        scriptNode69.setParent((com.google.javascript.rhino.head.ast.AstNode) comment74);
        scriptNode69.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = scriptNode69.getTop();
        scriptNode78.setPosition(6);
        com.google.javascript.rhino.head.Token.CommentType commentType83 = null;
        com.google.javascript.rhino.head.ast.Comment comment85 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType83, "{\n}\n");
        java.lang.String str86 = comment85.getValue();
        comment85.setLength(129);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(35, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scriptNode78, (com.google.javascript.rhino.head.Node) comment85);
        scriptNode78.setEncodedSourceStart(14);
        scriptNode26.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode78);
        scriptNode26.setEncodedSourceBounds((-51099649), (-899539259));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(scope60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{\n}\n" + "'", str64, "{\n}\n");
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNotNull(scriptNode78);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{\n}\n" + "'", str86, "{\n}\n");
    }

    @Test
    public void test05853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05853");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = scriptNode23.getSymbols();
        scriptNode23.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            int int61 = scriptNode23.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList59);
    }

    @Test
    public void test05854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05854");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = null;
        scriptNode16.setSymbols(symbolList22);
        java.lang.String str24 = scriptNode16.getJsDoc();
        java.lang.String str25 = scriptNode16.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        java.lang.Class<?> wildcardClass28 = scriptNode26.getClass();
        scriptNode16.setCompilerData((java.lang.Object) wildcardClass28);
        scriptNode16.setEncodedSourceEnd((int) ' ');
        int int32 = scriptNode16.getRegexpCount();
        int int33 = scriptNode16.getLength();
        boolean boolean34 = scriptNode16.hasChildren();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test05855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05855");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope9 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope11 = scope9.getDefiningScope("Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType54, "Scope");
        scriptNode51.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        scriptNode51.setEncodedSourceStart((int) (byte) 100);
        int int62 = scriptNode51.getIntProp(6, 2);
        scriptNode51.setEndLineno(18);
        scriptNode38.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode51);
        scriptNode0.addChildAfter((com.google.javascript.rhino.head.Node) scope9, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope67 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, scope67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
    }

    @Test
    public void test05856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05856");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str13 = scriptNode1.getSourceName();
        int int14 = scriptNode1.getEncodedSourceStart();
        scriptNode1.setEncodedSourceStart((int) (byte) 0);
        int int17 = scriptNode1.getParamCount();
        int int18 = scriptNode1.getLength();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test05857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05857");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(1784707759);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = scope1.getTop();
        org.junit.Assert.assertNull(scriptNode2);
    }

    @Test
    public void test05858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05858");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        scriptNode23.setPosition(18);
        com.google.javascript.rhino.head.ast.Symbol symbol71 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode23.putSymbol(symbol71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
    }

    @Test
    public void test05859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05859");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str4 = scope2.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str17 = scriptNode8.getSourceName();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode8, 26);
        scriptNode6.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        java.lang.String str21 = scriptNode6.getNextTempName();
        scope2.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        boolean boolean23 = scriptNode6.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        java.lang.String str37 = scriptNode24.getSourceName();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scriptNode24, 16);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList40 = scriptNode6.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node41 = scriptNode6.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "$0" + "'", str21, "$0");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(astNodeList40);
    }

    @Test
    public void test05860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05860");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap10 = null;
        scope1.setSymbolTable(strMap10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        int int20 = scope14.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope21 = scope14.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scope14.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope26 = scope24.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node27 = scope24.target;
        scope24.setPosition(2);
        int int30 = scope24.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope31 = scope24.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator32 = scope24.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        int int35 = scriptNode33.getBaseLineno();
        java.lang.Object obj36 = scriptNode33.getCompilerData();
        scriptNode33.flattenSymbolTable(false);
        scope14.addChildAfter((com.google.javascript.rhino.head.Node) scope24, (com.google.javascript.rhino.head.Node) scriptNode33);
        int int40 = scriptNode33.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str46 = scriptNode41.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        scriptNode41.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode47);
        boolean boolean57 = scriptNode41.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap58 = scriptNode41.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode33, (com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        scope1.putProp(161, (java.lang.Object) scriptNode41);
        int int61 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode62 = scope1.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass63 = functionNode62.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNull(scope26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertNotNull(nodeSpliterator32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                      " + "'", str46, "                                                                      ");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(functionNode62);
    }

    @Test
    public void test05861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05861");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.ast.Symbol symbol24 = scriptNode9.getSymbol("{\n{\n}\n}\n");
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertNull(symbol24);
    }

    @Test
    public void test05862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05862");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope7 = scope5.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node8 = scope5.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scope5.setJsDocNode(comment14);
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scope5);
        com.google.javascript.rhino.head.Node node18 = scope1.getNext();
        com.google.javascript.rhino.head.Node node20 = scope1.setType(1487440633);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode21.toSource(18);
        java.lang.Object obj24 = scriptNode21.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = scriptNode21.getAstRoot();
        int int26 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment27 = scriptNode21.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node28 = node20.getChildBefore((com.google.javascript.rhino.head.Node) scriptNode21);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                                    {\n                                    }\n" + "'", str23, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(astRoot25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(comment27);
    }

    @Test
    public void test05863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05863");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-389829193), "0\tCOMMENT 0 6\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05864");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        scriptNode1.flattenSymbolTable(true);
        int int5 = scriptNode1.getLength();
        scriptNode1.setEncodedSourceEnd(23);
        int int8 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 100);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = scriptNode10.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setDefault((com.google.javascript.rhino.head.Node) scriptNode10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(astRoot11);
    }

    @Test
    public void test05865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05865");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scope17.setJsDocNode(comment26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode29.setPosition((int) (byte) 0);
        scriptNode29.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getParamCount();
        java.lang.String str55 = scriptNode42.debugPrint();
        int int58 = scriptNode42.getIntProp(17, 10);
        scriptNode29.setTop(scriptNode42);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode29.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.clearParentScope();
        scriptNode63.setEncodedSourceBounds(9, (int) (short) -1);
        int int74 = scriptNode63.getBaseLineno();
        com.google.javascript.rhino.head.Node node77 = com.google.javascript.rhino.head.Node.newString(25, "-1\t  SCRIPT -53 1\n");
        com.google.javascript.rhino.head.Node node78 = node77.getLastSibling();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(5, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode63, node78, 129);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode29.setBaseLineno((-54843021));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str55, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node78);
    }

    @Test
    public void test05866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05866");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(16, "            Scope");
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int15 = scriptNode6.getEncodedSourceStart();
        int int16 = scriptNode6.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        int int28 = scriptNode17.getIntProp(6, 2);
        int int29 = scriptNode17.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.String str33 = scriptNode30.getNextTempName();
        scriptNode17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = scriptNode37.getTop();
        scriptNode46.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int51 = scriptNode50.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        scriptNode52.setEncodedSourceEnd(18);
        scriptNode50.target = scriptNode52;
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str59 = scriptNode58.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType64, "Scope");
        scriptNode61.setParent((com.google.javascript.rhino.head.ast.AstNode) comment66);
        scriptNode61.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str70 = scriptNode61.getSourceName();
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode61, 26);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node57, (com.google.javascript.rhino.head.Node) scriptNode58, (com.google.javascript.rhino.head.Node) scriptNode61);
        node73.setLineno(5);
        scriptNode17.setCompilerData((java.lang.Object) node73);
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope5, (com.google.javascript.rhino.head.Node) scriptNode6, node73);
        scriptNode6.setEncodedSource("                        {\n                        }\n");
        boolean boolean80 = scriptNode6.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node81 = scriptNode6.target;
        com.google.javascript.rhino.head.ast.FunctionNode functionNode82 = scriptNode6.getEnclosingFunction();
        java.lang.String str83 = scriptNode6.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            node2.removeChild((com.google.javascript.rhino.head.Node) scriptNode6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertNull(functionNode82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "$0" + "'", str83, "$0");
    }

    @Test
    public void test05867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05867");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        int int3 = scriptNode0.getEndLineno();
        int int4 = scriptNode0.getRegexpCount();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(35);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap9 = scriptNode0.getSymbolTable();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test05868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05868");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        scope1.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope12 = scope10.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node13 = scope10.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scope10.setJsDocNode(comment19);
        java.lang.String str23 = comment19.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = comment19.getAstRoot();
        scope1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scriptNode37.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) comment53);
        int int55 = scriptNode37.depth();
        int int56 = scriptNode37.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor57 = scriptNode37.iterator();
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        scriptNode37.setEncodedSource("                              {\n                              }\n");
        int int61 = scriptNode37.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope65 = scope63.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node66 = scope63.target;
        scope63.setPosition(2);
        com.google.javascript.rhino.head.ast.Scope scope70 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope72 = scope70.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node73 = scope70.target;
        scope70.setPosition(2);
        java.lang.String str76 = scope70.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap77 = scope70.getSymbolTable();
        boolean boolean78 = scope70.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        com.google.javascript.rhino.head.ast.Comment comment84 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType82, "Scope");
        scriptNode79.setParent((com.google.javascript.rhino.head.ast.AstNode) comment84);
        scriptNode79.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = scriptNode79.getTop();
        scope70.target = scriptNode79;
        com.google.javascript.rhino.head.Node node90 = scriptNode79.target;
        scriptNode79.setBaseLineno(10);
        scope63.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode79);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode37, scope63);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int96 = scriptNode37.addFunction(functionNode95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                    Scope" + "'", str23, "                    Scope");
        org.junit.Assert.assertNull(astRoot24);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(nodeItor57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(scope65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(scope72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{\n}\n" + "'", str76, "{\n}\n");
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(scriptNode88);
        org.junit.Assert.assertNull(node90);
    }

    @Test
    public void test05869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05869");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scope17.setJsDocNode(comment26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = scriptNode29.getSymbols();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode29.setPosition((int) (byte) 0);
        scriptNode29.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getParamCount();
        java.lang.String str55 = scriptNode42.debugPrint();
        int int58 = scriptNode42.getIntProp(17, 10);
        scriptNode29.setTop(scriptNode42);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode29);
        scriptNode29.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        int int72 = scriptNode63.getEncodedSourceStart();
        scriptNode63.setLineno(1);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode63, (int) '#');
        java.lang.String str78 = scriptNode29.makeIndent(52);
        int int79 = scriptNode29.getRegexpCount();
        // The following exception was thrown during execution in test generation
        try {
            int int80 = scriptNode29.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str55, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "                                                                                                        " + "'", str78, "                                                                                                        ");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test05870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05870");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        com.google.javascript.rhino.head.Node node41 = scriptNode26.getNext();
        // The following exception was thrown during execution in test generation
        try {
            node41.labelId(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(node41);
    }

    @Test
    public void test05871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05871");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode17.setEncodedSourceEnd(11);
        java.lang.String str25 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSource("52\tCOMMENT 52 6\n");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(6, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope32 = scope30.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node33 = scope30.target;
        scope30.setPosition(2);
        java.lang.String str36 = scope30.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = scope30.getSymbolTable();
        boolean boolean38 = scope30.hasChildren();
        com.google.javascript.rhino.head.Node node39 = scope30.getNext();
        com.google.javascript.rhino.head.ast.Scope scope41 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope41.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node44 = scope41.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scope41.setJsDocNode(comment50);
        java.lang.String str54 = comment50.toSource((int) (short) 10);
        scope30.setJsDocNode(comment50);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = comment50.spliterator();
        java.lang.String str57 = comment50.getValue();
        java.lang.String str58 = comment50.toString();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = comment50.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode60.getSymbols();
        java.lang.String str68 = scriptNode60.debugPrint();
        scriptNode60.removeProp((int) 'a');
        java.lang.String str71 = scriptNode60.debugPrint();
        scriptNode60.setRelative(26);
        int int74 = scriptNode60.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstNode astNode75 = scriptNode60.getParent();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator76 = scriptNode60.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            node28.replaceChildAfter((com.google.javascript.rhino.head.Node) comment50, (com.google.javascript.rhino.head.Node) scriptNode60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(scope32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{\n}\n" + "'", str36, "{\n}\n");
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                    Scope" + "'", str54, "                    Scope");
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Scope" + "'", str57, "Scope");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "161" + "'", str58, "161");
        org.junit.Assert.assertNull(commentType59);
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str68, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str71, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(astNode75);
    }

    @Test
    public void test05872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05872");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        scriptNode1.setEndLineno(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode5.getEncodedSourceStart();
        scriptNode5.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList18 = scriptNode5.getSymbols();
        scriptNode1.setSymbols(symbolList18);
        scriptNode1.flattenSymbolTable(false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(symbolList18);
    }

    @Test
    public void test05873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05873");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode16.putIntProp((-1), 13);
        int int62 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol64 = scriptNode16.getSymbol("                                                                                                                                                                                                        Scope");
        int int65 = scriptNode16.getFunctionCount();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap66 = scriptNode16.getSymbolTable();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = scriptNode16.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node68 = scriptNode16.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 18 + "'", int62 == 18);
        org.junit.Assert.assertNull(symbol64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(scopeList67);
    }

    @Test
    public void test05874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05874");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode3.getEncodedSourceStart();
        int int13 = scriptNode3.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode27.getEncodedSource();
        int int29 = scriptNode27.getBaseLineno();
        java.lang.String str30 = scriptNode27.getNextTempName();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType37, "Scope");
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        scriptNode34.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = scriptNode34.getTop();
        scriptNode43.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int48 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        scriptNode49.setEncodedSourceEnd(18);
        scriptNode47.target = scriptNode49;
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str56 = scriptNode55.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType61, "Scope");
        scriptNode58.setParent((com.google.javascript.rhino.head.ast.AstNode) comment63);
        scriptNode58.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str67 = scriptNode58.getSourceName();
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode58, 26);
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node54, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode58);
        node70.setLineno(5);
        scriptNode14.setCompilerData((java.lang.Object) node70);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope2, (com.google.javascript.rhino.head.Node) scriptNode3, node70);
        boolean boolean75 = scope2.hasChildren();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor76 = scope2.iterator();
        boolean boolean77 = scope2.hasSideEffects();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "$0" + "'", str30, "$0");
        org.junit.Assert.assertNotNull(scriptNode43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(nodeItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test05875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05875");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode27.getFunctions();
        int int39 = scriptNode27.getLength();
        scriptNode27.setEncodedSourceStart(2);
        java.lang.String str43 = scriptNode27.toSource(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = scriptNode27.getRegexpFlags((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{\n}\n" + "'", str43, "{\n}\n");
    }

    @Test
    public void test05876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05876");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode0.getTop();
        java.lang.String str10 = scriptNode9.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = scriptNode11.getTop();
        java.lang.String str21 = scriptNode20.shortName();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.String str24 = scriptNode9.makeIndent(6);
        scriptNode9.putProp((-1), (java.lang.Object) "0\tBLOCK 0 1\n");
        com.google.javascript.rhino.head.Node node28 = scriptNode9.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode9.setString("      Scope");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ScriptNode" + "'", str10, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ScriptNode" + "'", str21, "ScriptNode");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "            " + "'", str24, "            ");
        org.junit.Assert.assertNotNull(node28);
    }

    @Test
    public void test05877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05877");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode4.getSymbol("/");
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode4.getParentScope();
        scriptNode4.setSourceName("                                        {\n                                        }\n");
        int int20 = scriptNode4.getParamCount();
        int int21 = scriptNode4.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int26 = scriptNode23.getIntProp(23, (int) (short) 1);
        boolean boolean27 = scriptNode23.hasSideEffects();
        scriptNode23.setSourceName("0\tCOMMENT 0 6\n");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test05878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05878");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(908331048);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 908331048");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05879");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("34756133");
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test05880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05880");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scriptNode20.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = scriptNode20.getTop();
        scriptNode29.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int34 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        scriptNode35.setEncodedSourceEnd(18);
        scriptNode33.target = scriptNode35;
        com.google.javascript.rhino.head.Node node40 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scriptNode35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scriptNode44.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str53 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode44, 26);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node40, (com.google.javascript.rhino.head.Node) scriptNode41, (com.google.javascript.rhino.head.Node) scriptNode44);
        node56.setLineno(5);
        scriptNode0.setCompilerData((java.lang.Object) node56);
        com.google.javascript.rhino.head.Node node60 = scriptNode0.getNext();
        java.lang.Object obj61 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstNode astNode62 = scriptNode0.getParent();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertNotNull(scriptNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "-1");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "-1");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "-1");
        org.junit.Assert.assertNotNull(astNode62);
    }

    @Test
    public void test05881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05881");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType2, "hi!");
        comment4.removeChildren();
        java.lang.String str6 = comment4.getValue();
        boolean boolean7 = comment4.hasSideEffects();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05882");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope3.setPosition(100);
        com.google.javascript.rhino.head.Node node6 = scope3.getLastSibling();
        node6.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = node6.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scriptNode19.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int24 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str26 = scriptNode25.getEncodedSource();
        scriptNode25.setEncodedSourceEnd(18);
        scriptNode23.target = scriptNode25;
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList31 = null;
        scriptNode25.setSymbols(symbolList31);
        node6.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        java.lang.String str34 = scriptNode1.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        int int46 = scriptNode35.getIntProp(6, 2);
        int int47 = scriptNode35.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str49 = scriptNode48.getEncodedSource();
        int int50 = scriptNode48.getBaseLineno();
        java.lang.String str51 = scriptNode48.getNextTempName();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode25, (com.google.javascript.rhino.head.ast.Scope) scriptNode48);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope57 = scope55.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node58 = scope55.target;
        scope55.setPosition(2);
        java.lang.String str61 = scope55.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap62 = scope55.getSymbolTable();
        boolean boolean63 = scope55.hasChildren();
        com.google.javascript.rhino.head.Node node64 = scope55.getNext();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        java.lang.String str79 = comment75.toSource((int) (short) 10);
        scope55.setJsDocNode(comment75);
        scriptNode25.addChildToBack((com.google.javascript.rhino.head.Node) comment75);
        int int82 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 0);
        scriptNode25.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode84);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode86 = scriptNode84.getEnclosingFunction();
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "$0" + "'", str51, "$0");
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{\n}\n" + "'", str61, "{\n}\n");
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "                    Scope" + "'", str79, "                    Scope");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(functionNode86);
    }

    @Test
    public void test05883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05883");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope1.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        int int47 = scriptNode45.getBaseLineno();
        java.lang.String str48 = scriptNode45.getNextTempName();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        int int50 = scriptNode32.getEndLineno();
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        scope1.setPosition((int) (short) 100);
        java.lang.String str55 = scope1.toSource((-674152164));
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n{\n{\n}\n}\n}\n" + "'", str55, "{\n{\n{\n}\n}\n}\n");
    }

    @Test
    public void test05884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05884");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.setSourceName("-1\t  SCRIPT -53 1\n");
        int int3 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope8 = scope6.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node9 = scope6.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scope6.setJsDocNode(comment15);
        java.lang.String str19 = comment15.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment15);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator21 = node20.new NodeIterator();
        com.google.javascript.rhino.head.Node node22 = nodeIterator21.next();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        java.lang.String str36 = scriptNode23.getSourceName();
        java.lang.String str37 = node22.toStringTree(scriptNode23);
        scriptNode23.setBounds((-1), 26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        int int56 = scriptNode54.getBaseLineno();
        java.lang.String str57 = scriptNode54.getNextTempName();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        java.lang.String str59 = scriptNode54.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = scriptNode60.getSymbols();
        scriptNode54.setSymbols(symbolList67);
        int int69 = scriptNode54.getRegexpCount();
        int int70 = scriptNode54.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scriptNode71.setEncodedSourceStart((int) (byte) 100);
        int int82 = scriptNode71.getIntProp(6, 2);
        int int83 = scriptNode71.getRegexpCount();
        scriptNode71.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode71.setLineno((int) '#');
        int int88 = scriptNode71.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode89 = scriptNode71.getEnclosingFunction();
        int int90 = scriptNode71.getFunctionCount();
        scriptNode54.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode71);
        scriptNode23.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode54);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        int int94 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstNode astNode95 = scriptNode23.getParent();
        scriptNode23.setBaseLineno(1168207406);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                    Scope" + "'", str19, "                    Scope");
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str59, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 35 + "'", int88 == 35);
        org.junit.Assert.assertNull(functionNode89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(astNode95);
    }

    @Test
    public void test05885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05885");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode0.getChildScopes();
        scriptNode0.flattenSymbolTable(false);
        scriptNode0.setLength(17);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump15 = scriptNode0.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(scopeList10);
    }

    @Test
    public void test05886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05886");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        boolean boolean12 = scriptNode0.hasChildren();
        scriptNode0.setLineno(17);
        java.lang.String str16 = scriptNode0.toSource((int) (short) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        scriptNode17.setEncodedSourceStart((int) (byte) 100);
        int int28 = scriptNode17.getIntProp(6, 2);
        int int29 = scriptNode17.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        int int32 = scriptNode30.getBaseLineno();
        java.lang.String str33 = scriptNode30.getNextTempName();
        scriptNode17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        scriptNode30.setEncodedSource("                        ");
        scriptNode30.setRelative(14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode39.getSymbols();
        scriptNode30.setSymbols(symbolList46);
        scriptNode0.setSymbols(symbolList46);
        // The following exception was thrown during execution in test generation
        try {
            double double49 = scriptNode0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertNotNull(symbolList46);
    }

    @Test
    public void test05887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05887");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str2 = scope1.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str10 = scriptNode9.getEncodedSource();
        scriptNode9.setEncodedSourceEnd(18);
        java.lang.String str13 = comment8.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.Node node15 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode9, node15);
        scriptNode9.setSourceName("hi!");
        scope1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode9);
        java.lang.Object obj20 = scriptNode9.getCompilerData();
        int int21 = scriptNode9.getPosition();
        int int22 = scriptNode9.depth();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Scope" + "'", str2, "Scope");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test05888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05888");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.Node node39 = scriptNode26.getLastSibling();
        boolean boolean40 = scriptNode26.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode26.putProp((int) (byte) 0, (java.lang.Object) int53);
        com.google.javascript.rhino.head.ast.AstNode astNode55 = scriptNode26.getParent();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) scope56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode59.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope64.setPosition(100);
        com.google.javascript.rhino.head.Node node67 = scope64.getLastSibling();
        node67.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator69 = node67.spliterator();
        scriptNode59.setCompilerData((java.lang.Object) node67);
        java.lang.String str71 = scriptNode59.getSourceName();
        int int72 = scriptNode59.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope75 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str77 = scope75.toSource(12);
        scope75.setRelative(1);
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scope75);
        scriptNode26.flattenSymbolTable(false);
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        com.google.javascript.rhino.head.ast.Comment comment87 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType85, "{\n}\n");
        java.lang.String str88 = comment87.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType89 = comment87.getCommentType();
        java.lang.String str91 = comment87.toSource(12);
        java.lang.String str93 = comment87.toSource(9);
        scriptNode26.addChildToBack((com.google.javascript.rhino.head.Node) comment87);
        comment87.putProp((int) (byte) 0, (java.lang.Object) "53\t  SCRIPT 1 845940330\n");
        java.lang.String str99 = comment87.toSource((-366869103));
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(astNode55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(nodeSpliterator69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "                        {\n                        }\n" + "'", str77, "                        {\n                        }\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "{\n}\n" + "'", str88, "{\n}\n");
        org.junit.Assert.assertNull(commentType89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "                        {\n}\n" + "'", str91, "                        {\n}\n");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "                  {\n}\n" + "'", str93, "                  {\n}\n");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "{\n}\n" + "'", str99, "{\n}\n");
    }

    @Test
    public void test05889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05889");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = null;
        scope1.setTop(scriptNode5);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = scope1.getExistingIntProp(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test05890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05890");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) comment33);
        int int35 = scriptNode17.depth();
        int int36 = scriptNode17.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor37 = scriptNode17.iterator();
        scriptNode0.setTop(scriptNode17);
        scriptNode0.setEncodedSourceBounds(3, 272356811);
        int int42 = scriptNode0.getEncodedSourceEnd();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(nodeItor37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 272356811 + "'", int42 == 272356811);
    }

    @Test
    public void test05891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05891");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        int int4 = scriptNode0.getBaseLineno();
        boolean boolean5 = scriptNode0.hasChildren();
        java.lang.String str6 = scriptNode0.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = scriptNode0.getExistingIntProp(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test05892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05892");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = scriptNode15.getTop();
        scriptNode24.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int29 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        scriptNode28.target = scriptNode30;
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) comment40);
        java.lang.String str42 = scriptNode1.toStringTree(scriptNode24);
        scriptNode24.flattenSymbolTable(true);
        java.lang.String str45 = scriptNode24.shortName();
        int int46 = scriptNode24.getAbsolutePosition();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNotNull(scriptNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ScriptNode" + "'", str45, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 58 + "'", int46 == 58);
    }

    @Test
    public void test05893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05893");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(22);
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.clearParentScope();
        scriptNode29.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode31);
        java.lang.String str40 = scriptNode31.toSource();
        scriptNode31.setEncodedSourceStart(13);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = scriptNode31.new NodeIterator();
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(845940331, (com.google.javascript.rhino.head.Node) scriptNode31, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = scriptNode31.getFunctionNode(23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{\n}\n" + "'", str40, "{\n}\n");
    }

    @Test
    public void test05894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05894");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(7);
        scope1.putIntProp(4, 6);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList5 = scope1.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        scope7.putIntProp(9, 13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str23 = scriptNode22.getEncodedSource();
        int int24 = scriptNode22.getBaseLineno();
        java.lang.Object obj25 = scriptNode22.getCompilerData();
        scriptNode22.setEncodedSourceBounds((int) '4', 0);
        scope7.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        scope7.setPosition(5);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = scope7.new NodeIterator();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope7);
        org.junit.Assert.assertNotNull(astNodeList5);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test05895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05895");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        scriptNode10.setLineno((-1));
        com.google.javascript.rhino.head.ast.Comment comment84 = scriptNode10.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = comment84.hasConsistentReturnUsage();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNull(comment84);
    }

    @Test
    public void test05896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05896");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(701595233, 5);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap3 = scope2.getSymbolTable();
        org.junit.Assert.assertNull(strMap3);
    }

    @Test
    public void test05897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05897");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(19, 2, commentType2, "  {\n  }\n");
        comment4.putIntProp(4, 8);
        java.lang.String str9 = comment4.toSource(8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode13.getTop();
        scriptNode22.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        scriptNode26.target = scriptNode28;
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str46 = scriptNode37.getSourceName();
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode37, 26);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node33, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scriptNode37);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = null;
        scriptNode37.setSymbolTable(strMap50);
        java.lang.Object obj53 = scriptNode37.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode37.getChildScopes();
        int int55 = scriptNode37.getFunctionCount();
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope((int) (byte) 100, 4);
        int int59 = scope58.depth();
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scope58, 8);
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment(8, 0, commentType64, "                        {\n                        }\n");
        scope58.setJsDocNode(comment66);
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        comment66.setCommentType(commentType68);
        com.google.javascript.rhino.head.Token.CommentType commentType70 = comment66.getCommentType();
        java.lang.String str71 = comment66.getValue();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node72 = comment4.getChildBefore((com.google.javascript.rhino.head.Node) comment66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                  {\n  }\n" + "'", str9, "                  {\n  }\n");
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(commentType70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "                        {\n                        }\n" + "'", str71, "                        {\n                        }\n");
    }

    @Test
    public void test05898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05898");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType2, "41");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        int int13 = scope7.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope14 = scope7.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope7.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope19 = scope17.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node20 = scope17.target;
        scope17.setPosition(2);
        int int23 = scope17.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope24 = scope17.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator25 = scope17.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.Object obj29 = scriptNode26.getCompilerData();
        scriptNode26.flattenSymbolTable(false);
        scope7.addChildAfter((com.google.javascript.rhino.head.Node) scope17, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int33 = scriptNode26.getLength();
        scriptNode26.setEncodedSourceEnd((int) (byte) 0);
        comment4.putProp(9, (java.lang.Object) scriptNode26);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int38 = scriptNode26.addFunction(functionNode37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNull(scope19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNotNull(nodeSpliterator25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test05899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05899");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        scriptNode6.setEncodedSourceEnd(18);
        java.lang.String str10 = comment5.toStringTree(scriptNode6);
        com.google.javascript.rhino.head.Node node12 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, node12);
        int int14 = scriptNode6.getRegexpCount();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scriptNode6.spliterator();
        java.lang.String str16 = scriptNode6.toSource();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int18 = scriptNode6.addFunction(functionNode17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{\n}\n" + "'", str16, "{\n}\n");
    }

    @Test
    public void test05900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05900");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType4, "hi!");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode8);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = node9.iterator();
        com.google.javascript.rhino.head.Node node11 = nodeItor10.next();
        node11.removeProp((-51));
        com.google.javascript.rhino.head.Node node15 = new com.google.javascript.rhino.head.Node((int) '#', (com.google.javascript.rhino.head.Node) comment6, node11, 23);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType18, "{\n}\n");
        java.lang.String str21 = comment20.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = comment20.getCommentType();
        java.lang.String str24 = comment20.toSource(12);
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.target;
        scope26.setPosition(2);
        int int32 = scope26.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope33 = scope26.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scope26.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope36 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope38 = scope36.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node39 = scope36.target;
        scope36.setPosition(2);
        int int42 = scope36.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope43 = scope36.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = scope36.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        int int47 = scriptNode45.getBaseLineno();
        java.lang.Object obj48 = scriptNode45.getCompilerData();
        scriptNode45.flattenSymbolTable(false);
        scope26.addChildAfter((com.google.javascript.rhino.head.Node) scope36, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int52 = scriptNode45.getLength();
        scriptNode45.removeProp(6);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(13, 8);
        scriptNode45.addChildToBack(node57);
        com.google.javascript.rhino.head.Node node59 = scriptNode45.target;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(2018070520, (com.google.javascript.rhino.head.Node) comment6, (com.google.javascript.rhino.head.Node) comment20, node59, 1784707759);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n}\n" + "'", str21, "{\n}\n");
        org.junit.Assert.assertNull(commentType22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "                        {\n}\n" + "'", str24, "                        {\n}\n");
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scope43);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNull(node59);
    }

    @Test
    public void test05901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05901");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        scriptNode1.flattenSymbolTable(true);
        int int5 = scriptNode1.getLength();
        scriptNode1.setEncodedSourceEnd(23);
        java.lang.Object obj8 = scriptNode1.getCompilerData();
        int int9 = scriptNode1.getBaseLineno();
        int int10 = scriptNode1.getEncodedSourceStart();
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test05902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05902");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.Node node4 = scope1.getLastSibling();
        node4.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = node4.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode8.getTop();
        scriptNode17.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int22 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        scriptNode21.target = scriptNode23;
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = null;
        scriptNode23.setSymbols(symbolList29);
        node4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode23);
        scriptNode23.setBaseLineno(26);
        int int34 = scriptNode23.getLength();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor35 = scriptNode23.iterator();
        java.lang.String str36 = scriptNode23.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode23.setDouble((double) (-25));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(nodeItor35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test05903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05903");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        int int2 = scriptNode1.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (byte) 100);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol9 = scope7.getSymbol("$0");
        scriptNode4.addChildScope(scope7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scriptNode11.setEncodedSourceStart((int) (byte) 100);
        int int22 = scriptNode11.getIntProp(6, 2);
        int int23 = scriptNode11.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = null;
        scriptNode11.setSymbols(symbolList24);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode11.setParentScope(scope28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode32.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope37.setPosition(100);
        com.google.javascript.rhino.head.Node node40 = scope37.getLastSibling();
        node40.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = node40.spliterator();
        scriptNode32.setCompilerData((java.lang.Object) node40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = scriptNode46.getTop();
        scriptNode55.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int60 = scriptNode59.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode61.getEncodedSource();
        scriptNode61.setEncodedSourceEnd(18);
        scriptNode59.target = scriptNode61;
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode61);
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType69, "Scope");
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) comment71);
        java.lang.String str73 = scriptNode32.toStringTree(scriptNode55);
        int int74 = scriptNode55.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType78 = null;
        com.google.javascript.rhino.head.ast.Comment comment80 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType78, "Scope");
        scriptNode75.setParent((com.google.javascript.rhino.head.ast.AstNode) comment80);
        scriptNode75.setEncodedSourceStart((int) (byte) 100);
        int int86 = scriptNode75.getIntProp(6, 2);
        scriptNode75.setEndLineno(18);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode55, (com.google.javascript.rhino.head.Node) scriptNode75);
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        int int91 = scriptNode11.getFunctionCount();
        int int94 = scriptNode11.getIntProp(3, (int) (short) 100);
        java.lang.String str95 = scriptNode11.getJsDoc();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator96 = scriptNode11.new NodeIterator();
        java.lang.String str97 = scope7.toStringTree(scriptNode11);
        scriptNode1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode11);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 6 + "'", int2 == 6);
        org.junit.Assert.assertNull(symbol9);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertNotNull(scriptNode55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNull(str97);
    }

    @Test
    public void test05904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05904");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        java.lang.String str13 = scriptNode0.debugPrint();
        scriptNode0.setRelative((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode16.getEncodedSourceStart();
        scriptNode16.setLineno(1);
        int int28 = scriptNode16.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = scriptNode30.getTop();
        scriptNode39.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int44 = scriptNode43.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        scriptNode45.setEncodedSourceEnd(18);
        scriptNode43.target = scriptNode45;
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scriptNode45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope68 = scope66.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node69 = scope66.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scope66.setJsDocNode(comment75);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList85 = scriptNode78.getSymbols();
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope66, (com.google.javascript.rhino.head.Node) scriptNode78);
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList88 = scriptNode52.getSymbols();
        scriptNode16.setSymbols(symbolList88);
        scriptNode0.setSymbols(symbolList88);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList91 = scriptNode0.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList92 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int94 = scriptNode0.addFunction(functionNode93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str13, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(scope68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(symbolList85);
        org.junit.Assert.assertNotNull(symbolList88);
        org.junit.Assert.assertNull(scopeList91);
        org.junit.Assert.assertNotNull(symbolList92);
    }

    @Test
    public void test05905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05905");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.String str5 = scriptNode0.makeIndent((int) '#');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator6 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getParentScope();
        scriptNode0.clearParentScope();
        com.google.javascript.rhino.head.ast.Comment comment9 = scriptNode0.getJsDocNode();
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode0.getParentScope();
        java.lang.String str11 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode13.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode13.getParentScope();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        scope19.setPosition(2);
        java.lang.String str25 = scope19.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap26 = scope19.getSymbolTable();
        boolean boolean27 = scope19.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scope19.target = scriptNode28;
        com.google.javascript.rhino.head.Node node39 = scriptNode28.target;
        int int40 = scriptNode28.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        int int56 = scriptNode54.getBaseLineno();
        java.lang.String str57 = scriptNode54.getNextTempName();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        java.lang.String str59 = scriptNode54.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str65 = scope63.toSource(12);
        scope63.setRelative(1);
        scriptNode54.putProp(17, (java.lang.Object) 1);
        scriptNode28.target = scriptNode54;
        int int70 = scriptNode28.getEncodedSourceEnd();
        java.lang.Object obj71 = scriptNode28.getCompilerData();
        int int72 = scriptNode28.getEndLineno();
        scriptNode13.setTop(scriptNode28);
        scriptNode0.setTop(scriptNode28);
        com.google.javascript.rhino.head.ast.Symbol symbol75 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode28.putSymbol(symbol75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                      " + "'", str5, "                                                                      ");
        org.junit.Assert.assertNotNull(nodeSpliterator6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(comment9);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{\n}\n" + "'", str25, "{\n}\n");
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str59, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                        {\n                        }\n" + "'", str65, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test05906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05906");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.Node node22 = scriptNode16.target;
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = scriptNode16.getSymbolTable();
        scriptNode16.removeChildren();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test05907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05907");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scriptNode0.new NodeIterator();
        java.lang.String str11 = scriptNode0.shortName();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray12 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList13, symbolArray12);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList13);
        scriptNode0.flattenSymbolTable(false);
        scriptNode0.putIntProp(4, 97);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor21 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertNotNull(symbolArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05908");
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str8 = scriptNode7.getEncodedSource();
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str11 = comment6.toStringTree(scriptNode7);
        com.google.javascript.rhino.head.Node node13 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node14 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode7, node13);
        scriptNode7.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node17 = scriptNode7.getLastChild();
        boolean boolean18 = scriptNode7.hasSideEffects();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode19 = scriptNode7.getEnclosingFunction();
        com.google.javascript.rhino.head.Node node21 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int26 = scriptNode23.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope28.setPosition(100);
        com.google.javascript.rhino.head.Node node31 = scope28.getLastSibling();
        node31.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = node31.spliterator();
        scriptNode23.setCompilerData((java.lang.Object) node31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType40, "Scope");
        scriptNode37.setParent((com.google.javascript.rhino.head.ast.AstNode) comment42);
        scriptNode37.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = scriptNode37.getTop();
        scriptNode46.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int51 = scriptNode50.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str53 = scriptNode52.getEncodedSource();
        scriptNode52.setEncodedSourceEnd(18);
        scriptNode50.target = scriptNode52;
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scriptNode52);
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) comment62);
        java.lang.String str64 = scriptNode23.toStringTree(scriptNode46);
        java.lang.String str65 = scriptNode46.toString();
        int int66 = scriptNode46.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode7, node21, (com.google.javascript.rhino.head.Node) scriptNode46);
        scriptNode7.setEndLineno(20);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor70 = scriptNode7.iterator();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral71 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.addRegExp(regExpLiteral71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(functionNode19);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertNotNull(scriptNode46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "136" + "'", str65, "136");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertNotNull(nodeItor70);
    }

    @Test
    public void test05909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05909");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int12 = scriptNode9.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope14.setPosition(100);
        com.google.javascript.rhino.head.Node node17 = scope14.getLastSibling();
        node17.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = node17.spliterator();
        scriptNode9.setCompilerData((java.lang.Object) node17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = scriptNode23.getTop();
        scriptNode32.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int37 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode38.getEncodedSource();
        scriptNode38.setEncodedSourceEnd(18);
        scriptNode36.target = scriptNode38;
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType46, "Scope");
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment48);
        java.lang.String str50 = scriptNode9.toStringTree(scriptNode32);
        scope1.setTop(scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scope1.getTop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = scriptNode52.getParamOrVarName(1558149202);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNotNull(scriptNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(scriptNode52);
    }

    @Test
    public void test05910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05910");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        scope14.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node22 = scope14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        scriptNode23.setEncodedSourceEnd(18);
        java.lang.String str28 = scriptNode23.makeIndent((int) '#');
        scope14.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode23);
        com.google.javascript.rhino.head.ast.Scope scope31 = scope1.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        scriptNode32.setEncodedSourceStart((int) (byte) 100);
        int int43 = scriptNode32.getIntProp(6, 2);
        int int44 = scriptNode32.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str46 = scriptNode45.getEncodedSource();
        int int47 = scriptNode45.getBaseLineno();
        java.lang.String str48 = scriptNode45.getNextTempName();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        int int50 = scriptNode32.getEndLineno();
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int63 = scriptNode52.getIntProp(6, 2);
        int int64 = scriptNode52.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str66 = scriptNode65.getEncodedSource();
        int int67 = scriptNode65.getBaseLineno();
        java.lang.String str68 = scriptNode65.getNextTempName();
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode65);
        int int70 = scriptNode65.getType();
        int int71 = scriptNode65.getParamCount();
        int int72 = scriptNode65.getLength();
        int int73 = scriptNode65.getFunctionCount();
        scriptNode32.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode65);
        java.lang.String str75 = scriptNode65.debugPrint();
        com.google.javascript.rhino.head.Node node76 = scriptNode65.getLastSibling();
        scriptNode65.setEncodedSourceEnd(5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot79 = scriptNode65.getAstRoot();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                      " + "'", str28, "                                                                      ");
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "$0" + "'", str48, "$0");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 136 + "'", int70 == 136);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str75, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(astRoot79);
    }

    @Test
    public void test05911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05911");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        boolean boolean5 = scriptNode1.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        scope7.setPosition(2);
        java.lang.String str13 = scope7.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap14 = scope7.getSymbolTable();
        boolean boolean15 = scope7.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scope7.target = scriptNode16;
        com.google.javascript.rhino.head.Node node27 = scriptNode16.target;
        int int28 = scriptNode16.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        int int40 = scriptNode29.getIntProp(6, 2);
        int int41 = scriptNode29.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str43 = scriptNode42.getEncodedSource();
        int int44 = scriptNode42.getBaseLineno();
        java.lang.String str45 = scriptNode42.getNextTempName();
        scriptNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        java.lang.String str47 = scriptNode42.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope51 = new com.google.javascript.rhino.head.ast.Scope(22, (int) 'a');
        java.lang.String str53 = scope51.toSource(12);
        scope51.setRelative(1);
        scriptNode42.putProp(17, (java.lang.Object) 1);
        scriptNode16.target = scriptNode42;
        int int58 = scriptNode16.getEncodedSourceEnd();
        java.lang.Object obj59 = scriptNode16.getCompilerData();
        java.lang.String str60 = scriptNode16.shortName();
        java.lang.Object obj61 = scriptNode16.getCompilerData();
        int int62 = scriptNode16.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{\n}\n" + "'", str13, "{\n}\n");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str47, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "                        {\n                        }\n" + "'", str53, "                        {\n                        }\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ScriptNode" + "'", str60, "ScriptNode");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test05912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05912");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(5, (-42));
    }

    @Test
    public void test05913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05913");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode14.getEncodedSource();
        int int16 = scriptNode14.getBaseLineno();
        java.lang.String str17 = scriptNode14.getNextTempName();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.lang.String str19 = scriptNode14.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        scriptNode22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment27);
        scriptNode22.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = scriptNode22.getTop();
        scriptNode31.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int36 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        scriptNode35.target = scriptNode37;
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode37);
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) comment47);
        int int49 = scriptNode31.depth();
        int int50 = scriptNode31.getEndLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor51 = scriptNode31.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        int int61 = scriptNode52.getEncodedSourceStart();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(25, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scriptNode52, 23);
        scriptNode14.setBounds((int) (byte) 1, 26);
        int int67 = scriptNode14.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral68 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode14.addRegExp(regExpLiteral68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "$0" + "'", str17, "$0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNotNull(scriptNode31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(nodeItor51);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test05914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05914");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.Object obj4 = scriptNode0.getCompilerData();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = scriptNode0.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getDefiningScope("                                                    Scope");
        scriptNode0.setEncodedSourceEnd(161);
        java.lang.String str11 = scriptNode0.makeIndent(17);
        // The following exception was thrown during execution in test generation
        try {
            int int12 = scriptNode0.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                  " + "'", str11, "                                  ");
    }

    @Test
    public void test05915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05915");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        java.lang.String str43 = scriptNode2.getNextTempName();
        scriptNode2.clearParentScope();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope(26);
        boolean boolean47 = scope46.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode2.setContinue((com.google.javascript.rhino.head.Node) scope46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "$0" + "'", str43, "$0");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test05916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05916");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString("      Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        int int14 = scriptNode3.getIntProp(6, 2);
        int int15 = scriptNode3.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        int int18 = scriptNode16.getBaseLineno();
        java.lang.String str19 = scriptNode16.getNextTempName();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        scriptNode16.setEncodedSource("                        ");
        int int23 = scriptNode16.getLineno();
        java.lang.String str24 = scriptNode16.getJsDoc();
        com.google.javascript.rhino.head.Node node25 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node2, (com.google.javascript.rhino.head.Node) scriptNode16);
        boolean boolean26 = node25.hasSideEffects();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "$0" + "'", str19, "$0");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test05917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05917");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        scope2.setPosition(2);
        scope2.setLength((int) (byte) 1);
        java.lang.Object obj11 = scope2.getProp((int) 'a');
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scope2);
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        java.lang.String str20 = scope14.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = scope14.getSymbolTable();
        boolean boolean22 = scope14.hasChildren();
        com.google.javascript.rhino.head.Node node23 = scope14.getNext();
        scope2.addChildrenToFront((com.google.javascript.rhino.head.Node) scope14);
        scope2.setLength(15);
        java.lang.Class<?> wildcardClass27 = scope2.getClass();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{\n}\n" + "'", str20, "{\n}\n");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test05918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05918");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int3 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope5 = scriptNode2.getDefiningScope("51\t    SCRIPT 52 1\n");
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode2, 129);
        scriptNode2.flattenSymbolTable(true);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump10 = scriptNode2.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(scope5);
    }

    @Test
    public void test05919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05919");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-1), 6, commentType2, "hi!");
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope9 = scope7.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node10 = scope7.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType14, "Scope");
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment16);
        scope7.setJsDocNode(comment16);
        java.lang.String str20 = comment16.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment16);
        comment4.addChildToBack(node21);
        com.google.javascript.rhino.head.ast.AstNode astNode23 = comment4.getParent();
        java.lang.String str25 = comment4.toSource((-53));
        com.google.javascript.rhino.head.Token.CommentType commentType26 = comment4.getCommentType();
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                    Scope" + "'", str20, "                    Scope");
        org.junit.Assert.assertNull(astNode23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(commentType26);
    }

    @Test
    public void test05920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05920");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode7, 26);
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        java.lang.String str20 = scriptNode5.getNextTempName();
        scope1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        boolean boolean22 = scriptNode5.hasChildren();
        scriptNode5.setBaseLineno(4);
        java.lang.String str25 = scriptNode5.getNextTempName();
        java.lang.String str26 = scriptNode5.debugPrint();
        int int27 = scriptNode5.depth();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = scriptNode5.getAstRoot();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "$0" + "'", str20, "$0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "$1" + "'", str25, "$1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "6\tSCRIPT 6 1\n" + "'", str26, "6\tSCRIPT 6 1\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(astRoot28);
    }

    @Test
    public void test05921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05921");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str3 = scope1.makeIndent(0);
        com.google.javascript.rhino.head.ast.Scope scope5 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope7 = scope5.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node8 = scope5.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType12, "Scope");
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) comment14);
        scope5.setJsDocNode(comment14);
        scope1.addChildrenToFront((com.google.javascript.rhino.head.Node) scope5);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList18 = scope1.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope19 = scope1.getEnclosingScope();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator20 = scope19.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(astNodeList18);
        org.junit.Assert.assertNull(scope19);
    }

    @Test
    public void test05922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05922");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode42.setEndLineno(18);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode42, (int) (byte) -1);
        scriptNode16.target = scriptNode42;
        scriptNode42.clearParentScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = scriptNode42.getAstRoot();
        scriptNode42.setEncodedSourceStart(5);
        boolean boolean63 = scriptNode42.hasChildren();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray64 = scriptNode42.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNull(astRoot60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test05923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05923");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node node11 = scriptNode0.getNext();
        scriptNode0.setSourceName("-1\t  SCRIPT -53 1\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = scriptNode0.getRegexpString(129);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test05924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05924");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scriptNode23.setEncodedSourceStart((int) (byte) 100);
        int int34 = scriptNode23.getIntProp(6, 2);
        int int35 = scriptNode23.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope39 = scope37.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node40 = scope37.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scope37.setJsDocNode(comment46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = scriptNode49.getSymbols();
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scope37, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList66 = scriptNode59.getSymbols();
        scriptNode23.setSymbols(symbolList66);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode23.getSymbols();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList69 = scriptNode23.getFunctions();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode23.getChildScopes();
        java.lang.Object obj72 = scriptNode23.getProp((int) (byte) -1);
        com.google.javascript.rhino.head.Node node73 = scriptNode23.getLastChild();
        int int74 = scriptNode23.getFunctionCount();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator75 = scriptNode23.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator75.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(symbolList56);
        org.junit.Assert.assertNotNull(symbolList66);
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNotNull(functionNodeList69);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test05925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05925");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        int int10 = scriptNode0.getLineno();
        java.lang.String str11 = scriptNode0.getSourceName();
        int int12 = scriptNode0.getEncodedSourceEnd();
        int int13 = scriptNode0.getRegexpCount();
        boolean boolean14 = scriptNode0.hasChildren();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode0.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList16 = scriptNode0.getStatements();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertNotNull(astNodeList16);
    }

    @Test
    public void test05926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05926");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        java.lang.String str45 = scriptNode31.getEncodedSource();
        com.google.javascript.rhino.head.Node node47 = scriptNode31.setType(136);
        java.lang.String str48 = scriptNode31.getJsDoc();
        int int49 = scriptNode31.getLength();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test05927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05927");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        com.google.javascript.rhino.head.ast.Scope scope40 = scriptNode26.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode26.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode42);
        int int44 = scriptNode26.getType();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = scriptNode26.getFunctionNode(1404628457);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scope40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 136 + "'", int44 == 136);
    }

    @Test
    public void test05928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05928");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        int int42 = scriptNode31.getIntProp(6, 2);
        int int43 = scriptNode31.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope47 = scope45.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node48 = scope45.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType52, "Scope");
        scriptNode49.setParent((com.google.javascript.rhino.head.ast.AstNode) comment54);
        scope45.setJsDocNode(comment54);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType60, "Scope");
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = scriptNode57.getSymbols();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode31, (com.google.javascript.rhino.head.Node) scope45, (com.google.javascript.rhino.head.Node) scriptNode57);
        scriptNode57.setPosition((int) (byte) 0);
        scriptNode57.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType73, "Scope");
        scriptNode70.setParent((com.google.javascript.rhino.head.ast.AstNode) comment75);
        scriptNode70.setEncodedSourceStart((int) (byte) 100);
        int int81 = scriptNode70.getIntProp(6, 2);
        int int82 = scriptNode70.getParamCount();
        java.lang.String str83 = scriptNode70.debugPrint();
        int int86 = scriptNode70.getIntProp(17, 10);
        scriptNode57.setTop(scriptNode70);
        com.google.javascript.rhino.head.Node node88 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode57);
        int int89 = scriptNode57.getRegexpCount();
        comment27.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode57);
        int int91 = comment27.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode92 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str93 = scriptNode92.getEncodedSource();
        scriptNode92.setEncodedSourceEnd(18);
        java.lang.String str97 = scriptNode92.toSource((int) (byte) 10);
        java.lang.String str98 = comment27.toStringTree(scriptNode92);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor99 = comment27.iterator();
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(scope47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(symbolList64);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str83, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10 + "'", int86 == 10);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 52 + "'", int91 == 52);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "                    {\n                    }\n" + "'", str97, "                    {\n                    }\n");
        org.junit.Assert.assertNull(str98);
        org.junit.Assert.assertNotNull(nodeItor99);
    }

    @Test
    public void test05929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05929");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(21, "51\t    SCRIPT 52 1\n");
        java.lang.String str3 = node2.getJsDoc();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test05930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05930");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.removeProp(6);
        com.google.javascript.rhino.head.Node node32 = new com.google.javascript.rhino.head.Node(13, 8);
        scriptNode20.addChildToBack(node32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        scriptNode34.setEncodedSourceEnd(18);
        java.lang.String str39 = scriptNode34.makeIndent((int) '#');
        node32.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator41 = scriptNode34.new NodeIterator();
        int int42 = scriptNode34.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        java.lang.String str50 = scope44.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap51 = scope44.getSymbolTable();
        boolean boolean52 = scope44.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType56, "Scope");
        scriptNode53.setParent((com.google.javascript.rhino.head.ast.AstNode) comment58);
        scriptNode53.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = scriptNode53.getTop();
        scope44.target = scriptNode53;
        com.google.javascript.rhino.head.Node node64 = scriptNode53.target;
        scriptNode53.setBaseLineno(10);
        scriptNode53.setEncodedSourceEnd((int) (short) -1);
        int int69 = scriptNode53.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType74, "Scope");
        scriptNode71.setParent((com.google.javascript.rhino.head.ast.AstNode) comment76);
        scriptNode71.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str80 = scriptNode71.getSourceName();
        com.google.javascript.rhino.head.Node node82 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode71, 26);
        scriptNode53.setCompilerData((java.lang.Object) (byte) 1);
        scriptNode53.removeChildren();
        scriptNode34.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.Jump jump86 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode53.setJumpStatement(jump86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                                                                      " + "'", str39, "                                                                      ");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 18 + "'", int42 == 18);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{\n}\n" + "'", str50, "{\n}\n");
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(scriptNode62);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test05931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05931");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(1034180762);
    }

    @Test
    public void test05932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05932");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) -1, 24, commentType2, "^");
        boolean boolean5 = comment4.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Scope scope6 = comment4.getEnclosingScope();
        java.lang.String str8 = comment4.toSource((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                    ^" + "'", str8, "                    ^");
    }

    @Test
    public void test05933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05933");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType3, "{\n}\n");
        com.google.javascript.rhino.head.Node node7 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) comment5, (-53));
        com.google.javascript.rhino.head.Token.CommentType commentType8 = comment5.getCommentType();
        int int9 = comment5.getPosition();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = comment5.iterator();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope16 = scope14.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node17 = scope14.target;
        scope14.setPosition(2);
        int int20 = scope14.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope24 = scope22.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node25 = scope22.target;
        scope22.setPosition(2);
        scope22.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope scope31 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope33 = scope31.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node34 = scope31.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scope31.setJsDocNode(comment40);
        java.lang.String str44 = comment40.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = comment40.getAstRoot();
        scope22.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        scriptNode47.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        scriptNode47.setEncodedSourceStart((int) (byte) 100);
        int int58 = scriptNode47.getIntProp(6, 2);
        int int59 = scriptNode47.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str61 = scriptNode60.getEncodedSource();
        int int62 = scriptNode60.getBaseLineno();
        java.lang.String str63 = scriptNode60.getNextTempName();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scope14, (com.google.javascript.rhino.head.Node) scope22, (com.google.javascript.rhino.head.Node) scriptNode60, 136);
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scope22);
        // The following exception was thrown during execution in test generation
        try {
            comment5.setScope(scope22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9 + "'", int9 == 9);
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scope24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(scope33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "                    Scope" + "'", str44, "                    Scope");
        org.junit.Assert.assertNull(astRoot45);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "$0" + "'", str63, "$0");
    }

    @Test
    public void test05934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05934");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 960854933);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test05935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05935");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        boolean boolean21 = nodeIterator17.hasNext();
        boolean boolean22 = nodeIterator17.hasNext();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05936");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node38 = scriptNode27.target;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.setString("            {\n            }\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(node38);
    }

    @Test
    public void test05937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05937");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        scriptNode27.setPosition((int) (byte) 0);
        scriptNode27.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str41 = scriptNode27.makeIndent(0);
        scriptNode27.setSourceName("");
        com.google.javascript.rhino.head.ast.Comment comment44 = scriptNode27.getJsDocNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getRegexpCount();
        scriptNode46.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode46.setLineno((int) '#');
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap63 = null;
        scriptNode46.setSymbolTable(strMap63);
        java.lang.String str65 = scriptNode46.getJsDoc();
        scriptNode27.putProp((-1666765792), (java.lang.Object) str65);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode67 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int68 = scriptNode27.addFunction(functionNode67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(comment44);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test05938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05938");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scriptNode0.new NodeIterator();
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str13 = scope12.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        scriptNode20.setEncodedSourceEnd(18);
        java.lang.String str24 = comment19.toStringTree(scriptNode20);
        com.google.javascript.rhino.head.Node node26 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode20, node26);
        scriptNode20.setSourceName("hi!");
        scope12.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode20);
        java.lang.Object obj31 = scriptNode20.getCompilerData();
        int int32 = scriptNode20.getPosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str34 = scriptNode33.getEncodedSource();
        com.google.javascript.rhino.head.Node node35 = scriptNode33.getLastSibling();
        scriptNode33.setEncodedSourceEnd(136);
        boolean boolean38 = scriptNode33.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int43 = scriptNode40.getIntProp(23, (int) (short) 1);
        boolean boolean44 = scriptNode40.hasSideEffects();
        int int45 = scriptNode40.depth();
        int int46 = scriptNode40.getFunctionCount();
        int int47 = scriptNode40.getEncodedSourceEnd();
        java.lang.String str49 = scriptNode40.toSource((-547629399));
        scriptNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        int int51 = scriptNode20.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = scriptNode20.getSymbols();
        scriptNode0.setSymbols(symbolList52);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Scope" + "'", str13, "Scope");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{\n}\n" + "'", str49, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(symbolList52);
    }

    @Test
    public void test05939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05939");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str24 = scriptNode23.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType29, "Scope");
        scriptNode26.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        scriptNode26.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str35 = scriptNode26.getSourceName();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode26, 26);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node22, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap39 = null;
        scriptNode26.setSymbolTable(strMap39);
        java.lang.Object obj42 = scriptNode26.getProp((int) (short) 0);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList43 = scriptNode26.getChildScopes();
        scriptNode26.setEncodedSourceBounds((-53), 5);
        java.lang.Object obj47 = scriptNode26.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = scriptNode26.getTop();
        java.lang.Object obj50 = scriptNode48.getProp(0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope51 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode48);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(scopeList43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(scriptNode48);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test05940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05940");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str13 = scriptNode1.getSourceName();
        int int14 = scriptNode1.getEncodedSourceStart();
        scriptNode1.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode17.getSymbols();
        java.lang.String str25 = scriptNode17.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        com.google.javascript.rhino.head.Node node28 = scriptNode26.getLastSibling();
        scriptNode26.setEncodedSource("Scope");
        scriptNode26.setEndLineno(100);
        scriptNode17.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope35.putProp(25, (java.lang.Object) 100L);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.Node node40 = scriptNode17.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode54.getEncodedSource();
        int int56 = scriptNode54.getBaseLineno();
        java.lang.String str57 = scriptNode54.getNextTempName();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        scriptNode54.setEncodedSource("                        ");
        int int61 = scriptNode54.getLineno();
        scriptNode17.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode54);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str71 = scriptNode70.getEncodedSource();
        scriptNode70.setEncodedSourceEnd(18);
        java.lang.String str74 = comment69.toStringTree(scriptNode70);
        com.google.javascript.rhino.head.Node node76 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode70, node76);
        scriptNode70.setSourceName("hi!");
        com.google.javascript.rhino.head.Node node80 = scriptNode70.getLastChild();
        int int81 = scriptNode70.getEndLineno();
        java.lang.String str82 = scriptNode70.toSource();
        java.lang.String str83 = scriptNode1.toStringTree(scriptNode70);
        com.google.javascript.rhino.head.Node node84 = scriptNode70.getFirstChild();
        java.lang.String str85 = scriptNode70.getEncodedSource();
        java.lang.Class<?> wildcardClass86 = scriptNode70.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str25, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "$0" + "'", str57, "$0");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{\n}\n" + "'", str82, "{\n}\n");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test05941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05941");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        scriptNode1.target = scriptNode3;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode((-1));
        scriptNode9.setLineno((int) (byte) 1);
        scriptNode1.setCompilerData((java.lang.Object) (byte) 1);
        com.google.javascript.rhino.head.ast.Comment comment13 = scriptNode1.getJsDocNode();
        java.lang.String str15 = scriptNode1.toSource((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = scriptNode1.getParamOrVarName((-1666765792));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(comment13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                                                {\n                                                                }\n" + "'", str15, "                                                                {\n                                                                }\n");
    }

    @Test
    public void test05942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05942");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        boolean boolean22 = nodeIterator17.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node23 = nodeIterator17.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05943");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 0, 21, commentType2, "");
        comment4.setRelative(3);
        java.lang.String str8 = comment4.toSource((-25));
        // The following exception was thrown during execution in test generation
        try {
            comment4.setDouble((double) (-1666765792));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Comment cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test05944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05944");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        scriptNode16.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.Node node25 = scriptNode16.setType((int) (byte) 10);
        scriptNode16.clearParentScope();
        boolean boolean27 = scriptNode16.hasChildren();
        int int28 = scriptNode16.depth();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType32, "Scope");
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment34);
        scriptNode29.setEncodedSourceStart((int) (byte) 100);
        int int40 = scriptNode29.getIntProp(6, 2);
        java.lang.String str42 = scriptNode29.toSource((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstNode astNode43 = scriptNode29.getParent();
        scriptNode16.target = scriptNode29;
        scriptNode29.setPosition(53);
        java.lang.String str47 = scriptNode29.getSourceName();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                    {\n                    }\n" + "'", str42, "                    {\n                    }\n");
        org.junit.Assert.assertNotNull(astNode43);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test05945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05945");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        java.lang.String str45 = scriptNode31.getEncodedSource();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType50, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        scriptNode53.setEncodedSourceEnd(18);
        java.lang.String str57 = comment52.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.Node node59 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode53, node59);
        scriptNode53.setEncodedSourceStart(25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType66, "Scope");
        scriptNode63.setParent((com.google.javascript.rhino.head.ast.AstNode) comment68);
        scriptNode63.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str72 = scriptNode63.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope74.putProp(25, (java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scriptNode63, (com.google.javascript.rhino.head.Node) scope74, (int) (byte) 10);
        java.lang.String str80 = scriptNode53.getNextTempName();
        java.lang.String str81 = scriptNode31.toStringTree(scriptNode53);
        com.google.javascript.rhino.head.Node node82 = scriptNode53.getLastChild();
        com.google.javascript.rhino.head.Node node83 = scriptNode53.target;
        java.lang.Class<?> wildcardClass84 = scriptNode53.getClass();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "$0" + "'", str80, "$0");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test05946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05946");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = node16.new NodeIterator();
        boolean boolean18 = nodeIterator17.hasNext();
        com.google.javascript.rhino.head.Node node19 = nodeIterator17.next();
        boolean boolean20 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        boolean boolean22 = nodeIterator17.hasNext();
        nodeIterator17.remove();
        nodeIterator17.remove();
        nodeIterator17.remove();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05947");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        java.lang.String str8 = scriptNode0.toSource(26);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = scriptNode0.new NodeIterator();
        java.lang.String str10 = scriptNode0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str36 = scriptNode35.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode38, 26);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node34, (com.google.javascript.rhino.head.Node) scriptNode35, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope52 = scriptNode38.getDefiningScope("");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        scriptNode38.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        scriptNode0.putProp(0, (java.lang.Object) scriptNode38);
        com.google.javascript.rhino.head.ast.Scope scope58 = scriptNode38.getDefiningScope("                      ");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                    {\n                                                    }\n" + "'", str8, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "$0" + "'", str10, "$0");
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(scope58);
    }

    @Test
    public void test05948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05948");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope6 = scope4.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node7 = scope4.getNext();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope4.getParentScope();
        scriptNode0.addChildScope(scope4);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = scriptNode0.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scope6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(scope8);
    }

    @Test
    public void test05949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05949");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scope1.iterator();
        scope1.setBounds((int) '#', (int) (byte) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType20, "Scope");
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList24 = scriptNode17.getSymbols();
        java.lang.String str25 = scriptNode17.debugPrint();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        com.google.javascript.rhino.head.Node node28 = scriptNode26.getLastSibling();
        scriptNode26.setEncodedSource("Scope");
        scriptNode26.setEndLineno(100);
        scriptNode17.setCompilerData((java.lang.Object) 100);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope35.putProp(25, (java.lang.Object) 100L);
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) scope35);
        com.google.javascript.rhino.head.ast.Scope scope42 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope44 = scope42.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node45 = scope42.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scope42.setJsDocNode(comment51);
        java.lang.String str55 = comment51.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node56 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment51);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator57 = node56.new NodeIterator();
        com.google.javascript.rhino.head.Node node58 = nodeIterator57.next();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType62, "Scope");
        scriptNode59.setParent((com.google.javascript.rhino.head.ast.AstNode) comment64);
        scriptNode59.setEncodedSourceStart((int) (byte) 100);
        int int70 = scriptNode59.getIntProp(6, 2);
        int int71 = scriptNode59.getRegexpCount();
        java.lang.String str72 = scriptNode59.getSourceName();
        java.lang.String str73 = node58.toStringTree(scriptNode59);
        scriptNode59.flattenSymbolTable(true);
        scope35.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode59);
        scope1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode59);
        int int78 = scriptNode59.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = scriptNode59.getFunctionNode((-1379055074));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertNotNull(symbolList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str25, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(scope44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "                    Scope" + "'", str55, "                    Scope");
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    }

    @Test
    public void test05950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05950");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int15 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str17 = scriptNode16.getEncodedSource();
        scriptNode16.setEncodedSourceEnd(18);
        scriptNode14.target = scriptNode16;
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode16);
        int int22 = scriptNode16.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        int int39 = scriptNode37.getBaseLineno();
        java.lang.String str40 = scriptNode37.getNextTempName();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        scriptNode42.setEndLineno(18);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(1, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode42, (int) (byte) -1);
        scriptNode16.target = scriptNode42;
        int int59 = scriptNode16.getLineno();
        scriptNode16.setPosition((int) (short) 0);
        com.google.javascript.rhino.head.Node node62 = scriptNode16.getLastChild();
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(node62);
    }

    @Test
    public void test05951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05951");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        int int11 = scriptNode0.getLength();
        java.lang.String str12 = scriptNode0.getNextTempName();
        java.lang.String str13 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.ast.Symbol symbol14 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.putSymbol(symbol14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05952");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int10 = scriptNode1.getEncodedSourceStart();
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(11, (com.google.javascript.rhino.head.Node) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList14 = scriptNode1.getSymbols();
        com.google.javascript.rhino.head.ast.Scope scope17 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol19 = scope17.getSymbol("$0");
        int int20 = scope17.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        int int32 = scriptNode21.getIntProp(6, 2);
        int int33 = scriptNode21.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str35 = scriptNode34.getEncodedSource();
        int int36 = scriptNode34.getBaseLineno();
        java.lang.String str37 = scriptNode34.getNextTempName();
        scriptNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.lang.String str39 = scriptNode34.debugPrint();
        scope17.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        scriptNode34.setEncodedSourceBounds(9, 2);
        java.lang.String str44 = scriptNode34.toString();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator45 = scriptNode34.spliterator();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode46 = scriptNode34.getEnclosingFunction();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode34);
        scriptNode34.setBaseLineno(102);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(symbolList14);
        org.junit.Assert.assertNull(symbol19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 129 + "'", int20 == 129);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "$0" + "'", str37, "$0");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str39, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "136" + "'", str44, "136");
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertNull(functionNode46);
    }

    @Test
    public void test05953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05953");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope4 = scope2.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node5 = scope2.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scope2.setJsDocNode(comment11);
        java.lang.String str15 = comment11.toSource((int) (short) 10);
        com.google.javascript.rhino.head.Node node16 = new com.google.javascript.rhino.head.Node((int) '4', (com.google.javascript.rhino.head.Node) comment11);
        java.lang.Object obj18 = comment11.getProp((int) (short) -1);
        java.lang.String str20 = comment11.makeIndent((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType24, "Scope");
        scriptNode21.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        scriptNode21.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = scriptNode21.getTop();
        scriptNode30.setPosition(6);
        comment11.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        int int34 = comment11.getLength();
        java.lang.String str35 = comment11.toString();
        int int36 = comment11.getLength();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                    Scope" + "'", str15, "                    Scope");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(scriptNode30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 6 + "'", int34 == 6);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "161" + "'", str35, "161");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 6 + "'", int36 == 6);
    }

    @Test
    public void test05954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05954");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(135381063, "                                                  Scope");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05955");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        int int43 = scriptNode2.getFunctionCount();
        int int44 = scriptNode2.getPosition();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope48 = scope46.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node49 = scope46.target;
        scope46.setPosition(2);
        java.lang.String str52 = scope46.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = scope46.getSymbolTable();
        boolean boolean54 = scope46.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType58, "Scope");
        scriptNode55.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        scriptNode55.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = scriptNode55.getTop();
        scope46.target = scriptNode55;
        com.google.javascript.rhino.head.Node node66 = scriptNode55.target;
        scriptNode2.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor68 = scriptNode55.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor68.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-53) + "'", int44 == (-53));
        org.junit.Assert.assertNull(scope48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(scriptNode64);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNotNull(nodeItor68);
    }

    @Test
    public void test05956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05956");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol4 = scope2.getSymbol("$0");
        com.google.javascript.rhino.head.ast.Scope scope5 = scope2.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = scope5.hasSideEffects();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertNull(scope5);
    }

    @Test
    public void test05957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05957");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(4, 18);
        com.google.javascript.rhino.head.ast.AstNode astNode3 = scope2.getParent();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = astNode3.getIntProp((int) (byte) 100, (-674152164));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astNode3);
    }

    @Test
    public void test05958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05958");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        int int2 = scriptNode0.getBaseLineno();
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType7, "Scope");
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        java.lang.String str12 = scriptNode4.toSource(26);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str14 = scriptNode4.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol16 = scriptNode4.getSymbol("/");
        int int17 = scriptNode4.getEncodedSourceEnd();
        boolean boolean18 = scriptNode4.hasSideEffects();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = scriptNode4.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                    {\n                                                    }\n" + "'", str12, "                                                    {\n                                                    }\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNull(symbol16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05959");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(845940331);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 845940331");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05960");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        com.google.javascript.rhino.head.ast.Comment comment2 = scriptNode1.getJsDocNode();
        java.lang.Object obj4 = scriptNode1.getProp(136);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode5 = scriptNode1.getEnclosingFunction();
        org.junit.Assert.assertNull(comment2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(functionNode5);
    }

    @Test
    public void test05961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05961");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int2 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str4 = scriptNode3.getEncodedSource();
        scriptNode3.setEncodedSourceEnd(18);
        scriptNode1.target = scriptNode3;
        int int8 = scriptNode3.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList9 = scriptNode3.getStatements();
        java.lang.String str11 = scriptNode3.toSource(100);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(astNodeList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n" + "'", str11, "                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
    }

    @Test
    public void test05962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05962");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType6, "Scope");
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment8);
        scriptNode3.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode3.getTop();
        scriptNode12.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int17 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode18.getEncodedSource();
        scriptNode18.setEncodedSourceEnd(18);
        scriptNode16.target = scriptNode18;
        com.google.javascript.rhino.head.Node node23 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        java.lang.String str24 = node23.getJsDoc();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope28 = scope26.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node29 = scope26.getLastSibling();
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node(23, node23, (com.google.javascript.rhino.head.Node) scope26, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType35, "Scope");
        scriptNode32.setParent((com.google.javascript.rhino.head.ast.AstNode) comment37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = scriptNode32.getSymbols();
        java.lang.String str40 = scriptNode32.debugPrint();
        scriptNode32.removeProp((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        scope44.putIntProp(17, 25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = null;
        scope44.setSymbolTable(strMap53);
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scope26, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope44);
        int int56 = scriptNode32.getLineno();
        java.lang.String str58 = scriptNode32.makeIndent(136);
        java.lang.Object obj60 = scriptNode32.getProp(754207379);
        com.google.javascript.rhino.head.ast.AstNode astNode61 = scriptNode32.getParent();
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(scope28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(symbolList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str40, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                                                                                                                                                                                                                                                                " + "'", str58, "                                                                                                                                                                                                                                                                                ");
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(astNode61);
    }

    @Test
    public void test05963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05963");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        java.lang.String str43 = scope1.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope62 = scope60.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node63 = scope60.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType67, "Scope");
        scriptNode64.setParent((com.google.javascript.rhino.head.ast.AstNode) comment69);
        scope60.setJsDocNode(comment69);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType75, "Scope");
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) comment77);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList79 = scriptNode72.getSymbols();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scope60, (com.google.javascript.rhino.head.Node) scriptNode72);
        com.google.javascript.rhino.head.Node node82 = scriptNode46.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node84 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode46, node84, 13);
        java.lang.String str87 = scriptNode46.toSource();
        java.lang.String str88 = scriptNode46.debugPrint();
        scope1.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        scope1.setRelative((-51));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(scope62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(symbolList79);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{\n}\n" + "'", str87, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "-1\t  ASSIGN_DIV -53 1\n" + "'", str88, "-1\t  ASSIGN_DIV -53 1\n");
    }

    @Test
    public void test05964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05964");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        java.lang.String str13 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope30 = scope28.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node31 = scope28.target;
        scope28.setPosition(2);
        scope28.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node36 = scope28.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode37.getEncodedSource();
        scriptNode37.setEncodedSourceEnd(18);
        java.lang.String str42 = scriptNode37.makeIndent((int) '#');
        scope28.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope15, (com.google.javascript.rhino.head.ast.Scope) scriptNode37);
        com.google.javascript.rhino.head.ast.Scope scope45 = scope15.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType49, "Scope");
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment51);
        scriptNode46.setEncodedSourceStart((int) (byte) 100);
        int int57 = scriptNode46.getIntProp(6, 2);
        int int58 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode59.getEncodedSource();
        int int61 = scriptNode59.getBaseLineno();
        java.lang.String str62 = scriptNode59.getNextTempName();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        int int64 = scriptNode46.getEndLineno();
        scope15.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode46);
        scriptNode0.addChildScope(scope15);
        scope15.setPosition((-53));
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList69 = scope15.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Scope scope72 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope74 = scope72.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node75 = scope72.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = null;
        scope72.setTop(scriptNode76);
        scriptNode70.target = scope72;
        java.lang.String str80 = scriptNode70.toSource((int) 'a');
        java.lang.Object obj82 = scriptNode70.getProp(22);
        com.google.javascript.rhino.head.Node node84 = com.google.javascript.rhino.head.Node.newString("                                      Scope");
        java.lang.String str85 = node84.getString();
        scriptNode70.addChildToFront(node84);
        int int87 = scriptNode70.getEncodedSourceEnd();
        scope15.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode70);
        com.google.javascript.rhino.head.Node node89 = scope15.getLastChild();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                      " + "'", str42, "                                                                      ");
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "$0" + "'", str62, "$0");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(astNodeList69);
        org.junit.Assert.assertNull(scope74);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str80, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "                                      Scope" + "'", str85, "                                      Scope");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(node89);
    }

    @Test
    public void test05965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05965");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        com.google.javascript.rhino.head.Node node27 = scope11.getNext();
        java.lang.String str28 = scope11.debugPrint();
        scope11.setLength((-1072816741));
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "2\tBLOCK 2 1\n" + "'", str28, "2\tBLOCK 2 1\n");
    }

    @Test
    public void test05966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05966");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.Node node21 = scriptNode10.target;
        int int22 = scriptNode10.getPosition();
        scriptNode10.removeChildren();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList24 = scriptNode10.getStatements();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment(0, 0, commentType27, "41");
        java.lang.String str30 = comment29.getValue();
        java.lang.String str32 = comment29.toSource(129);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = scriptNode10.getIndexForNameNode((com.google.javascript.rhino.head.Node) comment29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-53) + "'", int22 == (-53));
        org.junit.Assert.assertNotNull(astNodeList24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "41" + "'", str30, "41");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                                                                                                                                                                                  41" + "'", str32, "                                                                                                                                                                                                                                                                  41");
    }

    @Test
    public void test05967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05967");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = scriptNode1.getTop();
        scriptNode10.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = scriptNode14.getTop();
        scriptNode23.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode29.getEncodedSource();
        scriptNode29.setEncodedSourceEnd(18);
        scriptNode27.target = scriptNode29;
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scriptNode36.setEncodedSourceStart((int) (byte) 100);
        int int47 = scriptNode36.getIntProp(6, 2);
        int int48 = scriptNode36.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope52 = scope50.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node53 = scope50.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType57, "Scope");
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment59);
        scope50.setJsDocNode(comment59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType65, "Scope");
        scriptNode62.setParent((com.google.javascript.rhino.head.ast.AstNode) comment67);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = scriptNode62.getSymbols();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode36, (com.google.javascript.rhino.head.Node) scope50, (com.google.javascript.rhino.head.Node) scriptNode62);
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        com.google.javascript.rhino.head.ast.Scope scope73 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = scope73.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node76 = scope73.target;
        scope73.setPosition(2);
        scope73.setLength((int) (byte) 1);
        com.google.javascript.rhino.head.Node node81 = new com.google.javascript.rhino.head.Node((int) (short) 10, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope73);
        scriptNode10.setLineno((-1));
        scriptNode10.setEncodedSourceStart((int) ' ');
        com.google.javascript.rhino.head.ast.Scope scope87 = scriptNode10.getDefiningScope("");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = scope87.hasChildren();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(scope52);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertNull(scope75);
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNull(scope87);
    }

    @Test
    public void test05968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05968");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str13 = scriptNode1.getSourceName();
        int int14 = scriptNode1.getEncodedSourceStart();
        scriptNode1.setEncodedSourceStart((int) (byte) 0);
        com.google.javascript.rhino.head.Node node17 = scriptNode1.getFirstChild();
        java.lang.Object obj18 = scriptNode1.getCompilerData();
        com.google.javascript.rhino.head.Node node19 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = scriptNode1.getIndexForNameNode(node19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "129");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "129");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "129");
    }

    @Test
    public void test05969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05969");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str15 = scriptNode13.toSource(18);
        java.lang.Object obj16 = scriptNode13.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType21, "Scope");
        scriptNode18.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        scriptNode18.setEncodedSourceStart((int) (byte) 100);
        int int29 = scriptNode18.getIntProp(6, 2);
        int int30 = scriptNode18.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList51 = scriptNode44.getSymbols();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode44.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node55 = scriptNode44.target;
        scriptNode13.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        int int57 = scriptNode44.getLineno();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode44);
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment(9, 9, commentType61, "{\n}\n");
        scriptNode44.setJsDocNode(comment63);
        int int65 = scriptNode44.getBaseLineno();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "                                    {\n                                    }\n" + "'", str15, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(symbolList51);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test05970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05970");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = scriptNode2.getTop();
        scriptNode11.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int16 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str18 = scriptNode17.getEncodedSource();
        scriptNode17.setEncodedSourceEnd(18);
        scriptNode15.target = scriptNode17;
        com.google.javascript.rhino.head.Node node22 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode17);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType25, "Scope");
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) comment27);
        int int29 = scriptNode11.depth();
        int int30 = scriptNode11.getEndLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList31 = scriptNode11.getStatements();
        int int32 = scriptNode11.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        scriptNode35.setParent((com.google.javascript.rhino.head.ast.AstNode) comment40);
        scriptNode35.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = scriptNode35.getTop();
        scriptNode44.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int49 = scriptNode48.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode50.getEncodedSource();
        scriptNode50.setEncodedSourceEnd(18);
        scriptNode48.target = scriptNode50;
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scriptNode50);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList56 = null;
        scriptNode50.setSymbols(symbolList56);
        java.lang.String str58 = scriptNode50.getJsDoc();
        java.lang.String str59 = scriptNode50.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str61 = scriptNode60.getEncodedSource();
        int int62 = scriptNode60.getBaseLineno();
        java.lang.Object obj63 = scriptNode60.getCompilerData();
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scriptNode60, (-51));
        int int66 = scriptNode50.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope67 = scriptNode50.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode11.setDefault((com.google.javascript.rhino.head.Node) scope67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(astNodeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(scriptNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scope67);
    }

    @Test
    public void test05971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05971");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, (int) (short) 100, commentType2, "Scope");
        comment4.putIntProp(14, 4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor8 = comment4.iterator();
        org.junit.Assert.assertNotNull(nodeItor8);
    }

    @Test
    public void test05972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05972");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int5 = scriptNode2.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope7 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope7.setPosition(100);
        com.google.javascript.rhino.head.Node node10 = scope7.getLastSibling();
        node10.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = node10.spliterator();
        scriptNode2.setCompilerData((java.lang.Object) node10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType19, "Scope");
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment21);
        scriptNode16.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = scriptNode16.getTop();
        scriptNode25.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int30 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode31.getEncodedSource();
        scriptNode31.setEncodedSourceEnd(18);
        scriptNode29.target = scriptNode31;
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode31);
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) comment41);
        java.lang.String str43 = scriptNode2.toStringTree(scriptNode25);
        int int44 = scriptNode25.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType48, "Scope");
        scriptNode45.setParent((com.google.javascript.rhino.head.ast.AstNode) comment50);
        scriptNode45.setEncodedSourceStart((int) (byte) 100);
        int int56 = scriptNode45.getIntProp(6, 2);
        scriptNode45.setEndLineno(18);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode25, (com.google.javascript.rhino.head.Node) scriptNode45);
        int int60 = scriptNode45.getEncodedSourceStart();
        boolean boolean61 = scriptNode45.hasConsistentReturnUsage();
        int int62 = scriptNode45.getLineno();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList63 = scriptNode45.getStatements();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope64 = scriptNode45.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertNotNull(scriptNode25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(astNodeList63);
    }

    @Test
    public void test05973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05973");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) scriptNode1);
        scriptNode1.setRelative(8);
        scriptNode1.setBaseLineno(6);
        scriptNode1.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.labelId(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05974");
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10, (int) (byte) -1);
        com.google.javascript.rhino.head.Node node5 = scope4.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType9, "Scope");
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) comment11);
        scriptNode6.setEncodedSourceStart((int) (byte) 100);
        int int17 = scriptNode6.getIntProp(6, 2);
        int int18 = scriptNode6.getRegexpCount();
        scriptNode6.setEncodedSource("0\tBLOCK 0 1\n");
        scriptNode6.setLineno((int) '#');
        int int23 = scriptNode6.getLineno();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = scriptNode6.getEnclosingFunction();
        int int25 = scriptNode6.getFunctionCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int28 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope30 = scriptNode27.getDefiningScope("51\t    SCRIPT 52 1\n");
        scriptNode27.setSourceName("");
        com.google.javascript.rhino.head.ast.AstNode astNode33 = scriptNode27.getParent();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode27.getChildScopes();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(98666588, (com.google.javascript.rhino.head.Node) scope4, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scriptNode27, (-243114478));
        com.google.javascript.rhino.head.ast.Symbol symbol38 = scriptNode6.getSymbol("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node((-51), (com.google.javascript.rhino.head.Node) scriptNode6);
        scriptNode6.setPosition(966852023);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 35 + "'", int23 == 35);
        org.junit.Assert.assertNull(functionNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(scope30);
        org.junit.Assert.assertNull(astNode33);
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertNull(symbol38);
    }

    @Test
    public void test05975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05975");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList28 = scriptNode1.getFunctions();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode1.getSymbolTable();
        scriptNode1.putIntProp(0, 21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int35 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope37 = scriptNode34.getDefiningScope("51\t    SCRIPT 52 1\n");
        java.lang.String str38 = scriptNode34.shortName();
        com.google.javascript.rhino.head.ast.Scope scope40 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope42 = scope40.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node43 = scope40.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType47, "Scope");
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        scope40.setJsDocNode(comment49);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor52 = scope40.iterator();
        boolean boolean53 = scope40.hasSideEffects();
        com.google.javascript.rhino.head.Node node55 = new com.google.javascript.rhino.head.Node(53, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode34, (com.google.javascript.rhino.head.Node) scope40, 8);
        int int56 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode(16);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        int int60 = scriptNode58.getBaseLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = scriptNode58.getParamOrVarName(98666588);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(functionNodeList28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ScriptNode" + "'", str38, "ScriptNode");
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(nodeItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test05976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05976");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str9 = scriptNode0.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = scriptNode0.new NodeIterator();
        java.lang.String str11 = scriptNode0.shortName();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray12 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList13 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList13, symbolArray12);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList13);
        scriptNode0.flattenSymbolTable(false);
        scriptNode0.putIntProp(4, 97);
        com.google.javascript.rhino.head.ast.Scope scope22 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str23 = scope22.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str31 = scriptNode30.getEncodedSource();
        scriptNode30.setEncodedSourceEnd(18);
        java.lang.String str34 = comment29.toStringTree(scriptNode30);
        com.google.javascript.rhino.head.Node node36 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode30, node36);
        scriptNode30.setSourceName("hi!");
        scope22.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode30);
        java.lang.Object obj41 = scriptNode30.getCompilerData();
        int int42 = scriptNode30.getEndLineno();
        java.lang.Object obj44 = scriptNode30.getProp(15);
        int int47 = scriptNode30.getIntProp(6, 18);
        int int50 = scriptNode30.getIntProp(22, 24);
        int int51 = scriptNode0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap52 = null;
        scriptNode0.setSymbolTable(strMap52);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor54 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ScriptNode" + "'", str11, "ScriptNode");
        org.junit.Assert.assertNotNull(symbolArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Scope" + "'", str23, "Scope");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 18 + "'", int47 == 18);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 24 + "'", int50 == 24);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-577882917) + "'", int51 == (-577882917));
    }

    @Test
    public void test05977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05977");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setPosition((int) (byte) 0);
        scriptNode28.setEncodedSourceStart((int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType44, "Scope");
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        scriptNode41.setEncodedSourceStart((int) (byte) 100);
        int int52 = scriptNode41.getIntProp(6, 2);
        int int53 = scriptNode41.getParamCount();
        java.lang.String str54 = scriptNode41.debugPrint();
        int int57 = scriptNode41.getIntProp(17, 10);
        scriptNode28.setTop(scriptNode41);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode28.setEncodedSource("                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        scriptNode28.setEncodedSourceStart(7);
        int int64 = scriptNode28.depth();
        scriptNode28.putIntProp((int) (short) 0, (-1379055074));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1\t  SCRIPT -53 1\n" + "'", str54, "-1\t  SCRIPT -53 1\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test05978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05978");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node2 = scriptNode0.getLastSibling();
        scriptNode0.setEncodedSource("Scope");
        scriptNode0.setEndLineno(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType10, "Scope");
        scriptNode7.setParent((com.google.javascript.rhino.head.ast.AstNode) comment12);
        scriptNode7.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str16 = scriptNode7.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = scriptNode7.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scriptNode19.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = scriptNode19.getTop();
        java.lang.String str29 = scriptNode28.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType33, "Scope");
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        scriptNode30.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = scriptNode30.getTop();
        java.lang.String str40 = scriptNode39.shortName();
        scriptNode28.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode39);
        com.google.javascript.rhino.head.ast.Comment comment42 = null;
        scriptNode39.setJsDocNode(comment42);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope(20);
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(100, (com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scope45, 10);
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope(15, (int) (short) -1);
        scriptNode7.replaceChildAfter((com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scope50);
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode7);
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope56 = scope54.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node57 = scope54.target;
        scope54.setPosition(2);
        java.lang.String str60 = scope54.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scope54.getSymbolTable();
        boolean boolean62 = scope54.hasChildren();
        com.google.javascript.rhino.head.Node node63 = scope54.getNext();
        boolean boolean64 = scope54.hasSideEffects();
        java.lang.String str65 = scope54.toSource();
        scope54.setRelative(22);
        scope54.clearParentScope();
        scope54.setBounds(1558149202, (-547629399));
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scope54);
        int int73 = scriptNode0.getFunctionCount();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(scriptNode28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ScriptNode" + "'", str29, "ScriptNode");
        org.junit.Assert.assertNotNull(scriptNode39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ScriptNode" + "'", str40, "ScriptNode");
        org.junit.Assert.assertNull(scope56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{\n}\n" + "'", str60, "{\n}\n");
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{\n}\n" + "'", str65, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test05979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05979");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scope1.setJsDocNode(comment10);
        java.lang.String str14 = comment10.toSource((int) (byte) 100);
        com.google.javascript.rhino.head.Token.CommentType commentType15 = comment10.getCommentType();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = comment10.getEnclosingFunction();
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                                                                                                                                                                                        Scope" + "'", str14, "                                                                                                                                                                                                        Scope");
        org.junit.Assert.assertNull(commentType15);
        org.junit.Assert.assertNull(functionNode16);
    }

    @Test
    public void test05980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05980");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 874571570);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test05981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05981");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        int int7 = scope1.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scope1.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope11 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope13 = scope11.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node14 = scope11.target;
        scope11.setPosition(2);
        int int17 = scope11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope18 = scope11.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scope11.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode20.getEncodedSource();
        int int22 = scriptNode20.getBaseLineno();
        java.lang.Object obj23 = scriptNode20.getCompilerData();
        scriptNode20.flattenSymbolTable(false);
        scope1.addChildAfter((com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) scriptNode20);
        int int27 = scriptNode20.getLength();
        scriptNode20.setEncodedSourceEnd((int) (byte) 0);
        com.google.javascript.rhino.head.ast.Symbol symbol31 = scriptNode20.getSymbol(">>");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str33 = scriptNode32.getEncodedSource();
        scriptNode32.setEncodedSourceEnd(18);
        java.lang.Object obj36 = scriptNode32.getCompilerData();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap37 = scriptNode32.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType41, "Scope");
        scriptNode38.setParent((com.google.javascript.rhino.head.ast.AstNode) comment43);
        scriptNode38.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str47 = scriptNode38.getSourceName();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator48 = scriptNode38.new NodeIterator();
        java.lang.String str49 = scriptNode38.shortName();
        int int50 = scriptNode38.getAbsolutePosition();
        scriptNode20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode38);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor52 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode38.visit(nodeVisitor52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scope8);
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(symbol31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ScriptNode" + "'", str49, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test05982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05982");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType17, "Scope");
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment19);
        scriptNode14.setEncodedSourceStart((int) (byte) 100);
        int int25 = scriptNode14.getIntProp(6, 2);
        int int26 = scriptNode14.getParamCount();
        scriptNode1.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        scriptNode14.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str30 = scriptNode14.getSourceName();
        int int31 = scriptNode14.getType();
        com.google.javascript.rhino.head.ast.Scope scope33 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str34 = scope33.shortName();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType38, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str42 = scriptNode41.getEncodedSource();
        scriptNode41.setEncodedSourceEnd(18);
        java.lang.String str45 = comment40.toStringTree(scriptNode41);
        com.google.javascript.rhino.head.Node node47 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode41, node47);
        scriptNode41.setSourceName("hi!");
        scope33.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode41);
        java.lang.String str52 = scope33.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        java.lang.String str56 = scope54.makeIndent(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str69 = scriptNode60.getSourceName();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode60, 26);
        scriptNode58.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        java.lang.String str73 = scriptNode58.getNextTempName();
        scope54.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode58);
        boolean boolean75 = scriptNode58.hasChildren();
        scriptNode58.setBaseLineno(4);
        java.lang.String str78 = scriptNode58.getNextTempName();
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scope33, (com.google.javascript.rhino.head.Node) scriptNode58);
        com.google.javascript.rhino.head.Node node81 = com.google.javascript.rhino.head.Node.newString("-1\t  SCRIPT 0 1\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node82 = scope33.getChildBefore(node81);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 136 + "'", int31 == 136);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Scope" + "'", str34, "Scope");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "0\tBLOCK 0 1\n-1\tSCRIPT -1 1\n" + "'", str52, "0\tBLOCK 0 1\n-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "$1" + "'", str78, "$1");
        org.junit.Assert.assertNotNull(node81);
    }

    @Test
    public void test05983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05983");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource(18);
        com.google.javascript.rhino.head.Node node5 = com.google.javascript.rhino.head.Node.newString("-1\t  SCRIPT -53 1\n-1\t  SCRIPT -53 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode6.getEncodedSource();
        int int8 = scriptNode6.getBaseLineno();
        java.lang.Object obj9 = scriptNode6.getCompilerData();
        scriptNode6.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = null;
        scriptNode6.setSymbolTable(strMap12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str16 = scriptNode14.toSource(18);
        int int17 = scriptNode14.getEndLineno();
        com.google.javascript.rhino.head.ast.Comment comment18 = scriptNode14.getJsDocNode();
        int int19 = scriptNode14.getBaseLineno();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode14.getChildScopes();
        com.google.javascript.rhino.head.ast.Scope scope23 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol25 = scope23.getSymbol("$0");
        boolean boolean26 = scope23.hasSideEffects();
        boolean boolean27 = scope23.hasChildren();
        scriptNode14.addChildToFront((com.google.javascript.rhino.head.Node) scope23);
        scriptNode6.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope34 = scope32.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node35 = scope32.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType39, "Scope");
        scriptNode36.setParent((com.google.javascript.rhino.head.ast.AstNode) comment41);
        scope32.setJsDocNode(comment41);
        boolean boolean44 = scope32.hasChildren();
        com.google.javascript.rhino.head.ast.Scope scope46 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean47 = scope46.hasSideEffects();
        java.lang.String str48 = scope46.toSource();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope(9);
        boolean boolean51 = scope50.hasSideEffects();
        java.lang.String str52 = scope50.toSource();
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) scope46, (com.google.javascript.rhino.head.Node) scope50, 17);
        java.lang.String str56 = scope50.toSource(4);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(7, node5, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope50, 22);
        scriptNode0.addChildToBack(node5);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator60 = scriptNode0.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator60.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                    {\n                                    }\n" + "'", str2, "                                    {\n                                    }\n");
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                                    {\n                                    }\n" + "'", str16, "                                    {\n                                    }\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(comment18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertNull(symbol25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(scope34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{\n}\n" + "'", str48, "{\n}\n");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{\n}\n" + "'", str52, "{\n}\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "        {\n        }\n" + "'", str56, "        {\n        }\n");
    }

    @Test
    public void test05984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05984");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str14 = scriptNode1.toSource(21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType18, "Scope");
        scriptNode15.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        scriptNode15.setEncodedSourceStart((int) (byte) 100);
        scriptNode15.setEndLineno(5);
        java.lang.Object obj27 = scriptNode15.getProp((int) (short) 10);
        int int28 = scriptNode15.getParamCount();
        scriptNode1.setTop(scriptNode15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode(18);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap32 = null;
        scriptNode31.setSymbolTable(strMap32);
        scriptNode15.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.removeProp(22);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList37 = scriptNode31.getFunctions();
        scriptNode31.setEncodedSourceStart((-748421155));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                          {\n                                          }\n" + "'", str14, "                                          {\n                                          }\n");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(functionNodeList37);
    }

    @Test
    public void test05985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05985");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str1 = scriptNode0.getEncodedSource();
        scriptNode0.setEncodedSourceEnd(18);
        java.lang.Object obj4 = scriptNode0.getCompilerData();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap5 = scriptNode0.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope7 = scriptNode0.getDefiningScope("                                                    Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType11, "Scope");
        scriptNode8.setParent((com.google.javascript.rhino.head.ast.AstNode) comment13);
        scriptNode8.setEncodedSourceStart((int) (byte) 100);
        int int19 = scriptNode8.getIntProp(6, 2);
        int int20 = scriptNode8.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.String str24 = scriptNode21.getNextTempName();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        scriptNode28.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = scriptNode28.getTop();
        scriptNode37.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int42 = scriptNode41.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str44 = scriptNode43.getEncodedSource();
        scriptNode43.setEncodedSourceEnd(18);
        scriptNode41.target = scriptNode43;
        com.google.javascript.rhino.head.Node node48 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode37, (com.google.javascript.rhino.head.Node) scriptNode43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode49.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType55, "Scope");
        scriptNode52.setParent((com.google.javascript.rhino.head.ast.AstNode) comment57);
        scriptNode52.setEncodedSourceStart((int) (byte) 100);
        java.lang.String str61 = scriptNode52.getSourceName();
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode52, 26);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (byte) -1, node48, (com.google.javascript.rhino.head.Node) scriptNode49, (com.google.javascript.rhino.head.Node) scriptNode52);
        node64.setLineno(5);
        scriptNode8.setCompilerData((java.lang.Object) node64);
        scriptNode8.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = scriptNode8.getTop();
        scriptNode0.setCompilerData((java.lang.Object) scriptNode8);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node71 = scriptNode0.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "$0" + "'", str24, "$0");
        org.junit.Assert.assertNotNull(scriptNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(scriptNode69);
    }

    @Test
    public void test05986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05986");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.clearParentScope();
        scriptNode0.setEncodedSourceBounds(9, (int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = scriptNode13.getTop();
        scriptNode22.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int27 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str29 = scriptNode28.getEncodedSource();
        scriptNode28.setEncodedSourceEnd(18);
        scriptNode26.target = scriptNode28;
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node34 = scriptNode28.target;
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = scriptNode28.getSymbolTable();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node((-243114478), (com.google.javascript.rhino.head.Node) scriptNode28, 11);
        com.google.javascript.rhino.head.ast.Scope scope39 = new com.google.javascript.rhino.head.ast.Scope(0);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.replaceChildAfter(node37, (com.google.javascript.rhino.head.Node) scope39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(scriptNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test05987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05987");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int13 = scriptNode2.getIntProp(6, 2);
        int int14 = scriptNode2.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope16 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope18 = scope16.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node19 = scope16.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType23, "Scope");
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment25);
        scope16.setJsDocNode(comment25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType31, "Scope");
        scriptNode28.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = scriptNode28.getSymbols();
        com.google.javascript.rhino.head.Node node36 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope16, (com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.Node node38 = scriptNode2.setType((int) (short) 100);
        com.google.javascript.rhino.head.Node node40 = com.google.javascript.rhino.head.Node.newNumber(10.0d);
        com.google.javascript.rhino.head.Node node42 = new com.google.javascript.rhino.head.Node(129, (com.google.javascript.rhino.head.Node) scriptNode2, node40, 13);
        int int43 = scriptNode2.getLineno();
        java.lang.String str44 = scriptNode2.getEncodedSource();
        java.lang.String str45 = scriptNode2.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = scriptNode2.getTop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = scriptNode46.getRegexpString(100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(symbolList35);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "$0" + "'", str45, "$0");
        org.junit.Assert.assertNotNull(scriptNode46);
    }

    @Test
    public void test05988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05988");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope1.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = null;
        com.google.javascript.rhino.head.ast.Comment comment10 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType8, "Scope");
        scriptNode5.setParent((com.google.javascript.rhino.head.ast.AstNode) comment10);
        scriptNode5.setEncodedSourceStart((int) (byte) 100);
        int int16 = scriptNode5.getIntProp(6, 2);
        int int17 = scriptNode5.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope21 = scope19.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node22 = scope19.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType26, "Scope");
        scriptNode23.setParent((com.google.javascript.rhino.head.ast.AstNode) comment28);
        scope19.setJsDocNode(comment28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList38 = scriptNode31.getSymbols();
        com.google.javascript.rhino.head.Node node39 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) scriptNode31);
        scriptNode31.setPosition((int) (byte) 0);
        scope1.setTop(scriptNode31);
        int int43 = scriptNode31.getParamCount();
        boolean boolean44 = scriptNode31.hasConsistentReturnUsage();
        java.lang.String str45 = scriptNode31.getEncodedSource();
        boolean boolean46 = scriptNode31.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType51, "Scope");
        scriptNode48.setParent((com.google.javascript.rhino.head.ast.AstNode) comment53);
        scriptNode48.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = scriptNode48.getTop();
        scriptNode57.setPosition(6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int62 = scriptNode61.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str64 = scriptNode63.getEncodedSource();
        scriptNode63.setEncodedSourceEnd(18);
        scriptNode61.target = scriptNode63;
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) 0, (com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) scriptNode63);
        int int69 = scriptNode63.getLength();
        int int70 = scriptNode63.getEncodedSourceStart();
        scriptNode31.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode63);
        com.google.javascript.rhino.head.Token.CommentType commentType74 = null;
        com.google.javascript.rhino.head.ast.Comment comment76 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 35, commentType74, "    Scope");
        comment76.putIntProp((int) (byte) 0, 20);
        java.lang.String str80 = comment76.shortName();
        scriptNode31.setJsDocNode(comment76);
        java.lang.String str82 = comment76.getValue();
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(scope21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(symbolList38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Comment" + "'", str80, "Comment");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "    Scope" + "'", str82, "    Scope");
    }

    @Test
    public void test05989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05989");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode26.getEncodedSource();
        int int28 = scriptNode26.getBaseLineno();
        java.lang.String str29 = scriptNode26.getNextTempName();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        int int31 = scriptNode26.getType();
        java.lang.String str32 = scriptNode26.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode26.getSymbols();
        java.lang.String str34 = scriptNode0.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.Node node35 = scriptNode26.target;
        int int36 = scriptNode26.getRegexpCount();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 136 + "'", int31 == 136);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "51\t    SCRIPT 52 1\n" + "'", str32, "51\t    SCRIPT 52 1\n");
        org.junit.Assert.assertNotNull(symbolList33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test05990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05990");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str11 = scriptNode0.getEncodedSource();
        java.lang.String str12 = scriptNode0.toSource();
        int int13 = scriptNode0.getPosition();
        com.google.javascript.rhino.head.ast.Symbol symbol14 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.putSymbol(symbol14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{\n}\n" + "'", str12, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-53) + "'", int13 == (-53));
    }

    @Test
    public void test05991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05991");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 'a');
        java.lang.String str2 = node1.toString();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "40" + "'", str2, "40");
    }

    @Test
    public void test05992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05992");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(11);
        int int4 = scriptNode1.getIntProp(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.Scope scope6 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        scope6.setPosition(100);
        com.google.javascript.rhino.head.Node node9 = scope6.getLastSibling();
        node9.removeChildren();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = node9.spliterator();
        scriptNode1.setCompilerData((java.lang.Object) node9);
        java.lang.String str14 = scriptNode1.toSource(21);
        int int15 = scriptNode1.getEncodedSourceStart();
        boolean boolean16 = scriptNode1.hasChildren();
        scriptNode1.flattenSymbolTable(false);
        java.lang.String str19 = scriptNode1.toString();
        com.google.javascript.rhino.head.ast.Symbol symbol20 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.putSymbol(symbol20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                                          {\n                                          }\n" + "'", str14, "                                          {\n                                          }\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "136" + "'", str19, "136");
    }

    @Test
    public void test05993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05993");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-1805289491), "                                                                      ");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test05994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05994");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEndLineno(14);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump9 = scriptNode0.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05995");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 1034180762);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test05996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05996");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int9 = scriptNode0.getEncodedSourceStart();
        int int10 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str11 = scriptNode0.getEncodedSource();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList12 = scriptNode0.getSymbols();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode19.getEncodedSource();
        scriptNode19.setEncodedSourceEnd(18);
        java.lang.String str23 = comment18.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.Node node25 = com.google.javascript.rhino.head.Node.newString("{\n}\n");
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode19, node25);
        scriptNode19.setSourceName("hi!");
        scriptNode19.setSourceName("0\tSCRIPT 0 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scriptNode31.setEncodedSourceStart((int) (byte) 100);
        int int42 = scriptNode31.getIntProp(6, 2);
        int int43 = scriptNode31.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = null;
        scriptNode31.setSymbols(symbolList44);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        scriptNode31.setParentScope(scope48);
        int int50 = scriptNode31.getType();
        com.google.javascript.rhino.head.Node node51 = scriptNode31.getLastChild();
        java.lang.String str52 = scriptNode19.toStringTree(scriptNode31);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(symbolList12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 136 + "'", int50 == 136);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test05997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05997");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType4, "Scope");
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        scriptNode1.setEncodedSourceStart((int) (byte) 100);
        int int12 = scriptNode1.getIntProp(6, 2);
        int int13 = scriptNode1.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope17 = scope15.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node18 = scope15.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType22, "Scope");
        scriptNode19.setParent((com.google.javascript.rhino.head.ast.AstNode) comment24);
        scope15.setJsDocNode(comment24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType30, "Scope");
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment32);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scope15, (com.google.javascript.rhino.head.Node) scriptNode27);
        java.lang.String str36 = scriptNode27.getEncodedSource();
        int int37 = scriptNode27.getAbsolutePosition();
        scriptNode27.setPosition(17);
        scriptNode27.removeChildren();
        java.lang.String str41 = scriptNode27.debugPrint();
        java.lang.String str42 = scriptNode27.shortName();
        scriptNode27.setEncodedSourceBounds(12, (-389829193));
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope((int) (short) -1, 100);
        com.google.javascript.rhino.head.ast.Symbol symbol51 = scope49.getSymbol("$0");
        boolean boolean52 = scope49.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str55 = scriptNode53.toSource(18);
        scriptNode53.setCompilerData((java.lang.Object) 100L);
        com.google.javascript.rhino.head.Node node58 = scriptNode53.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scriptNode60.setEncodedSourceStart((int) (byte) 100);
        int int71 = scriptNode60.getIntProp(6, 2);
        int int72 = scriptNode60.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope76 = scope74.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node77 = scope74.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType81, "Scope");
        scriptNode78.setParent((com.google.javascript.rhino.head.ast.AstNode) comment83);
        scope74.setJsDocNode(comment83);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType89 = null;
        com.google.javascript.rhino.head.ast.Comment comment91 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType89, "Scope");
        scriptNode86.setParent((com.google.javascript.rhino.head.ast.AstNode) comment91);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList93 = scriptNode86.getSymbols();
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode60, (com.google.javascript.rhino.head.Node) scope74, (com.google.javascript.rhino.head.Node) scriptNode86);
        scriptNode86.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node97 = scriptNode86.target;
        scope49.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scriptNode86);
        scriptNode27.putProp(908331048, (java.lang.Object) scriptNode53);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "69\t  SCRIPT 17 1\n" + "'", str41, "69\t  SCRIPT 17 1\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ScriptNode" + "'", str42, "ScriptNode");
        org.junit.Assert.assertNull(symbol51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "                                    {\n                                    }\n" + "'", str55, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(symbolList93);
        org.junit.Assert.assertNull(node97);
    }

    @Test
    public void test05998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05998");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType3, "Scope");
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment5);
        scriptNode0.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode0.getIntProp(6, 2);
        int int12 = scriptNode0.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str14 = scriptNode13.getEncodedSource();
        int int15 = scriptNode13.getBaseLineno();
        java.lang.String str16 = scriptNode13.getNextTempName();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        int int18 = scriptNode0.getEndLineno();
        int int19 = scriptNode0.getEncodedSourceEnd();
        java.lang.String str21 = scriptNode0.toSource((int) (byte) -1);
        com.google.javascript.rhino.head.Node node22 = scriptNode0.getNext();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap23 = scriptNode0.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType27, "Scope");
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) comment29);
        scriptNode24.setEncodedSourceStart((int) (byte) 100);
        int int35 = scriptNode24.getIntProp(6, 2);
        int int36 = scriptNode24.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode37.toSource(18);
        java.lang.Object obj40 = scriptNode37.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType45, "Scope");
        scriptNode42.setParent((com.google.javascript.rhino.head.ast.AstNode) comment47);
        scriptNode42.setEncodedSourceStart((int) (byte) 100);
        int int53 = scriptNode42.getIntProp(6, 2);
        int int54 = scriptNode42.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope56 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope58 = scope56.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node59 = scope56.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType63, "Scope");
        scriptNode60.setParent((com.google.javascript.rhino.head.ast.AstNode) comment65);
        scope56.setJsDocNode(comment65);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType71, "Scope");
        scriptNode68.setParent((com.google.javascript.rhino.head.ast.AstNode) comment73);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = scriptNode68.getSymbols();
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) scope56, (com.google.javascript.rhino.head.Node) scriptNode68);
        scriptNode68.setPosition((int) (byte) 0);
        com.google.javascript.rhino.head.Node node79 = scriptNode68.target;
        scriptNode37.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode68);
        int int81 = scriptNode68.getLineno();
        scriptNode24.setCompilerData((java.lang.Object) scriptNode68);
        scriptNode68.setBaseLineno(0);
        java.lang.Object obj85 = scriptNode68.getCompilerData();
        int int86 = scriptNode68.getEncodedSourceStart();
        java.lang.String str87 = scriptNode0.toStringTree(scriptNode68);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode88 = scriptNode68.getEnclosingFunction();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "$0" + "'", str16, "$0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{\n{\n}\n}\n" + "'", str21, "{\n{\n}\n}\n");
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                                    {\n                                    }\n" + "'", str39, "                                    {\n                                    }\n");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(scope58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(symbolList75);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(functionNode88);
    }

    @Test
    public void test05999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05999");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope3 = scope1.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node4 = scope1.target;
        scope1.setPosition(2);
        java.lang.String str7 = scope1.toSource();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scope1.getSymbolTable();
        boolean boolean9 = scope1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType13, "Scope");
        scriptNode10.setParent((com.google.javascript.rhino.head.ast.AstNode) comment15);
        scriptNode10.setEncodedSourceStart((int) (byte) 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode10.getTop();
        scope1.target = scriptNode10;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str22 = scriptNode21.getEncodedSource();
        int int23 = scriptNode21.getBaseLineno();
        java.lang.Object obj24 = scriptNode21.getCompilerData();
        scriptNode21.flattenSymbolTable(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = null;
        scriptNode21.setSymbolTable(strMap27);
        java.lang.String str30 = scriptNode21.toSource((int) 'a');
        scriptNode10.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope32 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope36 = scope34.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node37 = scope34.target;
        scope34.setPosition(2);
        int int40 = scope34.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope41 = scope34.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator42 = scope34.spliterator();
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope46 = scope44.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node47 = scope44.target;
        scope44.setPosition(2);
        int int50 = scope44.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope51 = scope44.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator52 = scope44.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode53.getEncodedSource();
        int int55 = scriptNode53.getBaseLineno();
        java.lang.Object obj56 = scriptNode53.getCompilerData();
        scriptNode53.flattenSymbolTable(false);
        scope34.addChildAfter((com.google.javascript.rhino.head.Node) scope44, (com.google.javascript.rhino.head.Node) scriptNode53);
        scriptNode53.clearParentScope();
        int int61 = scriptNode53.getFunctionCount();
        java.lang.String str62 = scriptNode53.toString();
        int int63 = scriptNode53.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            int int64 = scriptNode21.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scope3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n" + "'", str30, "                                                                                                                                                                                                  {\n                                                                                                                                                                                                  }\n");
        org.junit.Assert.assertNotNull(scope32);
        org.junit.Assert.assertNull(scope36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNotNull(nodeSpliterator42);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scope51);
        org.junit.Assert.assertNotNull(nodeSpliterator52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "136" + "'", str62, "136");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test06000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test06000");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType5, "Scope");
        scriptNode2.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        scriptNode2.setEncodedSourceStart((int) (byte) 100);
        int int11 = scriptNode2.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType16, "Scope");
        scriptNode13.setParent((com.google.javascript.rhino.head.ast.AstNode) comment18);
        scriptNode13.setEncodedSourceStart((int) (byte) 100);
        int int24 = scriptNode13.getIntProp(6, 2);
        int int25 = scriptNode13.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 0);
        com.google.javascript.rhino.head.ast.Scope scope29 = scope27.getDefiningScope("Scope");
        com.google.javascript.rhino.head.Node node30 = scope27.target;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType34, "Scope");
        scriptNode31.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        scope27.setJsDocNode(comment36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) '4', 6, commentType42, "Scope");
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) comment44);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = scriptNode39.getSymbols();
        com.google.javascript.rhino.head.Node node47 = new com.google.javascript.rhino.head.Node(12, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope27, (com.google.javascript.rhino.head.Node) scriptNode39);
        scriptNode39.setPosition((int) (byte) 0);
        scriptNode39.setEncodedSourceStart((int) (byte) 1);
        java.lang.String str53 = scriptNode39.makeIndent(0);
        java.lang.String str54 = scriptNode2.toStringTree(scriptNode39);
        java.lang.String str56 = scriptNode39.makeIndent(12);
        java.lang.String str57 = scriptNode39.getSourceName();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        com.google.javascript.rhino.head.Node node60 = scriptNode1.setType((int) (byte) 0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode1.getSymbolTable();
        scriptNode1.setEncodedSource("53\tCOMMENT 53 53\n");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope64 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(scope29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(symbolList46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                        " + "'", str56, "                        ");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNull(strMap61);
    }
}
